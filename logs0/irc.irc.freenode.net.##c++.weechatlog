2014-11-21 16:29:40	-->	newguise1234 (~tc@unaffiliated/newguise1234) has joined ##c++
2014-11-21 16:29:40	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-21 16:29:40	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-21 16:29:40	--	Nicks ##c++: [[H]unt3r _5kg `Winslow a_le aboudreault ac_slater_ acidfrost adamm adendum_ Adrinael Affliction aggn agile aicasn Aichan aidecoe alamages alamar Alina-malina allyourcodebase alnkpa alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anodl ansiwen antons_ ArchZombie039423 Ardonik Artpicre asakura1 ashkan Aster atod Auv awake b0lt b_jonas Backinside barfod basic6 batmoz bazrush bb010g Beetny Belgarion0 belz beowuff Betal Bigcheese biglama bitlord blackbit blackwind_123 bladerunner Blaguvest blast_ BlastHardcheese BlaXpirit blinky42 blo Bloodust blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace Budd bumbar_ Burgundy CARAM_ caveat- cbot` cbreak CEnnis91 chainedchaos ChemicalRascal Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay clang ClarusCogitatio cleamoon__ clincher clynamen cnj cnu- codebrainz comand contempt coolcat corecode crantron crewshin cryptoca cubed_root CustosLimen cvtsx cyberspace- cyndis cysm d3Vito d_s dahlia daNRG dantarion dardevelin darkerstar DarkGhost dataangel davek David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych desophos Dessimat0r det dexter0 DexterLB dfletcher dh dindinx dirtydawg dostoyevsky doug64k dreampwnzor dts dualbus ducklobster Dumle29_ eagleflo easior_ edk edran Eelis efreet ejnahc elnn elsewho emg emma endomancer enterprisedc envi ericP erikj ERROH eslbaer esperegu eurythmia evangeline__ evilissimo EvilPenguin Extreme eyeRobut f0ster FabTG_ ferdna filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold forrestv freanux FriskyKat froggey Furai g4r37h Gama11 Garner geidi genpaku Gentle geordi Gevox ggherdov` GGMethos gnoirzox GoGi googol Gravitron GrecKo gregj grep0r guibou_ guidol guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haswell Haxxa Heartbroken heiner_ heinrich5991 Hello71 hellschreiber Henke37 HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobecubic hs_ hstefan hyperair hyperboreean icedev ido iFire illerucis Iloiny imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 it0a ivan` ix007 j0hnlam j_wright jagob jakemp Jaxan jayne jeaye Jeeb_ jhj jiffe Jinxit jitta jophish jorj jpnurmi jrgill jrolland-ubuntu JSharpe Jubb jumbers Jupelius justy989 jweinberg jzl K-ballo k0nichiwa k4r1m kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth KarolisK Kasreyn kbtr kevr kexmex Kicer86 killertester KindOne King_Hual` KiNgMaR Kirrahe klarrt kloeri KnownSyntax komarov Kostenko kralyk kriskropd Kristina krnlyng KrzaQ kStolen kurahaupo kurti Langdal Lasher` latexi95 leeN LetoThe2nd liberal Lilian Logan54 Lokomotiv LongCatTH lord4163 LordAkkarin Lowl3v3l Luker luny`` luxigo M-ou-se m0shbear m477 mads- manny- marchelzo_ markand martiert matt90 mavam maw Maxel maxpeck Meeh megaTherion melter metallisto mf___ micom mihipte mike_f mikroflops minas114 Mio-chan MissionCritical mist mitch0 Mjark Mjjs MKCoin moonchild Motig MrC MrIlyas mrueg mukunda_ MulleDK19 mulvane murrekatt_ muteki mxiia nacitar Naive naraku9333 Natch Navid nda__ ne555_ necrogami negerns netj_ neunon newguise1234 nfk Nickeeh nido Nik05 nilg Nilium NinjaPenguin nitrix nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp_ nuborn nurupo o-O-o o11c o] oberstein Obfuscate obiwahn oleo olly_c on3pk only_the_bear opalraava OpusMioda orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pEYEd pHane_ phantom__ phantomcircuit Phlow PhlowWork pi- pippijn pixelate plamen plash Plasmastar plitter PotatoGim ppf pragma- Praise primepie prism proteusguy proycon pyon qbann0p qdii qknight Quackmatic QualityAddict quizzi RageD Ranis RazielZ refp Refresh rendar Renderwahn rfreeman_w richardwhiuk Rickmasta rkreis RlyDontKnow robert_ robertknight robink roentgen roflin RokerHRO roxfan rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake samuel02 Sausage sazzer sblack1 scai scharan Sculptor scwizard segy seishun senseibaka Seppoz Serus Shayanjm shoals Shozan Shr3ddy66 Shuba SiGe_ sigtrm Silex simius Sjors skarn skeuomorf ski Slide-O-Mix Smirnov smokex soa2ii Soliton Sonderblade soulcake soulz SoylentYellow sparetire sparetire_ Spark SparkDog spb sphenxes srjek stdvector stefandxm stfn stk944 Stryyker Suchorski Sumason suppahsrv synapt Synchunk syncrow sze talisein Talisman tamaroth tapout tazle tecpo Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheBeerinator themagician thesquib TheTeapot thomas tibl timemage timj TinoDidriksen TMM ToApolytoXaos TobiasFar_ tomalak tomaw TommyC TomyLobo toresbe TrafficMan Tribeam_ Trieste trigen Trondby tsimpson TViernion Twey tz Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber usrJayRay V-ille ValicekB Vbitz ville Vinnie_win Vir viran Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony1 warehouse13 wchun webshinra Weethus wickedmic widmo wilx WizBright woggle wto xace Xark XgF xico xiphiasx_ xnavor xsdg xulef xyz yan_ yano yayachiken yeltzooo yeticry yobber yorick yrter z16 zackthehuman zacts Zarthus zen|merge_ Zephyrus zer0def zhangxaochen Zharf zima Zoinks zq Zupoman zwer zwf z|Andy]
2014-11-21 16:29:40	--	Channel ##c++: 641 nicks (0 ops, 0 halfops, 0 voices, 641 normals)
2014-11-21 16:29:43	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-21 16:29:43	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-21 16:29:47	marchelzo_	No idea what to make of that, other than I messed up somewhere
2014-11-21 16:30:24	newguise1234	I was wondering if you can do partial template specialization?
2014-11-21 16:30:43	newguise1234	ie. have one function that takes template <typename T, typename E>
2014-11-21 16:30:44	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-21 16:30:48	hs_	newguise1234, not of functions
2014-11-21 16:31:03	newguise1234	and another (speicialization) that takes template <typename T, typename T>
2014-11-21 16:31:06	newguise1234	k
2014-11-21 16:31:20	hs_	those are the same
2014-11-21 16:31:30	hs_	oh wait no, the second is broken
2014-11-21 16:31:40	newguise1234	thats the part I don't know how to do
2014-11-21 16:31:45	hs_	what are the signatures?
2014-11-21 16:31:56	newguise1234	I have a recursive function that passes a T* in and returns a E
2014-11-21 16:32:04	hs_	paste code
2014-11-21 16:32:06	newguise1234	I want it to stop when T* is the same as E
2014-11-21 16:32:09	hs_	not here..
2014-11-21 16:32:14	hs_	ideone.com et al
2014-11-21 16:32:16	newguise1234	will do
2014-11-21 16:34:09	<--	viran (4fb3b297@gateway/web/freenode/ip.79.179.178.151) has quit (Quit: Page closed)
2014-11-21 16:35:05	-->	pHane (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-21 16:36:21	newguise1234	hs_: http://ideone.com/unM8ao
2014-11-21 16:36:33	newguise1234	essentially I'm trying to find a way to stop the recursive generation of templates
2014-11-21 16:36:38	newguise1234	when T == Ptr
2014-11-21 16:36:43	<--	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 240 seconds)
2014-11-21 16:38:03	<--	Trondby (~Trondby@unaffiliated/trondby) has quit
2014-11-21 16:38:20	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-21 16:39:35	newguise1234	I wasn't sure how else to describe it than as partial specialization, which may be the wrong way
2014-11-21 16:39:48	<--	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has quit (Ping timeout: 265 seconds)
2014-11-21 16:40:19	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-21 16:40:41	-->	PRaXiS (~PRaXiS@193.137.7.196) has joined ##c++
2014-11-21 16:40:52	<--	ne555_ (~ne555@host79.190-137-123.telecom.net.ar) has quit (Quit: Lost terminal)
2014-11-21 16:41:40	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:f83c:5118:ab0e:353b) has quit (Read error: Connection reset by peer)
2014-11-21 16:42:08	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-21 16:42:10	<--	dreampwnzor (~dreampwnz@unaffiliated/dreampwnzor) has quit (Quit: Leaving)
2014-11-21 16:42:59	-->	milesrout (~milesrout@203-97-127-101.cable.telstraclear.net) has joined ##c++
2014-11-21 16:43:03	-->	student00000002 (~user@207.62.231.18) has joined ##c++
2014-11-21 16:43:22	--	milesrout is now known as Guest59043
2014-11-21 16:43:38	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-21 16:43:50	-->	alvaro_o (~alvaro@187.210.148.27) has joined ##c++
2014-11-21 16:43:51	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 16:43:51	scwizard	Why do C library authors use macros to make inline functions
2014-11-21 16:43:56	-->	ObjectiveMatt (~Objective@66.87.151.38) has joined ##c++
2014-11-21 16:43:57	scwizard	rather than just having functions with the inline keyword?
2014-11-21 16:44:49	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-21 16:44:58	widmo	scwizard: Because inline is non-standard in c89
2014-11-21 16:45:07	scwizard	oh
2014-11-21 16:45:08	widmo	And there's no compiler that fully supports c99
2014-11-21 16:45:19	-->	Trondby (~Trondby@unaffiliated/trondby) has joined ##c++
2014-11-21 16:45:49	<--	newguise1234 (~tc@unaffiliated/newguise1234) has left ##c++ ("WeeChat 0.4.1")
2014-11-21 16:45:53	-->	newguise1234 (~tc@unaffiliated/newguise1234) has joined ##c++
2014-11-21 16:45:53	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-21 16:45:53	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-21 16:45:54	--	Nicks ##c++: [[H]unt3r _5kg `Winslow a_le aboudreault ac_slater_ acidfrost adamm adendum_ Adrinael Affliction aggn agile aicasn Aichan aidecoe alamages alamar Alina-malina allyourcodebase alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anodl ansiwen antons_ ArchZombie039423 Ardonik Artpicre asakura1 ashkan Aster Auv awake b0lt b_jonas Backinside barfod basic6 batmoz bazrush bb010g Beetny Belgarion0 belz beowuff Betal Bigcheese biglama bitlord blackbit blackwind_123 bladerunner Blaguvest blast_ BlastHardcheese BlaXpirit blinky42 blo Bloodust blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace Budd bumbar_ Burgundy CARAM_ caveat- cbot` cbreak CEnnis91 chainedchaos ChemicalRascal Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay clang ClarusCogitatio cleamoon__ clincher clynamen cnj cnu- codebrainz comand contempt coolcat corecode crantron crewshin cryptoca cubed_root CustosLimen cvtsx cyberspace- cyndis cysm d3Vito d_s dahlia daNRG dantarion dardevelin darkerstar DarkGhost dataangel davek David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det dexter0 DexterLB dfletcher dh dindinx dirtydawg dostoyevsky doug64k dts dualbus ducklobster Dumle29_ eagleflo easior_ edk edran Eelis efreet ejnahc elnn elsewho emg emma endomancer enterprisedc envi ericP erikj ERROH eslbaer esperegu eurythmia evangeline__ evilissimo EvilPenguin Extreme eyeRobut f0ster FabTG_ ferdna filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold forrestv freanux FriskyKat froggey Furai g4r37h Gama11 Garner geidi genpaku Gentle geordi Gevox ggherdov` GGMethos gnoirzox GoGi googol Gravitron GrecKo gregj grep0r Guest59043 guibou_ guidol guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haswell Haxxa Heartbroken heiner_ heinrich5991 Hello71 hellschreiber Henke37 HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobecubic hs_ hstefan hyperair hyperboreean icedev ido iFire illerucis Iloiny imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 it0a ivan` ix007 j0hnlam j_wright jagob jakemp Jaxan jayne jeaye Jeeb_ jhj jiffe Jinxit jitta jophish jorj jpnurmi jrgill jrolland-ubuntu JSharpe Jubb jumbers Jupelius justy989 jweinberg jzl K-ballo k0nichiwa k4r1m kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz karab44 Karethoth KarolisK Kasreyn kbtr kevr kexmex Kicer86 killertester KindOne King_Hual` KiNgMaR Kirrahe klarrt kloeri KnownSyntax komarov Kostenko kralyk kriskropd Kristina krnlyng KrzaQ kStolen kurahaupo kurti Langdal Lasher` latexi95 leeN LetoThe2nd liberal Lilian Logan54 Lokomotiv LongCatTH lord4163 LordAkkarin Luker luny`` luxigo M-ou-se m0shbear m477 mads- manny- marchelzo_ markand martiert matt90 mavam maw Maxel maxpeck Meeh megaTherion melter metallisto mf___ micom mihipte mike_f mikroflops minas114 Mio-chan MissionCritical mist mitch0 Mjark Mjjs MKCoin moonchild Motig MrC mrueg mukunda_ MulleDK19 mulvane murrekatt_ muteki mxiia nacitar Naive naraku9333 Natch Navid nda__ necrogami negerns netj_ neunon newguise1234 nfk Nickeeh nido Nik05 nilg Nilium NinjaPenguin nitrix nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp_ nuborn nurupo o-O-o o11c o] oberstein Obfuscate obiwahn ObjectiveMatt oleo olly_c on3pk only_the_bear opalraava OpusMioda orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pEYEd pHane phantom__ phantomcircuit Phlow PhlowWork pi- pippijn pixelate plamen plash Plasmastar plitter PotatoGim ppf pragma- Praise PRaXiS primepie prism proteusguy proycon pyon qbann0p qdii qknight Quackmatic QualityAddict quaz0r quizzi RageD Ranis RazielZ refp Refresh rendar Renderwahn rfreeman_w richardwhiuk Rickmasta rkreis RlyDontKnow robert_ robertknight robink roentgen roflin RokerHRO roxfan rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake samuel02 Sausage sazzer sblack1 scai scharan Sculptor scwizard segy seishun senseibaka Seppoz Serus Shayanjm shoals Shozan Shr3ddy66 Shuba SiGe_ sigtrm Silex simius Sjors skarn skeuomorf ski Slide-O-Mix Smirnov smokex soa2ii Soliton Sonderblade soulcake soulz SoylentYellow sparetire sparetire_ Spark SparkDog spb sphenxes srjek stdvector stefandxm stfn stk944 Stryyker student00000002 Suchorski Sumason suppahsrv synapt Synchunk syncrow sze talisein Talisman tamaroth tapout tazle tecpo Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheBeerinator themagician thesquib TheTeapot thomas tibl timemage timj TinoDidriksen TMM TobiasFar_ tomalak tomaw TommyC TomyLobo toresbe TrafficMan Tribeam_ Trieste trigen Trondby tsimpson TViernion Twey tz Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber usrJayRay V-ille ValicekB Vbitz ville Vinnie_win Vir Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony1 warehouse13 wchun webshinra Weethus wickedmic widmo wilx WizBright woggle wto xace Xark XgF xico xiphiasx_ xnavor xsdg xulef xyz yan_ yano yayachiken yeltzooo yeticry yobber yorick yrter z16 zackthehuman zacts Zarthus zen|merge_ Zephyrus zer0def zhangxaochen Zharf zima Zoinks zq Zupoman zwer zwf z|Andy]
2014-11-21 16:45:54	--	Channel ##c++: 642 nicks (0 ops, 0 halfops, 0 voices, 642 normals)
2014-11-21 16:45:56	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-21 16:45:56	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-21 16:46:00	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-21 16:46:02	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-21 16:46:24	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-21 16:47:43	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-21 16:48:01	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit (Ping timeout: 256 seconds)
2014-11-21 16:48:35	-->	Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-21 16:49:47	<--	ObjectiveMatt (~Objective@66.87.151.38) has quit (Read error: No route to host)
2014-11-21 16:49:59	-->	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has joined ##c++
2014-11-21 16:50:06	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-21 16:50:37	-->	Repelex (~textual@177.41.95.244) has joined ##c++
2014-11-21 16:53:26	hs_	newguise1234, yeah, I cannot see a way to do this
2014-11-21 16:53:36	newguise1234	alright, thanks for thinking about it man
2014-11-21 16:53:43	hs_	newguise1234, you cannot specialize the function around Ptr; you have nothing to overload on
2014-11-21 16:53:56	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-21 16:54:45	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-21 16:55:08	cbreak	widmo: clang? gcc? ... *snort* visual studio *chuckle*
2014-11-21 16:55:09	newguise1234	mm, I just figured it would have to be explicit in the calling of the function
2014-11-21 16:56:08	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 256 seconds)
2014-11-21 16:56:41	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-11-21 16:56:59	hs_	newguise1234, I don't understand the reason for this though in the first place
2014-11-21 16:57:21	widmo	cbreak: Do they support all C99 features? I'm quite sure they don't, but i can be wrong
2014-11-21 16:57:50	newguise1234	hs_: to translate an array into a multi-dimensional array
2014-11-21 16:58:28	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 258 seconds)
2014-11-21 16:58:28	<--	guidol (~guidol@g147088.upc-g.chello.nl) has quit (Quit: Konversation terminated!)
2014-11-21 16:58:37	hs_	newguise1234, why?
2014-11-21 16:59:06	newguise1234	hs_: it would be easier for me to access elements in a vertex buffer object I have
2014-11-21 16:59:18	hs_	newguise1234, it is already as multi-dimensional as you want it to be ..
2014-11-21 16:59:40	newguise1234	I know, I was just looking for an easy translation of coordinates without having to call functions
2014-11-21 16:59:45	hs_	newguise1234, so buffer.get(x,y) ?
2014-11-21 16:59:54	-->	Supicios- (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-21 16:59:59	<--	Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 258 seconds)
2014-11-21 17:00:11	<--	[H]unt3r (~H]unt3r@137.28.95.175) has quit
2014-11-21 17:00:35	newguise1234	and I can write a non-recursive function that I would just have to call a couple of times
2014-11-21 17:00:49	newguise1234	I was just looking to code a general purpose solution
2014-11-21 17:01:05	<--	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has quit (Read error: No route to host)
2014-11-21 17:01:06	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-21 17:02:35	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Remote host closed the connection)
2014-11-21 17:03:47	--	dts is now known as dts|gaming
2014-11-21 17:03:47	-->	alcedine (lippinj1@gateway/shell/tkk.fi/x-iyfjudpdmaxztelg) has joined ##c++
2014-11-21 17:03:58	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-21 17:04:27	hs_	newguise1234, you realize that blah[y][x] is just a blah[ x + y * width ] kind of thing under the hood? and that blah[x] is just a *(blah + x) kind of thing?
2014-11-21 17:04:35	newguise1234	I know
2014-11-21 17:04:51	newguise1234	its pretty much a purely cosmetic wrapper
2014-11-21 17:05:10	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Ping timeout: 272 seconds)
2014-11-21 17:05:36	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-21 17:05:38	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-21 17:05:50	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-21 17:06:08	newguise1234	I think I'm going to try to make the function a member function, where the class has the templates
2014-11-21 17:06:18	newguise1234	then I can partially specialize the function
2014-11-21 17:06:20	newguise1234	maybe it'll work
2014-11-21 17:06:50	<--	Guest59043 (~milesrout@203-97-127-101.cable.telstraclear.net) has quit (Quit: Leaving)
2014-11-21 17:08:28	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-21 17:08:45	<--	TheTeapot (~TheTeapot@dyn-129-78-250-60.wirelessguest.usyd.edu.au) has quit (Ping timeout: 255 seconds)
2014-11-21 17:09:39	<--	scai (~scai@pD9EA6946.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-21 17:09:47	<--	plamen (user@nat/mslo/x-ydeeegvlzimugcho) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-21 17:10:05	Eelis	V-ille: in december last year, Victor Khomenko wrote that he didn't plan to move forward with a proposal for a vector::unsafe_push_back because he got the impression people didn't like it. do you think the committee would like it?
2014-11-21 17:10:16	Eelis	(first it has to be renamed to push_back_reserved of course)
2014-11-21 17:10:19	-->	scai (~scai@pD9EA6946.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 17:10:38	-->	adu (~ajr@ip-64-134-243-121.public.wayport.net) has joined ##c++
2014-11-21 17:11:26	hs_	this would do a push_back without checking if size() is capacity()?
2014-11-21 17:11:33	<--	cleamoon__ (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-11-21 17:11:34	Eelis	essentially, yes
2014-11-21 17:11:59	-->	cleamoon__ (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-21 17:13:04	Eelis	hence the "reserved": first you reserve, then you can push back right into your reservation :)
2014-11-21 17:13:58	Eelis	idiots on the std proposals mailing list were crying it would completely break vector and whatnot, but they're nuts
2014-11-21 17:14:10	Eelis	but i can't gauge the committee much
2014-11-21 17:14:18	Eelis	but V-ille can
2014-11-21 17:15:29	<--	adu (~ajr@ip-64-134-243-121.public.wayport.net) has quit (Ping timeout: 265 seconds)
2014-11-21 17:15:32	Eelis	(this feature can speed up a tight loop that just push_backs a known-in-advance number of ints onto a vector by 40%)
2014-11-21 17:15:56	Eelis	that's four zero
2014-11-21 17:16:32	-->	adu (~ajr@ip-64-134-243-121.public.wayport.net) has joined ##c++
2014-11-21 17:16:46	hs_	back_inserter is extremely slow
2014-11-21 17:17:02	Eelis	there could be a corresponding reserved_back_inserter
2014-11-21 17:17:06	marchelzo_	Is it redundant to have a unique_ptr<T, void(*)(T*)> and always pass it free when initializing?
2014-11-21 17:17:07	hs_	yeah
2014-11-21 17:17:16	<--	usrJayRay (~usrJayRay@150.200.74.127) has quit (Quit: usrJayRay)
2014-11-21 17:17:35	hs_	i find myself just doing presize with std::copy_n and begin(v.data())
2014-11-21 17:17:43	<--	scai (~scai@pD9EA6946.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-21 17:17:56	o11c	marchelzo_: by storing the function pointer instead of an empty class, you double the size of unique_pptr
2014-11-21 17:18:26	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 244 seconds)
2014-11-21 17:18:28	Eelis	hs_: if you can use copy_n, that means you already have the data in an iterable range anyway, and you can use vector::insert and it should detect your random access iterators and act intelligent
2014-11-21 17:18:35	tsimpson	marchelzo_: it's easier to just make a struct with an operator() that calls free, and use unique_ptr<T, stdlib_freer>
2014-11-21 17:18:48	Eelis	hs_: but if you don't have random access iterators... :)
2014-11-21 17:19:09	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-21 17:19:32	Eelis	and if you don't have the data in an iterable range...
2014-11-21 17:19:46	Eelis	or if you don't have default constructibility
2014-11-21 17:20:09	Eelis	push_back_reserved is just a missing piece imho
2014-11-21 17:20:23	Eelis	it's /obviously/ good
2014-11-21 17:20:39	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-21 17:20:56	-->	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has joined ##c++
2014-11-21 17:21:32	<--	adu (~ajr@ip-64-134-243-121.public.wayport.net) has quit (Ping timeout: 244 seconds)
2014-11-21 17:21:40	Eelis	it's the kind of thing where if people were to patch their stdlib implementation to add it, i would actually sympathize.
2014-11-21 17:22:01	marchelzo_	tsimpson: and then I don't have to pass it anything when I initialize it?
2014-11-21 17:22:12	tsimpson	marchelzo_: correct
2014-11-21 17:22:21	marchelzo_	tsimpson: ok thank you
2014-11-21 17:22:22	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-21 17:23:32	hs_	you can also make a templated operator()(T*)
2014-11-21 17:23:40	-->	D0cN3x (~Thunderbi@dslb-178-007-208-128.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-21 17:23:52	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit
2014-11-21 17:23:57	<--	aggn (~quassel@host199-2.natpool.mwn.de) has quit (Remote host closed the connection)
2014-11-21 17:25:10	marchelzo_	hs_: what would the type of the unique_ptr look like in that case?
2014-11-21 17:25:14	<--	BlaXpirit (~blaxpirit@219-5-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-21 17:25:28	-->	BlaXpirit (~blaxpirit@219-5-132-95.pool.ukrtel.net) has joined ##c++
2014-11-21 17:25:32	hs_	unique_ptr<T,YourDeleter>;
2014-11-21 17:25:44	hs_	with struct YourDeleter { template <typename T> operator()(T*) { whatever }};
2014-11-21 17:27:11	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-21 17:27:28	marchelzo_	hs_: cool, thanks.
2014-11-21 17:29:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 17:30:12	-->	japro (~japro@77-59-183-11.dclient.hispeed.ch) has joined ##c++
2014-11-21 17:30:39	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-21 17:31:20	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-21 17:32:02	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-21 17:33:00	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 17:33:48	--	prism is now known as Channesrv
2014-11-21 17:34:59	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-21 17:35:27	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-21 17:36:54	<--	ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0.1)
2014-11-21 17:37:30	<--	manny- (~manny-@191.233.71.39) has quit (Ping timeout: 250 seconds)
2014-11-21 17:37:58	scwizard	so there's a std::hex
2014-11-21 17:38:04	scwizard	is there a std::binary?
2014-11-21 17:39:18	-->	Kajika (~Kajika@164.184.94.79.rev.sfr.net) has joined ##c++
2014-11-21 17:39:21	<--	Kajika (~Kajika@164.184.94.79.rev.sfr.net) has quit (Changing host)
2014-11-21 17:39:21	-->	Kajika (~Kajika@unaffiliated/kajika) has joined ##c++
2014-11-21 17:40:04	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-21 17:40:12	belz	scwizard: nope
2014-11-21 17:40:21	scwizard	oh there's std::bin
2014-11-21 17:40:25	scwizard	someone in #geordi showed me
2014-11-21 17:40:38	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-21 17:41:00	<--	marchelzo_ (~bradley@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Ping timeout: 240 seconds)
2014-11-21 17:41:43	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-21 17:42:00	<--	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-21 17:42:42	tsimpson	scwizard: there is no std::bin, it's geordi specific
2014-11-21 17:43:19	scwizard	tsimpson: ahh ok, that's fine though
2014-11-21 17:43:21	<--	illerucis (~illerucis@199.201.65.135) has quit (Remote host closed the connection)
2014-11-21 17:43:25	scwizard	great extention to geordi!
2014-11-21 17:43:40	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-21 17:43:45	scwizard	doing some bitmask stuff bleh
2014-11-21 17:43:57	-->	manny- (~manny-@191.233.71.39) has joined ##c++
2014-11-21 17:44:29	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-21 17:44:41	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-21 17:45:26	-->	TheTeapot (~TheTeapot@dyn-129-78-250-60.wirelessguest.usyd.edu.au) has joined ##c++
2014-11-21 17:45:58	hs_	bitset<T> has some string conversion stuff
2014-11-21 17:46:08	hs_	.to_string()
2014-11-21 17:46:26	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-21 17:46:37	<--	kralyk (~kralyk@88.146.158.152) has quit (Quit: WeeChat 1.0.1)
2014-11-21 17:46:41	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-21 17:48:18	scwizard	http://i.imgur.com/DEt5HDd.png
2014-11-21 17:48:21	scwizard	what I've been doing
2014-11-21 17:50:30	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 17:50:37	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-21 17:51:16	-->	mrdevri (~Marcus@ip72-192-37-203.ri.ri.cox.net) has joined ##c++
2014-11-21 17:51:37	scwizard	that's not working :|
2014-11-21 17:52:01	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-21 17:52:04	<--	j0hnlam (~j0hnlam@69-165-148-19.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-21 17:52:27	-->	snakenerd (~Thunderbi@177.43.3.179) has joined ##c++
2014-11-21 17:52:27	<--	PRaXiS (~PRaXiS@193.137.7.196) has quit (Ping timeout: 244 seconds)
2014-11-21 17:53:28	<--	D0cN3x (~Thunderbi@dslb-178-007-208-128.178.007.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2014-11-21 17:53:29	<--	cleamoon__ (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2014-11-21 17:53:45	<--	snakenerd (~Thunderbi@177.43.3.179) has quit (Client Quit)
2014-11-21 17:53:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 17:54:10	<--	minas114 (~minas@93-19-241.netrun.cytanet.com.cy) has quit (Quit: Leaving)
2014-11-21 17:54:20	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-21 17:54:38	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-21 17:54:58	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-21 17:56:18	<--	g4r37h (~g4r37h@host86-186-31-44.range86-186.btcentralplus.com) has quit
2014-11-21 17:56:57	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-21 17:57:15	<--	Gama11 (~quassel@p57967B90.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-21 17:57:28	-->	ObjectiveMatt (~Objective@66.87.151.38) has joined ##c++
2014-11-21 17:57:55	-->	D0cN3x1 (~Thunderbi@dslb-178-007-208-128.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-21 17:58:18	scwizard	there we go: http://codepad.org/k0tFRqvN
2014-11-21 17:58:37	<--	manny- (~manny-@191.233.71.39) has quit (Ping timeout: 245 seconds)
2014-11-21 17:58:53	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 265 seconds)
2014-11-21 17:58:57	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 240 seconds)
2014-11-21 17:59:33	-->	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-21 17:59:33	micom	there is almost no c++ in this code
2014-11-21 17:59:35	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Read error: Connection reset by peer)
2014-11-21 17:59:45	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-21 17:59:54	-->	atrika (~atrika@198-200-127-182.cpe.distributel.net) has joined ##c++
2014-11-21 18:00:34	hs_	I don't even understand what is happening
2014-11-21 18:00:51	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-21 18:01:16	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Quit: leaving)
2014-11-21 18:01:35	-->	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has joined ##c++
2014-11-21 18:01:40	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-21 18:01:51	-->	koderok (~koderok@106.206.228.79) has joined ##c++
2014-11-21 18:02:04	<--	koderok (~koderok@106.206.228.79) has quit (Remote host closed the connection)
2014-11-21 18:04:23	-->	manny- (~manny-@191.233.71.39) has joined ##c++
2014-11-21 18:04:37	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-21 18:05:07	irrenhaus3	I don't understand why that first A in the literal is wider than the others
2014-11-21 18:05:22	irrenhaus3	(insert wide-character joke here)
2014-11-21 18:05:36	-->	jsavage (4adaedb2@gateway/web/cgi-irc/kiwiirc.com/ip.74.218.237.178) has joined ##c++
2014-11-21 18:05:41	scwizard	micom: I'm not happy about that either :(
2014-11-21 18:06:06	scwizard	this is so I can abtract away the C stuff though I swear
2014-11-21 18:06:06	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-21 18:06:17	-->	licnep (uid4387@gateway/web/irccloud.com/x-atovqrouycnrfxxp) has joined ##c++
2014-11-21 18:06:57	newguise1234	hs_: this is what I came up with, thanks for pointing me towards partially specialized classes http://ideone.com/eHh87l
2014-11-21 18:07:45	-->	yamashi|2 (~kvirc@56.133.138.88.rev.sfr.net) has joined ##c++
2014-11-21 18:08:30	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 240 seconds)
2014-11-21 18:08:39	newguise1234	*partial specialization of class templates
2014-11-21 18:08:41	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-21 18:08:54	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-21 18:08:56	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (Remote host closed the connection)
2014-11-21 18:10:33	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-21 18:10:36	--	MrFlibble is now known as LunarJetman
2014-11-21 18:10:43	<--	eslbaer (~eslbaer@p57BCEDAC.dip0.t-ipconnect.de) has quit (Quit: Bye)
2014-11-21 18:10:53	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-21 18:10:55	scwizard	The full function in context is here: http://codepad.org/HXnKubYO
2014-11-21 18:11:04	scwizard	hopefully I don't have to deal with bitshifts for the entire rest of the program now lol
2014-11-21 18:11:28	scwizard	s/bitshifts/bitwise operatotions/
2014-11-21 18:12:30	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-21 18:12:35	-->	emlai (~emil@37-136-97-249.nat.bb.dnainternet.fi) has joined ##c++
2014-11-21 18:12:39	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-21 18:12:53	<--	D0cN3x1 (~Thunderbi@dslb-178-007-208-128.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x1)
2014-11-21 18:12:58	scwizard	because that ~20 line function took way longer to write than it had any right to :(
2014-11-21 18:15:00	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-21 18:15:35	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-21 18:15:47	jsavage	does anyone have experience FF simulators?
2014-11-21 18:15:53	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-21 18:16:27	<--	jsavage (4adaedb2@gateway/web/cgi-irc/kiwiirc.com/ip.74.218.237.178) has left ##c++
2014-11-21 18:16:43	scwizard	fantasy football?
2014-11-21 18:17:07	dindinx	fist fucking?
2014-11-21 18:17:14	xico	what is the name of the if/else construct in template parameters?
2014-11-21 18:17:32	<--	mrdevri (~Marcus@ip72-192-37-203.ri.ri.cox.net) has quit (Read error: Connection reset by peer)
2014-11-21 18:18:03	newguise1234	xico: std::enable_if ?
2014-11-21 18:18:04	hs_	std::conditional?
2014-11-21 18:18:12	xico	(here to set 'typename U=T if T is floating, else double')
2014-11-21 18:18:29	xico	hs_: that's it! thanks
2014-11-21 18:18:31	-->	jsavage (4adaedb2@gateway/web/cgi-irc/kiwiirc.com/ip.74.218.237.178) has joined ##c++
2014-11-21 18:18:34	<--	jsavage (4adaedb2@gateway/web/cgi-irc/kiwiirc.com/ip.74.218.237.178) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-21 18:18:41	hs_	conditional<is_same<T,float>{},whatever,whatever>
2014-11-21 18:18:43	hs_	yeah
2014-11-21 18:18:46	-->	Ascian (~cbainx@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-21 18:19:31	xico	awesome feature btw
2014-11-21 18:19:36	<--	Suchorski (regex@unaffiliated/suchorski) has quit
2014-11-21 18:20:12	xico	(makes my declarations even more ugly than just enable_if)
2014-11-21 18:20:18	<--	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2014-11-21 18:22:46	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-21 18:22:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 18:23:02	<--	pHane (~pHane@114.81-166-203.customer.lyse.net) has quit (Quit: Leaving)
2014-11-21 18:23:59	-->	lucasjones (~quassel@109.201.152.11) has joined ##c++
2014-11-21 18:25:56	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-21 18:25:56	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 18:26:14	<--	ObjectiveMatt (~Objective@66.87.151.38) has quit (Remote host closed the connection)
2014-11-21 18:28:21	-->	safinaskar (~user@188.234.4.29) has joined ##c++
2014-11-21 18:29:21	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:f966:71d:c415:5dd1) has joined ##c++
2014-11-21 18:29:25	-->	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-21 18:30:21	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-21 18:30:55	-->	tysweezy (~tysweezy@209-234-129-174.static.twtelecom.net) has joined ##c++
2014-11-21 18:31:23	--	npcomp_ is now known as npcomp
2014-11-21 18:31:38	<--	ArchZombie039423 (~lkjfeiosn@2602:306:c455:df80:705d:905b:b477:6b9d) has left ##c++
2014-11-21 18:32:00	<--	justy989 (~justin@70-91-141-3-ma-ne.hfc.comcastbusiness.net) has quit (Quit: WeeChat 1.0.1)
2014-11-21 18:32:31	<--	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 264 seconds)
2014-11-21 18:33:31	<--	srjek (~srjek@46dhcp63.ece.uic.edu) has quit (Ping timeout: 255 seconds)
2014-11-21 18:33:36	-->	ArchZombie (~lkjfeiosn@2602:306:c455:df80:705d:905b:b477:6b9d) has joined ##c++
2014-11-21 18:33:53	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-21 18:33:57	ArchZombie	Does anyone know how to check if type T is a tuple at compile time?
2014-11-21 18:34:37	o11c	ArchZombie: template<class T> struct is_tuple : std::false_type {};   template<class... A> struct is_tuple<std::tuple<A...>> : std;:true_type {};
2014-11-21 18:34:46	hs_	template <template <typename...> class T> struct is_tuple : false_type {}; template <template <typename...> class T> --- beat me!
2014-11-21 18:34:50	hs_	hehe
2014-11-21 18:35:23	o11c	unsure why you would want that template-template there, it will make is_tuple<int> into a compiler error instead of a false
2014-11-21 18:35:30	hs_	i didn't want it
2014-11-21 18:36:39	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-21 18:37:07	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-21 18:37:18	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-21 18:37:41	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Ping timeout: 245 seconds)
2014-11-21 18:38:03	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 18:39:21	-->	ObjectiveMatt (~Objective@66.87.151.38) has joined ##c++
2014-11-21 18:39:28	platinuum	hi can someone help me out with this function
2014-11-21 18:39:48	-->	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has joined ##c++
2014-11-21 18:41:16	<--	Anodl (~Anodl@p4FDEEF29.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-21 18:41:19	scwizard	platinuum: what's the function?
2014-11-21 18:41:30	platinuum	http://ideone.com/6P5hsg
2014-11-21 18:41:38	andgra	is vector<T>::size_type independent of T?
2014-11-21 18:41:40	-->	Anodl (~Anodl@p4FDEEF29.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 18:42:11	scwizard	platinuum: you posted an ideone with language = Java
2014-11-21 18:42:40	platinuum	oh oops, it doesn't compile on there anyways way too many other dependencies, just trying to show the code
2014-11-21 18:42:57	-->	Frisky-Ka (SomeWhere@90.208.35.78) has joined ##c++
2014-11-21 18:43:01	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-21 18:43:12	platinuum	http://ideone.com/XMMLqE
2014-11-21 18:43:21	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-21 18:43:45	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-21 18:44:02	hs_	platinuum, "for (eh::WordSet wordset : wss)" -- wordset is a copy
2014-11-21 18:44:29	hs_	you are keeping its address but it dies after that cycle of the loop
2014-11-21 18:45:16	<--	FriskyKat (SomeWhere@2.126.6.2) has quit (Ping timeout: 255 seconds)
2014-11-21 18:45:55	hs_	also, you are passing wss by value, which is another copy
2014-11-21 18:46:00	<--	Anodl (~Anodl@p4FDEEF29.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-21 18:46:06	xico	{ cout << std::numeric_limits::epsilon() << endl; }
2014-11-21 18:46:06	geordi	error: 'template<class _Tp> struct numeric_limits' used without template parameters
2014-11-21 18:46:58	hs_	which actually should be OK, since you are returning by value
2014-11-21 18:47:00	--	Channesrv is now known as prism
2014-11-21 18:47:17	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 18:47:39	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-21 18:47:55	hs_	xico, of what?
2014-11-21 18:47:56	hs_	{ cout << std::numeric_limits<float>::epsilon() << endl; }
2014-11-21 18:47:56	geordi	1.19209e-07
2014-11-21 18:48:20	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-21 18:48:40	-->	rnickb (~rnickb@h-69-3-245-101.nycm.ny.megapath.net) has joined ##c++
2014-11-21 18:50:16	hs_	platinuum, I keep speaking too soon.. ...longest=nullptr; ... longest->pattern()... no no
2014-11-21 18:50:19	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 256 seconds)
2014-11-21 18:50:39	platinuum	ah ok
2014-11-21 18:51:13	-->	blynn (~blynn@50.242.125.129) has joined ##c++
2014-11-21 18:51:33	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 255 seconds)
2014-11-21 18:51:33	-->	a_le_ (~a_le@2001:420:28f:1254:b9f9:1cc0:2acf:38ec) has joined ##c++
2014-11-21 18:51:43	Smirnov	is there some kind of error thing like optional<t> in a fundamental TS or a new C++ draft?
2014-11-21 18:51:47	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-21 18:52:12	hs_	boost::optional<T>
2014-11-21 18:52:41	Eelis	<< sizeof(std::experimental::optional<long>)
2014-11-21 18:52:41	geordi	error: 'experimental' has not been declared
2014-11-21 18:52:46	Smirnov	why boost optional, there is already std::experimental::optional
2014-11-21 18:53:02	Smirnov	I was talknig about errors though, so you could pass in error types error<T,Error> or something
2014-11-21 18:53:49	--	Frisky-Ka is now known as FriskyKat
2014-11-21 18:53:49	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Read error: No route to host)
2014-11-21 18:54:07	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-21 18:54:17	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 18:54:43	<--	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Ping timeout: 258 seconds)
2014-11-21 18:56:42	Smirnov	scala has an Either<X,Y>, rust has Result<T, E> . that's the kind of thing I am looking for
2014-11-21 18:57:32	andgra	is it possible that trying to grow an object of vector<T> past vector<T>::max_size() will not give any exception?
2014-11-21 18:58:15	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-21 18:58:25	andgra	will it always give out of memory exception?
2014-11-21 19:00:36	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-21 19:00:51	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Read error: Connection reset by peer)
2014-11-21 19:01:00	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-21 19:01:02	marchelzo_	Is there a site where I can read about geordi?
2014-11-21 19:02:03	marchelzo_	nevermind I got it by asking him for help :)
2014-11-21 19:02:22	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-21 19:02:23	platinuum	hs_: do you have another suggestion? essentially in my implementation i need to initialize the pointer to longest as an empty word set? then insert into the pointer?
2014-11-21 19:02:52	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has joined ##c++
2014-11-21 19:04:15	newguise1234	it is easy to get the pointer of a template type, is there a simple solution to do the inverse?
2014-11-21 19:04:31	-->	Cassiel (~JV@24-212-241-185.cable.teksavvy.com) has joined ##c++
2014-11-21 19:05:30	-->	LickPlusPlus (~LickPytho@blu1299171.lnk.telstra.net) has joined ##c++
2014-11-21 19:05:42	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Ping timeout: 240 seconds)
2014-11-21 19:05:46	<--	a_le_ (~a_le@2001:420:28f:1254:b9f9:1cc0:2acf:38ec) has quit (Remote host closed the connection)
2014-11-21 19:05:50	<--	K-ballo (~sonoio@181.167.8.119) has quit (Read error: Connection reset by peer)
2014-11-21 19:06:51	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-21 19:06:52	-->	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has joined ##c++
2014-11-21 19:07:53	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-21 19:07:54	<--	student00000002 (~user@207.62.231.18) has quit (Remote host closed the connection)
2014-11-21 19:08:55	<--	Kajika (~Kajika@unaffiliated/kajika) has quit (Quit: Leaving)
2014-11-21 19:09:33	<--	evangeline__ (~evangelin@BSN-95-233-106.static.dsl.siol.net) has quit (Ping timeout: 256 seconds)
2014-11-21 19:09:57	-->	racycle (~user@12.172.87.98) has joined ##c++
2014-11-21 19:10:37	<--	safinaskar (~user@188.234.4.29) has quit (Read error: Connection reset by peer)
2014-11-21 19:10:40	-->	snyp (~Snyp@150.129.132.215) has joined ##c++
2014-11-21 19:11:51	-->	Yepoleb (~quassel@178-190-230-21.adsl.highway.telekom.at) has joined ##c++
2014-11-21 19:13:01	<--	Ascian (~cbainx@cpe-65-185-69-205.neo.res.rr.com) has quit (Remote host closed the connection)
2014-11-21 19:13:11	hs_	newguise1234, remove_pointer<T>?
2014-11-21 19:13:28	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 250 seconds)
2014-11-21 19:13:33	<--	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-11-21 19:13:40	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Bye)
2014-11-21 19:13:50	<--	kaleid0 (~kaleid0@2600:1014:b028:fa76:ee47:fbec:9a6:bf68) has quit (Ping timeout: 258 seconds)
2014-11-21 19:14:19	hs_	platinuum, you can always point it to the first to start.. but again, make sure your "wordset" variable is a reference and not a copy
2014-11-21 19:14:36	hs_	platinuum, and you should handle the case where wss is empty
2014-11-21 19:15:12	<--	rnickb (~rnickb@h-69-3-245-101.nycm.ny.megapath.net) has quit (Quit: rnickb)
2014-11-21 19:15:24	-->	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-21 19:15:49	-->	VinnieSegura (~Vincent@69.80.102.56) has joined ##c++
2014-11-21 19:16:14	<--	King_Hual` (~Hual@94.26.28.68) has quit (Ping timeout: 255 seconds)
2014-11-21 19:17:26	xico	what's the default initializer for int/float/?? 0?
2014-11-21 19:17:42	hs_	default initialization is no initialization for those
2014-11-21 19:17:46	hs_	that is if you have "int i;"
2014-11-21 19:17:56	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-21 19:17:57	hs_	value initialization like "int i{};" is zero initialization
2014-11-21 19:18:18	xico	which one do you get in an std::array<int,N>?
2014-11-21 19:18:31	hs_	I believe value
2014-11-21 19:18:36	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-21 19:18:40	xico	thanks
2014-11-21 19:18:44	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-21 19:18:44	xico	for the terms too
2014-11-21 19:18:56	hs_	well it is an aggregate type
2014-11-21 19:19:07	-->	kaleid0 (~kaleid0@2600:1014:b028:fa76:ee47:fbec:9a6:bf68) has joined ##c++
2014-11-21 19:19:07	hs_	so probably none with just "std::array<int,N> a;"
2014-11-21 19:20:05	hs_	yeah none
2014-11-21 19:20:25	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-21 19:20:26	xico	none meaning no initialization?
2014-11-21 19:20:30	-->	a_le (~a_le@255.sub-70-197-10.myvzw.com) has joined ##c++
2014-11-21 19:20:42	hs_	yep, none
2014-11-21 19:22:08	hs_	it default initializes, so if it had been std::array<T,N> it would default initialize according to T
2014-11-21 19:22:12	NinjaPenguin	!nopointers
2014-11-21 19:22:12	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Remote host closed the connection)
2014-11-21 19:22:13	nolyc	http://klmr.me/slides/modern-cpp.pdf
2014-11-21 19:22:29	-->	hexagoxel_ (~hexagoxel@kiel-5f769494.pool.mediaWays.net) has joined ##c++
2014-11-21 19:22:51	<--	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has quit (Quit: Konversation terminated!)
2014-11-21 19:23:24	newguise1234	thanks hs_ 
2014-11-21 19:23:50	<--	BlaXpirit (~blaxpirit@219-5-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-21 19:24:55	<--	ferdna (~ferdna@cpe-69-23-141-88.elp.res.rr.com) has quit (Quit: Leaving)
2014-11-21 19:25:02	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-21 19:25:28	Smirnov	xico: fun fact, the default initialization for PODs results in an indeterminate value
2014-11-21 19:25:40	<--	hexagoxel (~hexagoxel@kiel-5f768068.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-21 19:25:56	hs_	(because it is "none")
2014-11-21 19:26:08	NinjaPenguin	!naming
2014-11-21 19:26:24	NinjaPenguin	What was the command for naming things?
2014-11-21 19:26:40	NinjaPenguin	That was a horrible question.
2014-11-21 19:27:01	NinjaPenguin	What was the command that said not to start names with an underscore and such?
2014-11-21 19:27:05	NinjaPenguin	!underscore
2014-11-21 19:27:09	NinjaPenguin	!fs underscore
2014-11-21 19:27:10	nolyc	No keys matching "underscore" found.
2014-11-21 19:27:21	hs_	!fs reserved
2014-11-21 19:27:21	nolyc	You are not allowed to create any name which: 1) contains two consecutive underscores, 2) begins with an underscore followed by an uppercase letter or 3) begins with an underscore and is in the global namespace ([lib.requirements]/[requirements]). Literal suffixes are an exception and must start with an underscore.
2014-11-21 19:27:25	NinjaPenguin	Cheers.
2014-11-21 19:27:34	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Ping timeout: 245 seconds)
2014-11-21 19:27:34	hs_	(guessed!)
2014-11-21 19:27:38	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Quit: WeeChat 0.4.2)
2014-11-21 19:27:50	-->	marvinalone (~marvinalo@172.56.40.194) has joined ##c++
2014-11-21 19:27:53	<--	blynn (~blynn@50.242.125.129) has quit (Quit: Leaving)
2014-11-21 19:28:08	<--	jitta (~jitta@95.90.246.169) has quit (Quit: Stay stressed, then give up.)
2014-11-21 19:29:24	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-21 19:32:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 19:35:22	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-21 19:36:02	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 19:37:58	<--	komarov (~komarov@ppp91-122-120-198.pppoe.avangarddsl.ru) has quit (Ping timeout: 245 seconds)
2014-11-21 19:38:10	<--	xace (~noname@unaffiliated/xace) has quit (Ping timeout: 255 seconds)
2014-11-21 19:38:15	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-21 19:40:21	-->	xace (~noname@unaffiliated/xace) has joined ##c++
2014-11-21 19:40:28	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:f966:71d:c415:5dd1) has quit (Read error: Connection reset by peer)
2014-11-21 19:40:45	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-21 19:40:57	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 240 seconds)
2014-11-21 19:41:11	-->	supay (sid47179@gateway/web/irccloud.com/x-jfnvisfgtgaujloh) has joined ##c++
2014-11-21 19:41:28	supay	can't i use graphics.h somehow on a mac/linux?
2014-11-21 19:43:01	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-21 19:43:57	<--	ObjectiveMatt (~Objective@66.87.151.38) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-21 19:44:14	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-21 19:46:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 19:47:04	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 19:48:19	<--	LunarJetman (LunarJetma@2.124.188.136) has left ##c++
2014-11-21 19:48:34	<--	maxpeck (~a@unaffiliated/maxpeck) has quit (Quit: leaving)
2014-11-21 19:49:29	newguise1234	I'm currently getting :
2014-11-21 19:49:32	newguise1234	prog.cpp:71:20: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::remove_pointer<int***>\u2019 and \u2018int\u2019)
2014-11-21 19:49:32	newguise1234	  std::cout << ar[0][0][0] << std::endl;
2014-11-21 19:49:36	-->	komarov (~komarov@178.62.189.37) has joined ##c++
2014-11-21 19:49:40	newguise1234	http://ideone.com/ga72wo
2014-11-21 19:49:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 19:50:26	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-21 19:50:27	newguise1234	I can just go in another direction, but I guess I'm looking for a way to have the remove_pointer evaluated
2014-11-21 19:50:29	-->	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has joined ##c++
2014-11-21 19:50:41	newguise1234	in order to access the items in the int**
2014-11-21 19:52:20	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-21 19:54:07	NinjaPenguin	remove_pointer only removes a pointer from the type.
2014-11-21 19:54:21	-->	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 19:55:48	newguise1234	NinjaPenguin: aye, but its trying to use the operator[] on type std::remove_pointer<int***> instead of on type int**
2014-11-21 19:56:15	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-21 19:56:19	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Ping timeout: 264 seconds)
2014-11-21 19:56:19	-->	phinxy_ (~tehhhd@212.3.18.61) has joined ##c++
2014-11-21 19:56:29	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-21 19:56:39	Smirnov	remove ALL TEH pointers
2014-11-21 19:56:39	NinjaPenguin	You're a three star programmer, it seems.
2014-11-21 19:56:46	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-21 19:56:49	newguise1234	lol
2014-11-21 19:56:49	NinjaPenguin	typename std::remove_pointer::type
2014-11-21 19:56:55	NinjaPenguin	That's int**
2014-11-21 19:57:09	<--	rendar (~I@host211-177-dynamic.251-95-r.retail.telecomitalia.it) has quit
2014-11-21 19:57:12	Smirnov	you need a recursive remove_pointer that just keeps calling remove_pointer until its down to not-a-pointer
2014-11-21 19:57:25	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-21 19:57:27	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-21 19:57:28	<--	rkreis (~robin@pD9EF13C9.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-21 19:57:31	newguise1234	got it, my recursion should take care of that
2014-11-21 19:57:37	newguise1234	but I didn't know about the ::type, thank you
2014-11-21 19:58:36	NinjaPenguin	What you're doing is ugly and you should be ashamed!
2014-11-21 19:58:49	newguise1234	TT___TT lol
2014-11-21 19:58:54	NinjaPenguin	{ random_device rd; uniform_int_distribution<int> dist(1, 9); vector<int> v(9); generate(v.begin(), v.end(), bind(dist, rd)); for (auto i : v) cout << i; }
2014-11-21 19:58:54	geordi	error: use of deleted function 'random_device::random_device(const random_device&)'
2014-11-21 19:59:08	NinjaPenguin	Can this be done or will it need a lambda?
2014-11-21 19:59:18	newguise1234	I kind of figure that, my code has kind of blown out of proportion compared to what I am trying to accomplish
2014-11-21 20:00:05	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-21 20:00:35	<--	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-21 20:00:59	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-21 20:02:13	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-21 20:03:56	-->	dunpeal (~dunpeal@wsip-70-167-155-210.oc.oc.cox.net) has joined ##c++
2014-11-21 20:04:00	<--	dunpeal (~dunpeal@wsip-70-167-155-210.oc.oc.cox.net) has quit (Changing host)
2014-11-21 20:04:00	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-21 20:04:42	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-21 20:06:00	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-21 20:06:03	mukunda_	is this valid? or is there a better way to do this? http://ideone.com/ql7rOV upcasting to a class higher than the source but with only utility functions added
2014-11-21 20:06:22	<--	hexagoxel_ (~hexagoxel@kiel-5f769494.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-21 20:06:58	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-21 20:07:08	NinjaPenguin	It's valid but you shouldn't really do that. Why not have 'msg' be of type MyMessage?
2014-11-21 20:07:20	-->	Anthaas (~Anthaas@31.205.120.130) has joined ##c++
2014-11-21 20:08:42	-->	f10_ (~flo@77.87.48.156) has joined ##c++
2014-11-21 20:08:56	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-21 20:09:43	CARAM_	is there a way I can pipe in a file to stdin with gdb?
2014-11-21 20:10:43	NinjaPenguin	CARAM_: Off topic, try gdb channel or something?
2014-11-21 20:11:07	CARAM_	ok.
2014-11-21 20:11:09	CARAM_	sorry!
2014-11-21 20:11:20	mukunda_	http://pastebin.com/RJa6PBQL this is my actual code, the message is a Net::LidStream::Message, but im trying to make an easy way to get the header value
2014-11-21 20:12:03	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 245 seconds)
2014-11-21 20:12:10	NinjaPenguin	AuthMessage msg = netmsg;
2014-11-21 20:12:10	platinuum	hs_: i figure it out, no helper method necessary. Thanks for your help
2014-11-21 20:13:04	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-21 20:15:08	NinjaPenguin	Hmm.
2014-11-21 20:15:23	mukunda_	netmsg cant be copied either :/ well..maybe
2014-11-21 20:15:51	<--	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-11-21 20:16:15	mukunda_	maybe i can make it moveable
2014-11-21 20:16:26	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-21 20:17:30	NinjaPenguin	I guess you could mage ID() and Extra() static and then do AuthMessage::ID(msg) or (header)
2014-11-21 20:17:51	-->	Anoniem4l_ (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-11-21 20:19:01	mukunda_	i guess thats kind of clean too... and doesnt need move magic
2014-11-21 20:19:02	--	Anoniem4l_ is now known as Anoniem4l
2014-11-21 20:19:02	NinjaPenguin	I'm sure there's some nice, non-UB way to do that.
2014-11-21 20:19:10	<--	f10_ (~flo@77.87.48.156) has quit (Ping timeout: 250 seconds)
2014-11-21 20:19:12	<--	killertester (~igor@ppp-62-76-22-167.ppp.kmv.ru) has quit (Ping timeout: 265 seconds)
2014-11-21 20:19:17	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-21 20:19:17	NinjaPenguin	That's all I can think of right now.
2014-11-21 20:20:42	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-21 20:20:49	-->	srjek (~srjek@46dhcp67.ece.uic.edu) has joined ##c++
2014-11-21 20:21:09	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Quit: Leaving)
2014-11-21 20:22:58	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 244 seconds)
2014-11-21 20:25:21	<--	marvinalone (~marvinalo@172.56.40.194) has quit (Ping timeout: 245 seconds)
2014-11-21 20:25:22	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 20:25:44	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 258 seconds)
2014-11-21 20:27:59	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 272 seconds)
2014-11-21 20:28:22	<--	eyeRobut (~Lingo@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Quit: Be back later ...)
2014-11-21 20:28:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 20:30:41	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-21 20:30:52	-->	Niedar (~nnscript@ip68-110-154-15.hr.hr.cox.net) has joined ##c++
2014-11-21 20:32:24	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-21 20:33:45	marcux	#join java
2014-11-21 20:33:50	<--	marcux (~marco@191.181.134.140) has left ##c++
2014-11-21 20:34:07	o-O-o	!grab marcux
2014-11-21 20:34:08	nolyc	By your command.
2014-11-21 20:34:08	<--	tysweezy (~tysweezy@209-234-129-174.static.twtelecom.net) has quit (Quit: Leaving)
2014-11-21 20:35:20	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 244 seconds)
2014-11-21 20:35:36	dunpeal	haha
2014-11-21 20:37:26	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 20:38:39	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 245 seconds)
2014-11-21 20:39:05	<--	Repelex (~textual@177.41.95.244) has quit (Read error: Connection reset by peer)
2014-11-21 20:39:16	<--	snyp (~Snyp@150.129.132.215) has quit (Quit: WeeChat 1.0.1)
2014-11-21 20:39:54	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has quit (Read error: Connection reset by peer)
2014-11-21 20:40:09	-->	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has joined ##c++
2014-11-21 20:40:21	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has joined ##c++
2014-11-21 20:40:28	<--	wakd (~wakd@unaffiliated/wakd) has quit (Read error: Connection reset by peer)
2014-11-21 20:40:54	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-21 20:41:12	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-21 20:41:13	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Client Quit)
2014-11-21 20:43:42	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-21 20:44:06	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-21 20:46:04	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 20:46:34	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Read error: Connection reset by peer)
2014-11-21 20:48:21	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 20:48:46	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-21 20:49:47	JamesNZ	When I write `using Parent::Parent;` in a derived class, does that inherit *all* of Parent's constructors?
2014-11-21 20:49:57	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-21 20:50:25	-->	TheAncientGoat (~quassel@175.143.160.149) has joined ##c++
2014-11-21 20:50:40	JamesNZ	(in C++11 that is)
2014-11-21 20:54:44	-->	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-21 20:54:44	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-21 20:55:03	-->	r3g3x (~r3g3x@unaffiliated/r3g3x) has joined ##c++
2014-11-21 20:56:03	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-21 20:57:30	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2014-11-21 20:57:32	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 240 seconds)
2014-11-21 20:57:38	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Quit: Meow meow meow)
2014-11-21 20:57:42	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-21 20:58:00	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-21 20:59:25	<--	w41_ (~w41@unaffiliated/w41) has quit (Ping timeout: 255 seconds)
2014-11-21 20:59:55	<--	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (*.net *.split)
2014-11-21 20:59:56	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	blackwind_123 (~IceChat9@117.202.16.81) has quit (*.net *.split)
2014-11-21 20:59:56	<--	mavam (~mavam@unaffiliated/mavam) has quit (*.net *.split)
2014-11-21 20:59:56	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (*.net *.split)
2014-11-21 20:59:56	<--	k0nichiwa (~jdoe@174.71.181.20) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (*.net *.split)
2014-11-21 20:59:56	<--	zima (zima@173.182.129.48) has quit (*.net *.split)
2014-11-21 20:59:56	<--	SparkDog (spark@dog.thdo.woaf.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	sblack1 (~sblack1@unaffiliated/sblack1) has quit (*.net *.split)
2014-11-21 20:59:56	<--	basic6 (~basic6@p3E9EE866.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (*.net *.split)
2014-11-21 20:59:56	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Serus (~Serus@unaffiliated/serus) has quit (*.net *.split)
2014-11-21 20:59:56	<--	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Renderwahn (~render@176.126.244.88) has quit (*.net *.split)
2014-11-21 20:59:56	<--	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	sailerboy (~sailerboy@sailerboy.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has quit (*.net *.split)
2014-11-21 20:59:56	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (*.net *.split)
2014-11-21 20:59:56	<--	wakd (~wakd@unaffiliated/wakd) has quit (*.net *.split)
2014-11-21 20:59:56	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (*.net *.split)
2014-11-21 20:59:56	<--	kaleid0 (~kaleid0@2600:1014:b028:fa76:ee47:fbec:9a6:bf68) has quit (*.net *.split)
2014-11-21 20:59:56	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (*.net *.split)
2014-11-21 20:59:56	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	licnep (uid4387@gateway/web/irccloud.com/x-atovqrouycnrfxxp) has quit (*.net *.split)
2014-11-21 20:59:56	<--	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Supicios- (~Supicioso@2607:5300:100:200::5e4) has quit (*.net *.split)
2014-11-21 20:59:56	<--	ArchZombie (~lkjfeiosn@2602:306:c455:df80:705d:905b:b477:6b9d) has quit (*.net *.split)
2014-11-21 20:59:56	<--	endomancer (~endomance@101.191.33.121) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Blaguvest (~blaguvest@unaffiliated/blaguvest) has quit (*.net *.split)
2014-11-21 20:59:56	<--	shoals (~shoals@192.210.214.197) has quit (*.net *.split)
2014-11-21 20:59:56	<--	mxiia (~mxiia@unaffiliated/mxiia) has quit (*.net *.split)
2014-11-21 20:59:56	<--	mf___ (~mf_@188.113.126.36) has quit (*.net *.split)
2014-11-21 20:59:56	<--	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has quit (*.net *.split)
2014-11-21 20:59:56	<--	Jaxan (~quassel@foo.kassala.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	noj (~jon@2a02:470:84:102::24) has quit (*.net *.split)
2014-11-21 20:59:56	<--	RokerHRO (~zonc@shell.spamt.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	clang (~clang@2607:f0d0:1003:c::10) has quit (*.net *.split)
2014-11-21 20:59:56	<--	batmoz (~quassel@foo.kassala.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	GGMethos (~methos@2a02:418:6a04:178:209:40:77:1) has quit (*.net *.split)
2014-11-21 20:59:56	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (*.net *.split)
2014-11-21 20:59:56	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (*.net *.split)
2014-11-21 20:59:56	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (*.net *.split)
2014-11-21 20:59:56	<--	envi (kvirc@220.121.234.166) has quit (*.net *.split)
2014-11-21 20:59:56	<--	HerzogDeXtEr (~flex@i59F6DF15.versanet.de) has quit (*.net *.split)
2014-11-21 20:59:56	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (*.net *.split)
2014-11-21 20:59:56	<--	cysm (cysm@unaffiliated/paracyst) has quit (*.net *.split)
2014-11-21 20:59:57	<--	nacitar (~nacitar@unaffiliated/nacitar) has quit (*.net *.split)
2014-11-21 20:59:57	<--	nda__ (~nda_@68.216.16.62.customer.cdi.no) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (*.net *.split)
2014-11-21 20:59:57	<--	w66 (AH3e@null.firrre.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	dataangel (~user@2601:d:2780:26b:6583:eaa0:dbcc:f0bd) has quit (*.net *.split)
2014-11-21 20:59:57	<--	hagabaka (~hagabaka@unaffiliated/hagabaka) has quit (*.net *.split)
2014-11-21 20:59:57	<--	d3Vito (d3Vito@urbany.org) has quit (*.net *.split)
2014-11-21 20:59:57	<--	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has quit (*.net *.split)
2014-11-21 20:59:57	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (*.net *.split)
2014-11-21 20:59:57	<--	HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (*.net *.split)
2014-11-21 20:59:57	<--	zer0def (~zer0def@5.254.147.10) has quit (*.net *.split)
2014-11-21 20:59:57	<--	bb010g (uid21050@gateway/web/irccloud.com/x-bmnncthbtfcnezwk) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has quit (*.net *.split)
2014-11-21 20:59:57	<--	acidfrost (syphter@unaffiliated/kiten) has quit (*.net *.split)
2014-11-21 20:59:57	<--	megaTherion (~therion@coruscant.unix.io) has quit (*.net *.split)
2014-11-21 20:59:57	<--	tapout (~tapout@unaffiliated/tapout) has quit (*.net *.split)
2014-11-21 20:59:57	<--	jhj (~jhj@unaffiliated/jhj) has quit (*.net *.split)
2014-11-21 20:59:57	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (*.net *.split)
2014-11-21 20:59:57	<--	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 20:59:57	<--	racycle (~user@12.172.87.98) has quit (*.net *.split)
2014-11-21 20:59:57	<--	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (*.net *.split)
2014-11-21 20:59:57	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Logan54 (~logan@84.237.53.101) has quit (*.net *.split)
2014-11-21 20:59:57	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (*.net *.split)
2014-11-21 20:59:57	<--	heiner_ (~heiner@p5085629E.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 20:59:57	<--	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (*.net *.split)
2014-11-21 20:59:57	<--	pyon (~user@unaffiliated/pyon) has quit (*.net *.split)
2014-11-21 20:59:57	<--	syncrow (syncrow@unaffiliated/syncrow) has quit (*.net *.split)
2014-11-21 20:59:57	<--	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has quit (*.net *.split)
2014-11-21 20:59:57	<--	proteusguy (~proteusgu@ppp-110-168-229-113.revip5.asianet.co.th) has quit (*.net *.split)
2014-11-21 20:59:57	<--	sazzer (~sazzer@217.32.210.21) has quit (*.net *.split)
2014-11-21 20:59:57	<--	ericP (~eric@ssh.w3.org) has quit (*.net *.split)
2014-11-21 20:59:57	<--	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Unscrupulous (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (*.net *.split)
2014-11-21 20:59:57	<--	moonchild (~loon@73.13.118.191) has quit (*.net *.split)
2014-11-21 20:59:57	<--	btrace (~btrace@77.47.6.179.dynamic.cablesurf.de) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Kristina (~christina@crna.cc) has quit (*.net *.split)
2014-11-21 20:59:57	<--	M-ou-se (~m-ou.se@m-ou.se) has quit (*.net *.split)
2014-11-21 20:59:57	<--	iFire (~fire@unaffiliated/ifire) has quit (*.net *.split)
2014-11-21 20:59:57	<--	antons_ (~antons@199.48.120.2) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has quit (*.net *.split)
2014-11-21 20:59:57	<--	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-jegaskhoyrmsjbvw) has quit (*.net *.split)
2014-11-21 20:59:57	<--	dantarion (~quassel@ps164606.dreamhost.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	beowuff (~beowuff@ec2-50-112-149-197.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2014-11-21 20:59:57	<--	phantom__ (~phantom@88-83-35-183.customer.t3.se) has quit (*.net *.split)
2014-11-21 20:59:57	<--	b0lt (r00t@unaffiliated/bolt) has quit (*.net *.split)
2014-11-21 20:59:58	<--	segy (~segfault@pdpc/supporter/active/segy) has quit (*.net *.split)
2014-11-21 21:02:09	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2014-11-21 21:03:28	Kevin-_-	{ cout << (1 && 0 || 1 && 1); }
2014-11-21 21:03:28	geordi	warning: suggest parentheses around '&&' within '||'
2014-11-21 21:03:54	Kevin-_-	yes... I know it's good practice, I want to make sure I'm right about the order of operations with that
2014-11-21 21:04:08	-->	chatsiri_ (~chatsiri_@203.131.216.112) has joined ##c++
2014-11-21 21:04:26	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Quit: Meow meow meow)
2014-11-21 21:04:30	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-21 21:04:50	-->	SleekoNiko (~nick@cpe-70-117-105-180.austin.res.rr.com) has joined ##c++
2014-11-21 21:05:01	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-21 21:05:15	-->	d3Vito (d3Vito@urbany.org) has joined ##c++
2014-11-21 21:05:18	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-21 21:05:28	ruediger	Kevin-_-: && is higher than ||
2014-11-21 21:05:32	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-21 21:05:38	Kevin-_-	yeah I thought so
2014-11-21 21:05:41	lh_mouse	geordi, --precedence 1 && 0 || 1 && 1
2014-11-21 21:05:41	geordi	(1 && 0) || (1 && 1)
2014-11-21 21:06:06	Kevin-_-	since in logic it's (1 * 0) + (1 * 1)
2014-11-21 21:06:43	-->	GGMethos (~methos@2a02:418:6a04:178:209:40:77:1) has joined ##c++
2014-11-21 21:06:52	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-21 21:06:55	ruediger	lh_mouse: that's (yet) a(nother) cool feature
2014-11-21 21:07:06	-->	bb010g (uid21050@gateway/web/irccloud.com/x-xpwdglvvhatfcgxc) has joined ##c++
2014-11-21 21:07:22	 *	Kevin-_- has yet to look through the extensive knowledge of the geordi 
2014-11-21 21:07:40	ruediger	geordi, --precedence x & y == 0
2014-11-21 21:07:40	geordi	x & (y == 0)
2014-11-21 21:08:03	Kevin-_-	is there a ignore warnings option?
2014-11-21 21:08:16	ruediger	geordi, --precedence *x++
2014-11-21 21:08:16	geordi	*(x++)
2014-11-21 21:08:18	Oxyd	-w
2014-11-21 21:08:24	Oxyd	If you're talking about geordi's warnings.
2014-11-21 21:08:52	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-21 21:09:08	Kevin-_-	ah ok
2014-11-21 21:09:16	-->	hagabaka (~hagabaka@unaffiliated/hagabaka) has joined ##c++
2014-11-21 21:09:23	o11c	I've never understood why there's a warning about that
2014-11-21 21:10:41	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-21 21:12:20	<--	Garner (uid38417@gateway/web/irccloud.com/x-plcprxjxjkjrksvl) has quit (Quit: Connection closed for inactivity)
2014-11-21 21:13:27	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-21 21:13:47	<--	Yepoleb (~quassel@178-190-230-21.adsl.highway.telekom.at) has quit (Read error: Connection reset by peer)
2014-11-21 21:14:29	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit (Ping timeout: 256 seconds)
2014-11-21 21:15:14	-->	Yepoleb (~quassel@178-190-230-21.adsl.highway.telekom.at) has joined ##c++
2014-11-21 21:15:38	Kevin-_-	me neither
2014-11-21 21:16:16	dunpeal	Is the whole "move semantics" thing a C++11 upgrade to the language?
2014-11-21 21:16:29	dunpeal	Or were there significant move features prior to C++11?
2014-11-21 21:17:19	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-21 21:17:35	hs_	rvalue reference is the new thing
2014-11-21 21:18:10	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-21 21:18:24	<--	a_le (~a_le@255.sub-70-197-10.myvzw.com) has quit (Ping timeout: 250 seconds)
2014-11-21 21:18:52	o11c	dunpeal: nobody did moves on a large scale before C++11 because without language support it's really ugly
2014-11-21 21:18:56	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-21 21:19:07	dunpeal	o11c: yup, thanks.
2014-11-21 21:19:15	-->	a_le (~a_le@mobile-166-171-251-032.mycingular.net) has joined ##c++
2014-11-21 21:21:11	<--	TheTeapot (~TheTeapot@dyn-129-78-250-60.wirelessguest.usyd.edu.au) has quit (Ping timeout: 264 seconds)
2014-11-21 21:21:16	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit (Excess Flood)
2014-11-21 21:21:30	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-21 21:24:49	<--	a_le (~a_le@mobile-166-171-251-032.mycingular.net) has quit (Ping timeout: 244 seconds)
2014-11-21 21:27:14	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-21 21:27:33	-->	haxrr (~haxr@122.179.30.186) has joined ##c++
2014-11-21 21:27:55	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-21 21:28:56	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-21 21:29:58	-->	ColloquyUser (~Tolken@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-21 21:31:07	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-21 21:31:54	-->	jhj (~jhj@unaffiliated/jhj) has joined ##c++
2014-11-21 21:31:54	-->	megaTherion (~therion@coruscant.unix.io) has joined ##c++
2014-11-21 21:31:54	-->	acidfrost (syphter@unaffiliated/kiten) has joined ##c++
2014-11-21 21:31:54	-->	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has joined ##c++
2014-11-21 21:31:54	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-21 21:31:54	-->	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has joined ##c++
2014-11-21 21:31:54	-->	zer0def (~zer0def@5.254.147.10) has joined ##c++
2014-11-21 21:31:54	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-21 21:31:54	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-21 21:31:54	-->	dataangel (~user@2601:d:2780:26b:6583:eaa0:dbcc:f0bd) has joined ##c++
2014-11-21 21:31:54	-->	w66 (AH3e@null.firrre.com) has joined ##c++
2014-11-21 21:31:54	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-21 21:31:54	-->	nda__ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-21 21:31:54	-->	nacitar (~nacitar@unaffiliated/nacitar) has joined ##c++
2014-11-21 21:31:54	-->	cysm (cysm@unaffiliated/paracyst) has joined ##c++
2014-11-21 21:31:54	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-21 21:31:54	-->	HerzogDeXtEr (~flex@i59F6DF15.versanet.de) has joined ##c++
2014-11-21 21:31:54	-->	envi (kvirc@220.121.234.166) has joined ##c++
2014-11-21 21:31:54	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-21 21:31:54	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-21 21:31:54	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-21 21:31:54	-->	clang (~clang@2607:f0d0:1003:c::10) has joined ##c++
2014-11-21 21:31:54	-->	noj (~jon@2a02:470:84:102::24) has joined ##c++
2014-11-21 21:31:54	-->	Jaxan (~quassel@foo.kassala.de) has joined ##c++
2014-11-21 21:31:54	-->	RokerHRO (~zonc@shell.spamt.net) has joined ##c++
2014-11-21 21:31:54	-->	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has joined ##c++
2014-11-21 21:31:54	-->	mf___ (~mf_@188.113.126.36) has joined ##c++
2014-11-21 21:31:54	-->	mxiia (~mxiia@unaffiliated/mxiia) has joined ##c++
2014-11-21 21:31:54	-->	shoals (~shoals@192.210.214.197) has joined ##c++
2014-11-21 21:31:54	-->	Supicios- (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-21 21:31:54	-->	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has joined ##c++
2014-11-21 21:31:54	-->	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has joined ##c++
2014-11-21 21:31:54	-->	licnep (uid4387@gateway/web/irccloud.com/x-atovqrouycnrfxxp) has joined ##c++
2014-11-21 21:31:54	-->	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-21 21:31:54	-->	ArchZombie (~lkjfeiosn@2602:306:c455:df80:705d:905b:b477:6b9d) has joined ##c++
2014-11-21 21:31:54	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-21 21:31:54	-->	kaleid0 (~kaleid0@2600:1014:b028:fa76:ee47:fbec:9a6:bf68) has joined ##c++
2014-11-21 21:31:54	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-21 21:31:54	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has joined ##c++
2014-11-21 21:31:54	-->	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:31:54	-->	racycle (~user@12.172.87.98) has joined ##c++
2014-11-21 21:31:54	-->	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has joined ##c++
2014-11-21 21:31:54	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-21 21:31:54	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-21 21:31:54	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-21 21:31:54	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-21 21:31:54	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-21 21:31:54	-->	heiner_ (~heiner@p5085629E.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:31:54	-->	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has joined ##c++
2014-11-21 21:31:54	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-21 21:31:54	-->	7GHAAO58J (~user@unaffiliated/pyon) has joined ##c++
2014-11-21 21:31:54	-->	syncrow (syncrow@unaffiliated/syncrow) has joined ##c++
2014-11-21 21:31:54	-->	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has joined ##c++
2014-11-21 21:31:54	-->	proteusguy (~proteusgu@ppp-110-168-229-113.revip5.asianet.co.th) has joined ##c++
2014-11-21 21:31:54	-->	sazzer (~sazzer@217.32.210.21) has joined ##c++
2014-11-21 21:31:54	-->	ericP (~eric@ssh.w3.org) has joined ##c++
2014-11-21 21:31:54	-->	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has joined ##c++
2014-11-21 21:31:54	-->	Unscrupulous (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-21 21:31:54	-->	moonchild (~loon@73.13.118.191) has joined ##c++
2014-11-21 21:31:54	-->	btrace (~btrace@77.47.6.179.dynamic.cablesurf.de) has joined ##c++
2014-11-21 21:31:54	-->	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has joined ##c++
2014-11-21 21:31:54	-->	Kristina (~christina@crna.cc) has joined ##c++
2014-11-21 21:31:54	-->	M-ou-se (~m-ou.se@m-ou.se) has joined ##c++
2014-11-21 21:31:54	-->	iFire (~fire@unaffiliated/ifire) has joined ##c++
2014-11-21 21:31:54	-->	antons_ (~antons@199.48.120.2) has joined ##c++
2014-11-21 21:31:54	-->	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has joined ##c++
2014-11-21 21:31:54	-->	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-jegaskhoyrmsjbvw) has joined ##c++
2014-11-21 21:31:54	-->	dantarion (~quassel@ps164606.dreamhost.com) has joined ##c++
2014-11-21 21:31:54	-->	phantom__ (~phantom@88-83-35-183.customer.t3.se) has joined ##c++
2014-11-21 21:31:54	-->	beowuff (~beowuff@ec2-50-112-149-197.us-west-2.compute.amazonaws.com) has joined ##c++
2014-11-21 21:31:54	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-21 21:31:54	-->	segy (~segfault@pdpc/supporter/active/segy) has joined ##c++
2014-11-21 21:31:55	<--	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 21:31:55	<--	racycle (~user@12.172.87.98) has quit (*.net *.split)
2014-11-21 21:31:55	<--	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has quit (*.net *.split)
2014-11-21 21:31:55	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (*.net *.split)
2014-11-21 21:31:55	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (*.net *.split)
2014-11-21 21:31:55	<--	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (*.net *.split)
2014-11-21 21:31:55	<--	Logan54 (~logan@84.237.53.101) has quit (*.net *.split)
2014-11-21 21:31:55	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (*.net *.split)
2014-11-21 21:31:55	<--	heiner_ (~heiner@p5085629E.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 21:31:55	<--	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has quit (*.net *.split)
2014-11-21 21:31:55	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (*.net *.split)
2014-11-21 21:31:55	<--	7GHAAO58J (~user@unaffiliated/pyon) has quit (*.net *.split)
2014-11-21 21:31:55	<--	syncrow (syncrow@unaffiliated/syncrow) has quit (*.net *.split)
2014-11-21 21:31:55	<--	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has quit (*.net *.split)
2014-11-21 21:31:55	<--	proteusguy (~proteusgu@ppp-110-168-229-113.revip5.asianet.co.th) has quit (*.net *.split)
2014-11-21 21:31:55	<--	sazzer (~sazzer@217.32.210.21) has quit (*.net *.split)
2014-11-21 21:31:55	<--	ericP (~eric@ssh.w3.org) has quit (*.net *.split)
2014-11-21 21:31:55	<--	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has quit (*.net *.split)
2014-11-21 21:31:55	<--	Unscrupulous (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (*.net *.split)
2014-11-21 21:31:55	<--	moonchild (~loon@73.13.118.191) has quit (*.net *.split)
2014-11-21 21:31:56	<--	btrace (~btrace@77.47.6.179.dynamic.cablesurf.de) has quit (*.net *.split)
2014-11-21 21:31:56	<--	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has quit (*.net *.split)
2014-11-21 21:31:56	<--	Kristina (~christina@crna.cc) has quit (*.net *.split)
2014-11-21 21:31:56	<--	M-ou-se (~m-ou.se@m-ou.se) has quit (*.net *.split)
2014-11-21 21:31:56	<--	iFire (~fire@unaffiliated/ifire) has quit (*.net *.split)
2014-11-21 21:31:56	<--	antons_ (~antons@199.48.120.2) has quit (*.net *.split)
2014-11-21 21:31:56	<--	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has quit (*.net *.split)
2014-11-21 21:31:56	<--	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-jegaskhoyrmsjbvw) has quit (*.net *.split)
2014-11-21 21:31:56	<--	dantarion (~quassel@ps164606.dreamhost.com) has quit (*.net *.split)
2014-11-21 21:31:56	<--	beowuff (~beowuff@ec2-50-112-149-197.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2014-11-21 21:31:56	<--	phantom__ (~phantom@88-83-35-183.customer.t3.se) has quit (*.net *.split)
2014-11-21 21:31:56	<--	b0lt (r00t@unaffiliated/bolt) has quit (*.net *.split)
2014-11-21 21:31:56	<--	segy (~segfault@pdpc/supporter/active/segy) has quit (*.net *.split)
2014-11-21 21:31:58	--	thomas is now known as 7JTABGLNG
2014-11-21 21:32:00	-->	fstd (~fstd@xdsl-84-44-145-180.netcologne.de) has joined ##c++
2014-11-21 21:32:00	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-21 21:32:00	-->	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has joined ##c++
2014-11-21 21:32:00	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-21 21:32:00	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-21 21:32:00	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:32:00	-->	blackwind_123 (~IceChat9@117.202.16.81) has joined ##c++
2014-11-21 21:32:00	-->	mavam (~mavam@unaffiliated/mavam) has joined ##c++
2014-11-21 21:32:00	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-21 21:32:00	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-21 21:32:00	-->	k0nichiwa (~jdoe@174.71.181.20) has joined ##c++
2014-11-21 21:32:00	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-21 21:32:00	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-21 21:32:00	-->	SparkDog (spark@dog.thdo.woaf.net) has joined ##c++
2014-11-21 21:32:00	-->	sblack1 (~sblack1@unaffiliated/sblack1) has joined ##c++
2014-11-21 21:32:00	-->	basic6 (~basic6@p3E9EE866.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:32:00	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-21 21:32:00	-->	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-21 21:32:00	-->	Serus (~Serus@unaffiliated/serus) has joined ##c++
2014-11-21 21:32:00	-->	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has joined ##c++
2014-11-21 21:32:00	-->	Renderwahn (~render@176.126.244.88) has joined ##c++
2014-11-21 21:32:00	-->	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has joined ##c++
2014-11-21 21:32:00	-->	sailerboy (~sailerboy@sailerboy.net) has joined ##c++
2014-11-21 21:32:00	-->	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has joined ##c++
2014-11-21 21:32:00	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##c++
2014-11-21 21:32:00	-->	Zoinks (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2014-11-21 21:32:10	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has quit (Quit: Leaving)
2014-11-21 21:32:45	--	7JTABGLNG is now known as thomas
2014-11-21 21:32:54	<--	ColloquyUser (~Tolken@modemcable146.17-83-70.mc.videotron.ca) has quit (Remote host closed the connection)
2014-11-21 21:34:08	-->	marvinalone (~marvinalo@172.56.41.176) has joined ##c++
2014-11-21 21:39:15	<--	fstd (~fstd@xdsl-84-44-145-180.netcologne.de) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has quit (*.net *.split)
2014-11-21 21:39:15	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (*.net *.split)
2014-11-21 21:39:15	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (*.net *.split)
2014-11-21 21:39:15	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 21:39:15	<--	blackwind_123 (~IceChat9@117.202.16.81) has quit (*.net *.split)
2014-11-21 21:39:15	<--	mavam (~mavam@unaffiliated/mavam) has quit (*.net *.split)
2014-11-21 21:39:15	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (*.net *.split)
2014-11-21 21:39:15	<--	k0nichiwa (~jdoe@174.71.181.20) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (*.net *.split)
2014-11-21 21:39:15	<--	zima (zima@173.182.129.48) has quit (*.net *.split)
2014-11-21 21:39:15	<--	SparkDog (spark@dog.thdo.woaf.net) has quit (*.net *.split)
2014-11-21 21:39:15	<--	sblack1 (~sblack1@unaffiliated/sblack1) has quit (*.net *.split)
2014-11-21 21:39:15	<--	basic6 (~basic6@p3E9EE866.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (*.net *.split)
2014-11-21 21:39:15	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Serus (~Serus@unaffiliated/serus) has quit (*.net *.split)
2014-11-21 21:39:15	<--	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has quit (*.net *.split)
2014-11-21 21:39:15	<--	Renderwahn (~render@176.126.244.88) has quit (*.net *.split)
2014-11-21 21:39:15	<--	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has quit (*.net *.split)
2014-11-21 21:39:15	<--	sailerboy (~sailerboy@sailerboy.net) has quit (*.net *.split)
2014-11-21 21:39:16	<--	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has quit (*.net *.split)
2014-11-21 21:39:16	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (*.net *.split)
2014-11-21 21:39:16	<--	Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (*.net *.split)
2014-11-21 21:39:32	<--	kaleid0 (~kaleid0@2600:1014:b028:fa76:ee47:fbec:9a6:bf68) has quit (Ping timeout: 258 seconds)
2014-11-21 21:40:22	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has joined ##c++
2014-11-21 21:40:31	-->	tapout (~tapout@unaffiliated/tapout) has joined ##c++
2014-11-21 21:40:45	-->	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:40:45	-->	racycle (~user@12.172.87.98) has joined ##c++
2014-11-21 21:40:45	-->	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has joined ##c++
2014-11-21 21:40:45	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-21 21:40:45	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-21 21:40:45	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-21 21:40:45	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-21 21:40:45	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-21 21:40:45	-->	heiner_ (~heiner@p5085629E.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:40:45	-->	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has joined ##c++
2014-11-21 21:40:45	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-21 21:40:45	-->	syncrow (syncrow@unaffiliated/syncrow) has joined ##c++
2014-11-21 21:40:45	-->	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has joined ##c++
2014-11-21 21:40:45	-->	proteusguy (~proteusgu@ppp-110-168-229-113.revip5.asianet.co.th) has joined ##c++
2014-11-21 21:40:45	-->	sazzer (~sazzer@217.32.210.21) has joined ##c++
2014-11-21 21:40:45	-->	ericP (~eric@ssh.w3.org) has joined ##c++
2014-11-21 21:40:45	-->	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has joined ##c++
2014-11-21 21:40:45	-->	Unscrupulous (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-21 21:40:45	-->	moonchild (~loon@73.13.118.191) has joined ##c++
2014-11-21 21:40:45	-->	btrace (~btrace@77.47.6.179.dynamic.cablesurf.de) has joined ##c++
2014-11-21 21:40:45	-->	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has joined ##c++
2014-11-21 21:40:45	-->	Kristina (~christina@crna.cc) has joined ##c++
2014-11-21 21:40:45	-->	M-ou-se (~m-ou.se@m-ou.se) has joined ##c++
2014-11-21 21:40:45	-->	iFire (~fire@unaffiliated/ifire) has joined ##c++
2014-11-21 21:40:45	-->	antons_ (~antons@199.48.120.2) has joined ##c++
2014-11-21 21:40:45	-->	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has joined ##c++
2014-11-21 21:40:45	-->	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-jegaskhoyrmsjbvw) has joined ##c++
2014-11-21 21:40:45	-->	dantarion (~quassel@ps164606.dreamhost.com) has joined ##c++
2014-11-21 21:40:45	-->	phantom__ (~phantom@88-83-35-183.customer.t3.se) has joined ##c++
2014-11-21 21:40:45	-->	beowuff (~beowuff@ec2-50-112-149-197.us-west-2.compute.amazonaws.com) has joined ##c++
2014-11-21 21:40:45	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-21 21:40:45	-->	segy (~segfault@pdpc/supporter/active/segy) has joined ##c++
2014-11-21 21:40:55	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit
2014-11-21 21:41:48	<--	antons_ (~antons@199.48.120.2) has quit (Max SendQ exceeded)
2014-11-21 21:41:54	<--	komarov (~komarov@178.62.189.37) has quit (Ping timeout: 272 seconds)
2014-11-21 21:42:16	-->	antons_ (~antons@199.48.120.2) has joined ##c++
2014-11-21 21:44:32	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-21 21:44:33	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2014-11-21 21:45:21	-->	sailerboy (~sailerboy@sailerboy.net) has joined ##c++
2014-11-21 21:45:30	-->	temair (temair@95.45.108.204) has joined ##c++
2014-11-21 21:45:30	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-21 21:45:30	-->	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has joined ##c++
2014-11-21 21:45:30	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-21 21:45:30	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-21 21:45:30	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:45:30	-->	blackwind_123 (~IceChat9@117.202.16.81) has joined ##c++
2014-11-21 21:45:30	-->	mavam (~mavam@unaffiliated/mavam) has joined ##c++
2014-11-21 21:45:30	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-21 21:45:30	-->	k0nichiwa (~jdoe@174.71.181.20) has joined ##c++
2014-11-21 21:45:30	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-21 21:45:30	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-21 21:45:30	-->	SparkDog (spark@dog.thdo.woaf.net) has joined ##c++
2014-11-21 21:45:30	-->	sblack1 (~sblack1@unaffiliated/sblack1) has joined ##c++
2014-11-21 21:45:30	-->	basic6 (~basic6@p3E9EE866.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 21:45:30	-->	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-21 21:45:30	-->	Serus (~Serus@unaffiliated/serus) has joined ##c++
2014-11-21 21:45:30	-->	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has joined ##c++
2014-11-21 21:45:30	-->	Renderwahn (~render@176.126.244.88) has joined ##c++
2014-11-21 21:45:30	-->	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has joined ##c++
2014-11-21 21:45:30	-->	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has joined ##c++
2014-11-21 21:45:30	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##c++
2014-11-21 21:45:30	-->	Zoinks (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2014-11-21 21:45:39	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-21 21:45:52	-->	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has joined ##c++
2014-11-21 21:45:53	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-21 21:45:57	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Max SendQ exceeded)
2014-11-21 21:46:16	<--	neunon (znc@unaffiliated/neunon) has quit (Quit: ZNC - http://znc.in)
2014-11-21 21:46:41	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-21 21:48:00	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-21 21:48:34	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-21 21:48:36	-->	neunon (znc@unaffiliated/neunon) has joined ##c++
2014-11-21 22:06:36	--	irc: disconnected from server
2014-11-21 22:07:03	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-21 22:07:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-21 22:07:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-21 22:07:03	--	Nicks ##c++: [_5kg `Winslow aboudreault acidfrost adamm adendum_ Adrinael Affliction agile Ahkbar aicasn Aichan aidecoe alamages alamar alcedine Alina-malina allyourcodebase alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andgra andres andreyv angryzor Anoniem4l ansiwen Anthaas antons_ ArchZombie Ardonik Artpicre asakura1 ashkan Aster atod atrika Auv awake b0lt b_jonas Backinside barfod basic6 batmoz bazrush bb010g Beetny Belgarion0 belz beowuff Betal Bigcheese BinaryAddicted blackbit blackwind_123 bladerunner blast_ BlastHardcheese blinky42 blipped blo Bloodust blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace Budd bumbar_ Burgundy CARAM_ Carbonflux Cassiel caveat- cbreak CEnnis91 chainedchaos chatsiri_ ChemicalRascal Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm Cirus CJKay clang ClarusCogitatio clincher clynamen cnj cnu- codebrainz contempt coolcat corecode crantron cryptoca cubed_root CustosLimen cvtsx cyberspace- cyndis cysm d3Vito d_s dahlia daNRG dantarion dardevelin darkerstar DarkGhost dataangel David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych desophos Dessimat0r det dexter0 DexterLB dfletcher dh dindinx dirtydawg dooshtuRabbit dostoyevsky doug64k dts|gaming dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ edk edran Eelis efreet ejnahc elnn elsewho emg emlai emma enterprisedc envi ericP erikj ERROH esperegu eurythmia evilissimo Extreme f0ster FabTG_ filcab_ Flannel flebron FlorianJW-terra fluter fold forrestv freanux FreezingCold FriskyKat froggey fstd Furai garFF geidi genpaku Gentle geordi Gevox ggherdov` GGMethos GinoMan gnoirzox GoGi googol Gravitron GrecKo gregj grep0r guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner_ heinrich5991 Hello71 hellschreiber HerzogDeXtEr HeTo HiggsPossum himikof hs_ hstefan hyperair hyperboreean icedev ido iFire Iloiny imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 ivan` ix007 j_wright jack_rabbit jakemp JamesNZ japro Jaxan jayne jeaye jhj jiffe Jinxit jophish jorj Josef_K jpnurmi jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl k0nichiwa k4r1m Kabal619 KAHR-Alpha kailoAtWork Kaini kalven kalzz Karethoth Kasreyn kbtr Kevin-_- kevr KindOne KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko kriskropd Kristina krnlyng KrzaQ kStolen kurahaupo kurti Lasher` latexi95 leeN lenarhoyt LetoThe2nd liberal LickPlusPlus licnep Lilian linuxuz3r LM741 Logan54 Lokomotiv LongCatTH Longlius lord4163 LordAkkarin lucasjones ludkiller Luker luny`` M-ou-se m0shbear m477 mads- mangekyo manny- marchelzo_ markand martiert marvinalone matt90 mavam maw Maxel Meeh megaTherion melter metallisto mf___ mihipte mike_f mikroflops Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin moire_ moonchild Motig MrC mrueg mukunda_ MulleDK19 mulvane murrekatt_ muteki mxiia nacitar Naive naraku9333 natas_ Natch Navid nda__ necrogami netj_ neunon newguise1234 Nickeeh nido Niedar Nik05 nilg Nilium NinjaPenguin nitrix nkvorn noj nolyc notker notpara npaperbot npcomp nuborn nurupo o-O-o o11c o] oberstein Obfuscate obiwahn oleo olly_c on3pk only_the_bear opalraava OpusMioda orbitz Orion] ormaaj Orphis Oxyd pa paracyst patson patteh_ pcfreak30 peterhu peterR`` pEYEd phantom__ phantomcircuit phillips1012 phinxy_ Phlow PhlowWork pippijn pixelate plash Plasmastar platinuum plitter PotatoGim pragma- Praise primepie prism proteusguy proycon pyon qbann0p qdii qknight Quackmatic QualityAddict quaz0r quizzi r3g3x racycle RageD Ranis RazielZ refp Refresh Renderwahn rfreeman_w richardwhiuk Rickmasta rkreis_ RlyDontKnow rnickb robert_ robertknight robink roentgen roflin RokerHRO roxfan rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Sadale Saiban sailerboy salamanderrake saml_ Sausage sazzer sblack1 scharan Sculptor scwizard segy senseibaka Seppoz Serus Shayanjm Shozan Shr3ddy66 Shuba SiGe sigtrm Silex simius Sjors skarn ski SleekoNiko Slide-O-Mix Smirnov smokex soa2ii Soliton Sonderblade soulcake soulz sparetire sparetire_ Spark SparkDog spb sphenxes srjek stefandxm stfn stk944 Stryyker Sumason supay Supicios- suppahsrv synapt Synchunk syncrow sze talisein Talisman tamaroth tapout tazle tcsc tecpo Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheAncientGoat TheBeerinator themagician thesquib thomas tibl timemage timj TinoDidriksen TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC toresbe TrafficMan Tribeam_ Trieste trigen Trondby tsimpson TViernion Twey tz Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber V-ille ValicekB Vbitz ville Vinnie_win VinnieSegura Vir Vohveli vokimon vol4ko w41 w66 wakd WalrusPony1 warehouse13 wchun webshinra Weethus wickedmic widmo wilx WizBright woggle wto xace Xark XgF xiphiasx_ xsdg xulef xyz yamashi|2 yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber Yoofie yorick yrter z16 zackthehuman zacts Zarthus zen|merge_ Zephyrus zer0def zhangxaochen Zharf zima Zoinks zq zwer z|Andy]
2014-11-21 22:07:03	--	Channel ##c++: 616 nicks (0 ops, 0 halfops, 0 voices, 616 normals)
2014-11-21 22:07:08	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-21 22:07:08	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-21 22:09:09	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-21 22:10:10	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-21 22:11:37	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-21 22:11:59	<--	licnep (uid4387@gateway/web/irccloud.com/x-atovqrouycnrfxxp) has quit (Quit: Connection closed for inactivity)
2014-11-21 22:15:13	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-21 22:16:35	<--	k0nichiwa (~jdoe@174.71.181.20) has quit (Ping timeout: 240 seconds)
2014-11-21 22:17:30	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-21 22:19:58	<--	marvinalone (~marvinalo@172.56.41.176) has quit (Ping timeout: 244 seconds)
2014-11-21 22:21:49	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-21 22:22:08	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-21 22:23:09	<--	scwizard (18d7ae18@gateway/web/freenode/ip.24.215.174.24) has quit (Quit: Page closed)
2014-11-21 22:23:48	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-21 22:25:14	-->	rethnor (~quassel@pool-98-112-74-47.lsanca.fios.verizon.net) has joined ##c++
2014-11-21 22:26:32	<--	VinnieSegura (~Vincent@69.80.102.56) has quit (Quit: Leaving)
2014-11-21 22:26:37	<--	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 250 seconds)
2014-11-21 22:26:51	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 22:27:45	<--	chatsiri_ (~chatsiri_@203.131.216.112) has quit (Read error: Connection reset by peer)
2014-11-21 22:28:39	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 272 seconds)
2014-11-21 22:30:06	Anoniem4l	Anyone any idea why converting from char * to std::string doesn't work here?: http://ideone.com/YTegiC
2014-11-21 22:31:14	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-21 22:32:16	<--	ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has quit (Quit: WeeChat 1.1-dev)
2014-11-21 22:32:25	hs_	char* or char**?
2014-11-21 22:33:49	Anoniem4l	It's supposed to be char*, idk why it says char**.
2014-11-21 22:34:37	hs_	char *payload_hex[payload_size]
2014-11-21 22:34:50	Anoniem4l	Could it be because the buffer was unsigned char * before casting it to (char *)?
2014-11-21 22:35:04	Anoniem4l	Thus char** ?
2014-11-21 22:35:32	<--	det (~chris@unaffiliated/det) has quit (Read error: Connection reset by peer)
2014-11-21 22:36:07	hs_	payload_hex is not char*
2014-11-21 22:36:13	-->	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has joined ##c++
2014-11-21 22:36:16	hs_	it is a char* array
2014-11-21 22:37:12	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Ping timeout: 264 seconds)
2014-11-21 22:37:45	<--	warehouse13 (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-21 22:38:45	Anoniem4l	What should I do then? Create the variable dynamically with new?
2014-11-21 22:39:05	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 255 seconds)
2014-11-21 22:39:32	-->	keusej_ (~keusej@96-42-229-97.dhcp.roch.mn.charter.com) has joined ##c++
2014-11-21 22:39:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 22:40:24	-->	ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has joined ##c++
2014-11-21 22:40:31	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-21 22:41:43	<--	nuborn (~nuborn@215.237.34.95.customer.cdi.no) has quit (Quit: Leaving)
2014-11-21 22:41:49	hs_	i don't really follow what you are doing
2014-11-21 22:42:01	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-21 22:42:13	hs_	but payload_hex[0] is a char*
2014-11-21 22:42:24	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Ping timeout: 265 seconds)
2014-11-21 22:42:37	hs_	i don't know what you have or expect to have in an array of char*, or how you want to convert that to a string
2014-11-21 22:43:54	Anoniem4l	all I want to accomplish is using sprintf to load the payload_hex/ascii char*, and then make that a std::string
2014-11-21 22:43:56	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-21 22:43:59	Anoniem4l	s/that/those
2014-11-21 22:44:22	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2014-11-21 22:47:17	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-21 22:47:59	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-21 22:48:39	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit
2014-11-21 22:49:20	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Quit: asdf)
2014-11-21 22:50:15	-->	ipfire (~user_name@cpe-74-72-26-11.nyc.res.rr.com) has joined ##c++
2014-11-21 22:50:37	o11c	Anoniem4l: your input does not make sense for converting to string
2014-11-21 22:50:58	o11c	Anoniem4l: try writing down all the types with std::string and std::vector instead of char* and T[]
2014-11-21 22:51:09	o11c	write versions that do all the copies
2014-11-21 22:51:29	o11c	only when it is all over, try to figure out where you can avoid copies by using raw C types
2014-11-21 22:51:43	Anoniem4l	i never wanted to use C, it's just I needed some code
2014-11-21 22:51:46	o11c	(and then figure out what classes you should create so you can avoid them)
2014-11-21 22:51:58	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-21 22:52:04	o11c	Anoniem4l: if you don't want to use C++, don't ask for help in a C++ channel
2014-11-21 22:52:26	Anoniem4l	Now, what makes you think I don't want to use C++ when what I am trying to do is converting C code into C++ ?
2014-11-21 22:52:53	o11c	okay
2014-11-21 22:52:56	o11c	so get rid of the C input
2014-11-21 22:52:57	Anoniem4l	Well, yeah, obviously.
2014-11-21 22:53:02	Anoniem4l	That's what I am doing.
2014-11-21 22:53:07	o11c	because the conversion you're trying to do simple doesn'y make sense
2014-11-21 22:53:23	o11c	you have an *array* of C strings. There's nothing to sprintf
2014-11-21 22:54:30	Anoniem4l	Alright, I get that now.
2014-11-21 22:54:47	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-21 22:57:07	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 22:58:55	<--	leeN (~leeN@e180189230.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-21 22:59:08	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-21 22:59:39	-->	leeN (~leeN@f050223245.adsl.alicedsl.de) has joined ##c++
2014-11-21 23:00:17	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 23:00:50	-->	ivan\ (~ivan@unaffiliated/ivan/x-000001) has joined ##c++
2014-11-21 23:01:17	<--	ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has quit (Ping timeout: 250 seconds)
2014-11-21 23:01:37	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (Remote host closed the connection)
2014-11-21 23:04:15	-->	basic6_ (~basic6@p3E9EE3E4.dip0.t-ipconnect.de) has joined ##c++
2014-11-21 23:04:15	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 23:04:16	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-11-21 23:05:32	<--	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 250 seconds)
2014-11-21 23:07:04	-->	Repelex (~textual@189.59.51.208.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-21 23:07:07	<--	basic6 (~basic6@p3E9EE866.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-21 23:07:35	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 23:08:55	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-21 23:09:45	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-21 23:09:53	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 265 seconds)
2014-11-21 23:10:11	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-21 23:11:00	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-21 23:11:45	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: endomancer)
2014-11-21 23:12:05	-->	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-21 23:12:53	-->	ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has joined ##c++
2014-11-21 23:15:31	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-21 23:17:51	-->	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has joined ##c++
2014-11-21 23:19:30	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-21 23:20:35	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-21 23:20:57	-->	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-21 23:23:09	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 23:25:40	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 240 seconds)
2014-11-21 23:26:24	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 23:28:47	-->	tachoknight (~tachoknig@71.201.47.228) has joined ##c++
2014-11-21 23:31:10	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-21 23:34:49	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 23:35:16	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-21 23:35:17	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-21 23:35:38	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Ping timeout: 272 seconds)
2014-11-21 23:35:51	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-21 23:36:10	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-21 23:36:36	<--	emlai (~emil@37-136-97-249.nat.bb.dnainternet.fi) has quit (Quit: leaving)
2014-11-21 23:37:05	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Remote host closed the connection)
2014-11-21 23:37:40	-->	ResidentBiscuit (~residentb@unaffiliated/residentbiscuit) has joined ##c++
2014-11-21 23:38:02	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 23:38:52	<--	b0lt (r00t@unaffiliated/bolt) has quit (Ping timeout: 255 seconds)
2014-11-21 23:38:58	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-21 23:39:59	<--	det (~chris@unaffiliated/det) has quit (Read error: Connection reset by peer)
2014-11-21 23:40:48	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-21 23:41:14	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-21 23:42:50	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-21 23:44:06	<--	LickPlusPlus (~LickPytho@blu1299171.lnk.telstra.net) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Chicks dig it)
2014-11-21 23:45:19	-->	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-21 23:46:52	-->	blipped2 (~blipped@198.105.217.4) has joined ##c++
2014-11-21 23:47:18	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-21 23:47:50	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-21 23:48:03	<--	syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-11-21 23:48:06	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-21 23:48:36	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-21 23:48:37	<--	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-21 23:48:43	<--	blipped2 (~blipped@198.105.217.4) has quit (Client Quit)
2014-11-21 23:49:35	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has quit (Read error: Connection reset by peer)
2014-11-21 23:50:01	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has joined ##c++
2014-11-21 23:50:32	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Client Quit)
2014-11-21 23:51:25	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Quit: asdf)
2014-11-21 23:52:15	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-21 23:55:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-21 23:58:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-21 23:58:46	-->	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has joined ##c++
2014-11-21 23:58:50	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-22 00:00:02	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 265 seconds)
2014-11-22 00:00:05	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Remote host closed the connection)
2014-11-22 00:00:23	<--	ludkiller (lud@gateway/shell/elitebnc/x-izcnfyepvwofvguv) has quit (Excess Flood)
2014-11-22 00:00:24	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-22 00:00:44	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Read error: No route to host)
2014-11-22 00:01:04	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-22 00:01:31	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-22 00:01:48	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-22 00:01:57	-->	ludkiller (lud@gateway/shell/elitebnc/x-zsvvrbwiuysvgudj) has joined ##c++
2014-11-22 00:02:04	<--	moire_ (uid39031@gateway/web/irccloud.com/x-znbtztxydtptoohx) has quit (Quit: Connection closed for inactivity)
2014-11-22 00:02:35	<--	japro (~japro@77-59-183-11.dclient.hispeed.ch) has quit (Ping timeout: 255 seconds)
2014-11-22 00:03:28	-->	envi_u (kvirc@121.169.10.159) has joined ##c++
2014-11-22 00:05:49	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 265 seconds)
2014-11-22 00:05:53	-->	idub (~idub@71-223-107-65.phnx.qwest.net) has joined ##c++
2014-11-22 00:06:36	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 00:06:43	<--	keusej_ (~keusej@96-42-229-97.dhcp.roch.mn.charter.com) has quit (Remote host closed the connection)
2014-11-22 00:06:50	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-22 00:07:38	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-22 00:08:26	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 00:09:09	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-22 00:10:14	pEYEd	My loop is outputting data incorrectly. I have inbound web data that come in sets of 7. I am trying to in insert the 7 records into a vector and then display the vector content followed by a new line.   https://bpaste.net/show/bffe2ae63072
2014-11-22 00:11:45	<--	ObjectiveMatt (~Objective@66-87-151-38.pools.spcsdns.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 00:12:20	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 244 seconds)
2014-11-22 00:14:05	<--	Repelex (~textual@189.59.51.208.dynamic.adsl.gvt.net.br) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-22 00:15:19	-->	torei (~torei@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-11-22 00:17:45	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has joined ##c++
2014-11-22 00:18:33	<--	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has quit (Changing host)
2014-11-22 00:18:33	-->	plash (~plash@unaffiliated/plash) has joined ##c++
2014-11-22 00:19:41	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 00:20:39	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:8d3a:367a:c85c:3f48) has joined ##c++
2014-11-22 00:20:50	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-22 00:21:04	<--	racycle (~user@12.172.87.98) has quit (Ping timeout: 255 seconds)
2014-11-22 00:21:10	-->	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-11-22 00:21:21	<--	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-22 00:23:36	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-22 00:24:48	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-22 00:25:33	<--	b0lt (r00t@unaffiliated/bolt) has quit (Ping timeout: 255 seconds)
2014-11-22 00:28:07	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-22 00:28:43	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-22 00:28:58	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2014-11-22 00:30:05	<--	SleekoNiko (~nick@cpe-70-117-105-180.austin.res.rr.com) has quit (Remote host closed the connection)
2014-11-22 00:30:21	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-22 00:32:30	<--	Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 250 seconds)
2014-11-22 00:33:16	<--	atrika (~atrika@198-200-127-182.cpe.distributel.net) has quit (Quit: leaving)
2014-11-22 00:33:59	-->	davek (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 00:33:59	<--	davek (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has quit (Changing host)
2014-11-22 00:33:59	-->	davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-22 00:35:06	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-22 00:35:25	<--	schleppel (~quassel@141.39.226.237) has quit (Ping timeout: 255 seconds)
2014-11-22 00:35:44	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-11-22 00:35:54	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-22 00:36:24	<--	dts|gaming (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 250 seconds)
2014-11-22 00:37:19	-->	ObjectiveMatt (~Objective@66.87.151.38) has joined ##c++
2014-11-22 00:39:01	<--	b0lt (r00t@unaffiliated/bolt) has quit (Ping timeout: 255 seconds)
2014-11-22 00:39:17	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-11-22 00:40:40	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-11-22 00:41:06	-->	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has joined ##c++
2014-11-22 00:41:29	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 00:41:59	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 00:43:46	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-22 00:44:18	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-22 00:44:44	<--	phinxy_ (~tehhhd@212.3.18.61) has quit (Read error: Connection reset by peer)
2014-11-22 00:44:51	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 255 seconds)
2014-11-22 00:45:10	-->	phinxy_ (~tehhhd@212.3.18.61) has joined ##c++
2014-11-22 00:45:45	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Ping timeout: 255 seconds)
2014-11-22 00:46:02	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-22 00:47:10	<--	HerzogDeXtEr (~flex@i59F6DF15.versanet.de) has quit (Quit: Leaving.)
2014-11-22 00:48:22	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-22 00:48:27	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-22 00:48:43	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Quit: Leaving...)
2014-11-22 00:48:44	<--	phinxy_ (~tehhhd@212.3.18.61) has quit (Read error: Connection reset by peer)
2014-11-22 00:48:50	-->	tehhd (~tehhhd@212.3.18.61) has joined ##c++
2014-11-22 00:48:52	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 00:49:08	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2c2:c6ff:fe1f:7c0f) has joined ##c++
2014-11-22 00:49:30	<--	tehhd (~tehhhd@212.3.18.61) has quit (Max SendQ exceeded)
2014-11-22 00:49:53	-->	tehhd (~tehhhd@212.3.18.61) has joined ##c++
2014-11-22 00:49:57	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-22 00:51:14	-->	collincd (~collincd@unaffiliated/collincd) has joined ##c++
2014-11-22 00:53:26	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2c2:c6ff:fe1f:7c0f) has quit (Ping timeout: 258 seconds)
2014-11-22 00:56:32	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 00:59:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 00:59:56	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-22 01:01:05	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Ping timeout: 258 seconds)
2014-11-22 01:01:44	<--	tehhd (~tehhhd@212.3.18.61) has quit (Quit: Leaving)
2014-11-22 01:03:18	--	Anoniem4l is now known as Anoniem4l`afk
2014-11-22 01:03:44	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-22 01:04:22	-->	FOP (~jnar@209.197.20.235) has joined ##c++
2014-11-22 01:05:16	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:8d3a:367a:c85c:3f48) has quit (Read error: Connection reset by peer)
2014-11-22 01:05:51	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-22 01:06:34	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-22 01:07:15	<--	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2014-11-22 01:08:58	<--	srjek (~srjek@46dhcp67.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-22 01:11:03	-->	srjek (~srjek@46dhcp67.ece.uic.edu) has joined ##c++
2014-11-22 01:11:50	<--	schleppel (~quassel@141.39.226.237) has quit (Ping timeout: 240 seconds)
2014-11-22 01:13:08	-->	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 01:14:55	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-22 01:15:24	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2014-11-22 01:15:50	<--	ObjectiveMatt (~Objective@66.87.151.38) has quit (Ping timeout: 255 seconds)
2014-11-22 01:16:38	-->	dooshtuRabbit1 (~dooshtuRa@50.153.116.128) has joined ##c++
2014-11-22 01:16:45	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-22 01:18:22	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Client Quit)
2014-11-22 01:19:49	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has quit (Ping timeout: 258 seconds)
2014-11-22 01:20:07	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 01:20:14	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has joined ##c++
2014-11-22 01:20:14	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-22 01:21:03	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-22 01:21:08	<--	dooshtuRabbit1 (~dooshtuRa@50.153.116.128) has quit (Ping timeout: 240 seconds)
2014-11-22 01:21:56	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-22 01:21:59	-->	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has joined ##c++
2014-11-22 01:22:42	<--	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-22 01:25:03	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-22 01:25:11	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 01:25:16	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-11-22 01:25:31	-->	bloony- (~pi@99-40-232.connect.netcom.no) has joined ##c++
2014-11-22 01:25:31	bloony-	t
2014-11-22 01:25:35	<--	bloony- (~pi@99-40-232.connect.netcom.no) has quit (Client Quit)
2014-11-22 01:26:06	<--	ludkiller (lud@gateway/shell/elitebnc/x-zsvvrbwiuysvgudj) has quit (Excess Flood)
2014-11-22 01:26:54	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-22 01:27:19	-->	bloony- (~pi@99-40-232.connect.netcom.no) has joined ##c++
2014-11-22 01:28:02	--	bloony- is now known as bloony
2014-11-22 01:28:15	-->	ludkiller (lud@gateway/shell/elitebnc/x-jabcsubelinqqlte) has joined ##c++
2014-11-22 01:28:52	<--	FOP (~jnar@209.197.20.235) has quit (Quit: Leaving)
2014-11-22 01:28:58	<--	o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has quit (Ping timeout: 246 seconds)
2014-11-22 01:32:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 01:32:53	<--	bloony (~pi@99-40-232.connect.netcom.no) has quit (Read error: Connection reset by peer)
2014-11-22 01:33:15	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-22 01:35:30	-->	romanelli (~romanelli@192.210.214.197) has joined ##c++
2014-11-22 01:35:53	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-22 01:36:00	-->	bloony (~pi@99-40-232.connect.netcom.no) has joined ##c++
2014-11-22 01:36:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 01:36:36	-->	nikb (~nikb@unaffiliated/nikb) has joined ##c++
2014-11-22 01:38:27	-->	Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-22 01:39:18	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-22 01:41:21	-->	Spy_Ser (uid52819@gateway/web/irccloud.com/x-xkxicdkwzgnnnzii) has joined ##c++
2014-11-22 01:41:32	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: Computer has gone to sleep.)
2014-11-22 01:41:48	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-22 01:42:26	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-22 01:43:42	-->	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-11-22 01:46:48	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 01:47:12	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-22 01:49:39	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Ping timeout: 258 seconds)
2014-11-22 01:49:53	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 01:51:35	<--	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has quit
2014-11-22 01:51:58	<--	Spy_Ser (uid52819@gateway/web/irccloud.com/x-xkxicdkwzgnnnzii) has left ##c++
2014-11-22 01:52:49	<--	hagabaka (~hagabaka@unaffiliated/hagabaka) has quit (Ping timeout: 240 seconds)
2014-11-22 01:53:34	-->	kyoshero (~kyoshero@112.198.79.139) has joined ##c++
2014-11-22 01:53:55	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-22 01:54:43	-->	hagabaka (hagabaka@unaffiliated/hagabaka) has joined ##c++
2014-11-22 01:57:44	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 01:59:15	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-22 02:01:53	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-22 02:02:03	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-22 02:02:16	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-22 02:02:26	<--	kyoshero (~kyoshero@112.198.79.139) has quit (Quit: Leaving)
2014-11-22 02:02:39	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 264 seconds)
2014-11-22 02:03:43	-->	BadQuanta1 (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has joined ##c++
2014-11-22 02:06:17	<--	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-22 02:06:59	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-22 02:09:42	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 02:10:33	mihipte	I have a templated member function and want to specialize it. Where do I put the declaration and specialization? I can't find any examples on Google, which surprises me... They're all about template classes or how you can't partially specialize a function in a template class.
2014-11-22 02:11:20	mihipte	To be explicit, I want to fully specialize a template function in a class which is not itself templated.
2014-11-22 02:12:13	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-22 02:12:49	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 02:15:03	mihipte	I currently have the definition in the class and the specialization just outside the class in the header file. That gives me a "multiple definition" error in MinGW. Moving the specialization to the .cpp makes the specialization be ignored.
2014-11-22 02:16:58	<--	collincd (~collincd@unaffiliated/collincd) has quit (Ping timeout: 265 seconds)
2014-11-22 02:19:01	-->	qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-11-22 02:19:01	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 02:19:02	<--	BadQuanta1 (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has quit (Read error: Connection reset by peer)
2014-11-22 02:19:27	-->	BadQuanta (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has joined ##c++
2014-11-22 02:20:26	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-22 02:21:05	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 02:22:07	-->	csotelo (~csotelo@190.41.210.210) has joined ##c++
2014-11-22 02:22:12	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-22 02:22:22	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 02:23:34	<--	yamashi|2 (~kvirc@56.133.138.88.rev.sfr.net) has quit (Read error: Connection reset by peer)
2014-11-22 02:25:44	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 02:25:47	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 02:26:57	pEYEd	My loop is outputting data incorrectly. I have inbound web data that come in sets of 7. I am trying to in insert the 7 records into a vector and then display the vector content followed by a new line.   https://bpaste.net/show/a7ce1ff23e47
2014-11-22 02:28:33	-->	envi_|2 (kvirc@220.121.234.166) has joined ##c++
2014-11-22 02:28:39	<--	envi (kvirc@220.121.234.166) has quit (Ping timeout: 258 seconds)
2014-11-22 02:29:09	roxfan	you're pushing the same string 7 times on each iteration
2014-11-22 02:31:31	pEYEd	but how to fix it remains a question.  :/
2014-11-22 02:32:03	-->	seronis (~seronis@unaffiliated/seronis) has joined ##c++
2014-11-22 02:32:19	-->	ne555 (~ne555@host79.190-137-123.telecom.net.ar) has joined ##c++
2014-11-22 02:33:04	pEYEd	updated output  ->  https://bpaste.net/show/3bb7682d350f
2014-11-22 02:33:10	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 264 seconds)
2014-11-22 02:34:54	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-22 02:35:41	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 02:36:08	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 244 seconds)
2014-11-22 02:37:03	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 02:38:52	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-22 02:39:19	<--	fluter (~fluter@fedora/fluter) has quit (Quit: Leaving)
2014-11-22 02:39:44	<--	romanelli (~romanelli@192.210.214.197) has quit (Ping timeout: 258 seconds)
2014-11-22 02:40:53	V-ille	geordi: struct X {template <class T> void f();}; template <> void X::f<int>() {} int main() {X x; x.f<int>();} // mihipte
2014-11-22 02:40:54	geordi	<no output>
2014-11-22 02:42:01	mihipte	V-ille, and does that go in a header file which is included from multiple .cpp files?
2014-11-22 02:42:15	mihipte	not the main obviouslyl
2014-11-22 02:42:32	-->	timj1 (~timj@p5DDB0281.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 02:42:57	V-ille	yes, you would put it into a header, usually
2014-11-22 02:43:15	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-11-22 02:43:52	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-22 02:44:07	-->	stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-22 02:44:21	<--	timj (~timj@p4FC96664.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2014-11-22 02:44:24	V-ille	you probably want to declare the specialization inline in that case
2014-11-22 02:44:45	mihipte	inline, as in directly in the class?
2014-11-22 02:45:50	V-ille	no, inline as in inline
2014-11-22 02:45:53	V-ille	geordi: struct X {template <class T> void f();}; template <> inline void X::f<int>() {} int main() {X x; x.f<int>();}
2014-11-22 02:45:53	geordi	<no output>
2014-11-22 02:46:01	mihipte	crap, that's what was missing
2014-11-22 02:46:07	V-ille	indeed
2014-11-22 02:46:21	V-ille	inline functions can be defined multiple times as long as the definitions are identical
2014-11-22 02:46:32	mihipte	aha
2014-11-22 02:46:39	V-ille	member functions that are defined in the class definitions are automatically inline
2014-11-22 02:46:59	--	stryyker2 is now known as Stryyker
2014-11-22 02:47:50	mihipte	many thanks... I might ask-and-answer on SO just because I couldn't find that exact question... that hurt <.<
2014-11-22 02:50:32	-->	rendar (~I@host148-140-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-22 02:51:53	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-22 02:53:03	<--	nikb (~nikb@unaffiliated/nikb) has quit (Quit: Lost terminal)
2014-11-22 02:53:48	-->	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 02:57:44	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 02:59:29	<--	ludkiller (lud@gateway/shell/elitebnc/x-jabcsubelinqqlte) has quit (Excess Flood)
2014-11-22 03:00:54	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 03:01:21	-->	qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-11-22 03:02:01	-->	ludkiller (lud@gateway/shell/elitebnc/x-dppezlgdbgzvfbes) has joined ##c++
2014-11-22 03:04:14	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 265 seconds)
2014-11-22 03:05:39	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-22 03:05:43	<--	ArchZombie (~lkjfeiosn@2602:306:c455:df80:705d:905b:b477:6b9d) has quit (Quit: Leaving)
2014-11-22 03:07:16	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-22 03:08:42	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-22 03:08:43	-->	SiGe___ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has joined ##c++
2014-11-22 03:10:01	phinxy	if i have 4 bytes from a const void * which once was a pointer do i make it the old class like this:
2014-11-22 03:10:09	phinxy	TheActorPointer = (APawn*)GetBlob;
2014-11-22 03:10:09	<--	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Ping timeout: 244 seconds)
2014-11-22 03:10:21	phinxy	GetBlob is the void pointer
2014-11-22 03:10:41	-->	resi|ient (~ICX@c-98-248-207-73.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 03:10:56	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-22 03:12:14	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Quit: L?mnar)
2014-11-22 03:13:10	-->	Banandana (~Banandana@c-67-174-45-82.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 03:15:32	-->	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 03:15:46	-->	doev (~doev@p54847019.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 03:18:23	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 03:18:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 03:18:55	<--	SiGe___ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has quit (Ping timeout: 244 seconds)
2014-11-22 03:19:42	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: endomancer)
2014-11-22 03:19:50	<--	astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-22 03:20:25	-->	delicado (cb57fe1c@gateway/web/freenode/ip.203.87.254.28) has joined ##c++
2014-11-22 03:20:31	-->	oleo__ (~oleo@xdsl-78-35-154-181.netcologne.de) has joined ##c++
2014-11-22 03:20:55	--	oleo is now known as Guest30792
2014-11-22 03:21:07	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-22 03:21:12	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 272 seconds)
2014-11-22 03:21:13	<--	BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has quit (Quit: Leaving)
2014-11-22 03:21:30	<--	Guest30792 (~oleo@xdsl-78-35-190-178.netcologne.de) has quit (Ping timeout: 244 seconds)
2014-11-22 03:21:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 03:21:40	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 03:21:52	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-22 03:22:33	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 265 seconds)
2014-11-22 03:23:45	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-22 03:25:01	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-11-22 03:25:52	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 03:26:39	V-ille	Eelis: I would expect that it's a hard sell to propose ub_push_back. Not impossible, but probably not an easy thing to make the committee adopt.
2014-11-22 03:26:53	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-22 03:27:12	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-22 03:28:58	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-22 03:31:15	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-22 03:31:31	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 03:32:09	ville	what the heck is that?
2014-11-22 03:32:31	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 258 seconds)
2014-11-22 03:34:04	ville	there's already 6 million ways to ub your self. we need to standardize more?
2014-11-22 03:34:17	<--	wakd (~wakd@unaffiliated/wakd) has quit (Quit: Leaving)
2014-11-22 03:34:23	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 03:34:33	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Ping timeout: 255 seconds)
2014-11-22 03:34:44	-->	Munnu (~timo@91-158-128-16.elisa-laajakaista.fi) has joined ##c++
2014-11-22 03:35:11	-->	abt (~abt@192.210.214.197) has joined ##c++
2014-11-22 03:35:16	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-22 03:35:20	V-ille	the idea is to allow inserting into a vector without size checks
2014-11-22 03:35:53	mihipte	that has to be the most confusing pair of names I've seen
2014-11-22 03:36:28	V-ille	it's been called push_back_, unsafe_push_back, and push_back_reserved
2014-11-22 03:36:32	<--	vol4ko (null@unaffiliated/vol4ko) has quit
2014-11-22 03:36:52	-->	longbow (~androirc@ppp-94-68-164-172.home.otenet.gr) has joined ##c++
2014-11-22 03:37:05	phinxy	the c++ committee?
2014-11-22 03:37:24	V-ille	no, the fortran committee?
2014-11-22 03:38:09	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-22 03:40:33	-->	thecha (tehcha@unaffiliated/thecha) has joined ##c++
2014-11-22 03:42:02	ville	hah postfixing _, now that's a ballsy move. that's what i do often when i can't come up with a new name for some temporary or such.
2014-11-22 03:42:38	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-11-22 03:42:51	mihipte	I've only needed it for class_ (as opposed to clas or clazz)
2014-11-22 03:43:43	ville	i admit that it's rather unclear practice to an outsider. no doubt. since reserving is a precondition then having reserved in the name is not a bad idea. pre or post
2014-11-22 03:44:31	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-22 03:44:37	jeaye	That's the wrong move.
2014-11-22 03:45:04	ville	V-ille: has other containers been examined if they could have similar or even same function and if those offer help to naming?
2014-11-22 03:45:07	jeaye	Instead of adding ub_push_back or whatever, we might consider adding policies or something to std::vector describing how it behaves.
2014-11-22 03:45:37	jeaye	That way, if you don't ever want to use ub_push_back, it won't be possible unless specifying such a policy.
2014-11-22 03:45:50	ville	jeaye: abi-breaking change will go over well. look how quickly they implemented non-cow std::string in GCC.
2014-11-22 03:45:59	ville	oh wait they haven't.
2014-11-22 03:46:03	jeaye	ville: Aye.
2014-11-22 03:46:18	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 03:46:26	jeaye	I don't want shit like that to be available to anyone that thinks "this is fast. this is good."
2014-11-22 03:46:29	<--	blipped (~quassel@119.130.113.27) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-22 03:46:35	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 03:47:13	ville	also once you open the policy-based design there are couple i would like to see in other places. null checks for smart pointers and thread-safety for shared_ptr
2014-11-22 03:47:32	jeaye	Yup. We could make things pretty nice with such policies.
2014-11-22 03:47:57	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-22 03:48:07	-->	Garner (uid38417@gateway/web/irccloud.com/x-kanypcupubuutgeq) has joined ##c++
2014-11-22 03:48:12	jeaye	Though it's still an experimental design approach, I think. As in, it's not too common and well tested yet.
2014-11-22 03:48:14	ville	it's nice for not-so-large values of nice when you have 1 or 2 policies. after that it's an combinatoric explosion
2014-11-22 03:48:26	-->	killertester (~igor@ppp-62-76-17-70.ppp.kmv.ru) has joined ##c++
2014-11-22 03:48:57	ville	it is well-tested and anyone who tries it quickly comes to realization it is a pain soon as a template has more than 1 or 2 policies
2014-11-22 03:49:12	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 250 seconds)
2014-11-22 03:49:18	jeaye	ville: Mmk.
2014-11-22 03:49:20	V-ille	ville: beats me. I haven't seen any discussions about that.
2014-11-22 03:49:54	V-ille	ville: also, "they" have implemented a non-cow std::string in libstdc++, it will ship with gcc5
2014-11-22 03:50:22	<--	ipfire (~user_name@cpe-74-72-26-11.nyc.res.rr.com) has quit (Quit: Leaving)
2014-11-22 03:50:25	ville	V-ille: yeah. only 4-years late. point still stands.
2014-11-22 03:50:39	jeaye	I'm really hurting right now because somebody decided std::back_inster_iterator's type traits should all be void.
2014-11-22 03:50:47	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 240 seconds)
2014-11-22 03:50:48	ville	(i presume it ships in 2015)
2014-11-22 03:52:22	moonchild	jeaye: does the standard specify that or is it all in gcc/clang's stdlib?
2014-11-22 03:52:32	ville	jeaye: it could be that above is whole lot of doom mongering wrt policies. no idea if anyone has given it serieous thought how many policies something like std::vector or std::shared_ptr would want
2014-11-22 03:53:35	jeaye	moonchild: I believe the standard does (checking), but I'm seeing it in libstdc++ and it's a fucking joke.
2014-11-22 03:53:54	moonchild	hehe
2014-11-22 03:54:48	moonchild	don't be too hard on it... libstdc++ has been around as long as i've known how to program, and um, it generally works as intended ;)
2014-11-22 03:54:53	V-ille	the standard indeed speficies voids for everything in back_insert_iterator
2014-11-22 03:55:15	moonchild	that's unfortunate :(
2014-11-22 03:55:33	jeaye	moonchild: ? 24.5.2.1
2014-11-22 03:55:58	o11c	ville: eh, I'm happier with gcc shipping the same thing for 4 years until they can make a reliable release, rather than clang just breaking everything
2014-11-22 03:56:02	jeaye	V-ille: Why the hell would it be like this?
2014-11-22 03:56:09	V-ille	I don't know
2014-11-22 03:56:22	moonchild	(i'll take your word for it, unless there's something interesting in there to read
2014-11-22 03:56:30	jeaye	moonchild: Nothing.
2014-11-22 03:56:34	o11c	I really wish 'void' would die and be replaced with 'struct void {};'
2014-11-22 03:56:55	-->	condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has joined ##c++
2014-11-22 03:56:57	-->	scai (~scai@p4FF0F6DC.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 03:57:03	jeaye	o11c: Providing what difference?
2014-11-22 03:57:08	mihipte	^
2014-11-22 03:57:14	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-22 03:57:15	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-22 03:57:17	V-ille	jeaye: I think I know a couple of people who should be able to explain it
2014-11-22 03:57:29	jeaye	V-ille: I'd love to know.
2014-11-22 03:57:44	jeaye	'cause it just seems like lack of foresight to me.
2014-11-22 03:57:46	<--	csotelo (~csotelo@190.41.210.210) has quit (Ping timeout: 240 seconds)
2014-11-22 03:57:47	moonchild	void isn't really a type
2014-11-22 03:58:07	moonchild	oh, 2 threads, n/m
2014-11-22 03:58:09	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-22 03:58:50	-->	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 03:58:50	<--	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 03:58:56	-->	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 03:59:02	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 03:59:20	V-ille	jeaye: ping me in a couple of days, I'll let you know what the library gurus say
2014-11-22 03:59:31	jeaye	Much appreciated.
2014-11-22 03:59:32	--	Yepoleb is now known as Guest94296
2014-11-22 03:59:32	-->	Yepoleb_ (~quassel@91-115-116-162.adsl.highway.telekom.at) has joined ##c++
2014-11-22 03:59:32	<--	Guest94296 (~quassel@178-190-230-21.adsl.highway.telekom.at) has quit (Killed (morgan.freenode.net (Nickname regained by services)))
2014-11-22 03:59:32	--	Yepoleb_ is now known as Yepoleb
2014-11-22 04:00:21	moonchild	anything found on stackoverflow about it?
2014-11-22 04:00:41	 *	moonchild is curious too
2014-11-22 04:01:02	jeaye	I've not looked. Just started since I was bitching about it.
2014-11-22 04:01:18	V-ille	bitch first, investigate later! :)
2014-11-22 04:01:41	V-ille	also, why investigate when you can delegate the investigation to me :P
2014-11-22 04:01:55	jeaye	If it's the standard, I assume people smarter than me have _some_ reason.
2014-11-22 04:02:19	moonchild	its soon going to be time for some zzz's for me, but before i go, quick question
2014-11-22 04:03:22	moonchild	is there any project right now that is actively trying to fill 'namespace posix' with stuff?
2014-11-22 04:03:39	jeaye	Such as?
2014-11-22 04:04:04	moonchild	like a low-level oo posix wrapper?
2014-11-22 04:04:20	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: endomancer)
2014-11-22 04:04:34	moonchild	if you didn't know, ns posix is reserved by the iso standard
2014-11-22 04:04:34	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-22 04:04:48	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-22 04:05:14	<--	TheAncientGoat (~quassel@175.143.160.149) has quit (Remote host closed the connection)
2014-11-22 04:05:25	<--	ResidentBiscuit (~residentb@unaffiliated/residentbiscuit) has quit (Remote host closed the connection)
2014-11-22 04:06:25	moonchild	it is something i'm very interested in seeing emerge
2014-11-22 04:06:25	<--	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 04:06:30	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 04:06:31	-->	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 04:07:17	-->	Hannibal_Smith (~Hannibal_@95.239.86.138) has joined ##c++
2014-11-22 04:09:19	moonchild	hell, even an api for wrapping the bsd sockets layer that allows access to *all* of the knobs would be welcome :)
2014-11-22 04:10:59	<--	delicado (cb57fe1c@gateway/web/freenode/ip.203.87.254.28) has quit (Ping timeout: 246 seconds)
2014-11-22 04:12:02	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-22 04:13:09	-->	phinxy_ (~tehhhd@212.3.18.240) has joined ##c++
2014-11-22 04:13:15	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-22 04:13:18	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-22 04:13:26	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-22 04:16:16	<--	BadQuanta (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has quit (Quit: Leaving.)
2014-11-22 04:16:59	<--	ne555 (~ne555@host79.190-137-123.telecom.net.ar) has quit (Ping timeout: 240 seconds)
2014-11-22 04:17:09	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-22 04:18:23	<--	phinxy_ (~tehhhd@212.3.18.240) has quit (Ping timeout: 264 seconds)
2014-11-22 04:18:45	-->	davi (davi@gnu/davi) has joined ##c++
2014-11-22 04:18:59	-->	ne555 (~ne555@host79.190-137-123.telecom.net.ar) has joined ##c++
2014-11-22 04:19:25	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-22 04:19:36	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-22 04:19:45	<--	esperegu (~quassel@ip-213-124-221-127.ip.prioritytelecom.net) has quit (Ping timeout: 244 seconds)
2014-11-22 04:20:04	-->	aggn (~quassel@host199-2.natpool.mwn.de) has joined ##c++
2014-11-22 04:21:44	-->	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has joined ##c++
2014-11-22 04:22:17	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 04:23:31	-->	Burga (~andrewm@58-7-228-125.dyn.iinet.net.au) has joined ##c++
2014-11-22 04:24:52	-->	esperegu (~quassel@ip-213-124-221-127.ip.prioritytelecom.net) has joined ##c++
2014-11-22 04:26:03	<--	blackwind_123 (~IceChat9@117.202.25.211) has quit (Ping timeout: 258 seconds)
2014-11-22 04:26:10	-->	blackwind_123 (~IceChat9@117.202.25.211) has joined ##c++
2014-11-22 04:27:01	-->	BlaXpirit (~blaxpirit@200-127-132-95.pool.ukrtel.net) has joined ##c++
2014-11-22 04:27:18	<--	Cassiel (~JV@24-212-241-185.cable.teksavvy.com) has quit
2014-11-22 04:27:18	peterR``	what do std::begin and std::end need to work for your own type?
2014-11-22 04:27:27	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 04:27:57	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-22 04:28:09	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-22 04:28:43	obiwahn	hi
2014-11-22 04:28:49	peterR``	hello
2014-11-22 04:29:02	obiwahn	http://ideone.com/YvDIMk - is this valid c++?
2014-11-22 04:29:12	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-22 04:29:24	obiwahn	line 10 - template<int N, int... Args>
2014-11-22 04:30:09	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 04:30:15	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Ping timeout: 258 seconds)
2014-11-22 04:32:33	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Ping timeout: 258 seconds)
2014-11-22 04:33:08	peterR``	obiwahn, I can compile it
2014-11-22 04:33:30	-->	fujiro (~fujiro@public138959.cdma.centertel.pl) has joined ##c++
2014-11-22 04:36:00	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 258 seconds)
2014-11-22 04:36:04	V-ille	sure, looks valid
2014-11-22 04:36:28	jeaye	peterR``: A begin() and end() member function which return iterators.
2014-11-22 04:37:00	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-22 04:38:17	jeaye	{ foo f; copy(begin(f), end(f), ostream_iterator<int>(cout, " ")); } struct foo { auto begin() const{ return data.begin(); } auto end() const{ return data.end(); } vector<int> data{ 0, 1, 2, 3 }; }; // peterR``
2014-11-22 04:38:18	geordi	0 1 2 3
2014-11-22 04:39:20	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 244 seconds)
2014-11-22 04:39:22	jeaye	const is not required; there is often a const and non-const version of begin and end, as well as cbegin and cend, if you're following the stdlib
2014-11-22 04:39:43	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 04:39:58	peterR``	jeaye doesn't it work for C arrays too?
2014-11-22 04:40:10	jeaye	peterR``: It has a specialization for C arrays.
2014-11-22 04:40:27	peterR``	and how does that work since there are no members?
2014-11-22 04:40:38	jeaye	It's a specialization.
2014-11-22 04:40:40	peterR``	no begin and end members
2014-11-22 04:41:17	peterR``	hmm, ok
2014-11-22 04:41:32	jeaye	template <typename T, std::size_t N> T* begin(T (&arr)[N]); // peterR``
2014-11-22 04:42:03	jeaye	It's an overload, actually.
2014-11-22 04:42:30	jeaye	peterR``: Given 'arr' and 'N', it's simple to get the beginning and end.
2014-11-22 04:43:29	jeaye	peterR``: So, C arrays make it into that overload. Other things go into the other overloads, which call the member functions.
2014-11-22 04:43:47	o11c	!c++98
2014-11-22 04:44:29	jeaye	o11c: What did you want nolyc to say?
2014-11-22 04:44:38	peterR``	thanks jeaye
2014-11-22 04:44:45	jeaye	peterR``: sure thing
2014-11-22 04:45:17	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-22 04:45:34	o11c	!c++11
2014-11-22 04:45:35	nolyc	C++11 is short for ISO/IEC 14882:2011, the official standard defining C++. Novelties include lambdas, auto, range-for, variadic templates, attributes, scoped enums, rvalue references and move semantics, a new null pointer constant, alias templates, user defined literals, new initialization syntax, multithreading, RNGs, new containers, regular expressions, etc etc etc. See !c++11support.
2014-11-22 04:45:43	o11c	hm
2014-11-22 04:45:46	o11c	!draft
2014-11-22 04:45:47	nolyc	http://isocpp.org/files/papers/N3797.pdf or http://github.com/cplusplus/draft or see http://isocpp.org/ sidebar for latest version
2014-11-22 04:46:07	o11c	what I'm really looking for is the nearest draft to C++98 release
2014-11-22 04:46:15	o11c	I have the ones for C++11 and C++14
2014-11-22 04:46:20	<--	nilg (~user@AAubervilliers-653-1-206-207.w81-249.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-11-22 04:46:23	jeaye	hm
2014-11-22 04:46:35	jeaye	o11c: That GH repo should have it, right?
2014-11-22 04:46:56	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-22 04:47:51	-->	nilg (~user@AAubervilliers-653-1-206-207.w81-249.abo.wanadoo.fr) has joined ##c++
2014-11-22 04:47:57	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:791f:e055:4181:f15d) has quit (Quit: Leaving)
2014-11-22 04:48:59	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-22 04:53:07	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 04:53:40	<--	DexterLB (~dex@79-100-3-168.btc-net.bg) has quit (Read error: Connection reset by peer)
2014-11-22 04:54:52	o11c	jeaye: repo only goes back to 2011
2014-11-22 04:55:07	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 258 seconds)
2014-11-22 04:55:21	jeaye	Ah, bummer.
2014-11-22 04:56:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 04:56:23	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Read error: Connection reset by peer)
2014-11-22 04:58:16	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 04:58:31	-->	DexterLB (~dex@79.100.237.65) has joined ##c++
2014-11-22 04:58:46	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2014-11-22 05:00:06	<--	fujiro (~fujiro@public138959.cdma.centertel.pl) has quit (Ping timeout: 250 seconds)
2014-11-22 05:00:54	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-22 05:01:59	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 05:02:00	<--	Ranis (~srd@31.13.128.158) has left ##c++
2014-11-22 05:03:13	-->	ilhami (~IlhamiD@unaffiliated/ilhami) has joined ##c++
2014-11-22 05:03:20	ilhami	hello nerds
2014-11-22 05:03:37	ilhami	If I were to use C++ for web where would it be?
2014-11-22 05:03:54	lh_mouse	!give ilhami general
2014-11-22 05:03:55	nolyc	ilhami: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-22 05:04:39	ilhami	ok dude!
2014-11-22 05:04:42	ilhami	mouse
2014-11-22 05:06:55	-->	govg_ (~govg@unaffiliated/govg) has joined ##c++
2014-11-22 05:06:55	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 05:08:01	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-22 05:08:29	o11c	jeaye: some links here look promising though http://nepsweb.co.uk/langstand/isoCPP/
2014-11-22 05:08:35	o11c	now I just need to dig out C89 ...
2014-11-22 05:09:41	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-22 05:10:11	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 05:10:17	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-22 05:10:18	cbreak	o11c: you've given up on C++ and switched to study history?
2014-11-22 05:10:35	-->	tarruda (~tarruda@186.212.114.233) has joined ##c++
2014-11-22 05:12:51	-->	fujiro (~fujiro@public138959.cdma.centertel.pl) has joined ##c++
2014-11-22 05:14:17	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 272 seconds)
2014-11-22 05:16:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 05:16:42	o11c	nah, doing a study on the grammar
2014-11-22 05:19:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 05:19:41	-->	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-11-22 05:20:15	V-ille	jeaye: I got an explanation that says that back_insert_iterator tries to avoid specifying what it works on, aka it avoids stating any Container concept
2014-11-22 05:20:15	--	rocketeer is now known as liberal
2014-11-22 05:20:36	jeaye	V-ille: That's not a good reason! :|
2014-11-22 05:20:46	-->	ison__ (2eba4fb2@gateway/web/freenode/ip.46.186.79.178) has joined ##c++
2014-11-22 05:20:51	jeaye	It's not so bad to enforce a container has a value_type
2014-11-22 05:20:52	V-ille	"...so there are in fact only two requirements: There exists a push_back function and a type_type value_type (and both are related to each other)."
2014-11-22 05:21:08	V-ille	s/type_type/type/, I think
2014-11-22 05:21:16	ison__	Hello. Is it true that std::vector <std::unique_ptr <Foo>> vec; vec.emplace_back(new Foo()); can leak?
2014-11-22 05:21:24	<--	resi|ient (~ICX@c-98-248-207-73.hsd1.ca.comcast.net) has quit (Quit: Huh?)
2014-11-22 05:21:32	jeaye	If it requires a value_type, filling in the fucking type trait is no extra work.
2014-11-22 05:22:00	jeaye	V-ille: I'm not convinced.
2014-11-22 05:22:06	jeaye	V-ille: I do appreciate you asking though.
2014-11-22 05:22:44	<--	tarruda (~tarruda@186.212.114.233) has quit (Ping timeout: 255 seconds)
2014-11-22 05:22:54	V-ille	also
2014-11-22 05:22:55	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 05:23:06	V-ille	"During the previous concept time (N2914), ther was an attempt to introduce a concept BackInsertionContainer that would have allowed to impose stronger requirements onto the related types, but at that time your extended constraints onto the associated iterator types had not been entered the working draft (but could have been imagined)."
2014-11-22 05:23:20	-->	altin (~altin@80.80.164.10) has joined ##c++
2014-11-22 05:23:21	<--	altin (~altin@80.80.164.10) has quit (Changing host)
2014-11-22 05:23:21	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-22 05:23:35	V-ille	that guy also suggests that perhaps a proposal would be in order
2014-11-22 05:23:36	jeaye	Oh, this _is_ a guru.
2014-11-22 05:23:46	V-ille	it's Daniel Krugler, he knows things :)
2014-11-22 05:24:08	jeaye	Ah, yes. I'm familiar with Krugler.
2014-11-22 05:24:09	V-ille	I know who to ask the things I don't know :P
2014-11-22 05:25:16	<--	aggn (~quassel@host199-2.natpool.mwn.de) has quit (Remote host closed the connection)
2014-11-22 05:25:49	V-ille	jeaye: I don't know your use case, but I would expect it's bloody hard to treat back_insert_iterators generally when they don't have a sane value_type
2014-11-22 05:25:50	-->	o-0-o (~achubergs@174-21-217-239.tukw.qwest.net) has joined ##c++
2014-11-22 05:26:10	V-ille	typename It::value_type foo = something(); // oh fuck
2014-11-22 05:27:01	jeaye	I'm saying: *out = typename It::value_type{ somepack... }; basically
2014-11-22 05:27:17	-->	w41_ (~w41@unaffiliated/w41) has joined ##c++
2014-11-22 05:27:17	o11c	ison__: yes, it can leak
2014-11-22 05:27:18	jeaye	I could try for implicit construction, but that won't work on all types.
2014-11-22 05:28:02	V-ille	jeaye: a proposal with motivating example would be needed. I practically can't write one, I'm up to my eyeballs in $other $business.
2014-11-22 05:28:03	<--	o] (~achubergs@174-21-223-247.tukw.qwest.net) has quit (Ping timeout: 255 seconds)
2014-11-22 05:28:25	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-22 05:28:35	jeaye	V-ille: Word. I might shoot something up to the google group.
2014-11-22 05:28:37	jeaye	Thanks again.
2014-11-22 05:29:12	-->	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has joined ##c++
2014-11-22 05:29:16	V-ille	not that I wouldn't want something saner in those typedefs, I don't believe void is helpful
2014-11-22 05:29:40	jeaye	It certainly sets them apart from every other iterator.
2014-11-22 05:29:58	V-ille	back_insert_iterator is templated by the container anyway, so I wouldn't think it too difficult to piggyback on the container's typedefs
2014-11-22 05:30:02	jeaye	std::insert_iterator does the same.
2014-11-22 05:30:11	jeaye	V-ille: Exactly.
2014-11-22 05:30:33	V-ille	this is some "it's not supposed to be used that way", I guess
2014-11-22 05:30:44	V-ille	that's why the examples are important
2014-11-22 05:31:09	V-ille	I haven't personally run into such problems, I don't do much iterator-metaprogramming
2014-11-22 05:31:32	-->	jitta (~jitta@95.90.246.169) has joined ##c++
2014-11-22 05:33:35	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-22 05:35:37	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-22 05:35:42	jeaye	V-ille: https://gist.github.com/jeaye/a02fd7ded144fddb3e5b
2014-11-22 05:35:47	jeaye	Line 7.
2014-11-22 05:36:05	jeaye	consume maps N elements from the first range into a single element of the output range.
2014-11-22 05:37:04	jeaye	vec<points> v{...}; vec<triangles> t{...}; consume<3>(begin(points), end(points), begin(triangles)); // basically
2014-11-22 05:38:00	<--	proteusguy (~proteusgu@ppp-110-168-229-113.revip5.asianet.co.th) has quit (Ping timeout: 255 seconds)
2014-11-22 05:38:35	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-22 05:39:00	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-22 05:39:15	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-22 05:39:26	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-22 05:40:07	-->	dooshtuRabbit1 (~dooshtuRa@50.153.119.5) has joined ##c++
2014-11-22 05:41:47	<--	andgra (~andgra@c-4f6623eb-74736162.cust.telenor.se) has quit
2014-11-22 05:42:19	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2014-11-22 05:42:26	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 240 seconds)
2014-11-22 05:42:26	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-22 05:42:49	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-22 05:43:10	<--	condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has quit (Changing host)
2014-11-22 05:43:10	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-22 05:43:18	V-ille	where's the insert iterator? :)
2014-11-22 05:43:20	-->	komarov (~komarov@ppp91-122-120-198.pppoe.avangarddsl.ru) has joined ##c++
2014-11-22 05:43:33	jeaye	V-ille: The output iterator, in this case.
2014-11-22 05:43:46	jeaye	Thus `typename std::iterator_traits<O_It>::value_type` dies.
2014-11-22 05:44:27	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2014-11-22 05:44:29	jeaye	consume<3>(begin(points), end(points), back_inserter(triangles)); // in this case
2014-11-22 05:44:42	Jackneill	{ cout << "."; }
2014-11-22 05:44:43	geordi	.
2014-11-22 05:44:53	jeaye	Jackneill: hm?
2014-11-22 05:45:54	Jackneill	was just testing if there is a bot or not
2014-11-22 05:46:11	jeaye	clang: << "."
2014-11-22 05:46:26	jeaye	hah
2014-11-22 05:47:06	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-22 05:48:41	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-22 05:48:53	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has quit (Ping timeout: 258 seconds)
2014-11-22 05:49:01	clang	.
2014-11-22 05:49:29	jeaye	Nice.
2014-11-22 05:50:24	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 240 seconds)
2014-11-22 05:50:25	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-carogdbaoaucyfqm) has quit (Quit: Connection closed for inactivity)
2014-11-22 05:50:36	-->	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:659d:afb9:6f26:2405) has joined ##c++
2014-11-22 05:50:46	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 05:51:23	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Client Quit)
2014-11-22 05:51:49	-->	proteusguy (~proteusgu@ppp-110-168-229-145.revip5.asianet.co.th) has joined ##c++
2014-11-22 05:52:00	<--	davi (davi@gnu/davi) has quit (Ping timeout: 244 seconds)
2014-11-22 05:52:18	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-22 05:52:21	ison__	o11c how it can leak?
2014-11-22 05:52:24	<--	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 05:52:35	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 05:52:40	ison__	I'm constructing a pointer in-place
2014-11-22 05:52:53	ison__	can pointer assignment throw?
2014-11-22 05:53:08	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-22 05:53:16	<--	Logan54 (~logan@84.237.53.101) has quit (Ping timeout: 255 seconds)
2014-11-22 05:54:36	-->	tarruda (~tarruda@186.212.114.233) has joined ##c++
2014-11-22 05:55:05	-->	JoshSyn (~swoorup@d122-111-246-16.per801.wa.optusnet.com.au) has joined ##c++
2014-11-22 05:55:20	<--	matt90 (~matt90@149.169.214.40) has quit (Read error: Connection reset by peer)
2014-11-22 05:55:21	-->	jazzz (~jazzz@109.188.127.200) has joined ##c++
2014-11-22 05:56:21	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-22 05:57:27	-->	koderok (~koderok@106.206.189.50) has joined ##c++
2014-11-22 05:57:42	<--	koderok (~koderok@106.206.189.50) has quit (Remote host closed the connection)
2014-11-22 05:58:24	Jackneill	{ char *const array[10]; const label[] = "text"; array[0] = label; cout << label; }
2014-11-22 05:58:24	geordi	error: uninitialized const 'array'
2014-11-22 05:59:03	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-22 05:59:36	Jackneill	how can i create an array of pointers to char*?
2014-11-22 05:59:54	jeaye	geordi: add {} after first ]
2014-11-22 05:59:54	geordi	error: 'label' does not name a type
2014-11-22 06:00:01	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-22 06:00:12	iveevue	Jackneill, use a vector
2014-11-22 06:00:16	iveevue	and string
2014-11-22 06:00:24	iveevue	std::vector<std::string> v;
2014-11-22 06:00:41	jeaye	geordi: replace label[] with char *label
2014-11-22 06:00:41	geordi	error: assignment of read-only location 'array[0]'
2014-11-22 06:00:41	Jackneill	{ char *const array[10]; const char label[] = "text"; array[0] = label; cout << label; }
2014-11-22 06:00:41	geordi	error: uninitialized const 'array'
2014-11-22 06:01:09	jeaye	geordi: replace *const with *
2014-11-22 06:01:09	geordi	error: invalid conversion from 'const char*' to 'char*'
2014-11-22 06:01:15	jeaye	oh dear
2014-11-22 06:01:27	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-22 06:01:30	jeaye	geordi: replace first char with const char
2014-11-22 06:01:30	geordi	warning: variable 'array' set but not used
2014-11-22 06:01:35	jeaye	geordi: show
2014-11-22 06:01:36	geordi	{ const char * array[10]; const char label[] = "text"; array[0] = label; cout << label; }
2014-11-22 06:01:38	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-22 06:01:40	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-22 06:02:04	Jackneill	{ char *array[10]; const char label[] = "text"; array[0] = label; cout << label; }
2014-11-22 06:02:04	geordi	error: invalid conversion from 'const char*' to 'char*'
2014-11-22 06:02:05	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit
2014-11-22 06:02:15	<--	dooshtuRabbit1 (~dooshtuRa@50.153.119.5) has quit (Ping timeout: 255 seconds)
2014-11-22 06:02:18	jeaye	Jackneill: "foo" is a char const *
2014-11-22 06:02:28	jeaye	Well, it's an array that decays to char const*
2014-11-22 06:02:31	iveevue	Jackneill, why are you using plain arrays?
2014-11-22 06:02:44	Jackneill	for learning
2014-11-22 06:02:53	iveevue	Forget them and just go with vector and string
2014-11-22 06:03:04	<--	komarov (~komarov@ppp91-122-120-198.pppoe.avangarddsl.ru) has quit (Ping timeout: 255 seconds)
2014-11-22 06:03:11	Jackneill	but i want to learn them
2014-11-22 06:03:18	jeaye	{ const char * array[10]{}; const char label[] = "text"; array[0] = label; cout << array[0]; } // Jackneill
2014-11-22 06:03:19	geordi	text
2014-11-22 06:03:32	jeaye	That's your code. Now that it compiles, note that it's bad.
2014-11-22 06:03:39	-->	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-22 06:03:42	jeaye	Jackneill: You should use std::array or std::vector instead.
2014-11-22 06:03:52	Jackneill	jeaye, but in c would it still be bad?
2014-11-22 06:03:53	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-22 06:03:57	jeaye	!c
2014-11-22 06:03:59	nolyc	c is an old byte processing language without templates, exceptions, namespaces, constructors/destructors (and therefore RAII), virtual function polymorphism, references, operator/function overloading, reusable standard generic containers, or explicitly named casts.
2014-11-22 06:04:06	jeaye	Jackneill: This is not ##C.
2014-11-22 06:04:34	Jackneill	jeaye, thanks for the help
2014-11-22 06:04:56	jeaye	sure thing
2014-11-22 06:05:05	<--	jitta (~jitta@95.90.246.169) has quit (*.net *.split)
2014-11-22 06:05:05	<--	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (*.net *.split)
2014-11-22 06:05:05	<--	Yepoleb (~quassel@91-115-116-162.adsl.highway.telekom.at) has quit (*.net *.split)
2014-11-22 06:05:05	<--	killertester (~igor@ppp-62-76-17-70.ppp.kmv.ru) has quit (*.net *.split)
2014-11-22 06:05:05	<--	abt (~abt@192.210.214.197) has quit (*.net *.split)
2014-11-22 06:05:05	<--	schleppel (~quassel@141.39.226.237) has quit (*.net *.split)
2014-11-22 06:05:06	<--	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has quit (*.net *.split)
2014-11-22 06:05:06	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (*.net *.split)
2014-11-22 06:05:06	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (*.net *.split)
2014-11-22 06:05:06	<--	tapout (~tapout@unaffiliated/tapout) has quit (*.net *.split)
2014-11-22 06:05:07	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (*.net *.split)
2014-11-22 06:05:07	<--	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has quit (*.net *.split)
2014-11-22 06:05:07	<--	Supicios- (~Supicioso@2607:5300:100:200::5e4) has quit (*.net *.split)
2014-11-22 06:05:07	<--	mxiia (~mxiia@unaffiliated/mxiia) has quit (*.net *.split)
2014-11-22 06:05:07	<--	mf___ (~mf_@188.113.126.36) has quit (*.net *.split)
2014-11-22 06:05:07	<--	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has quit (*.net *.split)
2014-11-22 06:05:07	<--	Jaxan (~quassel@foo.kassala.de) has quit (*.net *.split)
2014-11-22 06:05:09	<--	noj (~jon@2a02:470:84:102::24) has quit (*.net *.split)
2014-11-22 06:05:09	<--	RokerHRO (~zonc@shell.spamt.net) has quit (*.net *.split)
2014-11-22 06:05:09	<--	clang (~clang@2607:f0d0:1003:c::10) has quit (*.net *.split)
2014-11-22 06:05:09	<--	batmoz (~quassel@foo.kassala.de) has quit (*.net *.split)
2014-11-22 06:05:09	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (*.net *.split)
2014-11-22 06:05:09	<--	cysm (cysm@unaffiliated/paracyst) has quit (*.net *.split)
2014-11-22 06:05:09	<--	nacitar (~nacitar@unaffiliated/nacitar) has quit (*.net *.split)
2014-11-22 06:05:09	<--	nda__ (~nda_@68.216.16.62.customer.cdi.no) has quit (*.net *.split)
2014-11-22 06:05:09	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (*.net *.split)
2014-11-22 06:05:09	<--	w66 (AH3e@null.firrre.com) has quit (*.net *.split)
2014-11-22 06:05:10	<--	dataangel (~user@2601:d:2780:26b:6583:eaa0:dbcc:f0bd) has quit (*.net *.split)
2014-11-22 06:05:11	<--	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has quit (*.net *.split)
2014-11-22 06:05:11	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (*.net *.split)
2014-11-22 06:05:12	<--	HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (*.net *.split)
2014-11-22 06:05:12	<--	zer0def (~zer0def@5.254.147.10) has quit (*.net *.split)
2014-11-22 06:05:12	<--	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has quit (*.net *.split)
2014-11-22 06:05:12	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (*.net *.split)
2014-11-22 06:05:12	<--	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has quit (*.net *.split)
2014-11-22 06:05:12	<--	acidfrost (syphter@unaffiliated/kiten) has quit (*.net *.split)
2014-11-22 06:05:13	<--	megaTherion (~therion@coruscant.unix.io) has quit (*.net *.split)
2014-11-22 06:05:13	<--	jhj (~jhj@unaffiliated/jhj) has quit (*.net *.split)
2014-11-22 06:05:13	jeaye	Ouch.
2014-11-22 06:05:58	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 06:06:13	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Ping timeout: 240 seconds)
2014-11-22 06:06:28	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Ping timeout: 245 seconds)
2014-11-22 06:08:14	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has joined ##c++
2014-11-22 06:08:14	-->	jitta (~jitta@95.90.246.169) has joined ##c++
2014-11-22 06:08:14	-->	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has joined ##c++
2014-11-22 06:08:14	-->	Yepoleb (~quassel@91-115-116-162.adsl.highway.telekom.at) has joined ##c++
2014-11-22 06:08:14	-->	killertester (~igor@ppp-62-76-17-70.ppp.kmv.ru) has joined ##c++
2014-11-22 06:08:14	-->	abt (~abt@192.210.214.197) has joined ##c++
2014-11-22 06:08:14	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-22 06:08:14	-->	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 06:08:14	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-22 06:08:14	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-22 06:08:14	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-22 06:08:14	-->	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has joined ##c++
2014-11-22 06:08:14	-->	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has joined ##c++
2014-11-22 06:08:14	-->	Supicios- (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-22 06:08:14	-->	mxiia (~mxiia@unaffiliated/mxiia) has joined ##c++
2014-11-22 06:08:14	-->	mf___ (~mf_@188.113.126.36) has joined ##c++
2014-11-22 06:08:14	-->	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has joined ##c++
2014-11-22 06:08:14	-->	RokerHRO (~zonc@shell.spamt.net) has joined ##c++
2014-11-22 06:08:14	-->	Jaxan (~quassel@foo.kassala.de) has joined ##c++
2014-11-22 06:08:14	-->	noj (~jon@2a02:470:84:102::24) has joined ##c++
2014-11-22 06:08:14	-->	clang (~clang@2607:f0d0:1003:c::10) has joined ##c++
2014-11-22 06:08:14	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-22 06:08:14	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-22 06:08:14	-->	cysm (cysm@unaffiliated/paracyst) has joined ##c++
2014-11-22 06:08:14	-->	nacitar (~nacitar@unaffiliated/nacitar) has joined ##c++
2014-11-22 06:08:14	-->	nda__ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-22 06:08:14	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-22 06:08:14	-->	w66 (AH3e@null.firrre.com) has joined ##c++
2014-11-22 06:08:14	-->	dataangel (~user@2601:d:2780:26b:6583:eaa0:dbcc:f0bd) has joined ##c++
2014-11-22 06:08:14	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-22 06:08:14	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-22 06:08:14	-->	zer0def (~zer0def@5.254.147.10) has joined ##c++
2014-11-22 06:08:14	-->	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has joined ##c++
2014-11-22 06:08:14	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-22 06:08:14	-->	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has joined ##c++
2014-11-22 06:08:14	-->	acidfrost (syphter@unaffiliated/kiten) has joined ##c++
2014-11-22 06:08:14	-->	megaTherion (~therion@coruscant.unix.io) has joined ##c++
2014-11-22 06:08:14	-->	jhj (~jhj@unaffiliated/jhj) has joined ##c++
2014-11-22 06:08:22	<--	abt (~abt@192.210.214.197) has quit (Max SendQ exceeded)
2014-11-22 06:08:22	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (Max SendQ exceeded)
2014-11-22 06:08:22	<--	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has quit (Max SendQ exceeded)
2014-11-22 06:08:23	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Max SendQ exceeded)
2014-11-22 06:08:23	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has quit (Max SendQ exceeded)
2014-11-22 06:08:30	-->	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has joined ##c++
2014-11-22 06:08:37	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has joined ##c++
2014-11-22 06:08:39	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-22 06:08:40	-->	tapout (~tapout@unaffiliated/tapout) has joined ##c++
2014-11-22 06:08:49	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-22 06:09:39	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (*.net *.split)
2014-11-22 06:09:40	<--	longbow (~androirc@ppp-94-68-164-172.home.otenet.gr) has quit (*.net *.split)
2014-11-22 06:09:40	<--	bloony (~pi@99-40-232.connect.netcom.no) has quit (*.net *.split)
2014-11-22 06:09:40	<--	leeN (~leeN@f050223245.adsl.alicedsl.de) has quit (*.net *.split)
2014-11-22 06:09:40	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (*.net *.split)
2014-11-22 06:09:40	<--	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has quit (*.net *.split)
2014-11-22 06:09:40	<--	mavam (~mavam@unaffiliated/mavam) has quit (*.net *.split)
2014-11-22 06:09:40	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (*.net *.split)
2014-11-22 06:09:40	<--	SparkDog (spark@dog.thdo.woaf.net) has quit (*.net *.split)
2014-11-22 06:09:40	<--	sblack1 (~sblack1@unaffiliated/sblack1) has quit (*.net *.split)
2014-11-22 06:09:41	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (*.net *.split)
2014-11-22 06:09:41	<--	Serus (~Serus@unaffiliated/serus) has quit (*.net *.split)
2014-11-22 06:09:42	<--	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has quit (*.net *.split)
2014-11-22 06:09:42	<--	Renderwahn (~render@176.126.244.88) has quit (*.net *.split)
2014-11-22 06:09:42	<--	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has quit (*.net *.split)
2014-11-22 06:09:42	<--	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has quit (*.net *.split)
2014-11-22 06:09:43	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (*.net *.split)
2014-11-22 06:09:43	<--	Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (*.net *.split)
2014-11-22 06:10:56	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-22 06:10:56	-->	longbow (~androirc@ppp-94-68-164-172.home.otenet.gr) has joined ##c++
2014-11-22 06:10:56	-->	bloony (~pi@99-40-232.connect.netcom.no) has joined ##c++
2014-11-22 06:10:56	-->	leeN (~leeN@f050223245.adsl.alicedsl.de) has joined ##c++
2014-11-22 06:10:56	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 06:10:56	-->	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has joined ##c++
2014-11-22 06:10:56	-->	mavam (~mavam@unaffiliated/mavam) has joined ##c++
2014-11-22 06:10:57	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-22 06:10:57	-->	SparkDog (spark@dog.thdo.woaf.net) has joined ##c++
2014-11-22 06:10:57	-->	sblack1 (~sblack1@unaffiliated/sblack1) has joined ##c++
2014-11-22 06:10:57	-->	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-22 06:10:57	-->	Serus (~Serus@unaffiliated/serus) has joined ##c++
2014-11-22 06:10:57	-->	smokex (smokex@gateway/shell/panicbnc/x-dctoschzdvqaoweu) has joined ##c++
2014-11-22 06:10:57	-->	Renderwahn (~render@176.126.244.88) has joined ##c++
2014-11-22 06:10:57	-->	qknight (~joachim@static.188.100.47.78.clients.your-server.de) has joined ##c++
2014-11-22 06:10:57	-->	k4r1m (sid40122@gateway/web/irccloud.com/x-uhyutlnfecnbrfoi) has joined ##c++
2014-11-22 06:10:57	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##c++
2014-11-22 06:10:57	-->	Zoinks (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2014-11-22 06:11:03	-->	njoku (~njoku@192.210.214.197) has joined ##c++
2014-11-22 06:11:16	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Max SendQ exceeded)
2014-11-22 06:11:17	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (Max SendQ exceeded)
2014-11-22 06:11:17	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Max SendQ exceeded)
2014-11-22 06:11:32	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##c++
2014-11-22 06:11:34	roxlu	hi guys, sorry if I?m not entirely clear but I?m not sure how to explain. But I think I?m looking for a way to create templated C-style callback functions. Is that possible? (< C++11)
2014-11-22 06:13:03	cbreak	roxlu: sure?
2014-11-22 06:13:08	roxlu	e.g. ?template <class T> T tween_linear(float t, T b, T c, float d); ?. I?m wondering about this beause I want to store all kinds of ?tween_*? functions into a manager class.
2014-11-22 06:13:09	-->	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-22 06:13:26	jeaye	:|
2014-11-22 06:13:29	cbreak	roxlu: manager class? :(
2014-11-22 06:13:29	jeaye	manager classes
2014-11-22 06:13:37	cbreak	roxlu: This is a function template
2014-11-22 06:13:44	cbreak	roxlu: you can instantiate it with a type to get a function
2014-11-22 06:13:51	cbreak	but those functions all have a distinct type
2014-11-22 06:14:17	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-22 06:14:18	cbreak	type safety in C++ isn't that easily circumvented :D
2014-11-22 06:14:24	roxlu	So conceptually I want to do something like: tween_manager.add<float>(my_float, 0, 100, 10);  but also: tween_manager.add<vec2>(my_vec, 0, 100, 10);
2014-11-22 06:14:44	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 06:15:03	jeaye	Why not... a tween namespace instead?
2014-11-22 06:15:09	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-22 06:15:15	jeaye	Manager classes are a red flashing sign of a bad design.
2014-11-22 06:15:35	-->	KeroroGunsou (~d0lph1n98@121.120.124.254) has joined ##c++
2014-11-22 06:15:36	<--	KeroroGunsou (~d0lph1n98@121.120.124.254) has quit (Client Quit)
2014-11-22 06:15:38	cbreak	roxlu: so, give that manager thing a member function template?
2014-11-22 06:15:57	cbreak	roxlu: but that'd OBVIOUSLY not be C function compatible
2014-11-22 06:16:05	cbreak	because they'd be member functions when instantiated
2014-11-22 06:16:11	roxlu	cbreak: yeah it doesn?t have to be compatible
2014-11-22 06:16:28	cbreak	then ... why was it in your requirements? :/
2014-11-22 06:16:43	cbreak	jeaye: I've found quite a few good use cases for managers :)
2014-11-22 06:16:53	cbreak	mostly related to global state
2014-11-22 06:17:08	roxlu	cbreak: sorry, I?m not sure how to explain exactly what I want because I don?t know what solutions are possible; but it ?feels? like I need a templated C function
2014-11-22 06:17:10	cbreak	i.e. plugin managers, device managers, connection managers
2014-11-22 06:17:15	 *	roxlu has been doing to much C lately 
2014-11-22 06:17:26	roxlu	I?ll create some pseudo code
2014-11-22 06:17:30	cbreak	roxlu: then don't use it like a member function
2014-11-22 06:17:36	cbreak	roxlu: you can do add<X>(...)
2014-11-22 06:18:04	o11c	*finally* managed to find a C89 pdf
2014-11-22 06:18:21	<--	JoshSyn (~swoorup@d122-111-246-16.per801.wa.optusnet.com.au) has quit (Read error: Connection reset by peer)
2014-11-22 06:18:21	o11c	it's a crappy scan, but it's OCR'ed enough that text search worksish
2014-11-22 06:18:37	o11c	all the other versions were .txt with large parts missing
2014-11-22 06:18:48	cbreak	o11c: I'd have expected microsoft to have one
2014-11-22 06:18:52	cbreak	after all that's all they support
2014-11-22 06:18:54	-->	reVrost (~reVrost@CPE-58-172-99-21.mqzo1.cht.bigpond.net.au) has joined ##c++
2014-11-22 06:19:02	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-22 06:19:12	<--	iveevue (~na@unaffiliated/iveevue) has quit (Read error: Connection reset by peer)
2014-11-22 06:19:25	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 06:20:35	o11c	http://read.pudn.com/downloads133/doc/565041/ANSI_ISO%2B9899-1990%2B%5B1%5D.pdf
2014-11-22 06:20:37	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-22 06:20:40	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-22 06:20:54	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-22 06:20:59	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 06:22:16	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 06:24:05	-->	Zupoman (~mistrzmag@91.224.129.184) has joined ##c++
2014-11-22 06:24:05	<--	Zupoman (~mistrzmag@91.224.129.184) has quit (Changing host)
2014-11-22 06:24:05	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-22 06:24:08	roxlu	I think this clarifies what I?m trying to achieve. Note, this is not -exactly- how I want it, it?s just an example trying to show you guys what I?m looking for. The code shows a C-ish pseudo version which uses some math to change float values: https://gist.github.com/roxlu/19d8b3f80d2d3061c105
2014-11-22 06:24:15	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 06:24:46	-->	SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-22 06:25:24	roxlu	So I have some ?tween? functions (tell me if I need to explain what that are). I have a simple example struct that keeps state for each ?Tween?.  and the TweenManager just collects all tweens and has a ?update()? function that iterates over all added tweens and calls the actuall tween function.
2014-11-22 06:25:49	cbreak	so, what do you need templates for?
2014-11-22 06:26:09	roxlu	Something like that would work great when I only had floats thatI want to change, but I want to be able to tween ?any? type that implements the *, /, -, + operators
2014-11-22 06:26:21	cbreak	this would work nicely both with parametrization, or runtime polymorphism
2014-11-22 06:26:40	cbreak	roxlu: so, template them then :)
2014-11-22 06:27:04	cbreak	the manager thing also has to be templated obviously
2014-11-22 06:27:43	-->	Gama11 (~quassel@p57967E04.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 06:28:29	roxlu	Ok thanks cbreak
2014-11-22 06:28:58	roxlu	How can I store the tweens that are added in a ?manager? ?
2014-11-22 06:29:03	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-22 06:29:45	cbreak	roxlu: std::function, function pointer
2014-11-22 06:29:54	roxlu	cbreak:  isn?t that C++11?
2014-11-22 06:29:57	cbreak	or via base class unique_ptr if you go the polyorphism route
2014-11-22 06:29:59	cbreak	roxlu: yeah, so?
2014-11-22 06:30:09	roxlu	I want to supports < C++11
2014-11-22 06:30:14	cbreak	roxlu: boost::function
2014-11-22 06:30:18	roxlu	lol
2014-11-22 06:30:39	roxlu	I?m looking for a solution w/o any dependencies
2014-11-22 06:30:55	cbreak	reinvent boost::function
2014-11-22 06:30:58	roxlu	:)
2014-11-22 06:31:02	SlashLife	You're looking for a solution that doesn't require a C++ compiler? :O
2014-11-22 06:31:17	SlashLife	s/require/depend on having/
2014-11-22 06:31:18	roxlu	cbreak: I guess it?s not so trivial then
2014-11-22 06:31:31	cbreak	roxlu: not if you want to make it good
2014-11-22 06:31:32	roxlu	(w/o any dependencies or C++11)
2014-11-22 06:31:51	cbreak	roxlu: but as you can see if you read what I wrote: I gave you three possibilities
2014-11-22 06:31:58	cbreak	it's far from without alternatives
2014-11-22 06:32:07	roxlu	yep
2014-11-22 06:33:24	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:e99d:9b34:6500:14c0) has quit (Ping timeout: 258 seconds)
2014-11-22 06:35:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 06:37:57	-->	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 06:38:00	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 06:38:32	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 255 seconds)
2014-11-22 06:38:46	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 06:38:47	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-22 06:40:16	-->	aggn (~quassel@host199-2.natpool.mwn.de) has joined ##c++
2014-11-22 06:40:21	-->	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-22 06:40:28	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-22 06:40:32	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Off to fly a kite)
2014-11-22 06:41:01	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-22 06:41:21	-->	spupuser1 (~root@115.99.1.109) has joined ##c++
2014-11-22 06:42:27	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Bye)
2014-11-22 06:42:35	Eelis	V-ille: that just tells me the committee consists of all the wrong people.
2014-11-22 06:43:08	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-22 06:43:35	Eelis	people who want to block making std::vector faster in obvious ways should be kicked off the goddamn committee
2014-11-22 06:43:49	Eelis	and join the javascript committee or whatever
2014-11-22 06:44:34	-->	lonelybyte (~lonelybyt@121.237.55.79) has joined ##c++
2014-11-22 06:44:49	Betal	<< std::numeric_limits<char>::max(); // any way to get the char limit?
2014-11-22 06:44:49	geordi	<no output>
2014-11-22 06:44:50	<--	lonelybyte (~lonelybyt@121.237.55.79) has quit (Max SendQ exceeded)
2014-11-22 06:45:01	Eelis	<< int(std::numeric_limits<char>::max())
2014-11-22 06:45:02	geordi	127
2014-11-22 06:45:28	-->	lonelybyte (~lonelybyt@121.237.55.79) has joined ##c++
2014-11-22 06:45:29	Betal	Eelis: oh, thanks
2014-11-22 06:45:44	-->	komarov (~komarov@ppp91-122-120-198.pppoe.avangarddsl.ru) has joined ##c++
2014-11-22 06:46:06	<--	oleo__ (~oleo@xdsl-78-35-154-181.netcologne.de) has quit (Quit: Verlassend)
2014-11-22 06:46:18	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-22 06:47:03	-->	bzf (~bzf@146.185.165.15) has joined ##c++
2014-11-22 06:47:12	<--	lonelybyte (~lonelybyt@121.237.55.79) has quit (Client Quit)
2014-11-22 06:47:28	-->	lonelybyte (~lonelybyt@121.237.55.79) has joined ##c++
2014-11-22 06:47:32	NinjaPenguin	Betal: Yeah, you need to cast it to int because ostream has special behaviour for char type, which is printing the character. :)
2014-11-22 06:47:39	<--	lonelybyte (~lonelybyt@121.237.55.79) has left ##c++
2014-11-22 06:48:07	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-22 06:48:09	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-22 06:50:33	<--	Aichan (~Aichan@109.89.137.74) has quit (Ping timeout: 264 seconds)
2014-11-22 06:51:51	-->	King_Hual` (~Hual@94.26.28.68) has joined ##c++
2014-11-22 06:53:06	-->	gelignite (~gelignite@i528C38FD.versanet.de) has joined ##c++
2014-11-22 06:55:24	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Ping timeout: 244 seconds)
2014-11-22 06:55:58	<--	spupuser1 (~root@115.99.1.109) has quit (Quit: Leaving)
2014-11-22 06:56:06	Betal	in a class that have a string that never change after the constructor, for copy and space optimization, is better to let it be a string or a shared_ptr<string>?
2014-11-22 06:56:47	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-22 06:56:54	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-22 06:57:25	cbreak	Betal: no
2014-11-22 06:58:15	-->	lonelybyte (~lonelybyt@121.237.55.79) has joined ##c++
2014-11-22 06:58:54	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-22 06:59:02	Betal	cbreak: no?
2014-11-22 06:59:05	-->	nept (b252bcce@gateway/web/freenode/ip.178.82.188.206) has joined ##c++
2014-11-22 06:59:12	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 06:59:53	-->	japro (~japro@77-59-183-11.dclient.hispeed.ch) has joined ##c++
2014-11-22 06:59:55	cbreak	Betal: indeed.
2014-11-22 07:00:39	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 07:00:49	Betal	cbreak: you mean string is better, shared_ptr, or something else?
2014-11-22 07:00:58	<--	simius (~simius@h-88-117.a230.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-22 07:01:15	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Client Quit)
2014-11-22 07:01:19	aggn	X: "A or B?" - Y: "No"
2014-11-22 07:01:24	aggn	:)
2014-11-22 07:01:29	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-22 07:01:36	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 07:01:49	<--	jazzz (~jazzz@109.188.127.200) has quit (Quit: leaving)
2014-11-22 07:01:50	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-22 07:01:51	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-22 07:02:06	cbreak	Betal: why not string const?
2014-11-22 07:02:54	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 07:03:14	-->	syncrow (syncrow@unaffiliated/syncrow) has joined ##c++
2014-11-22 07:05:19	-->	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 07:05:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 07:05:49	Betal	cbreak: if copy this object, will both have the same string const?
2014-11-22 07:06:38	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-22 07:07:26	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-22 07:07:37	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Client Quit)
2014-11-22 07:08:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 07:08:42	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2014-11-22 07:09:33	cbreak	Betal: they will have their own copy
2014-11-22 07:10:00	cbreak	Betal: unless you share it, then they'll have their own copy of the shared pointer
2014-11-22 07:10:00	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-22 07:12:44	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 07:12:44	<--	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 07:13:01	-->	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 07:13:31	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-22 07:13:37	V-ille	Eelis: I'm all for kicking people from the committee, especially if I can select who gets the boot. But vector has never had a non-checking-push_back, and I don't think it's going to be easy to add it.
2014-11-22 07:13:49	Betal	cbreak: probably the shared pointer space will be bigger than string + data space for mostly cases, so string const looks better, thanks
2014-11-22 07:14:45	cbreak	Betal: just be aware that const means const
2014-11-22 07:14:53	cbreak	so your object will not be assignable
2014-11-22 07:15:19	Betal	cbreak: yeah, it will not change, is a private member that never changes after constructor
2014-11-22 07:15:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 07:15:59	Eelis	V-ille: ok, thanks
2014-11-22 07:15:59	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 07:18:16	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 07:19:15	lh_mouse	V-ille, why isn't it 'going to be easy'? By adding code you don't break old stuff.
2014-11-22 07:19:57	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-22 07:20:04	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 07:21:39	<--	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-11-22 07:22:26	ison__	can anyone explain why std::vector <std::unique_ptr <Foo>> vec; vec.emplace_back(new Foo()); can leak?
2014-11-22 07:23:57	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2014-11-22 07:24:03	<--	aggn (~quassel@host199-2.natpool.mwn.de) has quit (Remote host closed the connection)
2014-11-22 07:24:07	lh_mouse	ison__, it is equivalent to auto p = new Foo(); vec.emplace_back(p);
2014-11-22 07:24:08	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-22 07:24:34	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-22 07:24:37	lh_mouse	ison__, compare it with :   auto p = make_unique<Foo>(); vec.emplace_back(move(p));
2014-11-22 07:25:14	V-ille	lh_mouse: because I doubt the committee will find the motivation of an unchecked push_back convincing
2014-11-22 07:25:40	<--	King_Hual` (~Hual@94.26.28.68) has quit (Ping timeout: 255 seconds)
2014-11-22 07:26:02	<--	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2014-11-22 07:26:16	ison__	lh_mouse isn't unique_ptr constructed in-place?
2014-11-22 07:26:25	ison__	so why push_back(new Foo()) is fine then?
2014-11-22 07:26:32	lh_mouse	Pedantic committee.
2014-11-22 07:26:47	lh_mouse	ison__, neither.
2014-11-22 07:27:12	ison__	lh_mouse push_back(new Foo()) can leak too?
2014-11-22 07:27:31	<--	corecode (~2@0x2c.org) has left ##c++ ("ERC Version 5.3 (IRC client for Emacs)")
2014-11-22 07:27:37	-->	hexagoxel (~hexagoxel@kiel-5f769494.pool.mediaWays.net) has joined ##c++
2014-11-22 07:27:39	lh_mouse	Yes. Dont do that.
2014-11-22 07:27:45	--	Sadale is now known as Lame_Sadale
2014-11-22 07:27:56	ison__	can shared_ptr <Foo> a; a.reset(new Foo()); leak too?
2014-11-22 07:28:13	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-22 07:28:28	lh_mouse	No.
2014-11-22 07:28:31	lh_mouse	!give ison__ tias
2014-11-22 07:28:32	nolyc	ison__: Try it and see yourself. 1) Stops wasting our time and 2) You learn the answer. If you have a specific compiler error prepare a test case at http://ideone.com/
2014-11-22 07:28:51	quaz0r	starts learning english
2014-11-22 07:28:54	lh_mouse	shared_ptr was designed to handle this case correctly.
2014-11-22 07:29:10	roxlu	cbreak: I?m using this now which basically results in what I want: https://gist.github.com/roxlu/9315f47fa9ef1ae95680  maybe a bit bloated but it gives me the flexibility I need
2014-11-22 07:29:12	lh_mouse	quaz0r, this is NOT a channel for english learning.
2014-11-22 07:29:22	ison__	how am I supposed to try myself and see if there is any possibility for something to leak?
2014-11-22 07:29:40	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Ping timeout: 250 seconds)
2014-11-22 07:29:41	ison__	lh_mouse so why push_back(new Foo()); can leak but .reset(new Foo()) can't?
2014-11-22 07:31:49	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 07:32:28	-->	oleo (~oleo@xdsl-78-35-154-181.netcologne.de) has joined ##c++
2014-11-22 07:34:13	lh_mouse	geordi, { try { test_now = true; shared_ptr<foo> p(new foo); } catch(bad_alloc &){ cout <<"bad_alloc "; } } bool test_now = false; struct foo { double d[10]; foo(){ cout <<"foo::foo() "; } ~foo(){ cout <<"foo::~foo() "; } }; void *operator new(size_t cb){ if(test_now && cb != sizeof(foo)) throw bad_alloc(); return malloc(cb); } void operator delete(void *p) noexcept { free(p); } // ison__
2014-11-22 07:34:13	geordi	foo::foo() foo::~foo() bad_alloc
2014-11-22 07:34:21	lh_mouse	NO LEAKS.
2014-11-22 07:36:30	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 258 seconds)
2014-11-22 07:40:03	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Ping timeout: 250 seconds)
2014-11-22 07:40:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 07:40:12	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-22 07:42:11	-->	cleamoon__ (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 07:43:17	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 07:43:45	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-22 07:44:08	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-22 07:44:56	ison__	lh_mouse but... what's the point, it doesn't prove the fact that emplace_back can leak: https://ideone.com/tYToq8
2014-11-22 07:45:24	ison__	oh, damn, used int instead of a class, moment
2014-11-22 07:46:04	ison__	ye, it indeed leaks for foo, thanks
2014-11-22 07:46:26	--	Lame_Sadale is now known as Sadale
2014-11-22 07:46:35	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 07:48:31	<--	iveevue (~na@unaffiliated/iveevue) has quit (Client Quit)
2014-11-22 07:50:14	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 07:51:07	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-22 07:54:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 07:57:01	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-22 07:57:10	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 07:57:41	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-22 07:58:01	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-22 07:58:26	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-22 07:58:42	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-22 07:58:45	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-22 07:59:18	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 07:59:52	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:00:35	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:00:37	<--	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 08:01:02	<--	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-22 08:01:10	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:01:12	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 08:01:28	-->	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 08:02:03	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:02:21	<--	ludkiller (lud@gateway/shell/elitebnc/x-dppezlgdbgzvfbes) has quit (Excess Flood)
2014-11-22 08:02:39	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:02:59	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-22 08:03:24	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:03:37	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 272 seconds)
2014-11-22 08:04:00	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:04:37	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:05:08	-->	cleamoon_ (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 08:05:13	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:05:17	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 08:05:17	-->	ludkiller (lud@gateway/shell/elitebnc/x-llkkwgbaeckonvby) has joined ##c++
2014-11-22 08:05:54	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:06:04	<--	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2014-11-22 08:06:29	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:07:05	-->	forwchen (~textual@205.164.24.98) has joined ##c++
2014-11-22 08:07:08	<--	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 08:07:41	<--	forwchen (~textual@205.164.24.98) has quit (Max SendQ exceeded)
2014-11-22 08:07:42	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 08:08:10	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 08:08:46	<--	cleamoon__ (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-22 08:09:07	<--	ison__ (2eba4fb2@gateway/web/freenode/ip.46.186.79.178) has quit (Ping timeout: 246 seconds)
2014-11-22 08:09:43	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 08:10:23	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-22 08:10:30	<--	SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 240 seconds)
2014-11-22 08:10:52	<--	lonelybyte (~lonelybyt@121.237.55.79) has quit (Quit: Leaving)
2014-11-22 08:11:01	<--	fujiro (~fujiro@public138959.cdma.centertel.pl) has quit (Ping timeout: 255 seconds)
2014-11-22 08:12:30	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-22 08:13:31	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 08:14:47	<--	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 244 seconds)
2014-11-22 08:16:15	<--	Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 272 seconds)
2014-11-22 08:18:35	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-22 08:20:29	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Read error: Connection reset by peer)
2014-11-22 08:20:48	-->	Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-11-22 08:23:08	-->	fujiro (~fujiro@public138959.cdma.centertel.pl) has joined ##c++
2014-11-22 08:25:50	-->	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-22 08:25:50	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 08:27:17	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-22 08:45:10	--	irc: disconnected from server
2014-11-22 08:45:34	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-22 08:45:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-22 08:45:34	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-22 08:45:34	--	Nicks ##c++: [_5kg `Winslow a-l-e aboudreault acidfrost adamm adendum_ Adrinael Affliction agile aicasn aidecoe alamages alamar alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv AndyBotwin angryzor Anoniem4l`afk ansiwen Anthaas antons_ Ardonik Artpicre asakura1 ashkan Aster atod Atque Auv awake b0lt b_jonas Backinside Banandana barfod basic6_ batmoz bazrush bb010g Belgarion0 belz beowuff Betal Bigcheese biglama blackbit blackwind_123 bladerunner blast_ BlastHardcheese BlaXpirit blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoredHamster boris`` bOSKE bps Brando753 btrace Budd bumbar_ Burgundy bzf CARAM_ caveat- cbreak CEnnis91 chainedchaos ChemicalRascal Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay clang ClarusCogitatio cleamoon_ clincher clynamen cnj cnu- codebrainz condy contempt coolcat crantron cryptoca cubed_root CustosLimen cvtsx cyberspace- cyndis cysm D0cN3x d3Vito d_s dahlia daNRG dantarion dardevelin darkerstar DarkGhost dataangel David de-vri-es DeadSix27 decltype Defaultti Dentych deSilva Dessimat0r det dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg DLSteve doev dostoyevsky doug64k Dr_Coke Draecos dualbus ducklobster Dumle29_ eagleflo easior_ edk edran Eelis efreet ejnahc elnn elsewho emg emma endomancer enterprisedc envi_u envi_|2 ericP erikj ERROH esperegu eurythmia evilissimo EvilPenguin Extreme f0ster f10_ FabTG_ filcab_ Flannel flebron FlorianJW-terra fold forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd fujiro Furai Gama11 garFF Garner geidi gelignite genpaku Gentle geordi Gevox ggherdov` GGMethos gnoirzox GoGi googol govg_ Gravitron GrecKo gregj grep0r guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin Hannibal_Smith harrow Haswell Haxxa Heartbroken heiner_ heinrich5991 Hello71 hellschreiber Henke37 HeTo hexagoxel HiggsPossum himikof hs_ hstefan hyperair hyperboreean icedev ido idub iFire ilhami Iloiny imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 ivan\ ivan` ix007 j_wright Jackneill jagob jakemp japro Jaxan jayne jeaye jhj jiffe Jinxit jitta jophish Josef_K jpnurmi JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k4r1m Kabal619 kaffeetrauma KAHR-Alpha kailoAtWork Kaini kalven kalzz Karethoth KarolisK Kasreyn kbtr kevr kexmex Kicer86 killertester KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax komarov Kostenko kriskropd Kristina krnlyng KrzaQ kStolen kurahaupo kurti lamefun Lasher` latexi95 leeN Left_Turn lenarhoyt LetoThe2nd lh_mouse liberal Lilian LM741 Lokomotiv longbow LongCatTH Longlius lord4163 LordAkkarin lucasjones ludkiller Luker luny`` M-ou-se m0shbear m477 mads- mangekyo manny- marchelzo_ marcux markand martiert mavam maw Maxel Meeh megaTherion melter metallisto mf___ mihipte mike_f mikroflops Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin moonchild Motig mountaingoat MrC mrueg mukunda_ MulleDK19 mulvane Munnu murrekatt_ muteki mxiia nacitar Naive naraku9333 Natch Navid nda__ ne555 necrogami negerns nept netj_ neunon newguise1234 nfk Nickeeh nido Niedar Nik05 nilg Nilium NinjaPenguin nitrix Nizumzen njoku nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo o-0-o o11c oberstein Obfuscate obiwahn oleo olly_c on3pk only_the_bear opalraava OpusMioda orbitz ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ pcfreak30 peterhu peterR`` pEYEd phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- PigFlu pippijn pixelate plash Plasmastar platinuum plitter PotatoGim ppf pragma- Praise primepie proteusguy proycon psii pyon qdii qknight Quackmatic QualityAddict quaz0r quizzi r3g3x RageD refp Refresh rendar Renderwahn rethnor reVrost rfreeman_w richardwhiuk rkreis_ RlyDontKnow rnickb robbyoconnor robert_ robertknight robink roentgen roflin RokerHRO roxfan roxlu rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Sadale Saiban sailerboy salamanderrake samuel02 Sausage Sauvin sazzer sblack1 scai scharan schleppel Sculptor segy seishun senseibaka Seppoz seronis Serus Shayanjm shingshang shintah ShishKabab Shozan Shr3ddy66 Shuba SiGe_ sigtrm Silex SiN_Bizkit Sjors skarn skeuomorf ski SleekoNiko Slide-O-Mix Smirnov smokex soa2ii Soliton soulcake sparetire Spark SparkDog spb sphenxes sqil_ srjek stakewinner00 stefandxm stfn stk944 Stryyker Sumason supay Supicios- suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tarruda tazle tecpo Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheBeerinator themagician thesquib thomas tibl timemage timj1 Timmy` TinoDidriksen tk` TMM ToApolytoXaos TobiasFar_ tomalak tomaw TommyC TomyLobo torei toresbe TrafficMan Tribeam_ Trieste trigen Trondby tsimpson TViernion Twey tz Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber V-ille ValicekB Vbitz ville vinleod Vinnie_win Vir Vohveli vokimon w41_ w66 WalrusPony1 wchun webshinra Weethus wickedmic widmo wilx WizBright woggle wto xace Xark XgF xiphiasx_ xsdg xulef xyz yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber yorick yrter z16 zackthehuman zacts Zarthus zen|merge_ Zephyrus zer0def zhangxaochen Zharf zima Zoinks zq Zupoman z|Andy]
2014-11-22 08:45:34	--	Channel ##c++: 642 nicks (0 ops, 0 halfops, 0 voices, 642 normals)
2014-11-22 08:45:39	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-22 08:45:39	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-22 08:46:12	-->	jrolland-ubuntu (~jrolland@72.131.125.94) has joined ##c++
2014-11-22 08:46:26	<--	DLSteve (~textual@50.248.248.108) has quit (Read error: Connection reset by peer)
2014-11-22 08:46:50	<--	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-22 08:47:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 08:49:12	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-22 08:51:29	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 08:51:37	-->	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-22 08:52:36	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-22 08:54:03	<--	AndyBotwin (~botwin@unaffiliated/andybotwin) has quit (Read error: Connection reset by peer)
2014-11-22 08:54:48	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 08:56:43	<--	sqil_ (5214fc28@gateway/web/freenode/ip.82.20.252.40) has quit (Quit: Page closed)
2014-11-22 08:57:21	-->	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:4086:6cb:e5d6:5a0d) has joined ##c++
2014-11-22 08:58:02	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-22 08:58:59	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-22 08:59:29	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Remote host closed the connection)
2014-11-22 09:00:01	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-22 09:00:12	<--	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-22 09:00:34	-->	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-22 09:00:59	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-22 09:01:26	--	mf___ is now known as mf_
2014-11-22 09:03:04	<--	D0cN3x (~Thunderbi@dslb-178-007-223-140.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-22 09:03:47	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-22 09:05:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 09:05:59	-->	Kopharex (~Kopharex@79.143.121.246) has joined ##c++
2014-11-22 09:06:20	<--	Hannibal_Smith (~Hannibal_@95.239.86.138) has quit (Quit: Sto andando via)
2014-11-22 09:06:43	-->	AndyBotwin (~botwin@unaffiliated/andybotwin) has joined ##c++
2014-11-22 09:07:31	<--	w41_ (~w41@unaffiliated/w41) has quit (Quit: leaving)
2014-11-22 09:07:34	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-22 09:07:49	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-22 09:09:09	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 09:11:16	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-22 09:12:19	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-22 09:14:08	<--	AndyBotwin (~botwin@unaffiliated/andybotwin) has quit (Quit: Leaving)
2014-11-22 09:14:34	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 09:15:03	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 09:15:06	-->	Leftas (~leftas@91.228.84.180) has joined ##c++
2014-11-22 09:15:33	-->	aggn (~quassel@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has joined ##c++
2014-11-22 09:16:27	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-22 09:16:48	<--	aggn (~quassel@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has quit (Client Quit)
2014-11-22 09:17:00	-->	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has joined ##c++
2014-11-22 09:17:03	<--	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has quit (Client Quit)
2014-11-22 09:17:25	-->	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has joined ##c++
2014-11-22 09:17:45	-->	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-22 09:18:27	-->	nyqiust (~nyquist@178.162.205.25) has joined ##c++
2014-11-22 09:18:29	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-22 09:18:44	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 09:21:37	<--	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has quit (Remote host closed the connection)
2014-11-22 09:21:40	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 09:21:54	-->	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has joined ##c++
2014-11-22 09:24:43	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 09:25:52	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 258 seconds)
2014-11-22 09:26:39	-->	daN-R-G (~danny@e181224247.adsl.alicedsl.de) has joined ##c++
2014-11-22 09:27:50	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 09:28:28	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-11-22 09:29:51	<--	daNRG (~danny@e181230182.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2014-11-22 09:30:12	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-22 09:30:30	-->	TheHackOps (~TheHackOP@203-158-39-145.dyn.iinet.net.au) has joined ##c++
2014-11-22 09:31:00	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-22 09:31:05	-->	VinnieSegura (~Vincent@69.80.100.92) has joined ##c++
2014-11-22 09:32:03	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-22 09:32:19	-->	dooshtuRabbit (~dooshtuRa@50.153.116.14) has joined ##c++
2014-11-22 09:33:35	<--	dooshtuRabbit (~dooshtuRa@50.153.116.14) has quit (Max SendQ exceeded)
2014-11-22 09:34:00	-->	TheAncientGoat (~quassel@175.143.242.172) has joined ##c++
2014-11-22 09:34:01	-->	dooshtuRabbit (~dooshtuRa@50.153.116.14) has joined ##c++
2014-11-22 09:34:15	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-22 09:34:17	<--	negerns (negerns@49.144.150.177) has quit (Remote host closed the connection)
2014-11-22 09:34:30	<--	dooshtuRabbit (~dooshtuRa@50.153.116.14) has quit (Max SendQ exceeded)
2014-11-22 09:34:31	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-22 09:35:10	-->	dooshtuRabbit (~dooshtuRa@50.153.116.14) has joined ##c++
2014-11-22 09:35:38	<--	luny`` (~luny@unaffiliated/luny) has quit (Ping timeout: 264 seconds)
2014-11-22 09:36:22	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-22 09:37:07	<--	dooshtuRabbit (~dooshtuRa@50.153.116.14) has quit (Max SendQ exceeded)
2014-11-22 09:37:08	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 09:37:30	-->	dooshtuRabbit (~dooshtuRa@50.153.116.14) has joined ##c++
2014-11-22 09:37:40	-->	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 09:38:02	-->	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-22 09:38:45	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 09:38:46	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-22 09:40:28	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-22 09:41:53	<--	on3pk (~on3pk@unaffiliated/on3pk) has quit (Ping timeout: 244 seconds)
2014-11-22 09:42:13	<--	dooshtuRabbit (~dooshtuRa@50.153.116.14) has quit (Ping timeout: 255 seconds)
2014-11-22 09:43:18	<--	nept (b252bcce@gateway/web/freenode/ip.178.82.188.206) has quit (Quit: Page closed)
2014-11-22 09:44:17	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 09:44:37	-->	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 09:44:50	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 09:44:52	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 09:45:08	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 09:46:48	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-22 09:47:29	<--	blackwind_123 (~IceChat9@117.202.25.211) has quit (Ping timeout: 256 seconds)
2014-11-22 09:49:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 09:50:08	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-22 09:50:56	-->	blackwind_123 (~IceChat9@117.192.141.51) has joined ##c++
2014-11-22 09:52:11	<--	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-22 09:52:33	-->	kralyk (~kralyk@88.146.158.152) has joined ##c++
2014-11-22 09:52:44	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 09:52:51	-->	k0nichiwa (~jdoe@ip-64-134-149-247.public.wayport.net) has joined ##c++
2014-11-22 09:52:52	kralyk	Hi
2014-11-22 09:53:03	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 09:53:20	kralyk	Can I somehow create a const std::string from an array of chars without copy?
2014-11-22 09:55:10	lh_mouse	Currently, no.
2014-11-22 09:55:15	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-22 09:55:34	lh_mouse	But you can create a static const one instead so you only need to create it once.
2014-11-22 09:56:23	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Quit: snakenerd)
2014-11-22 09:57:24	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-22 09:57:43	-->	Unscrup4 (~unscrupt@2607:fb90:2c0a:61be:0:38:b023:2501) has joined ##c++
2014-11-22 09:59:48	-->	Unscrup85 (~unscrupt@2607:fb90:2c11:463e:0:11:a5a9:5201) has joined ##c++
2014-11-22 10:00:37	<--	Unscrupulous (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-22 10:01:25	<--	jitta (~jitta@95.90.246.169) has quit (Quit: Stay stressed, then give up.)
2014-11-22 10:02:16	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 10:02:24	<--	Unscrup4 (~unscrupt@2607:fb90:2c0a:61be:0:38:b023:2501) has quit (Ping timeout: 272 seconds)
2014-11-22 10:03:40	<--	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:4086:6cb:e5d6:5a0d) has quit (Ping timeout: 272 seconds)
2014-11-22 10:04:33	kralyk	Actually, I have a vector of unsigned char which I would like to feed to std::hash
2014-11-22 10:04:41	kralyk	But std::hash only has spec for string, not vector...
2014-11-22 10:05:39	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 265 seconds)
2014-11-22 10:05:44	lh_mouse	then don't use a vector, use a string instead.
2014-11-22 10:05:57	TheHackOps	^
2014-11-22 10:06:32	kralyk	Ok, lemme check if I can...
2014-11-22 10:07:43	-->	ztirf (~Android@89.204.155.170) has joined ##c++
2014-11-22 10:07:44	TinoDidriksen	Even if you can't, it's easy enough to overload std::hash for vector<uint8_t>
2014-11-22 10:08:51	lh_mouse	There is nothing that the standard library can't do. There is nothing that the standard can do satisfyingly.
2014-11-22 10:09:47	lh_mouse	(insert library after last standard)
2014-11-22 10:09:57	kralyk	TinoDidriksen: well I would need to write the hash func myself then wouldn't I?
2014-11-22 10:10:22	TinoDidriksen	No, you can feed it in a loop to std::hash<uint8_t>
2014-11-22 10:10:27	<--	TheAncientGoat (~quassel@175.143.242.172) has quit (Remote host closed the connection)
2014-11-22 10:10:56	-->	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:b80c:c2a0:9569:6d39) has joined ##c++
2014-11-22 10:11:21	-->	Cyp__ (~Cyp_@62.61.130.228.generic-hostname.arrownet.dk) has joined ##c++
2014-11-22 10:11:28	TheHackOps	TinoDidriksen, Hey man
2014-11-22 10:11:40	TinoDidriksen	Hullo
2014-11-22 10:11:45	kralyk	TinoDidriksen: and then do what with the results?
2014-11-22 10:11:57	TinoDidriksen	Return them as a size_t
2014-11-22 10:11:57	kralyk	I'm probably gonna use string...
2014-11-22 10:12:04	TinoDidriksen	std::string is certainly easier.
2014-11-22 10:12:31	kralyk	TinoDidriksen: you'd need to combine them all somehow... Which is kind of what design of hash funcs is about isn't it...
2014-11-22 10:12:54	TheHackOps	hash is the one thing in the STL i have never looked at
2014-11-22 10:13:02	TheHackOps	Im assuming its not for hashing algorithms
2014-11-22 10:13:04	TheHackOps	like MD5
2014-11-22 10:13:11	-->	Ascian (~cbainx@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-22 10:13:34	kralyk	Too bad stdlib doesn't expose some hash_bytes function even though it has to have one inside somewhere...
2014-11-22 10:13:50	<--	ztirf (~Android@89.204.155.170) has quit (Read error: Connection reset by peer)
2014-11-22 10:14:16	TheHackOps	hash is not that high level right TinoDidriksen ?
2014-11-22 10:14:18	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-22 10:14:19	-->	ztirf (~Android@89.204.155.170) has joined ##c++
2014-11-22 10:14:22	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 244 seconds)
2014-11-22 10:14:32	TinoDidriksen	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3876.pdf proposed a hash_combine() ... maybe just copy that.
2014-11-22 10:14:59	lh_mouse	MD5 is too slow.
2014-11-22 10:15:29	kralyk	Nice.
2014-11-22 10:15:32	TheHackOps	lh_mouse, Just an example
2014-11-22 10:15:39	lh_mouse	You don't have any security requirements in an unoedered_set do you?
2014-11-22 10:15:44	<--	Unscrup85 (~unscrupt@2607:fb90:2c11:463e:0:11:a5a9:5201) has quit (Read error: Connection reset by peer)
2014-11-22 10:16:03	Eelis	TheHackOps: the primary use case for hashing in the stdlib is for hashing unordered_map/set keys
2014-11-22 10:16:15	TheHackOps	I know this is offtopic but I think Im going to take Mathematical security at uni as a Minor
2014-11-22 10:16:20	TheHackOps	Always seemed fun
2014-11-22 10:16:22	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-22 10:16:22	lh_mouse	s,unoedered_set,unordered_set,
2014-11-22 10:16:40	-->	Unscrupulous (~unscrupt@172.56.33.148) has joined ##c++
2014-11-22 10:16:43	kralyk	md5 is too slow for hash tables and too insecure for crypto
2014-11-22 10:16:55	TheHackOps	mhm
2014-11-22 10:17:26	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 10:17:55	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-22 10:18:14	-->	dooshtuRabbit (~dooshtuRa@50.153.116.138) has joined ##c++
2014-11-22 10:18:49	TheHackOps	http://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction
2014-11-22 10:18:49	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-22 10:18:54	TheHackOps	This kind of stuff is so cool
2014-11-22 10:18:55	TheHackOps	to me
2014-11-22 10:19:05	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 10:19:17	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Remote host closed the connection)
2014-11-22 10:19:31	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 10:20:02	Eelis	there is no crypto in the C++ stdlib
2014-11-22 10:20:32	Eelis	and i don't think there will be any time soon
2014-11-22 10:21:04	ville	just don't. the process to change it would just be too slow to be of any use.
2014-11-22 10:21:22	Eelis	yep
2014-11-22 10:21:26	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-22 10:22:01	Eelis	standardized bigints might be useful, *shrug*
2014-11-22 10:22:08	ville	the price for fucking it up is too high and you will fuck it up. crypto that is
2014-11-22 10:22:29	TheHackOps	ville, But its interesting maths
2014-11-22 10:22:32	TheHackOps	So i want to learn it
2014-11-22 10:22:34	TheHackOps	heh
2014-11-22 10:22:39	lh_mouse	!ot math
2014-11-22 10:22:39	nolyc	Standard C++ has no notion of `math', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-11-22 10:22:54	Eelis	lh_mouse: don't abuse the bot. C++ does have a notion of math
2014-11-22 10:22:57	<--	ztirf (~Android@89.204.155.170) has quit (Read error: Connection reset by peer)
2014-11-22 10:23:03	lh_mouse	Oh yea.
2014-11-22 10:23:04	-->	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:ac0c:43ba:29fa:4c5e) has joined ##c++
2014-11-22 10:23:04	Eelis	and bignums have been proposed
2014-11-22 10:23:07	Eelis	iirc
2014-11-22 10:23:29	ville	bigints, fixed point and so on are definetly something that should be available
2014-11-22 10:23:38	lh_mouse	I meant to say 'math' of that algorithm.
2014-11-22 10:23:42	<--	paul424 (~chatzilla@91.207.69.217) has quit (Remote host closed the connection)
2014-11-22 10:23:46	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-22 10:24:17	TheHackOps	There are external libs for it
2014-11-22 10:24:24	TheHackOps	but I would like bigint for sure
2014-11-22 10:24:31	ville	and trees. it's amazingly peculiar that boost doesn't have trees library.
2014-11-22 10:24:35	kralyk	thank god both vector and string have value_type ...
2014-11-22 10:24:44	lamefun	What's a common good accepted way to traverse very complex recursive structures without actual recursion?
2014-11-22 10:24:55	lh_mouse	kralyk, it is part of `container requirements`.
2014-11-22 10:24:59	lamefun	That's readable and writable.
2014-11-22 10:25:19	lh_mouse	lamefun, for(auto &&value : container) { }
2014-11-22 10:25:25	kralyk	lh_mouse: Nice. Stdlib might be a bit stiff sometimes but has many of the basics done right...
2014-11-22 10:25:51	Eelis	kralyk: the stdlib gets many of the basics wrong
2014-11-22 10:26:11	-->	ztirf (~Android@89.204.155.170) has joined ##c++
2014-11-22 10:26:21	kralyk	That's why I wrote "many" instead of "all" :D
2014-11-22 10:26:35	-->	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 10:26:36	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-22 10:26:38	-->	rol31 (~bf3@dyn.170-56-7-31.swissinet.com) has joined ##c++
2014-11-22 10:26:44	<--	Unscrupulous (~unscrupt@172.56.33.148) has quit (Ping timeout: 244 seconds)
2014-11-22 10:26:49	TheHackOps	Night guys
2014-11-22 10:26:52	TheHackOps	im out peace
2014-11-22 10:26:58	lamefun	lh_mouse, no, eg. JSON allows arbitrarily nested values and traversing/parsing it using recursion can result in stack overflow. Is there a commonly good accepted way to traverse such structures?
2014-11-22 10:27:02	<--	dooshtuRabbit (~dooshtuRa@50.153.116.138) has quit (Ping timeout: 255 seconds)
2014-11-22 10:27:25	lh_mouse	Then don't use recursion.
2014-11-22 10:27:28	<--	TheHackOps (~TheHackOP@203-158-39-145.dyn.iinet.net.au) has quit (Quit: "Because its 2:30 AM")
2014-11-22 10:27:30	-->	Unscrupulous (~unscrupt@2607:fb90:2c11:463e:0:11:a5a9:5201) has joined ##c++
2014-11-22 10:27:31	kralyk	lamefun: Basically you want either BFS or DFS right? You can implement both using stack/queue
2014-11-22 10:27:33	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:ac0c:43ba:29fa:4c5e) has joined ##c++
2014-11-22 10:28:18	Eelis	!testcase
2014-11-22 10:28:20	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-22 10:28:24	kralyk	also don't write json parser :)
2014-11-22 10:29:35	lamefun	kralyk, JsonCpp crashes on 20mb nested array because of stack overflow because it uses plain recursion.
2014-11-22 10:30:20	lamefun	kralyk, that's obvious, now is there a commonly accepted way to do it without turning the code into an unreadable mess.
2014-11-22 10:30:42	<--	ztirf (~Android@89.204.155.170) has quit (Ping timeout: 264 seconds)
2014-11-22 10:30:44	<--	komarov (~komarov@ppp91-122-120-198.pppoe.avangarddsl.ru) has quit (Ping timeout: 265 seconds)
2014-11-22 10:31:06	-->	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has joined ##c++
2014-11-22 10:31:30	ville	lamefun: yes. your computer science algorithm 101 should have taught you how to turn recursion into iteration
2014-11-22 10:31:45	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-22 10:31:50	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 10:32:21	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 10:32:44	<--	Unscrupulous (~unscrupt@2607:fb90:2c11:463e:0:11:a5a9:5201) has quit (Ping timeout: 272 seconds)
2014-11-22 10:32:45	kralyk	lamefun: Do you have an option to reduce the amount of nesting? It's generally not a good idea to have gazillion nesting levels in you json. I'm not sure how many stadard allows but in most implementations there will be a limit.
2014-11-22 10:33:03	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 10:33:16	kralyk	IIRC browsers usually accept JSON with too many nesting levels.
2014-11-22 10:33:22	-->	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has joined ##c++
2014-11-22 10:33:25	kralyk	*DON'T accept
2014-11-22 10:33:41	-->	Unscrupulous (~unscrupt@172.56.33.148) has joined ##c++
2014-11-22 10:34:42	lamefun	ville, by re-implementing the call machinery the language should have already implemented for me?
2014-11-22 10:35:46	ville	lamefun: yup. it's quite mechanical transform.
2014-11-22 10:36:04	<--	cleamoon_ (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-11-22 10:36:07	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-22 10:36:40	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2014-11-22 10:37:38	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-22 10:37:50	kralyk	Or maybe just modify the calls so that they can be tail-call-optimized? If that's possible...
2014-11-22 10:38:52	lamefun	ville, it's like having to chain callback instead of using Microsoft C# async/yield keywords...
2014-11-22 10:39:06	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-22 10:39:09	lamefun	A sane language should have programmer covered in basics like this...
2014-11-22 10:40:06	kralyk	lol
2014-11-22 10:40:20	Eelis	just do the equivalent of SAX for JSON
2014-11-22 10:40:26	Eelis	!next
2014-11-22 10:40:27	nolyc	Another satisfied customer, next!
2014-11-22 10:40:53	lh_mouse	Theoretically, you can turn any recursion into iteration using a stack, either the one your system provides or a custom one implemented using one of std containers.
2014-11-22 10:41:04	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-22 10:41:28	Eelis	you could even use std::stack *gasp*!
2014-11-22 10:41:35	<--	zer0def (~zer0def@5.254.147.10) has quit (Ping timeout: 258 seconds)
2014-11-22 10:42:06	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-22 10:42:11	lamefun	Theoretically you don't need functions at all. Let's ban C++ and make a language without function calls and local variables, fake all the call machinery and call this the call pattern, and praise it after acquiring Stockholm syndrome!
2014-11-22 10:42:12	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Ping timeout: 272 seconds)
2014-11-22 10:42:17	lh_mouse	std::stack uses std::deque by default so it nevertheless uses a container.
2014-11-22 10:42:34	Eelis	lamefun: there is nothing theoretical about stdlib containers. they're real. they work
2014-11-22 10:42:59	Eelis	lh_mouse: the point is that std::stack is not a "custom one"
2014-11-22 10:43:47	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-22 10:44:00	V-ille	we should design a language called B==|D
2014-11-22 10:44:16	V-ille	and then we could introduce its superior new version, B=======|D
2014-11-22 10:44:39	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:ac0c:43ba:29fa:4c5e) has quit (Ping timeout: 258 seconds)
2014-11-22 10:44:39	<--	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:ac0c:43ba:29fa:4c5e) has quit (Ping timeout: 258 seconds)
2014-11-22 10:44:48	Eelis	i say lose the ring. it's unsightly
2014-11-22 10:45:37	V-ille	is B=={D better?
2014-11-22 10:45:50	Eelis	o_O
2014-11-22 10:46:12	ville	Eelis supports male genitelia mutilation!?
2014-11-22 10:46:28	ville	oh yeah off-topic too.
2014-11-22 10:46:31	V-ille	genitalia? what genitalia? I haven't even explained the name yet.
2014-11-22 10:46:47	ville	it's an ascii dick of course
2014-11-22 10:46:55	V-ille	of course not. I wouldn't do that.
2014-11-22 10:46:55	kralyk	oh I get it, B equals equals or D, of course...
2014-11-22 10:47:15	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2014-11-22 10:47:36	V-ille	then there could be B==D * and B==D {}
2014-11-22 10:47:57	ville	even the letters B, D suggest the name Big Dick.
2014-11-22 10:48:51	Eelis	Banana-sized Dong
2014-11-22 10:49:10	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-22 10:49:14	quaz0r	!stdcpp Banana-sized Dong
2014-11-22 10:49:15	nolyc	Standard C++ has no notion of `Banana-sized Dong', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-11-22 10:49:23	Eelis	it's a C++17 feature
2014-11-22 10:49:50	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-22 10:50:04	-->	Nazcafan (~fou@5ec06e88.skybroadband.com) has joined ##c++
2014-11-22 10:50:09	quaz0r	trying to get more women into programming
2014-11-22 10:50:52	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-22 10:51:14	-->	Unscrup60 (~unscrupt@208.54.32.163) has joined ##c++
2014-11-22 10:51:30	o-0-o	quaz0r: not in this reality
2014-11-22 10:51:31	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 10:51:33	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 10:52:34	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-22 10:52:42	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 10:52:52	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-22 10:52:57	<--	Unscrupulous (~unscrupt@172.56.33.148) has quit (Ping timeout: 272 seconds)
2014-11-22 10:52:58	<--	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 10:55:24	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 10:56:13	-->	ztirf (~Android@89.204.137.149) has joined ##c++
2014-11-22 10:57:44	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 265 seconds)
2014-11-22 10:57:58	<--	blast_ (~quassel@d60-65-191-146.col.wideopenwest.com) has quit (Read error: Connection reset by peer)
2014-11-22 10:58:01	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-22 10:58:08	ville	wait 10 years. kids are being taught programming these days
2014-11-22 10:58:30	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 10:58:40	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-22 10:58:56	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 10:59:01	Eelis	kids being taught maths hasn't resulted in a lot of women engineers
2014-11-22 10:59:17	Eelis	why would coding be different.
2014-11-22 10:59:49	Eelis	physics, chemistry..
2014-11-22 10:59:59	marchelzo_	because javascript frameworks
2014-11-22 11:00:04	ville	it's not quite as rigorous as engineering disciplines? i mean the whole field of programming. not academa and actual computer science.
2014-11-22 11:00:09	-->	Tectu_ (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-11-22 11:00:15	quaz0r	until autism starts afflicting females there will indeed not be more than a handful of women programmers
2014-11-22 11:00:15	ville	academia
2014-11-22 11:00:27	Tectu_	so in a prototype, const at the end means that the method does not modify any members of the class, is that correct?
2014-11-22 11:00:36	-->	Unscrupulous (~unscrupt@2607:fb90:2c31:a1b8:0:47:6910:b401) has joined ##c++
2014-11-22 11:00:39	Eelis	Tectu_: yep
2014-11-22 11:00:46	Tectu_	and a const before the return type would mean that the caller is not allowed to modify the returned value?
2014-11-22 11:00:53	Eelis	right
2014-11-22 11:00:56	Tectu_	thank you very much
2014-11-22 11:01:01	Eelis	np
2014-11-22 11:01:11	V-ille	mutable members are an exception to that rule
2014-11-22 11:01:13	Tectu_	time to rework all my code from the past 5 years and add const-correctness :D
2014-11-22 11:01:20	Eelis	good idea
2014-11-22 11:01:23	-->	zer0def (~zer0def@5.254.147.216) has joined ##c++
2014-11-22 11:01:25	marchelzo_	isn't the const _part_ of the return type?
2014-11-22 11:01:30	Tectu_	V-ille, let me check what 'mutable members' are first...
2014-11-22 11:01:57	micom	five years of programming without const-correctness?:0
2014-11-22 11:01:57	Tectu_	Eelis, but when I understand this correctly, const really is just so the compiler can bug you if you do something wrong, right? The actual runtime is not affected?
2014-11-22 11:02:07	Eelis	Tectu_: indeed
2014-11-22 11:02:12	Tectu_	micom, nah, just kidding. probably one to two years.
2014-11-22 11:02:26	Tectu_	it looks like people usually don't really care about const stuff
2014-11-22 11:02:47	Eelis	which people are those?
2014-11-22 11:02:48	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-22 11:02:55	Tectu_	and a static at front of the method would mean that the method can be executed without creating an instance, right?
2014-11-22 11:03:04	Tectu_	sorry, I am a C programmer, quite new to real C++
2014-11-22 11:03:06	V-ille	jeaye: Howard Hinnant says that iterator concepts are known to be broken, and recommends using decltype(*i) rather than iterator_traits<I>::value_type
2014-11-22 11:03:32	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 11:03:39	V-ille	The iterator concepts have been subtly broken for a long time now.? At  one point Dave Abrahams tried to fix them but failed to get consensus.?  The whole package needs an overhaul.? The void types on the output  iterators seems like just the tip of the iceberg to me."
2014-11-22 11:04:05	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 240 seconds)
2014-11-22 11:04:30	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 11:04:31	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 11:04:55	<--	Unscrup60 (~unscrupt@208.54.32.163) has quit (Ping timeout: 258 seconds)
2014-11-22 11:04:56	Tectu_	Eelis, ^
2014-11-22 11:05:50	V-ille	C programmers are increasingly starting to care about const nowadays
2014-11-22 11:05:57	marchelzo_	is it reasonable to model a matrix as std::vector<std::vector<T>> or is there a better way with the STL?
2014-11-22 11:05:57	ville	that's nice to hear
2014-11-22 11:06:01	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Quit: asche zu asche und staub zu staub.)
2014-11-22 11:06:04	ville	marchelzo_: no
2014-11-22 11:06:13	ville	!give marchelzo_ silly matrix
2014-11-22 11:06:14	nolyc	marchelzo_: template<typename T> struct matrix { matrix(unsigned m, unsigned n) : m(m), n(n), vs(m*n) {} T& operator ()(unsigned i, unsigned j) { return vs[i + m * j]; } private: unsigned m; unsigned n; std::vector<T> vs; }; /* column-major/opengl: vs[i + m * j], row-major/c++: vs[n * i + j] */
2014-11-22 11:06:24	V-ille	you could use a valarray
2014-11-22 11:06:44	micom	another attempt to create matrix from the scratch?
2014-11-22 11:07:08	ville	yep. silly matrix is, well, silly, use a ready made 3rd party library that has a matrix type specific to your kind of matrix you want
2014-11-22 11:07:22	Eelis	Tectu_: what
2014-11-22 11:07:41	<--	CustosLimen (~CustosLim@unaffiliated/cust0slim3n) has quit (Remote host closed the connection)
2014-11-22 11:07:45	marchelzo_	ville: what's wrong with silly matrix?
2014-11-22 11:07:51	V-ille	Eelis: (06:05:56 PM) Tectu_: sorry, I am a C programmer, quite new to real C++
2014-11-22 11:08:01	Eelis	Tectu_: oh, your static question. yes
2014-11-22 11:08:07	Tectu_	Eelis, thank you very much, sir.
2014-11-22 11:08:16	jeaye	V-ille: Actually, that was what I was using first. To be more precise: remove_reference_t<decltype(*in)>{ ... }
2014-11-22 11:08:53	V-ille	jeaye: that's probably what you should continue to use, since iterators will not become sane any time soon
2014-11-22 11:10:12	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-22 11:11:05	-->	Logan54 (~logan@212.164.213.192) has joined ##c++
2014-11-22 11:11:15	-->	tuxdev_ (~tim@pool-98-108-202-191.snloca.dsl-w.verizon.net) has joined ##c++
2014-11-22 11:11:15	<--	tuxdev_ (~tim@pool-98-108-202-191.snloca.dsl-w.verizon.net) has quit (Changing host)
2014-11-22 11:11:15	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-22 11:11:19	lh_mouse	afaik a number of output iterators return references to theirselves in operator*().
2014-11-22 11:11:28	<--	b0lt (r00t@unaffiliated/bolt) has quit (Read error: Connection reset by peer)
2014-11-22 11:12:59	jeaye	V-ille: In my case, unfortunately, it doesn't work.
2014-11-22 11:13:19	jeaye	Since I'm doing things with iterators which the stdlib doesn't like.
2014-11-22 11:13:31	-->	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-22 11:13:32	<--	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has quit (Changing host)
2014-11-22 11:13:32	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2014-11-22 11:13:45	jeaye	(mixing types, squashing and expanding ranges during iteration, etc)
2014-11-22 11:14:13	jeaye	So the type of the input iterator's value_type isn't the type of the output iterator's value_type.
2014-11-22 11:14:15	marchelzo_	when you have the operator() return a T&, if you do something like matrix m(10,10); m(3,3) = 5; Does that actually mutate m?
2014-11-22 11:14:44	V-ille	yes
2014-11-22 11:14:58	V-ille	assuming that the operator() returns *this, of course
2014-11-22 11:14:59	<--	Nazcafan (~fou@5ec06e88.skybroadband.com) has quit (Ping timeout: 240 seconds)
2014-11-22 11:15:00	jeaye	V-ille: For now, I just provided my own insertion iterators in this library. Easy enough to put together.
2014-11-22 11:15:03	lh_mouse	it mutates whatever you returns.
2014-11-22 11:15:10	lh_mouse	s,you,it,
2014-11-22 11:15:17	V-ille	we mutates whatever we returns
2014-11-22 11:15:24	V-ille	we kills its and eats its
2014-11-22 11:15:26	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-22 11:15:30	jeaye	silly hobbitses
2014-11-22 11:15:32	marchelzo_	I was talking specificallt about the silly matrix implementation above
2014-11-22 11:16:22	V-ille	yes, it allows assigning to the element returned by-reference from operator()
2014-11-22 11:16:33	marchelzo_	that is incredible
2014-11-22 11:16:35	marchelzo_	thank you
2014-11-22 11:16:55	-->	b0lt (r00t@178.74.28.62) has joined ##c++
2014-11-22 11:17:01	<--	b0lt (r00t@178.74.28.62) has quit (Changing host)
2014-11-22 11:17:01	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-22 11:18:13	-->	altin (~altin@37.35.64.43) has joined ##c++
2014-11-22 11:18:13	<--	altin (~altin@37.35.64.43) has quit (Changing host)
2014-11-22 11:18:13	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-22 11:18:13	<--	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:b80c:c2a0:9569:6d39) has quit (Ping timeout: 272 seconds)
2014-11-22 11:18:57	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-22 11:19:28	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 11:19:47	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-22 11:21:32	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-22 11:21:40	-->	Taoki (~MirceaKit@93.113.162.37) has joined ##c++
2014-11-22 11:22:22	Taoki	Hello. Does anyone know why I get the following error when compiling a certain program?
2014-11-22 11:22:25	Taoki	symbol number 4915 references nonexistent SHT_SYMTAB_SHNDX section
2014-11-22 11:23:07	<--	kaffeetrauma (~Thunderbi@5.147.4.15) has quit (Ping timeout: 250 seconds)
2014-11-22 11:23:35	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 256 seconds)
2014-11-22 11:24:44	-->	ztirf_ (~Android@HSI-KBW-109-192-117-198.hsi6.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-22 11:25:25	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-22 11:26:35	<--	ztirf (~Android@89.204.137.149) has quit (Read error: Connection reset by peer)
2014-11-22 11:26:41	-->	davi (davi@gnu/davi) has joined ##c++
2014-11-22 11:28:03	marchelzo_	Say I want to define a function which takes a file name, and returns a silly matrix constructed by reading in values from the file. Suppose I wanted to return a matrix, and not a pointer to a matrix. Do I need to define a move constructor in the matrix class in order for this to be optimized?
2014-11-22 11:28:38	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 11:28:39	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 11:28:59	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 11:29:11	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-22 11:31:45	<--	tarruda (~tarruda@186.212.114.233) has quit (Ping timeout: 264 seconds)
2014-11-22 11:31:45	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 11:31:52	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-11-22 11:32:08	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 11:32:20	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Ping timeout: 240 seconds)
2014-11-22 11:32:52	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-22 11:33:29	<--	ztirf_ (~Android@HSI-KBW-109-192-117-198.hsi6.kabel-badenwuerttemberg.de) has quit (Remote host closed the connection)
2014-11-22 11:34:12	clynamen	marchelzo_: the old way to do this is to pass the argument by reference
2014-11-22 11:34:31	o-0-o	old way?
2014-11-22 11:34:34	o-0-o	what is the new way?
2014-11-22 11:34:41	marchelzo_	clynamen: you mean the function should have a void return type?
2014-11-22 11:35:09	o-0-o	even the 'old' way works by returning by value (avoid non const ref args)
2014-11-22 11:35:20	clynamen	o-0-o: well, now we have move constructor too
2014-11-22 11:35:46	o-0-o	:))))))))
2014-11-22 11:35:58	o-0-o	<3 rules
2014-11-22 11:36:09	clynamen	marchelzo_: it is a possible way to do this
2014-11-22 11:36:18	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-22 11:36:19	o-0-o	move and lambda/std::function were the best C++11 accomplishments
2014-11-22 11:36:31	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 11:37:07	Taoki	Anyone know about my issue too please?
2014-11-22 11:37:17	marchelzo_	But if I want the function to actually return the matrix without doing a copy, do I need a move constructor?
2014-11-22 11:37:33	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Client Quit)
2014-11-22 11:38:20	o-0-o	Taoki: what is your C++ question?
2014-11-22 11:38:21	marchelzo_	Passing an already initialized matrix by reference and having the function mutate it feels like C.
2014-11-22 11:38:25	-->	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-22 11:38:28	Taoki	Anyone know about my issue too please?
2014-11-22 11:38:29	Taoki	symbol number 4915 references nonexistent SHT_SYMTAB_SHNDX section
2014-11-22 11:38:31	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-22 11:38:33	<--	VinnieSegura (~Vincent@69.80.100.92) has quit (Quit: Leaving)
2014-11-22 11:38:34	clynamen	marchelzo_: you can use pimpl
2014-11-22 11:38:42	o-0-o	Taoki: this is not standard C++
2014-11-22 11:38:45	Taoki	Erm, sorry, I meant I get the error above when trying to compile something
2014-11-22 11:38:45	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-22 11:38:46	Taoki	Ah
2014-11-22 11:38:53	o-0-o	!give Taoki testcase
2014-11-22 11:38:55	nolyc	Taoki: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-22 11:39:06	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2014-11-22 11:39:19	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-22 11:39:23	Taoki	I'm trying to compile this https://github.com/highfidelity/hifi It says it's c++
2014-11-22 11:39:25	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 245 seconds)
2014-11-22 11:39:37	Taoki	Should I paste the full compilation log?
2014-11-22 11:39:41	kalven	marchelzo_: yes, this is a good case for a move constructor
2014-11-22 11:39:45	<--	idub (~idub@71-223-107-65.phnx.qwest.net) has quit (Read error: No route to host)
2014-11-22 11:40:07	Taoki	The code isn't mine so I don't know what part to extract otherwise
2014-11-22 11:40:12	marchelzo_	kalven: I see. And without a move constructor, there can be no return value optimization?
2014-11-22 11:40:14	o-0-o	Taoki: so we can't help
2014-11-22 11:40:25	o-0-o	Taoki: read your compiler's reference manual
2014-11-22 11:40:37	Taoki	Ok. I'll paste the full log too, if anyone can make use of that
2014-11-22 11:40:45	clynamen	marchelzo_: actually, the compiler will not copy the return value in some case
2014-11-22 11:40:49	o-0-o	Taoki: you really expect we can help on code made by others?
2014-11-22 11:40:56	kalven	marchelzo_: RVO and moves are different.
2014-11-22 11:40:58	clynamen	marchelzo_: but I do not really remember all the rules for dis
2014-11-22 11:41:00	clynamen	*this
2014-11-22 11:41:07	<--	aggn (~irc@2001:4ca0:0:f262:c0cd:9c94:cae3:325a) has quit (Remote host closed the connection)
2014-11-22 11:41:22	marchelzo_	I know that, which is why I'm curious as to whether or not I need a move constructor to achieve the return without copy.
2014-11-22 11:41:40	kalven	marchelzo_: yes, if you want guarantees
2014-11-22 11:41:42	Taoki	o-0-o: No... but that error didn't look like a general programming error. I googled, and the missing symbol part appeared to be related to a compiler issue. Like the compiler not understanding symbols
2014-11-22 11:41:43	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-22 11:41:53	marchelzo_	kalven: okay that's what I was looking for. thanks
2014-11-22 11:42:08	quaz0r	Taoki: what he means to say is that nobody helps people with random build errors like that here, and if you continue to ask you will only be further ridiculed
2014-11-22 11:42:08	<--	Unscrupulous (~unscrupt@2607:fb90:2c31:a1b8:0:47:6910:b401) has quit (Read error: Connection reset by peer)
2014-11-22 11:42:30	Taoki	wow, ok i guess
2014-11-22 11:42:34	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 265 seconds)
2014-11-22 11:42:35	-->	Unscrupulous (~unscrupt@c-24-21-164-161.hsd1.or.comcast.net) has joined ##c++
2014-11-22 11:42:35	-->	titanium17 (~titanium1@2604:6000:6440:2200:a4e1:948c:21ee:77) has joined ##c++
2014-11-22 11:42:43	Taoki	Like I said, i thought it's a compiler issue, not an issue in the person's code
2014-11-22 11:42:49	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-22 11:42:50	Taoki	no worries
2014-11-22 11:42:56	o-0-o	Taoki: worse, it is not your code. so you want us to waste our time to save YOUR time
2014-11-22 11:43:19	Taoki	Again, I thought it's a gcc bug.
2014-11-22 11:43:20	<--	Supicios- (~Supicioso@2607:5300:100:200::5e4) has left ##c++
2014-11-22 11:43:28	o-0-o	Taoki: this is not a support channel, neither a help or learning channel
2014-11-22 11:43:41	o-0-o	Taoki:  try clang
2014-11-22 11:43:43	-->	Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-22 11:43:43	Taoki	ok
2014-11-22 11:43:50	Supicioso	Well that was weird.
2014-11-22 11:43:58	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-22 11:44:00	Supicioso	is an unsigned int the same as a long?
2014-11-22 11:44:07	o-0-o	ofc not
2014-11-22 11:44:23	Supicioso	Hmm.
2014-11-22 11:44:37	-->	altin_ (~altin@flossk/altin) has joined ##c++
2014-11-22 11:44:38	o-0-o	!give Supicioso stdref integer types
2014-11-22 11:44:40	nolyc	Supicioso: http://en.cppreference.com/w/cpp/types/integer
2014-11-22 11:44:57	<--	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-22 11:45:00	ville	Supicioso: there are lot of wonderful integer promotions available in c++
2014-11-22 11:45:07	<--	psii (~psi@gateway/tor-sasl/foopsi) has quit (Remote host closed the connection)
2014-11-22 11:45:34	o-0-o	welcome to C++, where integer types can be very good, useful and versatile, but they can bite your hand when you least expect :D
2014-11-22 11:45:40	Supicioso	from what I gather unsigned allows integers to go higher while removing negatives.
2014-11-22 11:45:47	ville	Supicioso: yes
2014-11-22 11:45:49	o-0-o	unsigned is a virus
2014-11-22 11:46:04	o-0-o	once you get to unsigned, there is no (portable) turning back
2014-11-22 11:46:12	Supicioso	oooh.
2014-11-22 11:46:19	Supicioso	That's good to know.
2014-11-22 11:46:24	-->	psii (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-11-22 11:46:41	o-0-o	in practice, you can go back and forth, since most archs use complement of two
2014-11-22 11:46:43	ville	it might be ok if there were no implicit conversions
2014-11-22 11:46:59	o-0-o	but some obscure archs may screw you when converting unsigned to signed
2014-11-22 11:47:19	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 245 seconds)
2014-11-22 11:47:20	o-0-o	std only guarantees signed to unsigned conversion
2014-11-22 11:47:23	ville	at least then i wouldn't be outsmarted by the implicit conversin rules
2014-11-22 11:47:26	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-22 11:47:36	o-0-o	and ville is right. implicit conversions are a pain
2014-11-22 11:47:46	ville	i'd get an error and be forced to think if the conversion is ok
2014-11-22 11:47:52	o-0-o	<< (-3 + 1U)
2014-11-22 11:47:53	geordi	4294967294
2014-11-22 11:47:53	<--	rpag (~rg4@unaffiliated/rg4) has quit (Ping timeout: 256 seconds)
2014-11-22 11:47:58	o-0-o	:(
2014-11-22 11:48:13	marchelzo_	Is this a reasonable implementation of the move constructor for this class? http://codepad.org/bv6pgJvs
2014-11-22 11:48:24	<--	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Ping timeout: 240 seconds)
2014-11-22 11:48:39	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-22 11:49:11	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-22 11:49:13	Supicioso	I'll try to stay away from implicit conversions then.
2014-11-22 11:49:21	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Client Quit)
2014-11-22 11:49:25	o-0-o	they won't stay away from you :)
2014-11-22 11:49:45	kalven	marchelzo_: you get a move constructor for free in that class, no need to write your own
2014-11-22 11:49:54	o-0-o	= default;
2014-11-22 11:50:02	kalven	marchelzo_: get rid of the destructor and you'll get it.
2014-11-22 11:50:29	marchelzo_	kalven: How can you tell that I get it for free? Also, if I didn't get it for free, would mine be okay? and thanks
2014-11-22 11:50:30	peterR``	can you easily combine less than operators for structure members when using a structure as a key in std::map?
2014-11-22 11:50:33	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-11-22 11:50:34	-->	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 11:51:14	o-0-o	marchelzo_: writing move ctors is usually a dumb idea. kalven is right. if you have resource classes that manage themselves (vector in your case), move comes for free
2014-11-22 11:51:15	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-22 11:51:16	kalven	marchelzo_: as long as you don't have a custom dtor (which you do, get rid of it) and your members are movable, your class is also movable.
2014-11-22 11:51:49	<--	bazrush_ (~bazrush@149.152.238.178.in-addr.arpa) has quit
2014-11-22 11:52:18	<--	longbow (~androirc@ppp-94-68-164-172.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2014-11-22 11:52:18	o-0-o	marchelzo_: design your classes that you have a low level layer of dumb resource classes and a higher level layer that acts as resource containers. your life will be easier
2014-11-22 11:52:43	marchelzo_	How do I know if the members are movable? Are all of the STL containers movable?
2014-11-22 11:52:46	o-0-o	since you won't need to bother writing copy or move ctors for these layers
2014-11-22 11:52:51	o-0-o	!give marchelzo_ stdref vector
2014-11-22 11:52:53	nolyc	marchelzo_: http://en.cppreference.com/w/cpp/container/vector
2014-11-22 11:52:56	o-0-o	this site knows
2014-11-22 11:52:56	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-22 11:52:58	o-0-o	!next
2014-11-22 11:53:00	nolyc	Another satisfied customer, next!
2014-11-22 11:54:18	pragma-	I wish to be satisfied.
2014-11-22 11:54:29	 *	o-0-o satisfies pragma- in a manly way
2014-11-22 11:54:40	kalven	marchelzo_: you can use http://en.cppreference.com/w/cpp/types/is_move_constructible to check
2014-11-22 11:54:45	o-0-o	lol
2014-11-22 11:54:48	peterR``	can you help me with my std::map problem?
2014-11-22 11:54:58	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 11:55:11	o-0-o	!give peterR`` xy
2014-11-22 11:55:13	nolyc	peterR``: You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is.
2014-11-22 11:55:21	-->	_alfalfa (~jdoe@ip-64-134-149-247.public.wayport.net) has joined ##c++
2014-11-22 11:55:41	peterR``	lol, really?
2014-11-22 11:55:56	peterR``	my original question was can you easily combine less than operators for structure members when using a structure as a key in std::map?
2014-11-22 11:56:05	o-0-o	oh you are not satisfied with our service?
2014-11-22 11:56:11	o-0-o	please come here to sign a complaint form
2014-11-22 11:56:15	o-0-o	!next2
2014-11-22 11:56:16	nolyc	Another dissatisfied customer, next!
2014-11-22 11:56:17	kalven	peterR``: yes, you can use forward_as_tuple
2014-11-22 11:56:22	<--	wakd (~wakd@unaffiliated/wakd) has quit (Ping timeout: 255 seconds)
2014-11-22 11:56:30	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-22 11:56:34	peterR``	each of the structure members has a less than operator, but no other comparison operators
2014-11-22 11:56:48	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-22 11:56:51	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 11:56:53	<--	k0nichiwa (~jdoe@ip-64-134-149-247.public.wayport.net) has quit (Ping timeout: 240 seconds)
2014-11-22 11:57:41	Supicioso	Does %d work for floats with sprintf?
2014-11-22 11:57:42	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-22 11:57:56	peterR``	no
2014-11-22 11:58:07	Supicioso	Oh, this site is more detailed.
2014-11-22 11:58:22	mihipte	%d is %i... I can't remember whether it prints the integer part of a float
2014-11-22 11:58:34	Supicioso	been using cplusplus.com cppreference has a lot more details :O
2014-11-22 11:58:57	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Ping timeout: 245 seconds)
2014-11-22 11:59:01	mihipte	I use both, each sometimes covers something the other doesn't
2014-11-22 11:59:22	mihipte	I usually find myself on Wikipedia for printf, though
2014-11-22 11:59:27	--	zq is now known as immadick
2014-11-22 11:59:32	-->	ne555_ (~ne555@host150.190-31-78.telecom.net.ar) has joined ##c++
2014-11-22 11:59:42	o-0-o	Supicioso: YUUUUUUUUCK
2014-11-22 11:59:47	Supicioso	yuk?
2014-11-22 11:59:53	o-0-o	cplusplus.com is awful
2014-11-22 11:59:59	Supicioso	I can see that now lol
2014-11-22 12:00:13	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 12:00:40	quaz0r	people still use printf?
2014-11-22 12:00:54	mihipte	o-0-o, awful? that's a lot worse than I would have rated it
2014-11-22 12:01:16	peterR``	some people prefer it because it is terser
2014-11-22 12:01:22	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 240 seconds)
2014-11-22 12:01:31	<--	kralyk (~kralyk@88.146.158.152) has quit (Ping timeout: 258 seconds)
2014-11-22 12:01:51	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-22 12:01:54	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-22 12:01:54	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-22 12:02:01	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 12:02:03	kalven	peterR``: bool operator<(const T& rhs) const { return forward_as_tuple(a,b,c) < forward_as_tuple(rhs.a, rhs.b, rhs.c); }
2014-11-22 12:03:05	<--	ne555 (~ne555@host79.190-137-123.telecom.net.ar) has quit (Ping timeout: 272 seconds)
2014-11-22 12:04:11	<--	ne555_ (~ne555@host150.190-31-78.telecom.net.ar) has quit (Ping timeout: 258 seconds)
2014-11-22 12:04:19	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-22 12:04:59	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-mcsjiujinnoapbco) has joined ##c++
2014-11-22 12:06:58	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-22 12:07:25	<--	Taoki (~MirceaKit@93.113.162.37) has left ##c++ ("KVIrc KVIrc Equilibrium 4.2.0, revision: 6190, sources date: 20120701, built on: 2014-10-10 17:58:35 UTC http://www.kvirc.net/")
2014-11-22 12:08:26	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-22 12:08:30	<--	nyqiust (~nyquist@178.162.205.25) has quit (Ping timeout: 250 seconds)
2014-11-22 12:08:32	peterR``	thanks kalven - very helpful
2014-11-22 12:08:35	pa	is there any way to switch of a "using namespace bla;" statement ? i have a class defined in a namespace, and then in the source file i have some local functions used by the class methods definitions. The problem is that these functions uses types defined in the namespace
2014-11-22 12:08:50	pa	so i wanted to turn on the using namespace, but i would like to remove it afterward
2014-11-22 12:09:05	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-22 12:09:47	<--	nilg (~user@AAubervilliers-653-1-206-207.w81-249.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-22 12:11:21	-->	Blaguvest (~blaguvest@unaffiliated/blaguvest) has joined ##c++
2014-11-22 12:11:57	-->	nilg (~user@AAubervilliers-653-1-206-207.w81-249.abo.wanadoo.fr) has joined ##c++
2014-11-22 12:12:18	<--	nilg (~user@AAubervilliers-653-1-206-207.w81-249.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-22 12:12:21	--	immadick is now known as zq
2014-11-22 12:12:29	quaz0r	pa: isnt that what {} is for
2014-11-22 12:12:48	<--	Kopharex (~Kopharex@79.143.121.246) has quit (Quit: Leaving)
2014-11-22 12:13:02	<--	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Quit: Leaving.)
2014-11-22 12:13:08	pa	so you suggest to define these source-local methods in a namespace bla?{} block?
2014-11-22 12:13:44	quaz0r	im a noob i suggest nothing
2014-11-22 12:13:57	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-22 12:14:09	Jinxit	if I get your question right, you can use anonymous namespaces
2014-11-22 12:14:27	Jinxit	namespace { //any function in here is only visible in the same file }
2014-11-22 12:14:28	pa	hm im in c++03
2014-11-22 12:15:39	-->	tarruda (~tarruda@186.212.114.233) has joined ##c++
2014-11-22 12:16:12	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-22 12:16:42	<--	Anodl (~Anodl@p4FDEE12A.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-22 12:16:57	-->	minas114 (~minas@213.7.17.186) has joined ##c++
2014-11-22 12:17:02	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 244 seconds)
2014-11-22 12:17:11	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-22 12:17:15	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-11-22 12:17:25	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-22 12:19:19	<--	_alfalfa (~jdoe@ip-64-134-149-247.public.wayport.net) has quit (Ping timeout: 250 seconds)
2014-11-22 12:20:17	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 12:20:48	<--	scai (~scai@p4FF0F6DC.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-22 12:21:38	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 265 seconds)
2014-11-22 12:21:38	<--	ChemicalRascal (~ChemicalR@unaffiliated/chemicalrascal) has quit (Ping timeout: 265 seconds)
2014-11-22 12:21:59	<--	minas114 (~minas@213.7.17.186) has quit (Quit: Leaving)
2014-11-22 12:22:17	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 12:22:44	-->	ChemicalRascal (~ChemicalR@unaffiliated/chemicalrascal) has joined ##c++
2014-11-22 12:23:50	-->	nyqiust (~nyquist@213162068078.public.t-mobile.at) has joined ##c++
2014-11-22 12:23:56	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-22 12:25:59	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-11-22 12:28:26	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-22 12:29:24	-->	marvinalone (~marvinalo@172.56.40.10) has joined ##c++
2014-11-22 12:29:51	-->	aggn (~irc@host199-2.natpool.mwn.de) has joined ##c++
2014-11-22 12:30:37	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-22 12:30:47	<--	tarruda (~tarruda@186.212.114.233) has quit (Ping timeout: 265 seconds)
2014-11-22 12:31:25	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 12:31:46	<--	psii (~psi@gateway/tor-sasl/foopsi) has quit (Ping timeout: 250 seconds)
2014-11-22 12:32:39	-->	psii (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-11-22 12:33:10	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-22 12:33:55	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Bye)
2014-11-22 12:34:40	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-22 12:35:33	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-22 12:35:33	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-22 12:36:10	<--	marvinalone (~marvinalo@172.56.40.10) has quit (Ping timeout: 250 seconds)
2014-11-22 12:37:37	-->	Nazcafan (~fou@5ec06e88.skybroadband.com) has joined ##c++
2014-11-22 12:37:49	--	Anoniem4l`afk is now known as Anoniem4l
2014-11-22 12:39:00	-->	Semiarty (~opanki@91.109.47.11) has joined ##c++
2014-11-22 12:39:00	-->	__sam__ (~sam@p2003004F2D3F42ED45EE8A3C26EE2FF8.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 12:39:52	<--	Nazcafan (~fou@5ec06e88.skybroadband.com) has quit (Read error: Connection reset by peer)
2014-11-22 12:40:06	-->	Kevin-_- (~kevinmelk@66.86.135.95) has joined ##c++
2014-11-22 12:41:05	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:49b5:1449:3e54:a010) has joined ##c++
2014-11-22 12:41:06	-->	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:49b5:1449:3e54:a010) has joined ##c++
2014-11-22 12:43:35	-->	heedypo (~heedypo@2.217.26.22) has joined ##c++
2014-11-22 12:44:06	<--	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-22 12:44:08	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-22 12:44:16	-->	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 12:47:11	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 12:47:47	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-22 12:48:19	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-22 12:48:51	<--	altin_ (~altin@flossk/altin) has quit (Quit: Ex-Chat)
2014-11-22 12:48:58	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 264 seconds)
2014-11-22 12:49:10	-->	InusualZ (~Wesley@adsl-64-237-237-242.prtc.net) has joined ##c++
2014-11-22 12:49:37	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-22 12:50:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 12:50:42	-->	kralyk (~kralyk@88.146.158.152) has joined ##c++
2014-11-22 12:51:15	-->	Nazcafan (~fou@5ec06e88.skybroadband.com) has joined ##c++
2014-11-22 12:51:16	-->	vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-22 12:51:56	<--	Blaguvest (~blaguvest@unaffiliated/blaguvest) has quit
2014-11-22 12:52:22	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 12:53:34	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-22 12:54:02	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 256 seconds)
2014-11-22 12:55:41	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 12:56:44	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-11-22 12:56:57	-->	7YUAAEQ2E (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 12:57:11	<--	7YUAAEQ2E (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-22 12:57:16	-->	scrote (~evilution@pool-71-126-82-111.phlapa.east.verizon.net) has joined ##c++
2014-11-22 12:57:17	scrote	hi
2014-11-22 12:57:29	scrote	The members of an initilization list are constructors. correct /
2014-11-22 12:57:32	scrote	?
2014-11-22 12:57:57	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-22 12:57:58	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-22 12:58:00	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 12:58:31	-->	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 12:58:37	-->	h0ru5_ (~h0ru5@ipb21a3b93.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 12:58:53	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Quit: Left for pasta)
2014-11-22 12:58:59	<--	h0ru5_ (~h0ru5@ipb21a3b93.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-11-22 12:59:24	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-22 13:00:00	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-22 13:00:28	<--	govg_ (~govg@unaffiliated/govg) has quit (Ping timeout: 245 seconds)
2014-11-22 13:00:45	-->	K-ballo7031 (~sonoio@181.228.126.42) has joined ##c++
2014-11-22 13:00:56	<--	K-ballo (~sonoio@181.228.126.42) has quit (Ping timeout: 264 seconds)
2014-11-22 13:01:54	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-22 13:02:13	<--	rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Client Quit)
2014-11-22 13:02:39	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 13:02:50	ville	scrote: umm
2014-11-22 13:03:28	ville	scrote: ctor-initializer can be used to explicitly call the ctor of a base class or a member variable
2014-11-22 13:05:35	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 13:05:37	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-22 13:06:05	InusualZ	If i pass to a class a object. Then i create a thread in that class, I can use that object in the thread without problem?
2014-11-22 13:06:05	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 13:06:20	InusualZ	With problem i refer to break thread safety?
2014-11-22 13:06:49	ville	V-ille: hey wait a minute it isn't possible to do aggregate initialization in ctor-initializer?
2014-11-22 13:06:51	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-22 13:07:13	ville	nevermind.
2014-11-22 13:07:41	marchelzo_	geordi: --precedence in >> (*this)(i,j), in >> s;
2014-11-22 13:07:41	geordi	error: Unexpected `;` after `in >> s`. Expected "(", braced-init-list, "::", template-arguments, postfix operator, binary operator, ternary operator, or end of code.
2014-11-22 13:07:42	<--	mukunda_ (~mukunda@24.9.162.249) has quit (Ping timeout: 240 seconds)
2014-11-22 13:07:52	ville	scrote: so ok the above is slighty wrong. it doesn't necessarily call a ctor
2014-11-22 13:08:27	IWishIKnew	Does anyone know where stupid java devs (I'm not saying that all of them are stupid, but there are stupid java devs) obtain the notion that in C++ they have to "manage all the memory"?
2014-11-22 13:08:47	IWishIKnew	I don't understand where that comes from.
2014-11-22 13:08:47	-->	mukunda_ (~mukunda@24.9.162.249) has joined ##c++
2014-11-22 13:08:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 13:09:00	ville	IWishIKnew: well you do. in as much as you have to manage all memory in java
2014-11-22 13:09:01	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-22 13:09:48	ville	it comes from this: aa x = new aa(); in java is fine. you don't have to do anything. in c++ aa* x = new aa(); is fine. you just have to do something to kill it.
2014-11-22 13:09:55	IWishIKnew	well, yeah, but when I talked with a dev, he seemed to think that the only way to pass by reference was to create pointers... I had to keep myself from back-handing him.
2014-11-22 13:10:31	IWishIKnew	(he still thinks so dispite my attempts to explain to him how to properly pass by reference)
2014-11-22 13:11:32	IWishIKnew	ville:  so you don't know?
2014-11-22 13:11:57	-->	Vulcan[OMNI]_ (~smanzer@c-76-103-244-209.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 13:12:17	IWishIKnew	meh, I guess stupid is somthing created, not bornout of any sane reason...
2014-11-22 13:12:44	<--	Th0mas (~Th0mas@2a01:7c8:aaaf:2cd:aced:a8b:ac7a:873a) has quit (Ping timeout: 265 seconds)
2014-11-22 13:13:20	Vulcan[OMNI]_	if I have func(A*sizeof(T)), where A is a size_t, is the result guaranteed to be passed to func as a size_t, or can it be implicitly to an ?int? or something before assignment accidentally? Do I need to put func((size_t) A*sizeof(T))
2014-11-22 13:13:22	ville	i think i gave a pretty good explanation. they are used to "new" everything". if you "new" something in c++ you have to manage it.
2014-11-22 13:14:02	<--	Gevox (~Gevox@196.221.165.37) has quit (Ping timeout: 255 seconds)
2014-11-22 13:14:14	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Logoff)
2014-11-22 13:14:21	ville	they just don't realize you don't have to actually "new" everything
2014-11-22 13:14:31	IWishIKnew	All I can say is that I'm glad I spent two years in C++ before ever touching that dreadful language...
2014-11-22 13:14:36	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 13:14:42	IWishIKnew	mabey.
2014-11-22 13:15:01	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-22 13:15:01	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-22 13:15:03	IWishIKnew	*maybe
2014-11-22 13:15:12	ville	that seems to be pretty common mistake with java-people asking questions on this channel
2014-11-22 13:15:39	ville	you see them doing void f() { int* x = new int; *x = 0; delete x; } kind of stuff
2014-11-22 13:15:40	IWishIKnew	what do you mean?  They try to declare everything "new"?
2014-11-22 13:15:46	IWishIKnew	oh gawd...
2014-11-22 13:15:57	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 13:16:02	hs_	objects in java are pointers
2014-11-22 13:16:07	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-22 13:16:17	IWishIKnew	that just tells me that they don't have any idea what the stack and the heap are...
2014-11-22 13:16:18	hs_	or pointerlike
2014-11-22 13:16:23	IWishIKnew	or pointers, for that matter...
2014-11-22 13:16:44	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 255 seconds)
2014-11-22 13:16:47	andreyv	Vulcan[OMNI]_: a product of two size_t-s has type size_t
2014-11-22 13:16:55	ville	IWishIKnew: neither do i, well i know stack and heap are data strucutres. i only know storage durations when it comes to lifetimes
2014-11-22 13:17:04	hs_	which is why "string == string" always confuses people, because you are comparing addresses
2014-11-22 13:17:11	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-22 13:17:26	IWishIKnew	...
2014-11-22 13:17:36	Vulcan[OMNI]_	andreyv: is it guaranteed when you multiply two numbers with different widths that you get the larger type as the product?
2014-11-22 13:17:42	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 264 seconds)
2014-11-22 13:17:51	IWishIKnew	new int -> allocates space on the heap.  int x; -> allocates an object on the stack.
2014-11-22 13:18:02	ville	IWishIKnew: not the way the c++ standard defines it.l
2014-11-22 13:18:20	IWishIKnew	int *x(new int); -> allocates a pointer on the stack that points to the address on an int on the heap.
2014-11-22 13:18:22	-->	LPS (~LPS@cpe-77.38.72.82.cable.t-1.si) has joined ##c++
2014-11-22 13:18:47	<--	LPS (~LPS@cpe-77.38.72.82.cable.t-1.si) has left ##c++
2014-11-22 13:18:50	ville	IWishIKnew: the standard doesn't know heap or stack other than as a data structures.
2014-11-22 13:19:25	ville	(well stack gets mentioned in connection to exceptions and stack unwinding)
2014-11-22 13:19:56	-->	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has joined ##c++
2014-11-22 13:20:47	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 272 seconds)
2014-11-22 13:20:56	IWishIKnew	http://timmurphy.org/2010/08/11/the-difference-between-stack-and-heap-memory-allocation/
2014-11-22 13:21:08	IWishIKnew	"Variables allocated on the stack, or automatic variables, are stored directly to this memory. Access to this memory is very fast, and it?s allocation is dealt with when the program is compiled."
2014-11-22 13:21:18	andreyv	Vulcan[OMNI]_: pretty much
2014-11-22 13:21:26	<--	titanium17 (~titanium1@2604:6000:6440:2200:a4e1:948c:21ee:77) has quit (Ping timeout: 258 seconds)
2014-11-22 13:21:51	ville	IWishIKnew: c++ only knows of: automatic, dynamic, thread local and static storage duration
2014-11-22 13:22:30	V-ille	practically it's somewhat likely that variables with automatic storage duration are "fast"
2014-11-22 13:22:31	<--	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 13:22:37	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-22 13:22:55	V-ille	automatic storage duration has other benefits beyond speed
2014-11-22 13:22:57	V-ille	!raii
2014-11-22 13:22:57	<--	doev (~doev@p54847019.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-11-22 13:22:58	nolyc	Resource Acquisition Is Initialization: a bad name for the idea of acquiring resources in constructors (generally) and having destructors make sure they're released. Failure to acquire any resources is signaled by throwing an exception. It's better referred to as Scope-Bound Resource Management. http://www.hackcraft.net/raii/
2014-11-22 13:23:02	ville	IWishIKnew: it becomes confusing once you make statically sized memory pool and your new call allocates from that.
2014-11-22 13:23:10	ville	or other situations
2014-11-22 13:23:51	hs_	ville, it does mention "free store" -- but doesn't define it as far as I can tell
2014-11-22 13:23:56	V-ille	anyhoo, while the standard doesn't speak of a "stack", that has always been the goal of automatic storage duration
2014-11-22 13:24:01	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-22 13:24:03	ville	hs_: yeah it does
2014-11-22 13:24:18	IWishIKnew	hmm, well it
2014-11-22 13:24:29	-->	Th0mas (~Th0mas@2a01:7c8:aaaf:2cd:f5be:f3a1:8c0a:5edc) has joined ##c++
2014-11-22 13:24:32	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-22 13:25:01	IWishIKnew	scratch that last.
2014-11-22 13:25:34	ville	is the use of "new" the deciding factor for the people who use "stack" and "heap" to describe it?
2014-11-22 13:25:53	IWishIKnew	but doesn't using "new" to explicitly allocate and de-allocate memory force the program to allocate in the heap?
2014-11-22 13:25:54	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-22 13:26:08	IWishIKnew	or am I wrong?
2014-11-22 13:26:12	marchelzo_	IWishIKnew: you are wrong
2014-11-22 13:26:27	-->	thehiker (~sabanerje@38.105.236.163) has joined ##c++
2014-11-22 13:26:36	V-ille	there's no way to force everything to be allocated on the "stack" or on the "heap"
2014-11-22 13:26:50	marchelzo_	new just means that it will have dynamic storage duration
2014-11-22 13:26:56	InusualZ	If i pass a object to a class. Then i create a thread in that class, I can use that object in the thread without problem? Problem i refer is thread safe?
2014-11-22 13:26:59	V-ille	as far as I recall, Meyers writes about this stuff in his (More) Effective C++ books
2014-11-22 13:27:02	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-22 13:27:09	<--	thehiker (~sabanerje@38.105.236.163) has left ##c++
2014-11-22 13:27:19	V-ille	whatever the mop-hair's faults, I think everybody should read his books
2014-11-22 13:28:01	V-ille	marchelzo_: 'new' doesn't necessarily mean dynamic storage duration, there's also placement-new ;)
2014-11-22 13:28:03	quaz0r	just what IS the deal with the hair anyway
2014-11-22 13:28:20	quaz0r	maybe hes from the future
2014-11-22 13:28:23	V-ille	his wife probably likes it, so he has no reason to change it
2014-11-22 13:29:19	V-ille	according to his most recent talk I saw, which included the "hair poll", "my wife thinks I look like alexander the great. that's why I married her."
2014-11-22 13:29:34	quaz0r	lul
2014-11-22 13:29:35	hs_	hehe
2014-11-22 13:29:43	V-ille	hmm, some movie renditions paint alex the great as gay. Oh well. :P
2014-11-22 13:30:08	ville	aren't everyone from ancient greek for example gay?
2014-11-22 13:30:13	hs_	meyer's can handle it
2014-11-22 13:30:37	pi-	bi I think
2014-11-22 13:30:45	ville	yeah that is better word.
2014-11-22 13:30:54	V-ille	Anyhoo, while I disagree with Scott's over-simplifications of everything, and I don't appreciate his business model, his writings are useful.
2014-11-22 13:31:08	pi-	Actually I think they just tried to fuck anything with legs on
2014-11-22 13:31:13	V-ille	The business model part being "I'm not going to say a word during the process, I'll just bitch after it."
2014-11-22 13:31:33	ville	V-ille: you're just bitter you didn't think of it first!
2014-11-22 13:31:35	V-ille	"also, if you change anything that's already in my book, I'm going to throw a hissy-fit"
2014-11-22 13:31:45	V-ille	npaperbot: N3922
2014-11-22 13:31:46	npaperbot	N3922: [Core] New Rules for auto deduction from braced-init-list <http://bit.ly/1nu295T> (by James Dennett)
2014-11-22 13:31:52	V-ille	he apparently loves that
2014-11-22 13:32:07	-->	ryonagana (~quassel@179.154.123.2) has joined ##c++
2014-11-22 13:32:10	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-22 13:32:13	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-22 13:32:19	V-ille	the part I didn't like was "well, old lambdas do X, new lambdas do Y"
2014-11-22 13:32:26	<--	killertester (~igor@ppp-62-76-17-70.ppp.kmv.ru) has quit (Quit: Leaving.)
2014-11-22 13:32:53	-->	coby (~coby@rrcs-67-78-105-34.sw.biz.rr.com) has joined ##c++
2014-11-22 13:33:09	V-ille	he complained on the usenet group about certain things. Init-captures more or less solve all of his complaints. So now his complaint is that the rules are different with init-captures and c++11 captures.
2014-11-22 13:33:17	ville	V-ille: i would be interested to see actually if he put the effort in the standardization process. he obviously has the skills to write about technical skills.
2014-11-22 13:33:26	<--	__sam__ (~sam@p2003004F2D3F42ED45EE8A3C26EE2FF8.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-22 13:33:28	ville	skills? err matters
2014-11-22 13:33:29	V-ille	well, that's not his cup of tea
2014-11-22 13:33:53	V-ille	he has said it's not his job to participate in the committee, but to explain the doings of the committee
2014-11-22 13:34:17	ville	is he affraid he would get stompped then? he has almost an infinetly high soapbox with a book.
2014-11-22 13:34:23	V-ille	(some cynical people would say he'd have less to write about if problems were fixed before a standard comes out)
2014-11-22 13:34:44	<--	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 256 seconds)
2014-11-22 13:34:58	V-ille	as far as I understand, he has never attended a meeting
2014-11-22 13:35:05	ville	of course he would. but i can't believe that would be his gimic
2014-11-22 13:35:10	V-ille	so it's not like "I tried that and was burned"
2014-11-22 13:35:53	V-ille	and yes, I kinda think it's possible he doesn't want to get probed by that crowd :P
2014-11-22 13:36:09	V-ille	see, imperfect as the committee is, there are some fucking competent people in it
2014-11-22 13:36:17	ville	lies!
2014-11-22 13:36:50	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 13:36:50	V-ille	well, I'm a committee member, and I'm more competent than the rest of you on this channel
2014-11-22 13:37:00	ville	!grab V-ille
2014-11-22 13:37:00	nolyc	By your command.
2014-11-22 13:37:05	V-ille	thanks :)
2014-11-22 13:37:07	ville	v- you are such a whore
2014-11-22 13:37:11	V-ille	I know :D
2014-11-22 13:37:36	V-ille	thanks for grabbing it anyway, I'm sure that's going to be useful
2014-11-22 13:37:41	ville	and i bet IWishIKnew is mightily confused by now why i keep talking with my self
2014-11-22 13:38:09	IWishIKnew	you're not talking with yourself.
2014-11-22 13:38:13	V-ille	it's rather quite here. I don't recall quiet-banning the whole channel.
2014-11-22 13:38:22	V-ille	*quiet!
2014-11-22 13:38:23	IWishIKnew	lol
2014-11-22 13:38:45	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-22 13:38:46	ville	IWishIKnew: it's the usual reaction
2014-11-22 13:39:18	V-ille	well, the thing is, I joined a completely unrelated channel on freenode, and noticed that my preferred nick was taken
2014-11-22 13:39:19	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 13:39:29	ville	owned
2014-11-22 13:39:31	V-ille	I hung out on that channel for quite a while
2014-11-22 13:39:55	ville	think i've had this nick for couple of years
2014-11-22 13:40:00	V-ille	then I came here, and all sorts of bitchez startedz yappingz at moi how I should changez my nickzorz
2014-11-22 13:40:11	V-ille	I refused
2014-11-22 13:40:18	Eelis	don't blame meyers, blame the capitalism that makes meyers adopt his business model
2014-11-22 13:40:19	ville	yeah it's funny that other people would demand it. i have no problem with it.
2014-11-22 13:40:24	V-ille	so, the status quo is, "deal with it"
2014-11-22 13:40:47	-->	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-22 13:40:47	V-ille	Eelis: sometimes I think we're handing him weapons :P
2014-11-22 13:40:53	ville	i find it quite funny actually. such a niche-of-niche-of-niche
2014-11-22 13:41:09	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-22 13:41:26	ville	does irc+c++ draw unimaginative people?
2014-11-22 13:41:26	Eelis	ville: it's only confusing for non-regulars
2014-11-22 13:41:27	V-ille	for example, regarding auto x{x}; I would've never let it pass without an NB comment if I had had the time to notice that fucked-up-ness
2014-11-22 13:41:51	Eelis	i don't think i was /ever/ on board with "uniform" initialization
2014-11-22 13:42:13	ville	i've always been. my uniform is just more uniform.
2014-11-22 13:42:14	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-22 13:42:28	V-ille	I don't care about the uniformity of "uniform initialization", but auto x{val}; giving you an initializer_list is JUST WRONG
2014-11-22 13:42:32	ville	i know that's not useful comment.
2014-11-22 13:42:42	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Quit: asche zu asche und staub zu staub.)
2014-11-22 13:42:54	ville	yeah that is a single value. not a container-like
2014-11-22 13:43:15	V-ille	so, that battle was lost - for a while. Then belz pointed out "hey, remember the init-captures you pushed through? look at this: [x{y}]{...}"
2014-11-22 13:43:23	Eelis	you only see it as single-value init because you've been brainwashed by uniform init. if you were still sane you'd think "ah, they used curlies because they want a sequence"
2014-11-22 13:43:35	V-ille	I said "oh well". Bjarne threw a hissy-fit.
2014-11-22 13:43:38	Eelis	so having it be initializer_list is perfectly plausible.
2014-11-22 13:43:43	Eelis	given how fucked up everything already is
2014-11-22 13:44:13	ville	REBELLION!
2014-11-22 13:44:21	V-ille	Then we tried to fix it, almost-sorta-kinda managed. We shipped c++14 without the fix. Bjarne said "well, as long as core is handling it, whichever release vehicle is fine."
2014-11-22 13:44:31	V-ille	so, now it has been voted into a working draft
2014-11-22 13:44:50	V-ille	I was supposed to ask whether it's a c++11 defect or a c++14 defect or a c++17 extension
2014-11-22 13:45:13	V-ille	I didn't, because I had to watch over $some $people perhaps voicing strong opposition to the idea
2014-11-22 13:45:16	ville	just stop the horses. redo initialization rules when modules hit.
2014-11-22 13:45:22	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 13:45:29	ville	that's the perfect opportunity to break shit
2014-11-22 13:45:41	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 240 seconds)
2014-11-22 13:45:52	V-ille	modules won't magically solve these problems for non-cross-module code
2014-11-22 13:46:14	ville	everything not identified as module is old code
2014-11-22 13:46:20	V-ille	nice idea
2014-11-22 13:46:24	ville	then deprecate "identified as module"
2014-11-22 13:46:28	V-ille	I don't think it'll work
2014-11-22 13:47:18	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-22 13:47:35	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-22 13:47:42	ville	i know it's machiavelian to piggyback but i think modules will introduce big break
2014-11-22 13:48:29	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 13:48:33	pi-	Does C++ have to retain backwards compatibility all the way back to the dawn of time?
2014-11-22 13:48:45	TinoDidriksen	No, but that's the ideal.
2014-11-22 13:48:57	ville	the idea of modules may have big enough connotation of change that some changes would be just accepted along with it
2014-11-22 13:49:04	pi-	And would things being much different by relaxing that restriction?
2014-11-22 13:49:16	ville	while technically they are not related
2014-11-22 13:50:00	Anthaas	So I just scrolled up and wow. Some shit is going down in C++ haha
2014-11-22 13:50:06	TinoDidriksen	pi-, if you can provide a mechanical transformation that upgrades invalid old code to new, that might work.
2014-11-22 13:50:21	V-ille	pi-: there are *massive* codebases that appreciate not breaking compatibility unless there's a *strong* reason
2014-11-22 13:50:50	V-ille	and for quite many of those codebases, mechanical transformation doesn't help, *at all*
2014-11-22 13:50:59	Eelis	pi-: there are a million things one would change in C++ if there were no backward compat requirements. see Rust, Clay, etc
2014-11-22 13:51:28	-->	heiner (~heiner@p5B3FE8CB.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 13:51:48	marchelzo_	Why can't people with legacy code bases just use old versions of compilers, or have compiler flags that disable new features that break old code?
2014-11-22 13:51:51	ville	pi-: ibm holds the rest of us as hostage
2014-11-22 13:51:57	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 13:52:01	pi-	It reminds me of the idea that the optic nerve has to travel through the retina, because evolution works by incremental change.
2014-11-22 13:52:11	V-ille	it occasionally shocks me that people suggest mechanical transformation via some whatever clang-tool. That does not solve the problem for codebases that still have to compile with c++11, or, hell, c++03.
2014-11-22 13:52:22	V-ille	ville: ibm no longer does, trigraphs are gone
2014-11-22 13:52:26	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-22 13:52:40	V-ille	it's not just about ibm, wrt to stability/compatibility
2014-11-22 13:53:07	ville	V-ille: didn't they want digraphs still. that was what i was referring to
2014-11-22 13:53:20	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-22 13:53:21	-->	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 13:53:32	ville	or new parser rules don't cause any surprises?
2014-11-22 13:53:32	V-ille	it's never been about ibm, ibm has just pointed out that it's about their customers. Those customers have such amounts of code that ibm and elgoog and m$ are dwarfed by it.
2014-11-22 13:53:47	Eelis	isn't ibm the one voting?
2014-11-22 13:54:07	Eelis	customers don't matter if they're not on the committee
2014-11-22 13:54:08	V-ille	ville: nobody has suggested getting rid of digraphs as far as I recall
2014-11-22 13:54:19	TinoDidriksen	Surely you can't fault IBM for voting in their constituents' favour?
2014-11-22 13:54:34	ville	of course you can't.
2014-11-22 13:54:40	Eelis	TinoDidriksen: s/their interpretation of their/
2014-11-22 13:54:58	<--	heiner_ (~heiner@p5085629E.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 13:55:09	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Quit: asche zu asche und staub zu staub.)
2014-11-22 13:55:21	V-ille	Eelis: sure, their interpretation of very direct feedback they receive.
2014-11-22 13:55:22	ville	V-ille: ok thought even digraphs were on the table at some point. both 2 and 3 were not removed due to ibm folks. then now trigraphs managed to make it through.
2014-11-22 13:55:53	Eelis	V-ille: vocal minority, silent majority, dum dee dum
2014-11-22 13:56:19	V-ille	Eelis: as far as I've heard. yeah, "never trust corporations", but I have no reason to believe IBM alone would've cared about trigraphs, for example.
2014-11-22 13:56:52	Eelis	also, how does this customer-ibm relation work then? customers expect ibm to vote for them because they pay ibm? isn't that what we call corruption?
2014-11-22 13:56:55	V-ille	their internal code is not the problem
2014-11-22 13:57:22	Eelis	ibm sells their vote to the highest bidder?
2014-11-22 13:57:37	V-ille	Don't all commercial vendors do that?
2014-11-22 13:57:38	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 13:57:41	Eelis	(a.k.a. their Best Customer)
2014-11-22 13:57:51	Eelis	i have no idea, i'm asking
2014-11-22 13:58:08	Eelis	it would not surprise me much if corruption was the standard modus operandi in the committee
2014-11-22 13:58:08	ville	would you rather see Elliot, Meyers or Parent as the benevolent dictator of c++?
2014-11-22 13:58:12	V-ille	That's why there's a shebang of murican companies in INCITS, Microsoft and IBM vote with 1/22 of the Full Powa.
2014-11-22 13:58:48	Eelis	(the whole standardization process seems ridiculous and bizarre to me)
2014-11-22 13:59:01	ville	out comes seem ok
2014-11-22 13:59:05	ville	outcomes?
2014-11-22 13:59:16	V-ille	Eelis: I would think it's far-fetched to find corruption in the committee. There's fair amount of people who can't be bought, and the possible shenanigan-actors can't agree amongst themselves.
2014-11-22 13:59:17	TinoDidriksen	Sure beats e.g. C# or Java's process.
2014-11-22 13:59:35	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-22 13:59:50	ville	TinoDidriksen: you follow python also?
2014-11-22 13:59:55	Eelis	V-ille: there is precedent of companies corrupting standardization efforts. including companies that are right at the center of C++ standardization
2014-11-22 14:00:03	V-ille	note, though, that while in INCITS, there's one-vote-one-company, in WG21, there's one-vote-one-member
2014-11-22 14:00:08	TinoDidriksen	Does Python have a process?
2014-11-22 14:00:08	<--	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has quit (Quit: Going offline, see ya! ( www.adiirc.com)
2014-11-22 14:00:16	mihipte	yep, Guido
2014-11-22 14:00:21	V-ille	this of course means that the more people company X sends, the more weight they get
2014-11-22 14:00:24	ville	they have those PEP things and then BD
2014-11-22 14:00:35	ville	bd = benevelont dictator
2014-11-22 14:00:40	Eelis	any committee that has microsoft all over it needs to be strongly distrusted
2014-11-22 14:00:43	Eelis	including the C++ committee
2014-11-22 14:00:47	V-ille	so we do have to be careful about company X sending more people than the 15 they already send ;)
2014-11-22 14:01:10	b_jonas	hmm
2014-11-22 14:01:28	-->	edward-san (~Edward`sa@host31-55-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-22 14:01:41	-->	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has joined ##c++
2014-11-22 14:01:43	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 14:01:46	V-ille	Eelis: they are, luckily, in the minority, and their people don't agree among themselves
2014-11-22 14:02:07	V-ille	I would be much more worried about certain $other companies that seem to vote in unison within the company
2014-11-22 14:02:08	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Ping timeout: 264 seconds)
2014-11-22 14:02:08	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-22 14:02:11	ville	other companies that have their agenda in danger need to start hiring people and just sending them as shills
2014-11-22 14:02:28	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-22 14:02:37	mihipte	that sounds like a great way to fix the system <.<
2014-11-22 14:02:55	V-ille	well, if I detect overloading of people in the room, I will change the voting rules. The fuckers will have to deal with that.
2014-11-22 14:02:57	ville	mihipte: it's not a fix. it's a mechanism of profit.
2014-11-22 14:03:27	ville	V-ille: will kirkonrotta be acceptable rules?
2014-11-22 14:03:30	mihipte	ville, I'm not sure I understand which definition of "need" you're using
2014-11-22 14:03:37	mihipte	but w/e
2014-11-22 14:04:25	ville	mihipte: need as in a goal to achieve. work within the current rules might mean get more people to vote to that end
2014-11-22 14:04:32	V-ille	ville: As far as I understand, the rules are: 1) The convener (who is appointed by ISO) decides the sub-group chairs 2) the sub-group chairs decide when consensus has been attained
2014-11-22 14:05:11	ville	aww thought you could make arbitrary rules. hmph
2014-11-22 14:05:36	V-ille	ville: so, it's all about ISO/JTC1/SC22/WG21. If a single INCITS (which is a SC22/WG21 member) complains that the rules in a sub-group aren't right, they can complain to INCITS.
2014-11-22 14:05:42	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 14:05:52	V-ille	if INCITS decides to complain further, something might happen
2014-11-22 14:07:10	V-ille	ville: see, I _can_ decide when consensus has been attained. There were questions about a 12-4 (or some such) vote. "Is that 2-1?" "Yes. That's not enough." "What's enough?" "More than that."
2014-11-22 14:07:52	ville	12-4 should be clear?
2014-11-22 14:08:14	V-ille	well, if it's 1-11-NEUTRALS-0-4, it's not clear
2014-11-22 14:08:40	-->	madsurfman (~madsurfma@APuteaux-554-1-113-114.w92-154.abo.wanadoo.fr) has joined ##c++
2014-11-22 14:09:05	V-ille	every time we have passed some shit like that through a smaller group, we've ended in trouble
2014-11-22 14:09:33	V-ille	hence, judgment must be applied in addition to just looking at numbers
2014-11-22 14:09:55	marchelzo_	Is there a less verbose way to do this? 'nodes.insert(std::tuple<Index, int64_t>(Index(m.rows() - 1, m.cols() - 1), 0));'
2014-11-22 14:10:10	V-ille	no?
2014-11-22 14:10:34	V-ille	make_tuple isn't shorter/less verbose
2014-11-22 14:10:36	ville	damn you tuple explicit ctor
2014-11-22 14:10:47	V-ille	ville: we'll fix that, one way or another
2014-11-22 14:10:49	<--	Nilium (~Nilium@spifftastic.net) has quit (Quit: <kristin> Cower is like... I dunno.  sometimes he seems senile and other times he seems like a middle schooler.)
2014-11-22 14:11:24	ville	V-ille: yep. which is great
2014-11-22 14:11:27	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-22 14:11:29	V-ille	ville: that's all I've been doing for the last year, making sure we fix it the right way instead of fucking it up :D
2014-11-22 14:11:37	<--	madsurfman (~madsurfma@APuteaux-554-1-113-114.w92-154.abo.wanadoo.fr) has quit (Quit: madsurfman)
2014-11-22 14:11:54	V-ille	it's nice that I don't have to spend energy on it anymore, as the "let return be implicit" was buried
2014-11-22 14:12:00	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Quit: asche zu asche und staub zu staub.)
2014-11-22 14:12:22	-->	licnep (uid4387@gateway/web/irccloud.com/x-nnzrgcothjetivmz) has joined ##c++
2014-11-22 14:12:32	ville	if someone drew a map of every rule and an exception pertaining to a local matter in the standard it would look horrible with arrows pointing all over
2014-11-22 14:12:40	-->	razieliyo (~razieliyo@unaffiliated/razieliyo) has joined ##c++
2014-11-22 14:12:42	razieliyo	hi
2014-11-22 14:12:42	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-22 14:12:48	-->	Nilium (~Nilium@spifftastic.net) has joined ##c++
2014-11-22 14:13:12	razieliyo	is this okay? doesn't make sense for me in some way, void Update( Transform& parent = Transform() )
2014-11-22 14:13:12	ville	i am not saying you could necessarily do with significantly less arrows but that's the nature of the beast
2014-11-22 14:13:27	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:49b5:1449:3e54:a010) has quit (Ping timeout: 258 seconds)
2014-11-22 14:13:45	ville	razieliyo: it gets a default constructed transform. which probably means an identity
2014-11-22 14:13:50	<--	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:49b5:1449:3e54:a010) has quit (Ping timeout: 258 seconds)
2014-11-22 14:13:51	Eelis	razieliyo: why would you want to update a temporary in the Update() case?
2014-11-22 14:13:58	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-22 14:14:12	ville	oh wait reference-to-what-eelis-said
2014-11-22 14:14:25	razieliyo	that's the thing
2014-11-22 14:14:50	ville	razieliyo: it will go through on micros~1 and default flags. not part of c++
2014-11-22 14:15:02	ville	it "makes sense" depending on your point of view
2014-11-22 14:15:15	razieliyo	I'll use pointers to evade any casualties
2014-11-22 14:15:47	Eelis	or you could answer my question and then we can have a meaningful conversation about the right design
2014-11-22 14:15:55	-->	SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-22 14:15:59	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 14:16:03	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-22 14:16:06	ville	razieliyo: are you on vc++?
2014-11-22 14:16:23	V-ille	is there such a channer?
2014-11-22 14:16:27	V-ille	*channel
2014-11-22 14:16:33	ville	channer carruth?
2014-11-22 14:16:35	razieliyo	ville, no, I'm using codelite on linux
2014-11-22 14:16:41	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-22 14:16:44	Eelis	does Update modify parent? does it have other side effects? did you mean   Transform const & ?
2014-11-22 14:16:48	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-22 14:16:54	ville	razieliyo: it lets it go through?
2014-11-22 14:16:56	razieliyo	Eelis, well, I'm updating a scene tree and no, it doesn't modify the parent
2014-11-22 14:17:06	Eelis	razieliyo: so why not  Transform const & ?
2014-11-22 14:17:34	ville	i am interested how you get that through on GCC or clang
2014-11-22 14:17:42	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-22 14:17:45	V-ille	it's ill-formed, I say
2014-11-22 14:17:51	V-ille	ILL-FORMED
2014-11-22 14:17:57	Eelis	typedef Transform_t const Transform;  >:)
2014-11-22 14:17:57	razieliyo	I'm not using const just because it has some public variables, and I guess I won't be able to access it if it's const
2014-11-22 14:18:02	-->	Rickmasta (~Rick@108.41.62.242) has joined ##c++
2014-11-22 14:18:12	ville	we heard! extensions and stuff even then it should be caught on GCC and clang
2014-11-22 14:18:24	Eelis	razieliyo: you can access member variables of const objects just fine
2014-11-22 14:18:32	ville	razieliyo: of course you can access them. just don't write. only read
2014-11-22 14:18:35	razieliyo	Eelis, even if they're not const?
2014-11-22 14:18:37	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-22 14:18:40	Eelis	yes
2014-11-22 14:18:54	ville	razieliyo: anyway fix your compiler settings if it lets that through
2014-11-22 14:19:07	ville	!give razieliyo -Wall
2014-11-22 14:19:08	nolyc	razieliyo: -Wall is only -Wsome; it leaves out many warnings. To really get a lot of warnings, you should use '-Wall -Wextra -Wpedantic -std=c++11'
2014-11-22 14:19:17	razieliyo	ok, nice
2014-11-22 14:19:30	razieliyo	-Wpedantic
2014-11-22 14:19:39	ville	i didn't think GCC or clang would let it through
2014-11-22 14:19:42	<--	edward-san (~Edward`sa@host31-55-dynamic.251-95-r.retail.telecomitalia.it) has quit (Quit: "Ma Watt a Fahrad in Coulomb! Un Volt, due Volt, tre Volt ... e con un Ohm!" "Cos? t'Amp?re!")
2014-11-22 14:20:56	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-11-22 14:21:18	V-ille	geordi: struct X {}; void f(X& = X());
2014-11-22 14:21:18	geordi	error: invalid initialization of non-const reference of type 'X&' from an rvalue of type 'X'
2014-11-22 14:21:37	<--	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-11-22 14:21:56	V-ille	geordi: do what I mean and insert const wherever I want you to insert it
2014-11-22 14:21:57	geordi	error: expected unqualified-id before 'do'
2014-11-22 14:22:06	V-ille	Eelis: boo hiss. Bad bot. :)
2014-11-22 14:22:57	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-22 14:23:11	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 14:23:14	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 14:23:21	razieliyo	I just used node->Update(Transform()) on root and got the default out
2014-11-22 14:25:00	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-22 14:25:07	ville	V-ille: geordi is too nice
2014-11-22 14:25:37	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-22 14:26:33	ville	V-ille: you can always sell the change the default mode to be c++ not gnu++ by saying you want the people to be programming gnu++ be at least smart enough to throw a compiler switch?
2014-11-22 14:27:43	ville	that'll warm the cockles of the heart of the gnu people
2014-11-22 14:27:50	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-22 14:27:54	-->	on3pk (~on3pk@unaffiliated/on3pk) has joined ##c++
2014-11-22 14:28:46	<--	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 14:29:14	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-22 14:29:36	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:30:17	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:30:39	<--	njoku (~njoku@192.210.214.197) has quit (Remote host closed the connection)
2014-11-22 14:30:55	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:31:11	<--	Nazcafan (~fou@5ec06e88.skybroadband.com) has quit (Quit: Quitte)
2014-11-22 14:31:16	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-22 14:31:48	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-22 14:31:58	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:32:24	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:32:37	-->	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-22 14:32:40	-->	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-22 14:32:50	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:33:06	<--	roxfan (dunno@180.176-246-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 244 seconds)
2014-11-22 14:33:20	-->	mccallist (~mccallist@192.210.214.197) has joined ##c++
2014-11-22 14:33:26	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:33:52	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:34:25	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:34:53	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:35:18	-->	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 14:35:20	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:35:33	<--	MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit
2014-11-22 14:35:38	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-22 14:36:30	-->	MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-11-22 14:36:54	V-ille	I don't think I want to try that for any implementation vendor.
2014-11-22 14:37:24	V-ille	I would like to, sure. I don't want to spend the energy.
2014-11-22 14:38:07	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-22 14:38:12	--	MrFlibble is now known as LunarJetman
2014-11-22 14:39:14	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-22 14:39:39	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Max SendQ exceeded)
2014-11-22 14:39:51	<--	altin (~altin@flossk/altin) has quit (Remote host closed the connection)
2014-11-22 14:39:55	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 14:40:09	-->	ArchZombie (~lkjfeiosn@2602:306:c455:df80:f9e1:4fbc:355b:8db8) has joined ##c++
2014-11-22 14:40:29	-->	burgiking (~Thunderbi@cpc13-derb12-2-0-cust36.8-3.cable.virginm.net) has joined ##c++
2014-11-22 14:40:29	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 240 seconds)
2014-11-22 14:40:56	<--	burgiking (~Thunderbi@cpc13-derb12-2-0-cust36.8-3.cable.virginm.net) has quit (Client Quit)
2014-11-22 14:41:16	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 14:42:07	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-22 14:43:54	<--	K-ballo7031 (~sonoio@181.228.126.42) has quit (Ping timeout: 255 seconds)
2014-11-22 14:43:56	ArchZombie	Heylo all, does anyone know what type/value mismatch at argument 1 in template parameter list for ?template<class _Tp> struct std::tuple_size? using  constexpr size_t Sz = std::tuple_size<std::remove_reference<T>::type >::value; would mean?
2014-11-22 14:44:05	ArchZombie	Where T is std::tuple<char, char, char> &
2014-11-22 14:44:06	-->	Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has joined ##c++
2014-11-22 14:44:17	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-22 14:44:27	Eelis	!testcase
2014-11-22 14:44:29	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-22 14:44:56	-->	HerzogDeXtEr (~flex@88.130.166.195) has joined ##c++
2014-11-22 14:45:12	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-22 14:45:12	-->	huseyinkozan (~huseyinko@88.229.225.11) has joined ##c++
2014-11-22 14:45:12	<--	huseyinkozan (~huseyinko@88.229.225.11) has quit (Changing host)
2014-11-22 14:45:12	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-22 14:45:52	marchelzo_	Can I change "vector v = f(); for (auto c : v) ... " to "for (auto c : f()) ... "?
2014-11-22 14:46:20	Eelis	yes
2014-11-22 14:46:24	<--	Atque (~Atque@unaffiliated/atque) has quit (Quit: ...)
2014-11-22 14:46:28	<--	on3pk (~on3pk@unaffiliated/on3pk) has quit (Read error: Connection reset by peer)
2014-11-22 14:46:28	-->	rnickb (~rnickb@96.232.17.159) has joined ##c++
2014-11-22 14:46:30	marchelzo_	Does it mean f will be evaluated every time?
2014-11-22 14:46:34	Eelis	once
2014-11-22 14:46:38	-->	SiGe_ (~SiGe@68.181.207.72) has joined ##c++
2014-11-22 14:46:41	marchelzo_	sweet. thanks
2014-11-22 14:46:47	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-22 14:47:12	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-22 14:47:40	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-22 14:49:32	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-22 14:51:05	<--	rendar (~I@host148-140-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2014-11-22 14:51:16	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-22 14:51:26	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-22 14:53:32	-->	SiGe___ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 14:53:32	<--	SiGe_ (~SiGe@68.181.207.72) has quit (Read error: Connection reset by peer)
2014-11-22 14:53:32	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 14:53:36	<--	davi (davi@gnu/davi) has quit (Ping timeout: 264 seconds)
2014-11-22 14:53:52	<--	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Remote host closed the connection)
2014-11-22 14:53:52	-->	rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-22 14:53:58	<--	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-22 14:54:23	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 14:54:44	<--	Th0mas (~Th0mas@2a01:7c8:aaaf:2cd:f5be:f3a1:8c0a:5edc) has quit (Quit: Bye)
2014-11-22 14:55:12	-->	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-11-22 14:55:18	-->	Th0mas (~Th0mas@2a01:7c8:aaaf:2cd:f5be:f3a1:8c0a:5edc) has joined ##c++
2014-11-22 14:55:30	-->	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has joined ##c++
2014-11-22 14:56:50	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 14:57:14	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-22 14:57:30	<--	Rickmasta (~Rick@108.41.62.242) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 14:57:34	-->	rendar (~I@host148-140-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-22 14:57:48	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-22 14:57:58	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-22 14:59:10	<--	Suchorski (regex@unaffiliated/suchorski) has quit
2014-11-22 14:59:21	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-22 14:59:50	pi-	Can anyone throw some light on this Proxy design pattern issue: https://gist.github.com/anonymous/184799018f31c4263db8#file-gistfile1-cpp-L1182-L1229 ?
2014-11-22 15:00:32	-->	kokotakus (~neo@chello089173201210.chello.sk) has joined ##c++
2014-11-22 15:00:41	pi-	It is seriously complex code, so please not bite my head off for not making a test case yet.
2014-11-22 15:00:41	<--	kokotakus (~neo@chello089173201210.chello.sk) has left ##c++
2014-11-22 15:01:07	<--	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-22 15:02:38	pi-	I can't understand why keys[pos], which is a Proxy<Object> object, no longer successfully initialises an Object. The relevant type conversion operator overload is present in Proxy<T>.
2014-11-22 15:03:13	-->	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has joined ##c++
2014-11-22 15:03:29	-->	Inusu4lZ (~Wesley@adsl-64-237-237-242.prtc.net) has joined ##c++
2014-11-22 15:04:10	pi-	I can fix it with 'Object key{ static_cast<Object>( keys[pos] ) };' but it is still unsettling that some minor restructuring elsewhere in the code suddenly forces this botch
2014-11-22 15:04:25	<--	InusualZ (~Wesley@adsl-64-237-237-242.prtc.net) has quit (Ping timeout: 272 seconds)
2014-11-22 15:05:11	<--	Inusu4lZ (~Wesley@adsl-64-237-237-242.prtc.net) has left ##c++
2014-11-22 15:05:55	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-22 15:08:59	ArchZombie	C++ is so stupidly complicated.
2014-11-22 15:09:13	IWishIKnew	no it isn't.
2014-11-22 15:09:42	ville	V-ille: grr. i would have thought reverse-psychology would work
2014-11-22 15:09:43	marchelzo_	It really is, but it's still perfectly usable.
2014-11-22 15:09:46	ArchZombie	geordi: 1
2014-11-22 15:09:46	geordi	error: expected unqualified-id before numeric constant
2014-11-22 15:09:52	ArchZombie	geordi: std::cout << 1;
2014-11-22 15:09:52	geordi	error: 'cout' in namespace 'std' does not name a type
2014-11-22 15:10:15	<--	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 15:10:17	ArchZombie	geordi: { std::cout << 1; }
2014-11-22 15:10:17	geordi	1
2014-11-22 15:10:25	ArchZombie	Ok, and now watch this.
2014-11-22 15:10:42	V-ille	ville: I fail to see what that's referring to
2014-11-22 15:10:57	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-22 15:11:49	 *	pi- watches intently
2014-11-22 15:11:51	marchelzo_	ArchZombie: I'm getting anxious
2014-11-22 15:11:53	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Quit: SiN_Bizkit)
2014-11-22 15:12:15	quaz0r	WHATS IN THE BOX
2014-11-22 15:12:16	ArchZombie	template <typename F, typename T, std::size_t I, std::size_t Count> typename std::enable_if<I >= Count>::type tuplecall__(T &&t, F &&f) { }; template <typename F, typename T, std::size_t I, std::size_t Count> typename std::enable_if<I < Count>::type tuplecall__ (T &&t, F &&f) { f(std::get<I>(t)); tuplecall__<F, T, (I + 1), Count>(std::forward<T>(t), std::forward<F>(f)); }; template <typename T, typename F> void tuple_foreach( T
2014-11-22 15:12:16	ArchZombie	 && t, F && f ) { tuplecall__<F, T, 0, std::tuple_size<typename std::remove_reference<T>::type >::value >(std::forward<T>(t), std::forward<F>(f)); }; { tuple_foreach(std::make_tuple("hello", "world"), [](auto &&t){ std::cout<<t; }); }
2014-11-22 15:12:23	V-ille	oh, convincing implementations to default to conforming-mode? Well, I'll need to wait for any implementation that by-default conforms to c++11.
2014-11-22 15:12:25	ArchZombie	fuck it split the line
2014-11-22 15:12:40	ville	V-ille: GNU making it harder to enable GNU extensions
2014-11-22 15:12:42	pi-	o mine eyes, ideone?
2014-11-22 15:12:42	cbreak	ArchZombie: have you heard of ideone.com?
2014-11-22 15:12:46	<--	rnickb (~rnickb@96.232.17.159) has quit (Quit: rnickb)
2014-11-22 15:12:54	ArchZombie	And I forgot geordi:, anyway, yes, let me use that
2014-11-22 15:12:57	<--	platinuum (sid21283@gateway/web/irccloud.com/x-uluqfcoytqtguqed) has left ##c++
2014-11-22 15:13:02	cbreak	!reserved
2014-11-22 15:13:03	nolyc	You are not allowed to create any name which: 1) contains two consecutive underscores, 2) begins with an underscore followed by an uppercase letter or 3) begins with an underscore and is in the global namespace ([lib.requirements]/[requirements]). Literal suffixes are an exception and must start with an underscore.
2014-11-22 15:13:04	-->	rnickb (~rnickb@96.232.17.159) has joined ##c++
2014-11-22 15:13:08	ville	grr
2014-11-22 15:13:36	<--	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-22 15:13:39	V-ille	ville: well, there are touchy areas there. VLAs, for example. The existing practice involves runtime sizeof. Your NB will not eat that, ever.
2014-11-22 15:13:41	ville	how breaking would it be to reverse that to say that non-_ are reserved in :: and then it's upto scope?
2014-11-22 15:14:02	pi-	I never got the 'no foo__bar' thing -- I've come across leading and trailing __-s but never in the middle of something.
2014-11-22 15:14:26	ville	i like it that i have national body in addition to my own. i feel quite fat
2014-11-22 15:14:31	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 15:14:57	-->	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has joined ##c++
2014-11-22 15:15:09	-->	rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-22 15:15:11	<--	SiGe___ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-22 15:15:13	ArchZombie	Eh, ideone doesn't support C++14 :/
2014-11-22 15:15:24	ville	actually thought you would be on side of VLA.
2014-11-22 15:15:25	marchelzo_	just paste it anyway I'll compile it myself
2014-11-22 15:15:40	V-ille	ville: it's not just me. belz hates runtime sizeof. He hates VLAs with a passion. Well, to be fair, he doesn't hate them - he just thinks the evil existing practice should remain evil existing practice.
2014-11-22 15:16:22	<--	rnickb (~rnickb@96.232.17.159) has quit (Client Quit)
2014-11-22 15:16:37	V-ille	ville: and, yes, that's a part of non-conforming stuff that gcc enables by default
2014-11-22 15:16:40	-->	rnickb (~rnickb@96.232.17.159) has joined ##c++
2014-11-22 15:16:47	peterR``	if I do for (auto p = map.begin(); p != map.end(); ++p), I can then say std::map<foo, bar>::iterator p1 = p
2014-11-22 15:16:48	ville	how many speacial rules to rules will you would have to introduce? i think that should be a measure. if you can strike out rules then it may be a positive
2014-11-22 15:16:59	peterR``	how can I store an iterator if I do for (auto p : map)?
2014-11-22 15:17:02	ville	special
2014-11-22 15:17:11	V-ille	that would actually be worth looking for - for the users of vlas, how many users want runtime sizeof?
2014-11-22 15:17:41	ville	i don't. (eelis will vote yes because we always disagree_
2014-11-22 15:18:20	V-ille	well, no - Eelis is reasonable - if there's a facility through which you can get the generic size of any 'thing', he's going to be happy
2014-11-22 15:18:27	<--	coby (~coby@rrcs-67-78-105-34.sw.biz.rr.com) has left ##c++
2014-11-22 15:18:50	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-22 15:19:35	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 15:19:57	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Quit:  Hexchat -  A REAL handcrafted IRC client.)
2014-11-22 15:20:03	ville	eelis is usually right. most of my concerns are powered by ignorance.
2014-11-22 15:20:49	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Laptop gone to sleep...)
2014-11-22 15:21:03	-->	roxfan (~dunno@94.218-200-80.adsl-dyn.isp.belgacom.be) has joined ##c++
2014-11-22 15:21:08	V-ille	hah, no - you have decent ideas
2014-11-22 15:21:30	<--	rnickb (~rnickb@96.232.17.159) has quit (Client Quit)
2014-11-22 15:21:34	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2014-11-22 15:21:36	ArchZombie	Anyway, IWishIKnew , if C++ is not complicated, why does this work: http://ideone.com/lXr1jy, but this not: http://ideone.com/gkLVsV
2014-11-22 15:21:47	-->	Guest92089 (~mohammad@85.239.223.38) has joined ##c++
2014-11-22 15:22:02	ArchZombie	(obviously it doesn't work on the website since it uses C++11 only)
2014-11-22 15:22:17	cbreak	neither works.
2014-11-22 15:22:27	ville	ArchZombie: oh dear
2014-11-22 15:22:37	ville	can we get a diff?
2014-11-22 15:22:46	cbreak	but your indenting needs work :)
2014-11-22 15:22:49	ArchZombie	The top 2 functions are swapped in order
2014-11-22 15:22:59	ArchZombie	And I was indenting it using the online IDE
2014-11-22 15:24:08	<--	Flannel (~flannel@ubuntu/member/flannel) has quit (Ping timeout: 244 seconds)
2014-11-22 15:24:35	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-22 15:24:37	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-22 15:25:05	ArchZombie	actually I messed up the swap too
2014-11-22 15:25:13	V-ille	ville: your exaggerations aside, it was in no part your contributions why the cabal is considering solving return {foo, bar} for tuples
2014-11-22 15:25:16	joel_falcou	test
2014-11-22 15:25:39	V-ille	*in no part the lack of your contributions
2014-11-22 15:25:50	ArchZombie	Refresh and it shows the correct text on the second one now.
2014-11-22 15:25:58	-->	Flannel (~flannel@ubuntu/member/flannel) has joined ##c++
2014-11-22 15:26:01	V-ille	or whatever, I'm not good at these double-negatives :P
2014-11-22 15:26:06	ville	joel_falcou: hey welcome
2014-11-22 15:26:19	joel_falcou	back after being stuid with my IRC settings
2014-11-22 15:26:28	joel_falcou	any reason you remembered me :p ?
2014-11-22 15:26:45	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Quit: Out)
2014-11-22 15:26:53	ArchZombie	He left thought, so I guess it doesn't matter.
2014-11-22 15:26:53	V-ille	ville: actually, I think I was supposed to say "in no small part" there :P
2014-11-22 15:27:33	ville	i take it.
2014-11-22 15:27:37	ArchZombie	and cbreak: I ignore that rule of course.
2014-11-22 15:27:48	ArchZombie	Especially the part about literals.
2014-11-22 15:28:10	-->	Unscrup12 (~unscrupt@172.56.33.164) has joined ##c++
2014-11-22 15:28:17	V-ille	ville: various experts, including myself, said, at the time "just do make_tuple". That was ok for c++14, sure, but none of us denied the idea as such.
2014-11-22 15:28:34	<--	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-22 15:28:44	joel_falcou	bitchng about return {...} for tuple ?
2014-11-22 15:29:23	V-ille	ville: and god forbid we would've gone to the "implicit return" route. That shit has real problems. It prevents the technique that solves the "transparent explicit" library-ish technique from working.
2014-11-22 15:29:49	ville	joel_falcou: yep. i would have liked {}
2014-11-22 15:29:51	V-ille	Dunno if my best friend refp is ignoring me, but his contributions were valuable. :)
2014-11-22 15:30:06	-->	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has joined ##c++
2014-11-22 15:30:19	<--	Unscrupulous (~unscrupt@c-24-21-164-161.hsd1.or.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-22 15:30:40	joel_falcou	ville, it does make a lot of tuff not orking anymore alas
2014-11-22 15:30:46	marchelzo_	Not strictly C++ related but maybe someone can answer: How do I use the overloaded () operator in gdb? I just get "Invalid data type for function to be called.".
2014-11-22 15:30:52	ArchZombie	cbreak, did you enable C++14?
2014-11-22 15:30:56	V-ille	refp: one of the excellent parts of your paper was the "no, you don't always know your return type, what if it's 'T'?"
2014-11-22 15:31:14	ArchZombie	that works for me on my laptop, with slight changes as I did gut the code out of my codebase.
2014-11-22 15:31:17	cbreak	I just looked at your code
2014-11-22 15:31:31	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 15:31:32	ville	joel_falcou: it is almost impossible to introduce a syntax change to c++ that doesn't interact with something
2014-11-22 15:31:47	joel_falcou	what's the pb with make_tuple
2014-11-22 15:32:01	joel_falcou	especially with auto f() return make_tuple(x,y,z).
2014-11-22 15:32:02	ArchZombie	marchelzo_, try t.T::operator()() maybe
2014-11-22 15:32:10	b_jonas	marchelzo_: have you tried to ask #gdb ? have you tried to compile with a recent enough compiler and debug with a recent enough gdb? it matters a lot when debugging C++.
2014-11-22 15:32:14	joel_falcou	it has been an issue when we needed decltype as trailing return
2014-11-22 15:32:43	V-ille	joel_falcou: well, in some generic code you don't want to state you have a tuple?
2014-11-22 15:32:52	<--	Guest92089 (~mohammad@85.239.223.38) has left ##c++
2014-11-22 15:33:00	joel_falcou	V-ille, well
2014-11-22 15:33:03	joel_falcou	i buy this one
2014-11-22 15:33:17	mihipte	money?
2014-11-22 15:33:19	ArchZombie	cbreak, why wouldn't it work? :/
2014-11-22 15:33:24	V-ille	joel_falcou: with the c++11 tuple, you could never say return {foo, bar}; never. Not ever. Not even when the types are implicitly convertible.
2014-11-22 15:33:39	joel_falcou	I know
2014-11-22 15:33:55	V-ille	so, the solution depicted by Daniel takes care of that
2014-11-22 15:34:06	cbreak	because the paste site you chose doesn't support generic lambdas for one
2014-11-22 15:34:24	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-22 15:34:34	ArchZombie	Well I know that, but the code works if you compile it with C++14.
2014-11-22 15:34:34	ArchZombie	I don't know any sites that support it.
2014-11-22 15:34:54	V-ille	joel_falcou: there's been some bitching about that leading to 30+ constructors for tuple. Howard Hinnant says he can bring it back "down" to 15 without loss of functionality.
2014-11-22 15:35:08	joel_falcou	I remember this part
2014-11-22 15:35:19	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-22 15:35:19	V-ille	joel_falcou: have you been to the meetings?
2014-11-22 15:35:43	joel_falcou	only heard reports. Most meeting are too far away for my poor french university :p
2014-11-22 15:36:12	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-22 15:36:36	-->	lynnard (~lingnan@cpc3-walt13-2-0-cust268.13-2.cable.virginm.net) has joined ##c++
2014-11-22 15:36:38	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-22 15:36:42	cbreak	ArchZombie: http://coliru.stacked-crooked.com/a/28b1885f20965e73
2014-11-22 15:36:51	cbreak	ArchZombie: I even properly indented it
2014-11-22 15:37:45	o11c	huh, apparently (at least in C89), this is a valid pp-number         .0e+e-.
2014-11-22 15:37:54	lynnard	when I have a static function inside a class, can I refer to this function within the implementation of its member functions without prepending <ClassName>::
2014-11-22 15:37:55	lynnard	?
2014-11-22 15:38:07	o11c	!give lynnard tias
2014-11-22 15:38:08	nolyc	lynnard: Try it and see yourself. 1) Stops wasting our time and 2) You learn the answer. If you have a specific compiler error prepare a test case at http://ideone.com/
2014-11-22 15:38:17	V-ille	joel_falcou: the french situation is weird. Loic hasn't been around for some time, same for Jean-Luc <sic?>
2014-11-22 15:38:18	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-22 15:38:23	joel_falcou	yeah
2014-11-22 15:38:39	joel_falcou	so what happened is that the AFNOR (french ISO rep.) decided to f*ck us up
2014-11-22 15:38:40	<--	razieliyo (~razieliyo@unaffiliated/razieliyo) has quit (Quit: Saliendo)
2014-11-22 15:38:50	joel_falcou	and even gabriel bargaining wiht Microsoft france didn't save us
2014-11-22 15:39:04	lynnard	nolyc: I don't think I'm wasting anyone's time. I did try it before I asked but the compiler didn't give me a clear answer to that
2014-11-22 15:39:07	cbreak	what did he want to do?
2014-11-22 15:39:21	joel_falcou	so currently there is no french representative
2014-11-22 15:39:27	V-ille	joel_falcou: the meeting before-the-last indicated that, the french guys all said in that meeting "not representing france"
2014-11-22 15:39:28	joel_falcou	no french vote either
2014-11-22 15:39:30	cbreak	lynnard: the answer is: it works
2014-11-22 15:39:33	joel_falcou	ya
2014-11-22 15:39:50	V-ille	joel_falcou: then again, it's been almost a decade since Gabriel was voting for france
2014-11-22 15:39:54	joel_falcou	yeah
2014-11-22 15:39:59	joel_falcou	but well he wanted to help us
2014-11-22 15:40:00	lynnard	cbreak: unless I have something like 'using namespace std;' at the top right?
2014-11-22 15:40:08	cbreak	no
2014-11-22 15:40:15	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-22 15:40:20	cbreak	don't do that, it's idiotic
2014-11-22 15:40:25	-->	ZDisorder (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2014-11-22 15:40:31	V-ille	!using namespace
2014-11-22 15:40:32	nolyc	The use of using-directives (e.g. `using namespace std;') is discouraged, because: (1) in the case of namespace std, it potentially brings hundreds of names from the entire standard library into scope, and (2) their use obscures the origins of unqualified names in your code. Use explicit qualification (e.g. `std::cout') and/or using-declarations (e.g. `using std::cout;') instead.
2014-11-22 15:41:18	lynnard	cbreak: well at the moment I just want to understand how it works rather than what the best way to go about it
2014-11-22 15:41:33	cbreak	lynnard: :: is the scope resolution operator
2014-11-22 15:41:38	cbreak	it resolves scope
2014-11-22 15:41:50	cbreak	you don't need to use it if the name you want to refer to is in scope
2014-11-22 15:42:05	<--	Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (Ping timeout: 240 seconds)
2014-11-22 15:42:12	lynnard	cbreak: so from what you say it appears it won't work if I have that 'using' at the top, which confirms that the vague error message I see for resolution is indeed caused by this problem. thank you
2014-11-22 15:42:13	cbreak	names can be in scope because you are in that scope, or because of ADL
2014-11-22 15:42:20	cbreak	or because of using
2014-11-22 15:42:32	cbreak	of course it works
2014-11-22 15:42:37	<--	lynnard (~lingnan@cpc3-walt13-2-0-cust268.13-2.cable.virginm.net) has left ##c++
2014-11-22 15:43:31	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-22 15:44:33	-->	EvergreenTree (~quassel@unaffiliated/evergreentree) has joined ##c++
2014-11-22 15:45:47	<--	fujiro (~fujiro@public138959.cdma.centertel.pl) has quit (Ping timeout: 244 seconds)
2014-11-22 15:46:05	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-22 15:47:02	<--	kralyk (~kralyk@88.146.158.152) has quit (Quit: WeeChat 1.0.1)
2014-11-22 15:48:31	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-22 15:48:32	-->	slassh (~slassh@176.25.132.164) has joined ##c++
2014-11-22 15:49:40	ArchZombie	Well, I finally got my wrapper around reading and writing tuples to/from sockets working it looks like.
2014-11-22 15:49:40	<--	Garner (uid38417@gateway/web/irccloud.com/x-kanypcupubuutgeq) has quit (Quit: Connection closed for inactivity)
2014-11-22 15:51:13	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Read error: Connection reset by peer)
2014-11-22 15:51:18	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-22 15:51:31	-->	p|q (~plq@78.189.180.67) has joined ##c++
2014-11-22 15:51:39	<--	Vulcan[OMNI]_ (~smanzer@c-76-103-244-209.hsd1.ca.comcast.net) has quit (Quit: Vulcan[OMNI]_)
2014-11-22 15:52:58	V-ille	joel_falcou: well, all in all, that's just "fucking great". The germ(an)s have been difficult about it, and the french are joining the difficult bureaucratic crowd. :P
2014-11-22 15:53:09	p|q	is there a way to create a std::set<SomeClass<T> *> for all T?
2014-11-22 15:53:37	cbreak	sure
2014-11-22 15:53:42	cbreak	template meta function
2014-11-22 15:54:18	cbreak	template<typename T> struct GenThing { typedef std::set<SomeClass<T>*> EvilPointerThing; };
2014-11-22 15:54:30	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2014-11-22 15:54:42	cbreak	p|q: in new c++ versions you can even do a using version that is usable without typename
2014-11-22 15:54:49	hs_	p|q, "for all T" or "for any T"?
2014-11-22 15:55:02	p|q	hs_, for any T
2014-11-22 15:55:03	<--	Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has quit (Ping timeout: 245 seconds)
2014-11-22 15:55:07	joel_falcou	V-ille, i'm trying to see if we can coerce the afnor
2014-11-22 15:55:17	p|q	cbreak, I'm using c++11
2014-11-22 15:55:17	joel_falcou	some ppl i know knw the afnor guy boss
2014-11-22 15:55:18	joel_falcou	so ...
2014-11-22 15:55:36	hs_	p|q, so not some kind of heterogeneous pointer container
2014-11-22 15:55:51	cbreak	p|q: you can use it like typename GenThing<int>::EvilPointerThing intThings;
2014-11-22 15:56:03	-->	fujiro (~fujiro@public138959.cdma.centertel.pl) has joined ##c++
2014-11-22 15:56:28	hs_	p|q, why not just template <typename T> using BestSetEver = std::set<SomeClass<T>*>; ?
2014-11-22 15:56:38	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 256 seconds)
2014-11-22 15:56:48	hs_	(I don't personally like that much weird type indirection)
2014-11-22 15:56:50	cbreak	yes. That'll require C++11
2014-11-22 15:57:06	cbreak	and is simpler to use
2014-11-22 15:57:20	cbreak	hs_: his weird raw pointer indirection is much worse :)
2014-11-22 15:57:57	V-ille	joel_falcou: call me old-fashioned, but I don't quite understand why afnor has become so bitchy about it. Yes, loic is in the usa west coast, perhaps others too, but french are french, they shouldn't be required to be in france for all of their life. :P
2014-11-22 15:58:04	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2014-11-22 15:58:09	p|q	hs_, let me see
2014-11-22 15:58:37	V-ille	joel_falcou: then again, daveed once asked whether he can represent belgium, and their nb said no, since he lives in the usa
2014-11-22 15:58:39	joel_falcou	V-ille, they just want money
2014-11-22 15:59:02	V-ille	joel_falcou: also, Jaakko J?rvi said the Finnish NB wasn't interested in having a representative that lives in Texas.
2014-11-22 15:59:03	cbreak	hmm... does bjarne represent someone?
2014-11-22 15:59:05	-->	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined ##c++
2014-11-22 15:59:29	V-ille	cbreak: he's a USA member, and he has at times been the alternative for Netherlands :P
2014-11-22 15:59:34	V-ille	sometimes France, too :P
2014-11-22 15:59:35	ville	who could be more finnish than person with J?rvi last name?
2014-11-22 15:59:42	joel_falcou	he
2014-11-22 15:59:44	V-ille	he has his ways to get NB-votes
2014-11-22 15:59:58	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-22 16:00:27	shirt	am i allowed to use construct a class with placement new in a memory location that is smaller than sizeof(Myclass) if i promise not to touch the member variables declared at the end of the class?
2014-11-22 16:00:38	joel_falcou	shirt, smell like poop
2014-11-22 16:00:42	joel_falcou	or even UB
2014-11-22 16:00:48	ville	i explain. finland 1000 lakes. j?rvi == lake.
2014-11-22 16:00:49	shirt	joel_falcou: eh?
2014-11-22 16:00:58	V-ille	Jaakko is the father of lambdas. I was surprised to see him in Madrid. He said he wanted to be present when a new standard goes out.
2014-11-22 16:01:10	joel_falcou	shirt, undefined behavior
2014-11-22 16:01:16	joel_falcou	what's the factoid for that
2014-11-22 16:01:17	-->	oleo__ (~oleo@xdsl-87-79-251-252.netcologne.de) has joined ##c++
2014-11-22 16:01:18	p|q	hs_, I guess I need what you called a heterogeneous container i.e. a single container that can contain e.g. SomeClass<bool> * or SomeClass<int> * etc.
2014-11-22 16:01:32	V-ille	He didn't reappear for c++14, probably too insignificant, although there were a handful of lambda fixes in it :P
2014-11-22 16:01:46	--	oleo is now known as Guest71756
2014-11-22 16:02:02	<--	Guest71756 (~oleo@xdsl-78-35-154-181.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-11-22 16:02:13	hs_	p|q, you don't want a std::set of pointers anyway ( I think )
2014-11-22 16:02:23	<--	yrter (~yrter@unaffiliated/yrter) has quit (Ping timeout: 250 seconds)
2014-11-22 16:02:23	hs_	p|q, since it is sorted and you cannot really sort pointers
2014-11-22 16:02:32	TinoDidriksen	shirt, why would you even want to do that?
2014-11-22 16:02:34	V-ille	oh, well, there was actually a reason he didn't reappear, tamu was getting all bitchy about everything
2014-11-22 16:02:43	joel_falcou	TAMU ..
2014-11-22 16:02:47	shirt	joel_falcou: yeah, i know that, but will any implements put any important (like the vtable) at the end of the struct?
2014-11-22 16:02:49	V-ille	that's why bjarne, gaby and sutton left the building
2014-11-22 16:03:02	V-ille	I don't know whether Jaakko is still there
2014-11-22 16:03:03	ville	TAMU?
2014-11-22 16:03:10	joel_falcou	V-ille, he had a sabatiical
2014-11-22 16:03:13	V-ille	Texas A&M University
2014-11-22 16:03:17	joel_falcou	but that was last year IIRC
2014-11-22 16:03:18	p|q	hs_, std::set was just an example, would it matter if it was std::unordered_set ?
2014-11-22 16:03:20	TinoDidriksen	shirt, that is implementation defined.
2014-11-22 16:03:20	ville	aok
2014-11-22 16:03:22	shirt	TinoDidriksen: i need to create an array of these objects, and i know i won't be using some fields, and need to conserve memory
2014-11-22 16:03:38	TinoDidriksen	If you don't need the fields, make a new struct without them...
2014-11-22 16:03:42	V-ille	ville: that used to be the place for all things in future C++ design :P
2014-11-22 16:03:42	joel_falcou	it was still fine when i was at TAMU
2014-11-22 16:03:50	joel_falcou	it must have dingled down lately
2014-11-22 16:03:58	shirt	TinoDidriksen: problem is i have a lot of such structs, and it will be really ugly to have to have a duplicate of all of them
2014-11-22 16:04:09	ville	V-ille: i am a new person. joel_falcou is the old one
2014-11-22 16:04:15	joel_falcou	sshh
2014-11-22 16:04:29	p|q	I guess I'm left with std::set<void *> and reinterpret_cast
2014-11-22 16:04:36	V-ille	ewwww
2014-11-22 16:04:41	hs_	p|q, look at boost::variant
2014-11-22 16:04:42	 *	joel_falcou pukes in his mouth
2014-11-22 16:04:50	p|q	I can't use boost.
2014-11-22 16:04:50	ville	eiiiii
2014-11-22 16:05:00	joel_falcou	most overused statement ever
2014-11-22 16:05:01	hs_	it is header only
2014-11-22 16:05:10	ville	quick invent something anything
2014-11-22 16:05:18	-->	deadcode (~deadcode@75.146.15.253) has joined ##c++
2014-11-22 16:05:22	V-ille	p|q: even if you can't use boost, seek library facilities like variant/any rather than using void*
2014-11-22 16:05:44	ville	i think cppcon had a talk?
2014-11-22 16:05:48	-->	newbiz (~newbiz@116-166-190-90.dyn.estpak.ee) has joined ##c++
2014-11-22 16:06:09	joel_falcou	on ?
2014-11-22 16:06:25	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 255 seconds)
2014-11-22 16:06:27	V-ille	about what? I've heard rumors that boosties are aiming for more modularity, sure
2014-11-22 16:06:31	peterR``	can I provide some member hash function for std::unordered_map?
2014-11-22 16:06:41	hs_	p|q, another option is a heterogeneous "container" like a tuple
2014-11-22 16:06:56	V-ille	peterR``: you can, but beware, hashing isn't easy
2014-11-22 16:07:10	ville	now this is getting muddy
2014-11-22 16:07:32	p|q	I'm on Qt actually, what would be the advantage of using QVariant here?
2014-11-22 16:07:44	peterR``	hmm, but there is std::hash<int> - I want the hash of my class to be the hash of one of the int members
2014-11-22 16:07:50	p|q	hs_, you mean std::pair or some new c++11 thingy I missed?
2014-11-22 16:07:56	peterR``	what is the syntax?
2014-11-22 16:07:56	ville	!general
2014-11-22 16:07:56	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-22 16:07:58	V-ille	ville: this was always muddy. I was originally not an rvalue, and c++11 lambdas didn't capture it well. :D
2014-11-22 16:08:02	hs_	p|q, std::tuple
2014-11-22 16:08:15	V-ille	*It, not I
2014-11-22 16:08:25	V-ille	*I* was always an rvalue, sure
2014-11-22 16:09:03	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-22 16:09:20	ville	well i aim towards null value
2014-11-22 16:09:28	V-ille	p|q: the advantage of using a library type over void*/union is that you don't need to deal with raw sewage
2014-11-22 16:09:30	<--	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-22 16:09:30	<--	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-22 16:09:36	-->	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-22 16:09:45	-->	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-22 16:10:43	joel_falcou	gtgbed guys
2014-11-22 16:10:46	joel_falcou	c u
2014-11-22 16:10:47	-->	Garner (uid38417@gateway/web/irccloud.com/x-oxjxvmrtncgezkpk) has joined ##c++
2014-11-22 16:11:21	ville	howdy
2014-11-22 16:11:43	Ascian	howdy
2014-11-22 16:12:19	Ascian	Anyone familiar with vs 2005 std?
2014-11-22 16:12:23	ArchZombie	p|q, I suggest dynamic_cast for this if you don't want to use a library.
2014-11-22 16:12:50	V-ille	you can't dynamic_cast down from void*, though
2014-11-22 16:13:13	<--	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has quit (Ping timeout: 264 seconds)
2014-11-22 16:13:24	ArchZombie	struct dynamic_type { virtual ~dynamic_type() {}; /* or some other member */ } then virtually inherit from that with a reference container class
2014-11-22 16:13:35	TinoDidriksen	!give Ascian windows
2014-11-22 16:13:37	nolyc	Ascian: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-22 16:14:00	ArchZombie	like template <typename T> struct wrapper: public virtual dynamic_type { T& t; }
2014-11-22 16:14:04	Ascian	Thank you
2014-11-22 16:14:23	V-ille	TinoDidriksen: there were some earlier hallucinations of a vc++ channel, does such a thing exist? Or did I again start believing in satan claus?
2014-11-22 16:14:50	V-ille	btw, that last thing was not a typo
2014-11-22 16:14:58	TinoDidriksen	A VC++ specific channel? Haven't heard of one.
2014-11-22 16:15:03	ArchZombie	Then make something like template <typename T> auto wrap (T t) -> wrapper<T> { ... }
2014-11-22 16:15:07	p|q	Ok, I'll give QSet<SomeClass<QVariant>> a try. Thanks a lot guys.
2014-11-22 16:15:24	peterR``	I don't think he is asking about windows programming - just about a windows compiler
2014-11-22 16:15:26	-->	6A4AAJLOW (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 16:16:13	ArchZombie	p|q, dynamic cast offers better safety then reinterpret_cast and supports typeid, with a wrapper you can use it on any type.
2014-11-22 16:16:20	ArchZombie	*than
2014-11-22 16:16:20	V-ille	TinoDidriksen: ok, I guess that was then an evil scheme to get clueless people to join non-channels. I would, of course, never do that.
2014-11-22 16:16:31	Ascian	Well I think the visual studio version of std would fall into windows programming
2014-11-22 16:16:40	<--	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-22 16:16:58	<--	dooshtuRabbit1 (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-22 16:17:18	V-ille	discussions of its lack of conformance would probably fall sort-of here
2014-11-22 16:17:27	V-ille	in short: it doesn't conform
2014-11-22 16:17:37	Ascian	right
2014-11-22 16:17:45	-->	davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-22 16:17:46	Ascian	Thank you for pointing in the correct direction though ^_^
2014-11-22 16:17:56	V-ille	probably worse: shit you write on it will probably not work on sane implementations
2014-11-22 16:18:03	V-ille	and vice versa
2014-11-22 16:18:13	peterR``	well a 2005 compiler isn't going to conform with C++11 that's for sure
2014-11-22 16:18:36	Ascian	My questions have less to do about conformance and more about implementation details
2014-11-22 16:18:37	V-ille	sure, but the latest-and-greatest of MSVC leaves quite a bit to desire
2014-11-22 16:18:50	Ascian	^- agree 100%
2014-11-22 16:19:00	peterR``	have you checked VS2015?
2014-11-22 16:19:17	V-ille	Ascian: if you want to ask "should this code be valid?", then it may be fine
2014-11-22 16:19:18	ville	does he have a dick?
2014-11-22 16:19:20	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-22 16:19:57	-->	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:404c:569e:3e53:c4e7) has joined ##c++
2014-11-22 16:19:57	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:404c:569e:3e53:c4e7) has joined ##c++
2014-11-22 16:20:03	V-ille	Ascian: if your question is "why the fuck doesn't msvc accept this obvious valid code", you may want to look elsewhere
2014-11-22 16:20:24	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-22 16:20:56	<--	6A4AAJLOW (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Ping timeout: 256 seconds)
2014-11-22 16:21:32	Ascian	Is there a reverse engineering channel?
2014-11-22 16:21:54	V-ille	well
2014-11-22 16:22:00	V-ille	!give Ascian alis
2014-11-22 16:22:01	nolyc	Ascian: alis is a freenode service bot designed to help find channels on freenode instead of asking in other channels that aren't meant to be your gateway into freenode (like ##c++). /msg alis help list to get started.
2014-11-22 16:22:04	Ascian	Sorry for offtopic
2014-11-22 16:22:22	V-ille	you know, the question is a tad difficult to answer
2014-11-22 16:22:36	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2014-11-22 16:24:46	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-22 16:27:05	<--	oleo__ (~oleo@xdsl-87-79-251-252.netcologne.de) has quit (Quit: Verlassend)
2014-11-22 16:27:31	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-22 16:29:25	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2014-11-22 16:29:35	-->	Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has joined ##c++
2014-11-22 16:29:59	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-22 16:30:22	-->	oleo__ (~oleo@xdsl-87-79-251-252.netcologne.de) has joined ##c++
2014-11-22 16:32:50	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Ping timeout: 264 seconds)
2014-11-22 16:32:50	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 16:34:38	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-22 16:36:17	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-22 16:36:22	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 16:38:53	-->	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has joined ##c++
2014-11-22 16:41:17	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-22 16:43:21	<--	Balzy (~Balzy@adsl-ull-169-161.44-151.net24.it) has quit (Read error: No route to host)
2014-11-22 16:43:43	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-22 16:44:34	--	oleo__ is now known as oleo
2014-11-22 16:46:18	<--	EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Remote host closed the connection)
2014-11-22 16:46:18	marchelzo_	Can you force a function to not be inlined?
2014-11-22 16:46:35	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Ping timeout: 240 seconds)
2014-11-22 16:48:07	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Quit: Ex-Chat)
2014-11-22 16:48:47	peterR``	not in a standard way afaik
2014-11-22 16:48:57	peterR``	MSVC supports that
2014-11-22 16:49:05	marchelzo_	does -O0 disable all inlining?
2014-11-22 16:49:27	peterR``	which compiler?
2014-11-22 16:49:30	marchelzo_	g++
2014-11-22 16:51:11	o11c	marchelzo_: no, even -O0 can optimize
2014-11-22 16:51:19	o11c	marchelzo_: but __attribute__((noinline)) is a thing
2014-11-22 16:51:24	marchelzo_	I tried that
2014-11-22 16:51:47	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-22 16:51:55	marchelzo_	I don't know why but in gdb it says "Cannot evaluate function -- may be inlined"
2014-11-22 16:52:07	-->	slacko293941 (~root@115.99.1.109) has joined ##c++
2014-11-22 16:53:32	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-22 16:53:38	-->	ac_slater (~anthony@96.237.110.242) has joined ##c++
2014-11-22 16:53:38	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-22 16:54:09	<--	ac_slater (~anthony@96.237.110.242) has quit (Quit: ac_slater)
2014-11-22 16:54:09	-->	ac_slater1 (~Adium@96.237.110.242) has joined ##c++
2014-11-22 16:54:14	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Quit: asdf)
2014-11-22 16:55:26	<--	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has quit (Ping timeout: 255 seconds)
2014-11-22 16:56:20	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-mcsjiujinnoapbco) has quit (Quit: Connection closed for inactivity)
2014-11-22 16:56:21	-->	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has joined ##c++
2014-11-22 16:56:46	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Ping timeout: 250 seconds)
2014-11-22 16:58:09	-->	headrx (~headrx@h52.223.22.98.dynamic.ip.windstream.net) has joined ##c++
2014-11-22 17:00:47	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-22 17:00:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 17:01:53	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Ping timeout: 240 seconds)
2014-11-22 17:02:05	<--	newbiz (~newbiz@116-166-190-90.dyn.estpak.ee) has quit (Remote host closed the connection)
2014-11-22 17:03:15	V-ille	don't we have
2014-11-22 17:03:18	V-ille	!inline
2014-11-22 17:03:20	nolyc	The inline specifier hints the compiler to inline a function, but is in this sense often ignored by modern compilers which are better at deciding when to inline functions (including those not marked inline) than humans. Functions marked inline must be defined in every TU in which they are used, making headers the appropriate place to define them if they are used in multiple TUs.
2014-11-22 17:03:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 17:04:06	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 264 seconds)
2014-11-22 17:04:35	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-22 17:04:41	-->	bradley (~bradley@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-22 17:05:37	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Quit: Leaving)
2014-11-22 17:05:39	V-ille	I'm not going to touch that factoid right now, but there are several things in it that are imperfect.
2014-11-22 17:06:17	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-22 17:06:37	-->	Unscrupulous (~unscrupt@c-24-21-164-161.hsd1.or.comcast.net) has joined ##c++
2014-11-22 17:08:10	Spark	that this margin is too small to contain
2014-11-22 17:08:25	<--	Unscrup12 (~unscrupt@172.56.33.164) has quit (Ping timeout: 256 seconds)
2014-11-22 17:09:05	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 17:09:07	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-22 17:09:21	<--	bradley (~bradley@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Ping timeout: 255 seconds)
2014-11-22 17:10:49	peterR``	that doesn't help stopping a function being inlined though
2014-11-22 17:11:04	<--	Trondby (~Trondby@unaffiliated/trondby) has quit (Ping timeout: 255 seconds)
2014-11-22 17:11:08	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-22 17:11:45	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-22 17:11:45	-->	andgra (~andgra@79.102.19.182) has joined ##c++
2014-11-22 17:11:56	V-ille	if you want to stop a function being inlined, make sure the implementation doesn't see the definition
2014-11-22 17:12:46	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-22 17:13:09	<--	ac_slater1 (~Adium@96.237.110.242) has quit (Quit: Leaving.)
2014-11-22 17:13:54	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-22 17:14:14	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-22 17:14:57	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2014-11-22 17:15:37	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-22 17:16:37	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 240 seconds)
2014-11-22 17:19:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 17:20:15	<--	WalrusPony1 (~retep998@pool-173-76-139-159.bstnma.east.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-22 17:21:17	-->	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-22 17:22:22	<--	necrogami (~necrogami@unaffiliated/necrogami) has quit (Max SendQ exceeded)
2014-11-22 17:22:23	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 17:22:29	o11c	mumble mumble LTO
2014-11-22 17:22:31	-->	necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-22 17:22:52	-->	ac_slater (~Adium@96.237.110.242) has joined ##c++
2014-11-22 17:25:25	V-ille	hence "implementation" ;)
2014-11-22 17:25:56	<--	gelignite (~gelignite@i528C38FD.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-22 17:25:58	LunarJetman	Z80A.
2014-11-22 17:26:19	ville	tudu-tudu-tuduu
2014-11-22 17:28:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 17:29:15	<--	licnep (uid4387@gateway/web/irccloud.com/x-nnzrgcothjetivmz) has quit (Quit: Connection closed for inactivity)
2014-11-22 17:30:35	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-22 17:31:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 17:32:48	-->	garFF_ (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-22 17:32:56	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Read error: Connection reset by peer)
2014-11-22 17:33:02	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 17:33:42	-->	nikio (~nikio@53569277.cm-6-7c.dynamic.ziggo.nl) has joined ##c++
2014-11-22 17:33:53	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-22 17:35:24	marchelzo_	If I have two functions and the only difference between their prototypes is that one is const and the other isn't, is there a way to know for sure which one is being called when I call it?
2014-11-22 17:35:55	hs_	member functions?
2014-11-22 17:36:13	marchelzo_	yes
2014-11-22 17:37:14	hs_	a const object will call the const member function, and non-const will call the non-const
2014-11-22 17:37:17	V-ille	the return type doesn't participate in overload resolution
2014-11-22 17:37:41	hs_	i am assuming you mean the member function itself is flagged as const, not that you have a const parameter or return type
2014-11-22 17:37:51	hs_	(top level const parameter is ignored anyway)
2014-11-22 17:38:21	marchelzo_	well yes, the return type is not part of the prototype. I meant the function itself is const
2014-11-22 17:38:48	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 240 seconds)
2014-11-22 17:39:08	hs_	{ A const a; A b; a.foo(); b.foo(); } struct A { void foo() const { cout << "const","";} void foo() { cout << "non-const"; } }; //
2014-11-22 17:39:09	geordi	const, non-const
2014-11-22 17:39:32	hs_	there are also reference qualifiers now too (& and &&)
2014-11-22 17:40:25	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-22 17:40:44	-->	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has joined ##c++
2014-11-22 17:41:41	<--	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has left ##c++
2014-11-22 17:41:47	-->	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has joined ##c++
2014-11-22 17:43:39	<--	slassh (~slassh@176.25.132.164) has quit (Quit: Leaving)
2014-11-22 17:44:37	-->	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-22 17:45:04	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-22 17:47:24	-->	Felishia (~felishia@186-94-176-201.genericrev.cantv.net) has joined ##c++
2014-11-22 17:47:40	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-22 17:47:53	Felishia	How do I wait for a keypress on linux?
2014-11-22 17:48:02	Felishia	without echoing what key was pressed
2014-11-22 17:48:03	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 17:48:17	-->	j0n17 (~j0n17@AAnnecy-652-1-741-222.w86-200.abo.wanadoo.fr) has joined ##c++
2014-11-22 17:48:46	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 240 seconds)
2014-11-22 17:49:13	-->	Z80 (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-22 17:49:31	<--	Z80 (~ASAP@unaffiliated/lokomotiv) has quit (Client Quit)
2014-11-22 17:51:11	-->	BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has joined ##c++
2014-11-22 17:51:13	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-22 17:51:21	V-ille	!give Felishia general
2014-11-22 17:51:23	nolyc	Felishia: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-22 17:51:40	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-22 17:52:02	-->	SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-22 17:52:19	Felishia	uh? XD
2014-11-22 17:52:21	Felishia	okay
2014-11-22 17:52:26	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Ping timeout: 240 seconds)
2014-11-22 17:52:36	<--	SlashLife (~slashlife@botters/slashlife) has quit (Read error: Connection reset by peer)
2014-11-22 17:52:38	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 17:53:01	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-22 17:53:19	-->	immibis (~ChatZill1@125-239-92-73.jetstream.xtra.co.nz) has joined ##c++
2014-11-22 17:53:46	Felishia	V-ille, ##namespace :Cannot send to channel
2014-11-22 17:54:04	Felishia	You've been forwarded to ##namespace by attempting to join a channel which doesn't exist on freenode
2014-11-22 17:54:23	Felishia	okay the C is a big one right?
2014-11-22 17:54:29	hs_	##C++-general
2014-11-22 17:54:34	V-ille	##
2014-11-22 17:54:38	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-22 17:54:42	<--	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has left ##c++
2014-11-22 17:54:53	-->	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has joined ##c++
2014-11-22 17:55:12	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 17:55:24	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-22 17:55:26	<--	headrx (~headrx@h52.223.22.98.dynamic.ip.windstream.net) has quit (Ping timeout: 264 seconds)
2014-11-22 17:57:33	Gomitung	Hi
2014-11-22 17:57:44	<--	Gama11 (~quassel@p57967E04.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-22 17:58:12	<--	BlaXpirit (~blaxpirit@200-127-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-22 17:58:18	Gomitung	Where can I found a place to learn about iterators(example:istreambuf_iterator)?
2014-11-22 17:58:20	<--	slacko293941 (~root@115.99.1.109) has quit (Read error: Connection reset by peer)
2014-11-22 17:58:55	<--	Munnu (~timo@91-158-128-16.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-11-22 17:59:08	<--	Felishia (~felishia@186-94-176-201.genericrev.cantv.net) has left ##c++ ("Leaving")
2014-11-22 17:59:21	<--	deadcode (~deadcode@75.146.15.253) has quit (Quit: Lost terminal)
2014-11-22 18:00:07	irrenhaus3	Gomitung: you're in the right place - and you can also try ##c++-general
2014-11-22 18:00:40	Gomitung	irrenhaus3, I found a line at stackoverflow that counts the lines in a file (std::count(std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>(), '\n'))
2014-11-22 18:00:48	Gomitung	can you explain what do the iterators do there?
2014-11-22 18:02:04	tsimpson	they allow you to treat a stream as a sequence of characters, and so run algorithms over that sequence
2014-11-22 18:02:37	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-22 18:03:07	Gomitung	So std::istreambuf_iterator<char>(file) means the top of the file?
2014-11-22 18:03:26	Gomitung	or the whole file?
2014-11-22 18:03:28	-->	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-11-22 18:03:42	tsimpson	it forms an iterator to the first available character in the input stream
2014-11-22 18:04:05	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-22 18:04:20	-->	Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-11-22 18:04:22	tsimpson	!stdref std::istreambuf_iterator
2014-11-22 18:04:24	nolyc	http://en.cppreference.com/w/cpp/iterator/istreambuf_iterator
2014-11-22 18:05:04	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-22 18:06:30	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2014-11-22 18:06:50	Gomitung	If I understood well, std::istreambuf_iterator<char>() means to the last avaliable char?
2014-11-22 18:07:54	tsimpson	end iterators represent one past the end of the sequence
2014-11-22 18:07:55	<--	Ascian (~cbainx@cpe-65-185-69-205.neo.res.rr.com) has quit (Quit: Leaving)
2014-11-22 18:08:08	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-22 18:08:44	tsimpson	that's represented by a default constructed iterator that will compare true when the stream passed to the other iterator becomes empty (or otherwise fails)
2014-11-22 18:09:02	Gomitung	Oh
2014-11-22 18:09:04	Gomitung	Thank you
2014-11-22 18:09:09	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-22 18:09:33	Gomitung	I guess I complicated it
2014-11-22 18:09:40	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-22 18:10:05	ac_slater	alright guys, I have this `struct Foo { Obj * manager; void (Obj::*callback)(); }` assume I have a pointer to a Foo instance. that has those fields set. What's the best way to invoke that callback on the object `Obj` ?
2014-11-22 18:10:12	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: endomancer)
2014-11-22 18:10:32	<--	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has quit (Ping timeout: 264 seconds)
2014-11-22 18:11:24	ac_slater	oh nevermind I got it
2014-11-22 18:11:26	tsimpson	((ptr->manager)->*(ptr->callback))()
2014-11-22 18:11:56	ac_slater	tsimpson: yup thanks mate
2014-11-22 18:12:02	ac_slater	the middle `*` was confusing for a sec
2014-11-22 18:12:14	ac_slater	but it makes sense
2014-11-22 18:12:27	tsimpson	I'd just give Foo a void operator()() { (manager->*callback)(); }
2014-11-22 18:12:29	ac_slater	I love std::function, but sometimes I dont want to deal with it and just fallback to dumb MFPs
2014-11-22 18:12:56	ac_slater	tsimpson: yea /I'd/ do that too. This is some old library code I have? cant really change it :(
2014-11-22 18:13:26	<--	nacon (~nacon@unaffiliated/nacon) has quit (Ping timeout: 256 seconds)
2014-11-22 18:13:39	-->	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has joined ##c++
2014-11-22 18:13:48	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 250 seconds)
2014-11-22 18:14:27	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-22 18:14:31	<--	fujiro (~fujiro@public138959.cdma.centertel.pl) has quit (Quit: Going for coffee)
2014-11-22 18:14:37	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-22 18:15:12	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-22 18:16:08	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Remote host closed the connection)
2014-11-22 18:16:44	<--	kexmex (~kexmex@178.136.234.6) has quit (Client Quit)
2014-11-22 18:17:04	<--	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-22 18:17:33	-->	Insolsence (~Insolsenc@r4-128-61-90-116.res.gatech.edu) has joined ##c++
2014-11-22 18:17:53	<--	Insolsence (~Insolsenc@r4-128-61-90-116.res.gatech.edu) has left ##c++ ("Leaving")
2014-11-22 18:18:14	-->	Timmy` (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-22 18:18:38	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-22 18:18:56	<--	Gomitung (5f5f15dc@gateway/web/freenode/ip.95.95.21.220) has quit (Quit: Page closed)
2014-11-22 18:19:08	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 18:19:19	-->	Gomitung (~mabsantos@a95-95-21-220.cpe.netcabo.pt) has joined ##c++
2014-11-22 18:19:36	<--	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-22 18:19:45	<--	j0n17 (~j0n17@AAnnecy-652-1-741-222.w86-200.abo.wanadoo.fr) has quit (Quit: Leaving)
2014-11-22 18:20:02	-->	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has joined ##c++
2014-11-22 18:20:07	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 264 seconds)
2014-11-22 18:20:19	-->	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-22 18:20:19	<--	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has quit (Changing host)
2014-11-22 18:20:19	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2014-11-22 18:21:22	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 240 seconds)
2014-11-22 18:21:43	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 18:22:56	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-22 18:23:17	<--	rendar (~I@host148-140-dynamic.59-82-r.retail.telecomitalia.it) has quit
2014-11-22 18:23:35	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: dthdrthdrth)
2014-11-22 18:23:49	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-22 18:24:26	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-22 18:24:58	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-22 18:26:06	-->	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 18:26:15	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-22 18:26:26	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 256 seconds)
2014-11-22 18:27:18	<--	Kevin-_- (~kevinmelk@66.86.135.95) has quit (Ping timeout: 264 seconds)
2014-11-22 18:29:42	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 18:30:14	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-22 18:32:38	-->	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 18:32:54	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 18:35:06	-->	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined ##c++
2014-11-22 18:35:49	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Laptop gone to sleep...)
2014-11-22 18:36:31	<--	aggn (~irc@host199-2.natpool.mwn.de) has quit (Remote host closed the connection)
2014-11-22 18:37:25	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Read error: Connection reset by peer)
2014-11-22 18:37:32	<--	QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Quit: Ex-Chat)
2014-11-22 18:37:42	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-22 18:38:02	-->	Novice201y (~fedora@abdc196.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-22 18:38:34	Novice201y	Hello. What will be good to know before sending CV here: http://www.spacex.com/careers/position/2861 ?
2014-11-22 18:40:04	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Ping timeout: 245 seconds)
2014-11-22 18:42:02	<--	nikio (~nikio@53569277.cm-6-7c.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-11-22 18:42:33	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Ping timeout: 265 seconds)
2014-11-22 18:43:27	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-22 18:44:00	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-11-22 18:44:04	<--	Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has quit (Quit: Quitte)
2014-11-22 18:44:15	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 18:45:30	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-22 18:45:44	LunarJetman	Novice201y: if you have to ask then the job is probably unsuitable.
2014-11-22 18:46:08	Novice201y	LunarJetman: I don't ask for myself for now.
2014-11-22 18:46:25	marchelzo_	Is it offtopic to ask for help implementing an algorithm in C++?
2014-11-22 18:46:42	LunarJetman	marchelzo_: yes. ##c++-general.
2014-11-22 18:47:09	marchelzo_	thanks
2014-11-22 18:47:37	-->	WalrusPony (~retep998@pool-173-76-139-159.bstnma.east.verizon.net) has joined ##c++
2014-11-22 18:47:48	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-22 18:48:29	<--	Timmy` (~Timmy@unaffiliated/timmyt) has quit (Quit: Left for pasta)
2014-11-22 18:48:31	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-22 18:48:39	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Quit: Hejd?!)
2014-11-22 18:49:03	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 18:49:20	Novice201y	LunarJetman: So, what do You think about this job offer?
2014-11-22 18:49:45	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-22 18:52:36	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 18:52:37	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-22 18:54:52	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-22 18:55:36	micom	Novice201y, what's your experience?
2014-11-22 18:55:40	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 18:56:07	mukunda_	i thought this was a cool pattern... until i realized that it gets evaluated backwards :( http://ideone.com/0Gy0AE
2014-11-22 18:56:26	Novice201y	micom: I'm not asking for myself. Just to know how to talk with my homies who may know C++.
2014-11-22 18:57:17	micom	Must have 5+ years of Linux kernel internals including device drivers and board support
2014-11-22 18:57:25	micom	that's really tough
2014-11-22 18:58:01	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-22 18:58:07	Novice201y	micom: Understand.
2014-11-22 18:59:24	Novice201y	micom: Thanks
2014-11-22 18:59:27	<--	Novice201y (~fedora@abdc196.neoplus.adsl.tpnet.pl) has left ##c++
2014-11-22 19:02:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 19:05:11	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 19:05:14	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 250 seconds)
2014-11-22 19:06:21	<--	froggey (~froggey@unaffiliated/froggey) has quit (Remote host closed the connection)
2014-11-22 19:06:37	-->	froggey (~froggey@unaffiliated/froggey) has joined ##c++
2014-11-22 19:07:15	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-22 19:09:12	<--	kurahaupo (~kurahaupo@118.148.140.6) has quit (Ping timeout: 264 seconds)
2014-11-22 19:10:07	-->	deadcode (~deadcode@75.146.15.253) has joined ##c++
2014-11-22 19:11:27	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2014-11-22 19:11:35	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Quit: snakenerd)
2014-11-22 19:12:47	<--	det (~chris@unaffiliated/det) has quit (Read error: Connection reset by peer)
2014-11-22 19:13:15	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-22 19:13:15	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Client Quit)
2014-11-22 19:13:59	-->	yessopie (~yessopie@yuluserpool4.nat.as55222.com) has joined ##c++
2014-11-22 19:16:02	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-22 19:16:53	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Remote host closed the connection)
2014-11-22 19:16:55	<--	Tribeam_ (~Tribeam@68-114-124-127.dhcp.slid.la.charter.com) has left ##c++
2014-11-22 19:17:44	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-11-22 19:17:53	-->	hexagoxel_ (~hexagoxel@kiel-5f768b2f.pool.mediaWays.net) has joined ##c++
2014-11-22 19:19:21	<--	JSharpe (~JSharpe@31.205.60.241) has quit (Read error: Connection reset by peer)
2014-11-22 19:20:35	-->	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 19:20:51	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-22 19:20:55	<--	ArchZombie (~lkjfeiosn@2602:306:c455:df80:f9e1:4fbc:355b:8db8) has quit (Ping timeout: 258 seconds)
2014-11-22 19:21:02	<--	hexagoxel (~hexagoxel@kiel-5f769494.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-22 19:22:30	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-22 19:22:52	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-22 19:23:32	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 265 seconds)
2014-11-22 19:26:38	<--	andgra (~andgra@79.102.19.182) has quit
2014-11-22 19:27:02	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-22 19:28:09	<--	yessopie (~yessopie@yuluserpool4.nat.as55222.com) has quit
2014-11-22 19:30:04	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-22 19:31:39	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-22 19:32:00	-->	ArchZombie (~lkjfeiosn@2602:306:c455:df80:f9e1:4fbc:355b:8db8) has joined ##c++
2014-11-22 19:33:36	-->	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-22 19:34:28	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-22 19:34:46	o11c	ugh, what is the `[*]` syntax?
2014-11-22 19:34:47	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-22 19:34:58	pragma-	ugh, what does the C++ standard say it is?
2014-11-22 19:35:17	micom	candle, popular in internets
2014-11-22 19:35:19	pragma-	or are you referring to C?
2014-11-22 19:35:23	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Client Quit)
2014-11-22 19:35:23	o11c	well I'm reading C right now
2014-11-22 19:35:36	o11c	but I don't remember it from the "list of C features not in C++"
2014-11-22 19:35:38	pragma-	Thankfully, the C standard is much shorter!
2014-11-22 19:35:55	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-22 19:36:16	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-22 19:37:02	o11c	huh, it says pointer-to-VLA
2014-11-22 19:37:06	o11c	int (*)[*]
2014-11-22 19:37:07	pragma-	In any case, it's a rarely used construct that is only valid in function parameters that signifies that the parameter is a variable-length array of unknown size.
2014-11-22 19:37:11	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-22 19:39:53	<--	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Quit: Leaving)
2014-11-22 19:40:17	<--	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 19:40:22	-->	Asher (~asher@199.116.116.14) has joined ##c++
2014-11-22 19:40:39	<--	tsimpson (quasselcor@ubuntu/member/stdin) has quit (Remote host closed the connection)
2014-11-22 19:40:55	-->	tsimpson (quasselcor@ubuntu/member/stdin) has joined ##c++
2014-11-22 19:41:18	Asher	i have a method that when declared virtual results in a 270+ recursion error but when not virtual compiles just fine... what kind of differences might virtual implicate to cause something like that?
2014-11-22 19:41:28	-->	Kasu (~Kasu@c83-253-25-70.bredband.comhem.se) has joined ##c++
2014-11-22 19:42:02	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-22 19:42:05	-->	Lynxium (~Lonny@bzq-79-183-61-206.red.bezeqint.net) has joined ##c++
2014-11-22 19:44:54	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Quit: Bye)
2014-11-22 19:44:54	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 19:45:29	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-22 19:46:30	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 244 seconds)
2014-11-22 19:46:39	-->	FreezingDroid (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 19:46:47	<--	nyqiust (~nyquist@213162068078.public.t-mobile.at) has quit (Remote host closed the connection)
2014-11-22 19:46:50	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 272 seconds)
2014-11-22 19:48:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 19:49:38	-->	rkreis (~robin@p5B37778E.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 19:49:52	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 19:50:40	Asher	works fine if it's not virtual and i call it explicitly, too
2014-11-22 19:50:47	Asher	but if it's marked virtual then it throws an error whether called or not
2014-11-22 19:52:45	<--	rkreis_ (~robin@p5B37601F.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 19:53:50	<--	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-11-22 19:54:16	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-22 19:56:40	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-22 19:56:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 19:56:53	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 256 seconds)
2014-11-22 19:57:44	<--	jakemp (~jakemp@user-105n004.cable.mindspring.com) has quit (Ping timeout: 240 seconds)
2014-11-22 19:58:28	<--	FreezingDroid (~FreezingC@135.0.41.14) has quit (Quit: Out)
2014-11-22 19:59:55	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 20:00:04	-->	jakemp (~jakemp@user-105n004.cable.mindspring.com) has joined ##c++
2014-11-22 20:00:32	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 264 seconds)
2014-11-22 20:00:33	--	fstd_ is now known as fstd
2014-11-22 20:00:42	-->	Unscrup90 (~unscrupt@2607:fb90:1006:6edd:0:9:8d5b:201) has joined ##c++
2014-11-22 20:01:14	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-22 20:01:58	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-11-22 20:02:11	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-22 20:02:38	<--	Unscrupulous (~unscrupt@c-24-21-164-161.hsd1.or.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-22 20:03:08	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-22 20:03:24	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-22 20:04:26	seronis	show code
2014-11-22 20:04:43	seronis	i cant think of a situation when that would happen but its probably obvious if the code was visible
2014-11-22 20:05:05	<--	ac_slater (~Adium@96.237.110.242) has quit (Quit: Leaving.)
2014-11-22 20:05:12	seronis	@ Asher
2014-11-22 20:05:38	<--	hexagoxel_ (~hexagoxel@kiel-5f768b2f.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-11-22 20:06:02	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 258 seconds)
2014-11-22 20:06:11	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-22 20:06:14	-->	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-22 20:06:15	-->	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has joined ##c++
2014-11-22 20:06:54	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-22 20:06:54	Asher	i'm pretty sure i can't reduce the code and still reproduce the problem
2014-11-22 20:07:04	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Quit: Leaving)
2014-11-22 20:07:10	-->	ac_slater (~Adium@96.237.110.242) has joined ##c++
2014-11-22 20:07:14	Asher	i can work around it but it's very strange
2014-11-22 20:08:48	<--	SlashLife_ (~slashlife@botters/slashlife) has quit (Read error: Connection reset by peer)
2014-11-22 20:09:11	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 20:09:14	-->	SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-22 20:09:18	seronis	is the code massive?  i dont care if its reduced as long as i have line numbers
2014-11-22 20:09:23	-->	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has joined ##c++
2014-11-22 20:10:59	-->	FOP (~jnar@209.197.20.242) has joined ##c++
2014-11-22 20:11:29	o-0-o	Asher: if you can't make a testcase, your code is already doomed
2014-11-22 20:11:32	o-0-o	!mext
2014-11-22 20:11:39	o-0-o	!next
2014-11-22 20:11:40	nolyc	Another satisfied customer, next!
2014-11-22 20:13:49	<--	FOP (~jnar@209.197.20.242) has quit (Client Quit)
2014-11-22 20:13:55	<--	Gomitung (~mabsantos@a95-95-21-220.cpe.netcabo.pt) has quit
2014-11-22 20:14:11	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-22 20:14:23	-->	MetalHead77 (~Barthez@72.27.167.231) has joined ##c++
2014-11-22 20:15:35	<--	Tectu_ (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Quit: Leaving)
2014-11-22 20:15:55	<--	b0lt (r00t@unaffiliated/bolt) has quit (Remote host closed the connection)
2014-11-22 20:17:08	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (Ping timeout: 258 seconds)
2014-11-22 20:18:44	<--	ac_slater (~Adium@96.237.110.242) has left ##c++
2014-11-22 20:20:54	-->	Barthez (~Barthez@72.27.167.231) has joined ##c++
2014-11-22 20:20:56	<--	Barthez (~Barthez@72.27.167.231) has quit (Client Quit)
2014-11-22 20:20:59	-->	zehdeh (8602a46f@gateway/web/freenode/ip.134.2.164.111) has joined ##c++
2014-11-22 20:21:05	<--	MetalHead77 (~Barthez@72.27.167.231) has quit (Ping timeout: 245 seconds)
2014-11-22 20:21:32	-->	MetalHead77 (~Barthez@72.27.167.231) has joined ##c++
2014-11-22 20:21:41	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Remote host closed the connection)
2014-11-22 20:21:45	<--	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has quit
2014-11-22 20:22:38	zehdeh	I have a function(const std::vector<float>& vec) and want to pass in a non-const temporary vector. How do I declare that the vector is const within that function ? const_cast?
2014-11-22 20:22:49	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-22 20:22:54	<--	bb010g (uid21050@gateway/web/irccloud.com/x-xpwdglvvhatfcgxc) has quit (Quit: Connection closed for inactivity)
2014-11-22 20:23:33	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-22 20:24:28	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-22 20:26:14	-->	Burga (~andrewm@124-170-147-233.dyn.iinet.net.au) has joined ##c++
2014-11-22 20:27:15	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-22 20:29:28	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-22 20:30:20	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-22 20:30:32	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-22 20:31:02	<--	Burga (~andrewm@124-170-147-233.dyn.iinet.net.au) has quit (Ping timeout: 265 seconds)
2014-11-22 20:31:04	<--	pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 272 seconds)
2014-11-22 20:31:36	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 20:32:43	hs_	huh?
2014-11-22 20:32:43	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Quit: ChatZilla 0.9.91 [Firefox 28.0/20140314220517])
2014-11-22 20:32:45	-->	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has joined ##c++
2014-11-22 20:33:33	hs_	it is already const inside the function.. do you mean non-const?
2014-11-22 20:33:46	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-22 20:33:55	-->	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has joined ##c++
2014-11-22 20:33:55	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 20:34:04	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-22 20:34:17	<--	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has quit (Client Quit)
2014-11-22 20:35:51	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 20:35:52	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Read error: Connection reset by peer)
2014-11-22 20:36:09	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-22 20:36:57	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-22 20:37:24	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 20:37:48	--	wheals is now known as whealssolution
2014-11-22 20:38:05	-->	phax (~phax@unaffiliated/phax) has joined ##c++
2014-11-22 20:38:51	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-22 20:38:56	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 20:40:05	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-22 20:40:46	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-22 20:42:05	<--	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-22 20:42:11	<--	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-22 20:43:08	<--	MetalHead77 (~Barthez@72.27.167.231) has quit
2014-11-22 20:44:07	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Ping timeout: 240 seconds)
2014-11-22 20:44:08	-->	linuxnewb2 (~linuxnewb@137.63.73.94) has joined ##c++
2014-11-22 20:44:09	<--	linuxnewb2 (~linuxnewb@137.63.73.94) has quit (Changing host)
2014-11-22 20:44:09	-->	linuxnewb2 (~linuxnewb@unaffiliated/linuxnewb2) has joined ##c++
2014-11-22 20:45:01	-->	Tolken (~Tolken@modemcable122.135-179-173.mc.videotron.ca) has joined ##c++
2014-11-22 20:45:25	<--	Unscrup90 (~unscrupt@2607:fb90:1006:6edd:0:9:8d5b:201) has quit (Ping timeout: 258 seconds)
2014-11-22 20:47:17	-->	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has joined ##c++
2014-11-22 20:47:37	-->	Unscrupulous (~unscrupt@2607:fb90:1006:6edd:0:9:8d5b:201) has joined ##c++
2014-11-22 20:48:46	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-22 20:49:38	<--	ludkiller (lud@gateway/shell/elitebnc/x-llkkwgbaeckonvby) has quit (Excess Flood)
2014-11-22 20:50:02	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 20:50:27	-->	ludkiller (lud@gateway/shell/elitebnc/x-vinlrndptjphiofs) has joined ##c++
2014-11-22 20:50:51	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-22 20:50:55	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Remote host closed the connection)
2014-11-22 20:51:40	<--	Tolken (~Tolken@modemcable122.135-179-173.mc.videotron.ca) has quit (Quit: Tolken)
2014-11-22 20:52:03	-->	marcux (~marco@191.181.134.140) has joined ##c++
2014-11-22 20:52:43	-->	ac_slater (~Adium@96.237.110.242) has joined ##c++
2014-11-22 20:54:38	-->	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has joined ##c++
2014-11-22 20:56:24	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-22 20:58:06	<--	ac_slater (~Adium@96.237.110.242) has left ##c++
2014-11-22 21:00:06	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 21:00:49	<--	linuxnewb2 (~linuxnewb@unaffiliated/linuxnewb2) has quit (Quit: linuxnewb2)
2014-11-22 21:00:58	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-22 21:03:22	<--	psii (~psi@gateway/tor-sasl/foopsi) has quit (Remote host closed the connection)
2014-11-22 21:03:29	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 21:03:50	-->	psii (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-11-22 21:04:52	-->	rnburn (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 21:05:51	<--	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 255 seconds)
2014-11-22 21:07:33	-->	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has joined ##c++
2014-11-22 21:07:35	-->	Tribeam (~Tribeam@68-114-124-127.dhcp.slid.la.charter.com) has joined ##c++
2014-11-22 21:08:08	<--	zehdeh (8602a46f@gateway/web/freenode/ip.134.2.164.111) has quit (Quit: Page closed)
2014-11-22 21:08:37	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-22 21:09:53	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-22 21:11:10	<--	Semiarty (~opanki@91.109.47.11) has quit (Ping timeout: 264 seconds)
2014-11-22 21:11:14	-->	B-Knock (~bushdio@pool-100-40-112-200.prvdri.fios.verizon.net) has joined ##c++
2014-11-22 21:11:54	-->	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has joined ##c++
2014-11-22 21:12:03	<--	Tribeam (~Tribeam@68-114-124-127.dhcp.slid.la.charter.com) has quit (Ping timeout: 244 seconds)
2014-11-22 21:12:08	<--	lpcstr (~LPS@cpe-77.38.72.82.cable.t-1.si) has quit (Ping timeout: 272 seconds)
2014-11-22 21:13:58	o11c	<< alignof(0)
2014-11-22 21:13:58	geordi	error: ISO C++ does not allow 'alignof' with a non-type
2014-11-22 21:15:13	-->	TheAncientGoat (~quassel@175.143.242.172) has joined ##c++
2014-11-22 21:15:20	<--	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-22 21:17:10	<--	Jubb (~Jubb@pool-72-66-106-10.washdc.fios.verizon.net) has quit (Ping timeout: 256 seconds)
2014-11-22 21:17:34	-->	Tribeam (~Tribeam@68-114-124-127.dhcp.slid.la.charter.com) has joined ##c++
2014-11-22 21:18:53	<--	Garner (uid38417@gateway/web/irccloud.com/x-oxjxvmrtncgezkpk) has quit (Quit: Connection closed for inactivity)
2014-11-22 21:21:12	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 21:21:37	<--	marcux (~marco@191.181.134.140) has quit (Quit: marcux)
2014-11-22 21:21:38	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-22 21:24:20	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 21:25:40	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-22 21:25:53	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-22 21:25:55	Supicioso	would unsigned __int64 be unsigned long long?
2014-11-22 21:28:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 21:28:39	<--	rnburn (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Quit: leaving)
2014-11-22 21:28:48	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 21:30:44	<--	manny- (~manny-@191.233.71.39) has quit (Ping timeout: 256 seconds)
2014-11-22 21:30:58	-->	warehouse13 (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-22 21:31:10	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Client Quit)
2014-11-22 21:31:18	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-22 21:31:38	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 21:32:40	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 244 seconds)
2014-11-22 21:35:34	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 21:35:56	-->	devbug_ (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-22 21:36:19	-->	manny- (~manny-@191.233.71.39) has joined ##c++
2014-11-22 21:38:41	-->	Forbidden404 (~francisco@189-70-135-75.user.veloxzone.com.br) has joined ##c++
2014-11-22 21:38:42	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 250 seconds)
2014-11-22 21:38:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 21:39:31	<--	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has quit (Ping timeout: 265 seconds)
2014-11-22 21:41:00	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-22 21:41:28	-->	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-22 21:42:15	davidstone	Supicioso: unsigned long long is guaranteed to be at least 64 bits, if all you care about is that minimum size guarantee
2014-11-22 21:42:29	davidstone	I don't know if Microsoft has those as identical types, if ABI concerns are important
2014-11-22 21:44:10	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-22 21:44:21	-->	MouseTheLuckyDog (~mouse@adsl-76-193-160-186.dsl.chcgil.sbcglobal.net) has joined ##c++
2014-11-22 21:44:22	-->	realloc1 (~realloc1@aftr-185-17-204-92.dynamic.mnet-online.de) has joined ##c++
2014-11-22 21:45:00	Supicioso	I keep getting this warning: format ?%u? expects argument of type ?unsigned int?, but argument 3 has type ?DWORD {aka long unsigned int}?
2014-11-22 21:45:02	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-22 21:45:12	Supicioso	Meh.
2014-11-22 21:47:16	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-22 21:49:20	-->	BadQuanta (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has joined ##c++
2014-11-22 21:49:45	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-22 21:51:22	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 21:53:45	-->	Blue_Hat (~Blue_Hat@66.54.118.119) has joined ##c++
2014-11-22 21:53:50	-->	Unscrup70 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-22 21:54:52	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-22 21:55:36	<--	K-ballo (~sonoio@181.228.126.42) has quit (Ping timeout: 256 seconds)
2014-11-22 21:56:23	-->	Jubb (~Jubb@pool-72-66-106-10.washdc.fios.verizon.net) has joined ##c++
2014-11-22 21:56:59	<--	Unscrupulous (~unscrupt@2607:fb90:1006:6edd:0:9:8d5b:201) has quit (Ping timeout: 272 seconds)
2014-11-22 21:57:01	davidstone	Yes
2014-11-22 21:57:17	davidstone	On Windows, unsigned long is 32-bit as well, and DWORD is a typedef for unsigned long
2014-11-22 21:57:47	davidstone	Yet another weakness of format specifiers
2014-11-22 21:57:53	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-22 21:58:34	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 21:59:37	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-22 22:01:57	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Client Quit)
2014-11-22 22:02:17	<--	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-11-22 22:02:22	<--	Asher (~asher@199.116.116.14) has left ##c++
2014-11-22 22:03:20	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-22 22:03:53	pi-	Swift has nested /* /* foo */ bar */ support. Did that really take 30 years?
2014-11-22 22:04:15	davidstone	Well, you can always fall back on #if 0 #endif
2014-11-22 22:04:22	davidstone	As long as your comments can fall on line breaks
2014-11-22 22:04:30	davidstone	Those nest properly
2014-11-22 22:04:48	xrlk	wow
2014-11-22 22:04:51	xrlk	swift truly is the future
2014-11-22 22:05:10	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-22 22:06:34	pi-	Is there any language that can be considered approximately C++ without the legacy clutter?  Rust?
2014-11-22 22:07:03	xrlk	cbot`,
2014-11-22 22:07:12	cbot`	hi
2014-11-22 22:07:47	davidstone	D is probably the closest
2014-11-22 22:07:56	davidstone	But they decided to go the GC route
2014-11-22 22:08:19	davidstone	And are now working hard to create new non-allocating interfaces for all standard library functions because GC is too expensive in D
2014-11-22 22:08:55	davidstone	As an alternative, C++ can be approximately C++ without the legacy clutter if you turn on enough warnings
2014-11-22 22:09:18	-->	ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has joined ##c++
2014-11-22 22:09:27	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-22 22:11:17	seronis	 -Wall  -pedantic -std=c++11
2014-11-22 22:11:20	seronis	that about cover it ?
2014-11-22 22:11:31	pragma-	filthy casual.
2014-11-22 22:11:38	davidstone	Not even close
2014-11-22 22:11:54	pi-	I've just been watching Stroustrup talking about C++ (https://www.youtube.com/watch?v=86xWVb4XIyE) and he mentions that there is considerable legacy clutter. But I don't think I've hit up against it yet.
2014-11-22 22:11:59	<--	ChemicalRascal (~ChemicalR@unaffiliated/chemicalrascal) has left ##c++ ("Leaving")
2014-11-22 22:12:09	davidstone	https://stackoverflow.com/questions/5088460/flags-to-enable-thorough-and-verbose-g-warnings/9862800#9862800
2014-11-22 22:12:11	nolyc	<http://tinyurl.com/l4jjh4z> (at stackoverflow.com)
2014-11-22 22:12:26	-->	au_ (~au@2601:8:1a80:4f8:c575:4e7c:c2ee:efc8) has joined ##c++
2014-11-22 22:12:50	pragma-	pi-: more likely that you simply didn't recognize it.
2014-11-22 22:13:29	davidstone	I've actually changed my mind one a few of those warnings, which I will be talking about a bit at Meeting C++ this year, but the general idea is the same
2014-11-22 22:13:29	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-22 22:13:40	davidstone	In clang, I'd start with clang++ -Weverything and disable from there
2014-11-22 22:13:51	pragma-	sounds painful
2014-11-22 22:14:25	-->	envi (kvirc@220.121.234.166) has joined ##c++
2014-11-22 22:14:33	davidstone	I use -Weverything -Werror -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-exit-time-destructors -Wno-implicit-fallthrough -Wno-missing-braces -Wno-padded -Wno-switch-enum
2014-11-22 22:14:52	davidstone	I'll have to see if I can re-enable -Wimplicit-fallthrough
2014-11-22 22:14:55	<--	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has quit (Ping timeout: 258 seconds)
2014-11-22 22:14:59	davidstone	At one point it was triggering for empty case statements
2014-11-22 22:15:04	davidstone	But I hear that is not the case anymore
2014-11-22 22:15:29	<--	au_ (~au@2601:8:1a80:4f8:c575:4e7c:c2ee:efc8) has quit (Client Quit)
2014-11-22 22:15:29	 *	pragma- feigns interest.
2014-11-22 22:15:55	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-22 22:16:29	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-22 22:17:45	<--	envi_|2 (kvirc@220.121.234.166) has quit (Ping timeout: 264 seconds)
2014-11-22 22:18:13	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-22 22:19:13	-->	graphitemaster (~graphitem@unaffiliated/graphitemaster) has joined ##c++
2014-11-22 22:20:50	<--	ObjectiveMatt (~Objective@23-24-149-131-static.hfc.comcastbusiness.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 22:22:03	ArchZombie	I always do -Wall and -Werror=bla for each individual thing
2014-11-22 22:22:41	ArchZombie	Things like implicit function declarations should be errors, but I avoid making most warnings errors.
2014-11-22 22:23:10	o11c	I do #pragma GCC error on nearly every warning I can find
2014-11-22 22:23:20	o11c	but it's easy to downgrade any single one of them
2014-11-22 22:23:29	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2014-11-22 22:23:31	-->	BeachedWhale (~Beached@216-26-212-231.dynamic.tbaytel.net) has joined ##c++
2014-11-22 22:23:57	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-22 22:24:12	davidstone	I think if something is important enough to warn me about and pop up a mesasge, it's important enough for me to deal with
2014-11-22 22:24:27	davidstone	If I am in a situation where I am trying to remember "Is this that warning that I decided was OK", I am doing something wrong
2014-11-22 22:24:35	davidstone	Especially if I am expecting everyone on my team to do so
2014-11-22 22:24:57	davidstone	I either fix / silence the offending code specifically or disable the warning entirely
2014-11-22 22:25:01	BeachedWhale	With a class template<typename T> class A { A( T&& value ); template<typename... Args> A( Args... args ); }   Would the two constructors have the same presedence or would the T&& value one be more specific and win
2014-11-22 22:25:05	davidstone	Which says -Werror, not -Werror="blah"
2014-11-22 22:25:24	davidstone	Non-variadic constructors "win"
2014-11-22 22:25:32	BeachedWhale	Awesome,
2014-11-22 22:25:34	davidstone	But note that your variadic pack can match 0 parameters
2014-11-22 22:25:44	BeachedWhale	I hope it does
2014-11-22 22:25:50	davidstone	OK
2014-11-22 22:25:58	o11c	davidstone: the only thing is about upgrading to new compiler versions
2014-11-22 22:26:09	davidstone	That's why I prefer the clang system
2014-11-22 22:26:10	o11c	but then, I don't enable warnings at all in my default makefile
2014-11-22 22:26:17	o11c	um, what?
2014-11-22 22:26:17	BeachedWhale	yeah, thought of that and it works for this case.  essentially, its creating a T so default construction of T is up to T
2014-11-22 22:26:22	davidstone	With each new gcc release, I have to read the documentation and find the new warnings
2014-11-22 22:26:28	o11c	clang makes it *impossible* to handle warnings in a sane manner
2014-11-22 22:26:38	davidstone	With each new clang release, since I have -Weverything, I am forced to decide whether I want the new warning
2014-11-22 22:26:41	o11c	__has_warning is useless because it doesn't tell you if the warning is buggy or not
2014-11-22 22:26:50	o11c	and clang has no version numbers
2014-11-22 22:26:56	pragma-	fortunately, gcc is sane about what warnings it enables in -Wall and -Wextra.
2014-11-22 22:26:58	o11c	so you can't ifdef on that
2014-11-22 22:26:58	davidstone	I prefer to be confronted with the decision to use the warning automatically
2014-11-22 22:27:05	davidstone	Rather than having to go look for them
2014-11-22 22:27:15	o11c	davidstone: it's not about you, it's about what downstream build scripts need
2014-11-22 22:27:16	davidstone	Someone thought it was important enough to implement, so I at least want to see it by default
2014-11-22 22:27:32	o11c	but I have a script that does  'gcc --help=warnings' and then filters a bit
2014-11-22 22:27:43	davidstone	I keep pretty up-to-date on clang and gcc releases
2014-11-22 22:27:54	o11c	old tarballs can't change
2014-11-22 22:27:55	davidstone	Lately, I'm using tip-of-trunk builds
2014-11-22 22:28:03	pragma-	How silly.
2014-11-22 22:28:20	davidstone	I'm not in a situation where I need to support compiling old code with new compilers
2014-11-22 22:29:37	-->	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has joined ##c++
2014-11-22 22:29:50	<--	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-22 22:30:44	o11c	davidstone: then downstreams will probably refuse to ship your code at all
2014-11-22 22:30:58	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-22 22:31:40	o11c	as a rule, compilers are *good* at being backward compatible, you have to go out of your way to break them
2014-11-22 22:31:44	o11c	except .0 releases of course
2014-11-22 22:31:55	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-22 22:31:56	o11c	(which was all clang releases until they started doing point releases)
2014-11-22 22:32:37	-->	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has joined ##c++
2014-11-22 22:32:39	o11c	but vendoring all your dependencies is a *really* bad idea that's becoming pervasive
2014-11-22 22:32:47	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-22 22:32:56	davidstone	What do you mean by "vendoring"
2014-11-22 22:33:08	o11c	locking in specific versions
2014-11-22 22:33:11	<--	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-237.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-22 22:33:30	o11c	i.e. "this code must be built with clang 3.4.2"
2014-11-22 22:33:43	davidstone	Well, all code has that requirement
2014-11-22 22:33:44	o11c	that's what everybody seems to be doing these days
2014-11-22 22:34:01	pragma-	that's daft.
2014-11-22 22:34:04	seronis	'these days' ==  the last 20 years ?
2014-11-22 22:34:06	o11c	and once they do that, they stop *caring* at backward compat
2014-11-22 22:34:29	o11c	everybody *used* to care about backward compat
2014-11-22 22:34:39	o11c	and they actually made migration plans when they had to break it
2014-11-22 22:34:40	davidstone	From what I've seen recently, backwards compatibility can often be a major weakness that holds us back
2014-11-22 22:34:47	davidstone	It's not always a good thing
2014-11-22 22:34:49	o11c	unbounded backward compat? sure
2014-11-22 22:34:53	o11c	that's what migration plans are for
2014-11-22 22:35:15	o11c	it's okay to say "you must compile my code with gcc -std=c++11, not gcc -std=c++14"
2014-11-22 22:35:27	o11c	because compilers are smart enough to still care
2014-11-22 22:35:32	<--	ilhami (~IlhamiD@unaffiliated/ilhami) has quit (Quit: Bye!!!)
2014-11-22 22:36:34	<--	garFF_ (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-22 22:36:46	davidstone	https://stackoverflow.com/questions/23980929/what-changes-introduced-in-c14-can-potentially-break-a-program-written-in-c1
2014-11-22 22:36:55	-->	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has joined ##c++
2014-11-22 22:37:05	davidstone	How many of those issues do you expect code to actually run into?
2014-11-22 22:38:01	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-rijaqnyxffjjkuxl) has quit (Quit: Connection closed for inactivity)
2014-11-22 22:38:14	o11c	I haven't used C++14 yet, but I hit quite a few when porting C++98 to C++11
2014-11-22 22:38:42	o11c	but my point is, compilers can provide back-compat without all the flaws of back-compat
2014-11-22 22:38:44	davidstone	When you have used C++14, will you be o14c?
2014-11-22 22:38:49	o11c	just be shipping multiple versions
2014-11-22 22:38:50	o11c	no
2014-11-22 22:38:53	davidstone	=)
2014-11-22 22:39:01	o11c	and it's not related to /usr/share/dict/words either
2014-11-22 22:40:48	-->	Cassiel (~JV@24-212-241-185.cable.teksavvy.com) has joined ##c++
2014-11-22 22:42:01	-->	psii_ (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-11-22 22:42:04	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Ping timeout: 258 seconds)
2014-11-22 22:42:44	<--	psii (~psi@gateway/tor-sasl/foopsi) has quit (Remote host closed the connection)
2014-11-22 22:42:46	<--	p|q (~plq@78.189.180.67) has quit (Ping timeout: 244 seconds)
2014-11-22 22:46:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 22:48:04	<--	ludkiller (lud@gateway/shell/elitebnc/x-vinlrndptjphiofs) has quit (Excess Flood)
2014-11-22 22:48:44	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-11-22 22:49:12	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 22:50:03	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-11-22 22:50:10	-->	ludkiller (lud@gateway/shell/elitebnc/x-jtfnlogkpnytvdjf) has joined ##c++
2014-11-22 22:51:14	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-22 22:51:26	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-22 22:51:54	<--	whealssolution (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-22 22:52:55	prime	hi, I'm having a problem working out an assignment I decided to use c++ with. I have a do while loop where the last if statement acts strange and does noes not request the Yes or No to continue like the other if statements. Could anybody be able to tell me why? I've posted it at http://pastebin.com/Pib6TXQ5
2014-11-22 22:53:55	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-22 22:55:28	<--	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-22 22:56:05	-->	ncd|leeN (~leeN@e181197211.adsl.alicedsl.de) has joined ##c++
2014-11-22 22:57:25	o11c	whoa
2014-11-22 22:57:35	o11c	I just realized that it's trees upon trees upon trees
2014-11-22 22:58:18	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-22 22:58:41	o11c	prime: make sure you check all your input and output, and don't mix std::cin with scanf
2014-11-22 22:59:19	-->	basic6 (~basic6@p4FCB79D4.dip0.t-ipconnect.de) has joined ##c++
2014-11-22 22:59:22	<--	leeN (~leeN@f050223245.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-11-22 23:00:17	o11c	for checking output, you probably just want to exit, so if you can guarantee finite execution afterwards (e.g. if input will fail, or if it's just a sequence and no loops) you can skip the explicit check on the output
2014-11-22 23:00:33	o11c	prime: also, learn to split stuff into more functions
2014-11-22 23:00:57	o11c	prime: e.g. one function outside of the while-loop, one function for the loop body, one function for each sort of input
2014-11-22 23:01:09	o11c	prime: as a rule of thumb, no function should be more than 20-25 lines
2014-11-22 23:01:44	prime	o11c: I'll try and restructure it, I did know better but got lazy after finding out the assignment wasn't in degrees but in some strange int input
2014-11-22 23:01:48	o11c	the sole exception is if your function needs more likes just to figure out which other function to call - i.e. a large switch statement
2014-11-22 23:01:50	prime	sounds like a good idea
2014-11-22 23:01:56	<--	lenarhoyt (~lenarhoyt@p5B137288.dip0.t-ipconnect.de) has quit (Quit: leaving)
2014-11-22 23:02:08	<--	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has quit (Ping timeout: 255 seconds)
2014-11-22 23:02:09	o11c	but then, most large switch statements can be replaced with an array of function pointers
2014-11-22 23:02:17	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Ping timeout: 240 seconds)
2014-11-22 23:02:27	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit
2014-11-22 23:02:35	-->	bb010g (uid21050@gateway/web/irccloud.com/x-xndrkhvnhvmdbize) has joined ##c++
2014-11-22 23:03:33	<--	basic6_ (~basic6@p3E9EE3E4.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-22 23:04:17	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-22 23:04:39	<--	warehouse13 (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-22 23:05:09	prime	oh the woes of uninteresting assignments :) time to watch braveheart
2014-11-22 23:05:28	prime	thanks
2014-11-22 23:06:16	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-22 23:07:46	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2014-11-22 23:11:11	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 23:11:38	<--	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-22 23:12:06	<--	Blue_Hat (~Blue_Hat@66.54.118.119) has quit (Read error: Connection reset by peer)
2014-11-22 23:12:32	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-tihqmsxkvkhewdiq) has joined ##c++
2014-11-22 23:12:40	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-22 23:12:51	-->	SubCreative (~SubCreati@unaffiliated/cannacoin) has joined ##c++
2014-11-22 23:13:08	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-22 23:14:04	SubCreative	I'd like to create a const variable in my .h that uses a turnary to set the value.
2014-11-22 23:14:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 23:14:22	SubCreative	For example by default the value should be set to 0 however, upon stratup  if user is using the argument ./application -testflag would set the value in my .h to say 5...
2014-11-22 23:14:30	SubCreative	How would I go about this?
2014-11-22 23:15:04	-->	Cecen (~Collin@cpe-108-184-172-106.socal.res.rr.com) has joined ##c++
2014-11-22 23:15:05	SubCreative	I've tried const int variablename = fTestFlag ? 5: 0; but this doesn't work..
2014-11-22 23:15:42	 *	Cecen stares.
2014-11-22 23:15:58	Cecen	geordi: { const bool fTestFlag = true; const int i = fTestFlag ? 5 : 0; cout << i; }
2014-11-22 23:15:59	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-22 23:15:59	geordi	5
2014-11-22 23:16:06	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-22 23:16:19	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:16:28	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-22 23:16:28	Cecen	geordi, remove first const
2014-11-22 23:16:28	geordi	5
2014-11-22 23:16:37	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:17:07	SubCreative	hrm.
2014-11-22 23:17:13	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:17:33	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:17:56	SubCreative	Cecen, this is the value Im trying to set... https://github.com/Cannacoin-Project/ccn-redd/blob/master/src/main.h#L82
2014-11-22 23:18:01	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-22 23:18:16	SubCreative	Is it not working because its set to static const?
2014-11-22 23:18:52	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:19:14	Cecen	I have no idea what you're doing
2014-11-22 23:19:14	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:19:38	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-22 23:19:54	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:20:20	SubCreative	Cecen, the application allows for startup arguments... one of them is -testnet, by default this value is false but if used at startup sets to true.
2014-11-22 23:20:27	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:20:29	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-22 23:20:52	SubCreative	I want to assign the value of LAST_POW_BLOCK var to say 1300, ONLY if -testnet argument is used.
2014-11-22 23:20:58	SubCreative	or = true
2014-11-22 23:21:01	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:21:21	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-22 23:21:25	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:21:35	Cecen	And the problem is it's not being set?
2014-11-22 23:21:40	SubCreative	yup
2014-11-22 23:21:54	Cecen	Because dynamic initialization is happening before you parse the command line arguments
2014-11-22 23:21:58	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:22:04	Cecen	It can't be const if you don't know it's value at runtime
2014-11-22 23:22:07	Cecen	compile time*
2014-11-22 23:22:09	-->	pat (~pat@rrcs-24-92-139-233.central.biz.rr.com) has joined ##c++
2014-11-22 23:22:13	<--	pat (~pat@rrcs-24-92-139-233.central.biz.rr.com) has left ##c++
2014-11-22 23:22:32	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:23:00	SubCreative	So are you saying remove the const, leave static as I don't want it to change after runtime.
2014-11-22 23:23:03	SubCreative	?
2014-11-22 23:23:12	Cecen	I don't think you understand the words you're using
2014-11-22 23:23:23	Cecen	If it needs to change, you have to remove const and modify it after you read the command line arguments
2014-11-22 23:23:34	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:23:55	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:24:00	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 244 seconds)
2014-11-22 23:24:35	wheals	#define variablename (fTestFlag ? 5 : 0) could work, probably
2014-11-22 23:24:44	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:24:44	-->	Rifuli (~Rifiul@CPE-120-148-165-49.bjzv4.lon.bigpond.net.au) has joined ##c++
2014-11-22 23:25:22	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-22 23:25:49	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-22 23:26:04	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-22 23:26:44	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-11-22 23:26:50	SubCreative	Ill give it a shot, thanks.
2014-11-22 23:29:13	-->	Count_Niedar (~nnscript@ip68-110-154-15.hr.hr.cox.net) has joined ##c++
2014-11-22 23:30:35	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2014-11-22 23:31:42	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-22 23:32:23	-->	F404 (~francisco@189-70-169-213.user.veloxzone.com.br) has joined ##c++
2014-11-22 23:32:50	<--	Niedar (~nnscript@ip68-110-154-15.hr.hr.cox.net) has quit (Ping timeout: 250 seconds)
2014-11-22 23:33:03	wheals	or even better probably would be to use an inline function or something though
2014-11-22 23:33:06	<--	Forbidden404 (~francisco@189-70-135-75.user.veloxzone.com.br) has quit (Ping timeout: 255 seconds)
2014-11-22 23:36:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-22 23:38:00	pi-	prime: you could do your checking a bit smarter: 'int count = ( a==b + b==c + c==a );' then then 3*true for equilateral, 2*true for isosceles.
2014-11-22 23:38:03	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-22 23:38:37	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 265 seconds)
2014-11-22 23:39:16	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-22 23:39:19	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-22 23:39:19	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-22 23:39:19	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-22 23:39:26	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-22 23:39:51	Rifuli	This may be out of context so forgive me, but I'm having trouble using GLM's extended functionality, in particular glm::linearRand(min,max)
2014-11-22 23:40:04	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-22 23:40:43	Rifuli	I can use other extended functionality for matrices and such, but glm/gtc/random.hpp gives me build issues (unresolved external symbols)
2014-11-22 23:41:11	<--	awake (~awake@unaffiliated/awake) has quit (Quit: Leaving)
2014-11-22 23:41:15	o11c	geordi --precedence ( a==b + b==c + c==a )
2014-11-22 23:41:16	geordi	( ((a==(b + b))==(c + c))==a )
2014-11-22 23:41:24	o11c	pi-: bad ^
2014-11-22 23:41:39	Rifuli	thats some convoluted looking statement
2014-11-22 23:41:59	o11c	nah, I add bool chains all the time
2014-11-22 23:42:09	pi-	o11c: yer it was intended as pseudocode
2014-11-22 23:42:22	<--	phax (~phax@unaffiliated/phax) has quit (Quit: phax)
2014-11-22 23:43:03	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 255 seconds)
2014-11-22 23:43:23	pi-	geordi --precedence a==b?0:1
2014-11-22 23:43:23	geordi	(a==b)?0:1
2014-11-22 23:43:42	pi-	geordi --precedence a==b?0:1 + b==c?0:1
2014-11-22 23:43:42	geordi	(a==b)?0:(((1 + b)==c)?0:1)
2014-11-22 23:43:57	pi-	hehe trickynesses
2014-11-22 23:44:02	-->	robert_|disconne (~hellspawn@static-96-254-212-18.tampfl.fios.verizon.net) has joined ##c++
2014-11-22 23:44:24	o11c	geordi --precedence a?b, c:d
2014-11-22 23:44:24	geordi	a?(b, c):d
2014-11-22 23:44:25	-->	Blue_Hat (~Blue_Hat@66.54.118.119) has joined ##c++
2014-11-22 23:44:33	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-22 23:45:11	<--	robert_ (~hellspawn@objectx/robert) has quit (Ping timeout: 240 seconds)
2014-11-22 23:45:16	marchelzo_	o11c: I'm so using that
2014-11-22 23:45:19	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-22 23:45:22	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-22 23:46:25	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-22 23:48:28	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-22 23:49:40	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-22 23:50:55	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-22 23:51:10	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-11-22 23:51:49	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-22 23:52:26	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-22 23:52:48	o11c	geordi: #define foo/*bar*/(baz)/*qux*/  \  int main() { foo(1); }
2014-11-22 23:52:48	geordi	error: 'baz' was not declared in this scope
2014-11-22 23:52:57	o11c	geordi: #define foo(baz)/*qux*/  \  int main() { foo(1); }
2014-11-22 23:52:58	geordi	<no output>
2014-11-22 23:54:21	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-22 23:54:41	-->	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has joined ##c++
2014-11-22 23:56:24	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Ping timeout: 272 seconds)
2014-11-22 23:56:52	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-22 23:57:05	-->	_unreal_ (~laptop@99-60-102-25.lightspeed.wepbfl.sbcglobal.net) has joined ##c++
2014-11-22 23:58:13	_unreal_	hello http://paste.fedoraproject.org/153231/18706141 I'm getting this error
2014-11-22 23:58:19	_unreal_	./ctof.c: line 13: syntax error near unexpected token `{'
2014-11-22 23:58:20	_unreal_	./ctof.c: line 13: `    while (fahr <= upper) {'
2014-11-22 23:58:30	_unreal_	not sure what I have done worng.
2014-11-22 23:59:14	marchelzo_	_unreal_: you need to specify main's return type
2014-11-22 23:59:36	marchelzo_	also that appears to be C89 from K&R or something, maybe it's not valid c++ (I don't know)
2014-11-22 23:59:53	marchelzo_	it should be, though
2014-11-23 00:00:07	marchelzo_	just try changeing main() to int main()
2014-11-23 00:00:14	marchelzo_	changing*
2014-11-23 00:00:53	_unreal_	hum
2014-11-23 00:02:15	_unreal_	http://books.cat-v.org/computer-science/c-programming-language/The.C.Programming.Language.2nd.Edition.pdf
2014-11-23 00:02:16	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Remote host closed the connection)
2014-11-23 00:02:16	nolyc	<http://tinyurl.com/matgs9z> (at books.cat-v.org)
2014-11-23 00:02:44	_unreal_	page 23 i'm copying and testing
2014-11-23 00:03:05	_unreal_	i'm running fedora 20 using cc to compile writing with nano
2014-11-23 00:03:35	marchelzo_	then you should have joined ##c
2014-11-23 00:03:51	marchelzo_	but try adding int before main and see what happens
2014-11-23 00:03:59	_unreal_	ok thanks testing
2014-11-23 00:04:50	_unreal_	same error
2014-11-23 00:05:48	marchelzo_	that's weird
2014-11-23 00:06:05	marchelzo_	try putting void inside the parens after main
2014-11-23 00:06:09	marchelzo_	"int main(void)"
2014-11-23 00:06:33	marchelzo_	and try "cc -std=c99 your_file.c"
2014-11-23 00:06:56	_unreal_	I'm following that book. so there is a reason I just dont know what it is yet
2014-11-23 00:07:11	o11c	main() and main(void) ar the same on definitions, even in C
2014-11-23 00:07:22	o11c	in C main() on a declaration is sort of like main(...) but not
2014-11-23 00:07:29	o11c	but in C++ they're always the same
2014-11-23 00:07:50	marchelzo_	o11c: I knew it was the same in C++ but didn't know that about C.
2014-11-23 00:08:02	_unreal_	:)    I'm hell bent on learning at least basic programming. i'm studing c and pascal for starters
2014-11-23 00:08:07	o11c	_unreal_: the first step in converting C to C++ is compiling as C and cranking up the errors all the way
2014-11-23 00:08:16	o11c	most C code is crap
2014-11-23 00:08:21	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-23 00:08:34	_unreal_	heh
2014-11-23 00:08:41	o11c	once it's less crappy C, add -Wc++
2014-11-23 00:08:41	marchelzo_	_unreal_: that book is the way to go if you want to learn C, the error you're getting is strange.
2014-11-23 00:08:45	_unreal_	mainly I want to do projects with my arduino
2014-11-23 00:08:49	o11c	it won't catch *all* of the issues but it catches a lot
2014-11-23 00:08:52	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-23 00:09:33	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-23 00:11:02	-->	qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-11-23 00:12:49	_unreal_	ahh haa found part of the error
2014-11-23 00:13:04	_unreal_	the /9 needs a space / 9
2014-11-23 00:14:12	-->	p|q (~plq@95.14.98.247) has joined ##c++
2014-11-23 00:14:36	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-23 00:16:31	o11c	er wut
2014-11-23 00:16:46	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-23 00:18:32	o11c	_unreal_: it works fine for me just adding the 'int' in 'int main()'
2014-11-23 00:20:03	<--	BeachedWhale (~Beached@216-26-212-231.dynamic.tbaytel.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1.1/20141113143407])
2014-11-23 00:23:22	-->	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has joined ##c++
2014-11-23 00:23:25	<--	F404 (~francisco@189-70-169-213.user.veloxzone.com.br) has quit
2014-11-23 00:23:27	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-23 00:23:36	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 00:23:55	<--	realloc1 (~realloc1@aftr-185-17-204-92.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-23 00:24:16	-->	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has joined ##c++
2014-11-23 00:24:30	pi-	using CheckType = bool(PyObject*); // using CheckType = (PyObject*) -> bool;  would be nice?
2014-11-23 00:24:32	<--	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has quit (Quit: ZzZZZZzzzZZZZzzzzzzzzzzzzzzzzzzzzzzzzzzzz)
2014-11-23 00:24:59	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-23 00:25:03	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 00:26:00	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Client Quit)
2014-11-23 00:26:51	-->	SiGe___ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 00:26:51	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-23 00:27:00	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 00:27:40	<--	p|q (~plq@95.14.98.247) has quit (Ping timeout: 256 seconds)
2014-11-23 00:28:46	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-23 00:28:56	_unreal_	o11c, what are you using to compile?
2014-11-23 00:29:56	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-23 00:30:50	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Client Quit)
2014-11-23 00:31:56	-->	BlueProtoman (~smitty@he207-108.resnet.stonybrook.edu) has joined ##c++
2014-11-23 00:32:13	BlueProtoman	Huh.  Did not know int main() could have char** env.  Is that a standard feature?
2014-11-23 00:32:40	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-23 00:32:56	BlueProtoman	geordi: int main(int argc, char** argv, char** env) {while (*argv) cout << string(*(argv++)) << " "; while (*env) cout << string(*(env++)) << " ";}
2014-11-23 00:32:56	geordi	/geordi/run/t second third fourth PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin GLIBCXX_DEBUG_MESSAGE_LENGTH=0 LD_PRELOAD=libgeordi_preload.so libdiagnose_sigsys.so GEORDI_REQUESTER=BlueProtoman GEORDI_WHERE=##c++
2014-11-23 00:35:08	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 00:37:49	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 00:37:50	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 00:37:50	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Client Quit)
2014-11-23 00:38:10	pi-	http://coliru.stacked-crooked.com/a/f949960d21a867b4 <-- constructor inheritance, nice!
2014-11-23 00:38:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 00:39:08	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Client Quit)
2014-11-23 00:39:19	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-23 00:41:57	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-23 00:43:18	-->	K-ballo (~sonoio@190.177.102.243) has joined ##c++
2014-11-23 00:43:57	<--	LunarJetman (LunarJetma@2.124.188.136) has quit (Quit: LunarJetman)
2014-11-23 00:45:38	<--	Blue_Hat (~Blue_Hat@66.54.118.119) has quit (Read error: Connection reset by peer)
2014-11-23 00:48:39	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-23 00:49:05	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-23 00:49:41	<--	K-ballo (~sonoio@190.177.102.243) has quit (Read error: Connection reset by peer)
2014-11-23 00:51:22	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Quit: Leaving)
2014-11-23 00:53:32	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 00:54:47	<--	proteusguy (~proteusgu@ppp-110-168-229-145.revip5.asianet.co.th) has quit (Read error: Connection reset by peer)
2014-11-23 00:55:19	-->	Legiion (~legiion@thecatman.net) has joined ##c++
2014-11-23 00:55:37	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 00:56:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 00:57:16	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-23 00:57:46	Supicioso	I love when it I write something that causes segfaults on linux but runs perfectly fine on windows. :/
2014-11-23 00:57:56	pi-	https://gist.github.com/anonymous/abbd56401294204b9421 <-- setDefault is giving a linker error. I think this is because the header file is being used in separate .cxx files, resulting in duplicate symbol definition.
2014-11-23 00:58:24	pi-	Is there any way to get it working without moving the function into a .cxx?
2014-11-23 00:58:29	Stryyker	Are you using something that is unitialised or not checking return values?
2014-11-23 00:58:57	Stryyker	pi-: what linker error?
2014-11-23 00:58:57	o11c	_unreal_: the pastebin link you gave
2014-11-23 00:59:04	pi-	Supicioso: Windows code?
2014-11-23 00:59:12	o11c	BlueProtoman: posix, not iso
2014-11-23 00:59:20	Supicioso	what?
2014-11-23 00:59:45	pi-	Stryyker: duplicate symbol
2014-11-23 00:59:56	o11c	pi-: just add 'inline'
2014-11-23 01:00:00	hs_	pi-, it has to be inline
2014-11-23 01:00:15	o11c	the whole *point* of inline is to remove the ODR
2014-11-23 01:01:15	<--	BlueProtoman (~smitty@he207-108.resnet.stonybrook.edu) has quit (Ping timeout: 245 seconds)
2014-11-23 01:01:15	<--	BadQuanta (~badquanta@2601:7:100:f45:8920:65fc:2f8d:1f63) has quit (Remote host closed the connection)
2014-11-23 01:01:37	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 01:01:54	pi-	hmm that gets rid of one of the two linker errors.
2014-11-23 01:01:56	lh_mouse	Inline functions still have to obey the ODR.
2014-11-23 01:02:00	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-23 01:02:23	pi-	It's still claiming to find duplicate symbol in 2 files (as opposed to 3)
2014-11-23 01:02:49	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2014-11-23 01:02:51	Legiion	Is there a guideline somewhere outlining what I need to define to create an iterator class template for a custom container template? Most resources I have found seem to be quite vague.
2014-11-23 01:03:01	hs_	pi-, it says "gistfile1.cpp" -- this isn't in a cpp file is it?
2014-11-23 01:03:10	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:d489:7285:36db:bf24) has joined ##c++
2014-11-23 01:03:24	o11c	pi-: make sure all 3 files get recompiled
2014-11-23 01:03:51	-->	Kopharex (~Kopharex@host23.pool122.tecnoadsl.it) has joined ##c++
2014-11-23 01:03:58	<--	Kopharex (~Kopharex@host23.pool122.tecnoadsl.it) has quit (Read error: Connection reset by peer)
2014-11-23 01:04:16	pi-	hs_: No! That is gist taking liberties,
2014-11-23 01:04:17	hs_	Legiion, http://en.cppreference.com/w/cpp/iterator/iterator_traits // start there?
2014-11-23 01:04:44	hs_	Legiion, at the bottom are tags for iterator categories; it shows required interfaces
2014-11-23 01:04:59	<--	Rifuli (~Rifiul@CPE-120-148-165-49.bjzv4.lon.bigpond.net.au) has quit (Ping timeout: 256 seconds)
2014-11-23 01:05:01	-->	wikiemol (~william@75.102.129.139) has joined ##c++
2014-11-23 01:05:03	hs_	pi-, no forward declarations I hope?
2014-11-23 01:05:16	pi-	o11c: aah yes! That would explain another weird situation I had yesterday, where a code change only surfaced a couple of hours later.
2014-11-23 01:05:32	<--	srjek (~srjek@46dhcp67.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-23 01:05:34	pi-	Maybe Xcode has a setting to force full build.
2014-11-23 01:05:43	-->	srjek (~srjek@46dhcp67.ece.uic.edu) has joined ##c++
2014-11-23 01:06:54	pi-	The amount of code cleaning I am able to do on this C++9x project using c++11 mechanisms is really impressive
2014-11-23 01:08:52	o11c	this is why I don't trust IDEs to build things
2014-11-23 01:09:15	o11c	I have a makefile rule to generate all the 'x.o: x.cpp x.hpp y.hpp z.hpp' rules
2014-11-23 01:09:43	o11c	(and it gets called automatically because of how 'include' works)
2014-11-23 01:10:10	o11c	and another makefile rule to generate 'bin/a: obj/x.o obj/y.o' chans
2014-11-23 01:10:16	o11c	but that one is harder to understand
2014-11-23 01:10:22	o11c	and I'm starting to think it's not worth it
2014-11-23 01:10:39	-->	IWishIKnew_ (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-23 01:10:47	o11c	instead I will make this rule: if you use *any* header from that directory, you link to *all* the objects built from that directory
2014-11-23 01:10:59	o11c	except for objects registered as main objects of course
2014-11-23 01:11:00	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Read error: Connection reset by peer)
2014-11-23 01:12:52	-->	proteusguy (~proteusgu@ppp-110-168-229-7.revip5.asianet.co.th) has joined ##c++
2014-11-23 01:13:22	-->	BlueProtoman (~smitty@38.105.236.163) has joined ##c++
2014-11-23 01:13:43	-->	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has joined ##c++
2014-11-23 01:14:20	-->	Romtam1 (~Romtam@wikipedia/Romtam) has joined ##c++
2014-11-23 01:14:59	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-11-23 01:17:58	<--	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has quit (Ping timeout: 240 seconds)
2014-11-23 01:20:10	<--	emg (~emg@74.217.148.5) has quit (Remote host closed the connection)
2014-11-23 01:20:53	pi-	Is there any reason why we have to explicitly specify a default base constructor in 'Derived() : Base() { ... }' ?
2014-11-23 01:21:18	pi-	Couldn't C++ just assume?
2014-11-23 01:21:38	-->	snyp (~Snyp@14.96.118.17) has joined ##c++
2014-11-23 01:22:13	hs_	you don't?
2014-11-23 01:22:30	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Remote host closed the connection)
2014-11-23 01:23:50	o11c	it does assume
2014-11-23 01:24:31	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-23 01:25:30	<--	wikiemol (~william@75.102.129.139) has quit (Remote host closed the connection)
2014-11-23 01:26:44	-->	HerzogDeXtEr1 (~flex@i59F6B043.versanet.de) has joined ##c++
2014-11-23 01:27:14	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-23 01:27:16	<--	rainforest (~see@gateway/tor-sasl/alexandrite) has quit (Remote host closed the connection)
2014-11-23 01:28:01	<--	ArchZombie (~lkjfeiosn@2602:306:c455:df80:f9e1:4fbc:355b:8db8) has quit (Remote host closed the connection)
2014-11-23 01:28:32	pi-	my bad. Time to stop coding I think.
2014-11-23 01:29:05	<--	mccallist (~mccallist@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 01:29:54	<--	HerzogDeXtEr (~flex@88.130.166.195) has quit (Ping timeout: 264 seconds)
2014-11-23 01:31:51	-->	prechtl (~prechtl@192.210.214.197) has joined ##c++
2014-11-23 01:31:59	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-23 01:33:40	<--	Betal (~Beta@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2014-11-23 01:34:55	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Ping timeout: 258 seconds)
2014-11-23 01:35:10	<--	snyp (~Snyp@14.96.118.17) has quit (Quit: WeeChat 1.0.1)
2014-11-23 01:35:45	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 01:38:08	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 264 seconds)
2014-11-23 01:41:07	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 01:43:14	<--	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Remote host closed the connection)
2014-11-23 01:43:43	<--	esas (~esas@unaffiliated/esas) has quit
2014-11-23 01:43:49	-->	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-11-23 01:44:17	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Quit: ???????)
2014-11-23 01:44:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 01:45:37	<--	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:404c:569e:3e53:c4e7) has quit (Ping timeout: 258 seconds)
2014-11-23 01:45:38	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:404c:569e:3e53:c4e7) has quit (Ping timeout: 258 seconds)
2014-11-23 01:47:20	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-11-23 01:47:28	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Disconnected by services)
2014-11-23 01:47:32	-->	hypera1r (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-11-23 01:48:03	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-11-23 01:50:33	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 01:53:40	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 01:53:46	<--	IWishIKnew_ (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-11-23 01:54:11	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-23 01:54:36	_unreal_	I figure it out
2014-11-23 01:54:39	_unreal_	it was indents
2014-11-23 01:54:52	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 245 seconds)
2014-11-23 01:55:00	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-23 01:55:14	_unreal_	o11c, I needed indents and that solved the error
2014-11-23 01:56:25	o11c	C++ doesn't care about indentation or space
2014-11-23 01:56:50	<--	japro (~japro@77-59-183-11.dclient.hispeed.ch) has quit (Ping timeout: 264 seconds)
2014-11-23 01:56:56	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-23 01:57:32	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-tihqmsxkvkhewdiq) has quit (Quit: Connection closed for inactivity)
2014-11-23 01:59:26	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 02:02:13	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 02:04:28	<--	ncd|leeN (~leeN@e181197211.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-11-23 02:05:20	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 02:06:16	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 258 seconds)
2014-11-23 02:08:00	-->	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-11-23 02:11:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 02:11:50	-->	xenoph (~siaran@89.11.172.72) has joined ##c++
2014-11-23 02:13:01	-->	nikb (~nikb@unaffiliated/nikb) has joined ##c++
2014-11-23 02:13:34	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 02:14:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 02:17:18	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 272 seconds)
2014-11-23 02:17:55	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-23 02:18:37	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-flmwoxrznumnnonv) has joined ##c++
2014-11-23 02:18:45	<--	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has quit (Quit: ZNC - http://znc.in)
2014-11-23 02:20:32	-->	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has joined ##c++
2014-11-23 02:23:07	-->	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has joined ##c++
2014-11-23 02:23:11	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-23 02:24:13	pEYEd	how do you pass a vector that contains popen data?  error: could not convert 'vrecords' from 'std::vector<std::basic_string<char> >' to 'std::string {aka std::basic_string<char>}' ->  https://bpaste.net/show/50ce948fb3cf
2014-11-23 02:24:40	<--	eyeRobut (~Lingo@cpe-66-108-26-52.nyc.res.rr.com) has quit (Quit: Be back later ...)
2014-11-23 02:25:19	<--	Kasu (~Kasu@c83-253-25-70.bredband.comhem.se) has quit (Ping timeout: 250 seconds)
2014-11-23 02:26:17	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2014-11-23 02:28:41	-->	matt90 (~matt90@149-169-138-60.nat.asu.edu) has joined ##c++
2014-11-23 02:30:45	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 02:33:38	Stryyker	pEYEd: std::string getmarketbuyData(FILE *fp) shows you returning a string and not a vector of strings. std::vector<std::string> getmarketbuyData(FILE *fp) should fix that
2014-11-23 02:33:39	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-23 02:34:47	pEYEd	Stryyker thank you!
2014-11-23 02:35:08	<--	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Remote host closed the connection)
2014-11-23 02:35:42	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 250 seconds)
2014-11-23 02:35:42	-->	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-23 02:36:49	-->	timj (~timj@p4FC96BB1.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 02:37:01	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Quit: Leaving)
2014-11-23 02:38:09	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:d489:7285:36db:bf24) has quit (Quit: Leaving)
2014-11-23 02:39:25	 *	pi- pies pEYEd
2014-11-23 02:39:37	pEYEd	:)
2014-11-23 02:39:47	<--	timj1 (~timj@p5DDB0281.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-23 02:40:46	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-23 02:43:02	-->	Burga (~andrewm@58-6-140-143.dyn.iinet.net.au) has joined ##c++
2014-11-23 02:43:21	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 256 seconds)
2014-11-23 02:43:45	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 02:43:57	-->	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 02:44:40	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 02:45:26	<--	devbug_ (~quassel@d108-180-247-142.bchsia.telus.net) has quit (Remote host closed the connection)
2014-11-23 02:45:45	-->	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-23 02:48:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 02:50:37	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-23 02:51:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 02:51:50	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-23 02:53:48	pi-	http://pbrd.co/156tKSK <-- what is going on here?  Is 1. referring to line 324, or to some invisible automatically generated operator?
2014-11-23 02:54:45	<--	schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-23 02:57:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 02:57:54	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-23 02:59:22	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-23 03:01:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 03:01:33	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-23 03:01:47	dts	so in c++11, is there any difference between class foo { foo() : x_(42) {} int x_; } and class foo { foo() {} int x_ = 42; };?
2014-11-23 03:01:57	<--	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has quit (Quit: Bye!!!)
2014-11-23 03:02:55	lh_mouse	No, I think.
2014-11-23 03:03:06	o11c	dts: I *think* it's the same, but in C++14 it's not the same as class foo { int x_ = 42; };
2014-11-23 03:03:18	dts	hmmm
2014-11-23 03:03:25	dts	is c++14 implemented yet?
2014-11-23 03:03:28	o11c	(but C++14 is strictly better in that case)
2014-11-23 03:03:41	o11c	C++14 allows NSDMIs for aggregates
2014-11-23 03:04:56	matt90	I'm trying to do static polymorphism with a template member function foo<T>(T*); how can I specify the argument type in declval when selecting the member?
2014-11-23 03:05:16	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-23 03:05:18	matt90	Here's an example of the selection: http://ideone.com/lO1Zn4 (line 30 is the problem)
2014-11-23 03:05:34	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-23 03:05:45	matt90	I've selected a foo<T>(*), but it's valid for all pointer types
2014-11-23 03:06:46	matt90	and the decltype is at compile time so I can't just replace the nullptr with a T*
2014-11-23 03:07:01	o11c	matt90: you're mixing up specialization and sfinae
2014-11-23 03:07:11	o11c	I don't think you need normal specialization
2014-11-23 03:07:25	matt90	yeah :( I got mixed up between specialization and overload selection
2014-11-23 03:07:26	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 240 seconds)
2014-11-23 03:07:39	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-23 03:07:44	matt90	I've tried maybe 4 different forms of this solution and they bounced around between the two
2014-11-23 03:08:04	o11c	remember, the key bits of sfinae is to do an overload based on a type error
2014-11-23 03:08:33	matt90	I tried to do a sfinae version using result_of to generate a bad type if the member doesn't exist
2014-11-23 03:09:06	o11c	nah, just use decltype
2014-11-23 03:09:09	o11c	or wait
2014-11-23 03:09:21	o11c	hm
2014-11-23 03:09:22	o11c	nah
2014-11-23 03:10:12	matt90	the problem is that using sfinae made the call ambiguous if the member exists, so I had to duplicate the sfinae with true in one and false in the other
2014-11-23 03:10:54	matt90	really I'm trying to express that both overloads are correct, but if the member exists then the other overload is *more* correct
2014-11-23 03:12:24	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2014-11-23 03:13:11	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-23 03:15:34	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-23 03:15:57	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-23 03:17:02	-->	Ghimwald (~Gone@c-73-45-140-183.hsd1.il.comcast.net) has joined ##c++
2014-11-23 03:17:38	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-23 03:19:13	<--	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-23 03:20:06	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 256 seconds)
2014-11-23 03:20:25	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 265 seconds)
2014-11-23 03:20:46	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-11-23 03:21:39	-->	veek (~veek@unaffiliated/veek) has joined ##c++
2014-11-23 03:22:27	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-23 03:23:05	<--	veek (~veek@unaffiliated/veek) has quit (Remote host closed the connection)
2014-11-23 03:24:40	<--	Belgarion0 (~aoeu@Brain.campus.ltu.se) has quit (Ping timeout: 264 seconds)
2014-11-23 03:25:12	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-23 03:25:26	matt90	anyway it's probably actually better to let the compile error happen -- in this context implementing foo<T>(U*) was probably an accident
2014-11-23 03:25:47	<--	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Remote host closed the connection)
2014-11-23 03:26:09	-->	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-23 03:26:56	<--	prechtl (~prechtl@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:27:14	Eelis	what is the goal, anyway
2014-11-23 03:27:23	Eelis	all this looks terribly obfuscated
2014-11-23 03:28:28	-->	F404 (~francisco@189-70-169-213.user.veloxzone.com.br) has joined ##c++
2014-11-23 03:29:33	matt90	it's the interface to a serialization formatter; the overloads are "let the formatter write it" and "ask the object to write its members"
2014-11-23 03:29:58	<--	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has quit (Ping timeout: 272 seconds)
2014-11-23 03:30:08	Eelis	hat'
2014-11-23 03:30:11	Eelis	*what's a formatter
2014-11-23 03:30:25	Eelis	and why does it compete with the objects themselves?
2014-11-23 03:31:33	-->	in (~in@192.210.214.197) has joined ##c++
2014-11-23 03:31:50	Eelis	why do you need an overload in the formatter interface for "do something not involving the formatter"?
2014-11-23 03:32:13	<--	in (~in@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:32:31	-->	Voidwalkr (Voidwalkr@74.73.43.211) has joined ##c++
2014-11-23 03:32:34	matt90	the formatter just writes types it knows how to; if it doesn't then the type specifies how
2014-11-23 03:32:50	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-23 03:33:10	Eelis	that does not explain why you need the "ask the object to write its members" overload in the formatter interface
2014-11-23 03:34:01	Eelis	write(target, formatter, objectofatypeknownbytheformatter);  write(target, objectofatypenotknownbytheformatter);
2014-11-23 03:34:40	matt90	I don't know what types the formatter does and doesn't know about
2014-11-23 03:34:44	matt90	neither does the caller
2014-11-23 03:34:49	Eelis	o_O
2014-11-23 03:35:00	-->	myrick (~myrick@192.210.214.197) has joined ##c++
2014-11-23 03:35:07	Eelis	so you need a formatter even for types where it can turn out you don't use the formatter?
2014-11-23 03:35:14	<--	myrick (~myrick@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:35:32	matt90	sorry, I didn't clarify, "ask the object to write its members" is actually "tell the object to tell the formatter what to write"
2014-11-23 03:35:38	-->	Garner (uid38417@gateway/web/irccloud.com/x-oomzbujlnigwlwtk) has joined ##c++
2014-11-23 03:36:37	matt90	the formatter is there because I'm doing serialization between different architectures
2014-11-23 03:37:19	<--	Ghimwald (~Gone@c-73-45-140-183.hsd1.il.comcast.net) has quit (Quit: Leaving)
2014-11-23 03:37:32	<--	Burga (~andrewm@58-6-140-143.dyn.iinet.net.au) has quit (Ping timeout: 245 seconds)
2014-11-23 03:37:34	Eelis	then couldn't you just use     void formatter::write(knowntypeA){...}  void formatter::write(knowntypeB){...}  template<typename T> formatter::write(T const & other){ other.write(*this); }   ?
2014-11-23 03:37:42	Eelis	why woul why you need decltype/specialization hackery?
2014-11-23 03:38:03	-->	helfenbei (~helfenbei@192.210.214.197) has joined ##c++
2014-11-23 03:38:04	<--	helfenbei (~helfenbei@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:38:06	Eelis	hell, you could even use nonmembers and let the non-known types declare their write overloads.
2014-11-23 03:38:08	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-23 03:38:16	Eelis	like with *gasp* iostreams
2014-11-23 03:38:40	Eelis	so i still don't know what problem you think you're solving with all the decltype/specialization hackery.
2014-11-23 03:38:44	-->	Ghimwald (~Gone@c-73-45-140-183.hsd1.il.comcast.net) has joined ##c++
2014-11-23 03:39:24	matt90	yeah it's a little convoluted but I"m not sure it's wrong
2014-11-23 03:39:39	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-23 03:39:49	Eelis	if it is convoluted for no reason and there is a simple straightforward alternative that does the same thing, then for all practical purposes the code is wrong.
2014-11-23 03:40:14	<--	Ghimwald (~Gone@c-73-45-140-183.hsd1.il.comcast.net) has quit (Client Quit)
2014-11-23 03:40:44	-->	lovasz (~lovasz@192.210.214.197) has joined ##c++
2014-11-23 03:40:46	<--	lovasz (~lovasz@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 03:40:52	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-23 03:41:45	matt90	well in that example you just gave, either formatter needs to carry its output target or the class that does needs to duplicate all those overloads
2014-11-23 03:42:59	-->	rendar (~I@host147-176-dynamic.22-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-23 03:43:25	-->	umin (~umin@192.210.214.197) has joined ##c++
2014-11-23 03:43:32	<--	umin (~umin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:43:37	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-23 03:43:38	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 03:44:08	matt90	different targets have different construction semantics, so unless I want to specialize formatter for every one then it shouldn't know about them
2014-11-23 03:45:05	matt90	I really don't see how it's that convoluted though--the whole class doing the indirection is 60 lines while the formatter is ~400
2014-11-23 03:45:31	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-23 03:45:34	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-23 03:46:05	-->	meyerhoef (~meyerhoef@192.210.214.197) has joined ##c++
2014-11-23 03:47:07	<--	meyerhoef (~meyerhoef@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:48:23	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 265 seconds)
2014-11-23 03:48:49	Eelis	matt90: void write(targetA&,formatter&,knownTypeA);  void write(targetB&formatter&,knownTypeB);
2014-11-23 03:48:53	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-23 03:49:06	Eelis	eelis, add comma after targetB
2014-11-23 03:49:15	Eelis	eelis, revert and add comma after targetB&
2014-11-23 03:49:36	Eelis	add overloads as desired.
2014-11-23 03:49:39	Eelis	still no need for specialization
2014-11-23 03:49:55	-->	dice (~dice@192.210.214.197) has joined ##c++
2014-11-23 03:49:58	matt90	except that I duplicate every overload
2014-11-23 03:50:03	matt90	one in formatter and one in this class
2014-11-23 03:50:03	Eelis	how so?
2014-11-23 03:50:11	<--	dice (~dice@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:50:12	Eelis	what class?
2014-11-23 03:50:16	-->	scai (~scai@p4FF0FD1B.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 03:50:24	Eelis	these would be free functions
2014-11-23 03:50:30	-->	fujiro (~fujiro@public138959.cdma.centertel.pl) has joined ##c++
2014-11-23 03:50:41	matt90	so one free function and one in formatter
2014-11-23 03:50:49	Eelis	no, no functions in formatter
2014-11-23 03:50:58	matt90	then what does it do :P
2014-11-23 03:51:06	Eelis	it carries the data you need for formatting, obviously
2014-11-23 03:51:22	Eelis	(so maybe    formatter const&)
2014-11-23 03:51:44	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-23 03:52:09	matt90	the implementation of write(T) is formatter dependent in its entirety
2014-11-23 03:52:30	Eelis	all the overloads have access to the formatter, so that's fine
2014-11-23 03:52:41	matt90	the formatter needs an overload for each T
2014-11-23 03:52:46	-->	crandersons (~crantron@cpe-23-240-14-135.socal.res.rr.com) has joined ##c++
2014-11-23 03:52:51	joel_falcou	usually wht you do is have the foramtter provide basic formatting facility so your free function taje the foramtter and your data and use formatter basic facility to be formatted
2014-11-23 03:52:58	-->	lannon (~lannon@192.210.214.197) has joined ##c++
2014-11-23 03:52:58	joel_falcou	no need to overlaod formatter on T
2014-11-23 03:53:04	<--	lannon (~lannon@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 03:54:00	 *	Eelis gives up
2014-11-23 03:54:27	matt90	I really fail to see how I can have a formatter that formats different types differently unless it overloads on them
2014-11-23 03:54:47	matt90	I'm not a rocket scientist, but I know that format<float> is a different function to format<long>
2014-11-23 03:54:47	Eelis	your problem description is way too vague, sorry. it's unclear to me what on earth your data streams are
2014-11-23 03:55:06	Eelis	and what role you envision for formatters and targets
2014-11-23 03:55:10	Eelis	and other entities
2014-11-23 03:55:37	matt90	yeah I'm not sure why you think it's so complicated but I've solved 100% of my use cases with two classes
2014-11-23 03:55:38	matt90	so I'm happy
2014-11-23 03:55:39	-->	shukert (~shukert@192.210.214.197) has joined ##c++
2014-11-23 03:55:43	<--	crantron (crantron@cpe-23-240-14-135.socal.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-23 03:56:04	Eelis	code like that should make you extremely sad, not happy
2014-11-23 03:56:04	-->	Yepoleb_ (~quassel@91-115-114-253.adsl.highway.telekom.at) has joined ##c++
2014-11-23 03:56:04	--	Yepoleb is now known as Guest61500
2014-11-23 03:56:05	<--	Guest61500 (~quassel@91-115-116-162.adsl.highway.telekom.at) has quit (Killed (tepper.freenode.net (Nickname regained by services)))
2014-11-23 03:56:05	--	Yepoleb_ is now known as Yepoleb
2014-11-23 03:56:08	Eelis	because it's gibberish
2014-11-23 03:56:12	joel_falcou	one beign 400 lines of decltype madness is not a huge success
2014-11-23 03:56:26	<--	shukert (~shukert@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 03:56:36	Eelis	i've written enough code like that to know that it's to be avoided at all cost
2014-11-23 03:57:07	<--	rol31 (~bf3@dyn.170-56-7-31.swissinet.com) has quit (Quit: leaving)
2014-11-23 03:57:12	matt90	joel_falcou: if it makes you happy it's only 193 lines, I guessed at 400
2014-11-23 03:57:26	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-23 03:57:49	-->	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 03:58:42	<--	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Client Quit)
2014-11-23 03:58:57	-->	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 03:59:05	-->	benak (~benak@192.210.214.197) has joined ##c++
2014-11-23 03:59:43	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Disconnected by services)
2014-11-23 03:59:55	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-23 04:00:27	<--	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Client Quit)
2014-11-23 04:00:37	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 04:02:02	<--	Cassiel (~JV@24-212-241-185.cable.teksavvy.com) has quit
2014-11-23 04:02:03	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 04:03:27	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-23 04:04:20	-->	rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-23 04:07:01	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-23 04:08:55	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-23 04:09:02	pEYEd	why am I unable to asign a variable to a variable for return data? I tried a loop as well, no good.  https://bpaste.net/show/ce92b812ec7e
2014-11-23 04:09:30	Stryyker	What error do you get?
2014-11-23 04:10:29	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-23 04:11:12	<--	benak (~benak@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:11:39	Stryyker	You're trying to assign a vector<string> to a string. Different types.
2014-11-23 04:12:01	pEYEd	error: no match for 'operator=' in 'buydat = getmarketbuyData(FILE*)()'
2014-11-23 04:12:51	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-23 04:12:58	pEYEd	Stryyker thank you again!
2014-11-23 04:13:47	Stryyker	You have an odd mixture of C and C++ ways of doing things. What C++ book are you using?
2014-11-23 04:14:00	-->	razze (~razze@192.210.214.197) has joined ##c++
2014-11-23 04:16:41	<--	BlueProtoman (~smitty@38.105.236.163) has quit (Remote host closed the connection)
2014-11-23 04:16:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 04:17:55	-->	PigFlu (~herp@80.202.25.19) has joined ##c++
2014-11-23 04:17:55	<--	PigFlu (~herp@80.202.25.19) has quit (Changing host)
2014-11-23 04:17:55	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-23 04:18:49	<--	razze (~razze@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:20:05	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 04:21:39	-->	sondrup (~hurtz@192.210.214.197) has joined ##c++
2014-11-23 04:23:30	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Quit: leaving)
2014-11-23 04:24:39	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 04:25:19	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-23 04:26:49	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-23 04:26:55	<--	sondrup (~hurtz@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:27:50	<--	Voidwalkr (Voidwalkr@74.73.43.211) has quit (Ping timeout: 245 seconds)
2014-11-23 04:29:41	-->	croslin (~croslin@192.210.214.197) has joined ##c++
2014-11-23 04:29:50	-->	hs366 (~ACE@94.254.45.76) has joined ##c++
2014-11-23 04:31:54	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 240 seconds)
2014-11-23 04:32:31	<--	croslin (~croslin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:32:56	<--	psii_ (~psi@gateway/tor-sasl/foopsi) has quit (Remote host closed the connection)
2014-11-23 04:33:15	-->	psii_ (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-11-23 04:34:34	<--	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-23 04:35:02	<--	nda__ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 258 seconds)
2014-11-23 04:35:02	-->	ashbaugh (~ashbaugh@192.210.214.197) has joined ##c++
2014-11-23 04:35:08	<--	ashbaugh (~ashbaugh@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:35:47	-->	davi (davi@gnu/davi) has joined ##c++
2014-11-23 04:36:19	-->	delicado (cb57fe10@gateway/web/freenode/ip.203.87.254.16) has joined ##c++
2014-11-23 04:37:43	-->	branes (~branes@192.210.214.197) has joined ##c++
2014-11-23 04:39:14	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-23 04:39:35	<--	branes (~branes@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:40:14	-->	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 04:40:45	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-23 04:42:18	-->	kypuros (~kypuros@192.210.214.197) has joined ##c++
2014-11-23 04:42:52	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-23 04:43:06	-->	oleo__ (~oleo@xdsl-87-79-254-89.netcologne.de) has joined ##c++
2014-11-23 04:43:26	--	oleo is now known as Guest80354
2014-11-23 04:44:18	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 04:44:29	-->	iveevue (~na@193.138.219.233) has joined ##c++
2014-11-23 04:45:09	<--	Guest80354 (~oleo@xdsl-87-79-251-252.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-11-23 04:47:12	<--	iveevue (~na@193.138.219.233) has quit (Client Quit)
2014-11-23 04:47:25	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-23 04:47:52	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2014-11-23 04:48:32	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-11-23 04:48:49	<--	kypuros (~kypuros@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 04:49:18	-->	Zupoman (~mistrzmag@91.224.129.184) has joined ##c++
2014-11-23 04:49:29	<--	Zupoman (~mistrzmag@91.224.129.184) has quit (Changing host)
2014-11-23 04:49:29	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-23 04:50:43	-->	japro (~japro@77-59-183-11.dclient.hispeed.ch) has joined ##c++
2014-11-23 04:51:29	-->	breihan (~sep@192.210.214.197) has joined ##c++
2014-11-23 04:51:51	<--	rainforest (~see@gateway/tor-sasl/alexandrite) has quit (Quit: Leaving)
2014-11-23 04:52:06	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-23 04:52:09	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-23 04:53:08	-->	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-23 04:53:48	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (Changing host)
2014-11-23 04:53:49	-->	kloeri (~kloeri@freenode/staff/exherbo.happy.birthday.kloeri) has joined ##c++
2014-11-23 04:56:41	<--	delicado (cb57fe10@gateway/web/freenode/ip.203.87.254.16) has quit (Ping timeout: 246 seconds)
2014-11-23 04:58:00	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-23 04:58:27	<--	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has quit (Quit: Leaving)
2014-11-23 04:58:46	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-23 04:59:34	<--	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has quit (Ping timeout: 250 seconds)
2014-11-23 04:59:36	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-23 05:02:12	<--	breihan (~sep@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:02:12	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 05:02:50	<--	blackwind_123 (~IceChat9@117.192.141.51) has quit (Ping timeout: 240 seconds)
2014-11-23 05:03:35	--	ludkiller is now known as lud
2014-11-23 05:04:33	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-23 05:04:48	-->	blackwind_123 (~IceChat9@117.202.16.189) has joined ##c++
2014-11-23 05:04:52	-->	marinas (~marinas@192.210.214.197) has joined ##c++
2014-11-23 05:05:21	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 05:06:00	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 272 seconds)
2014-11-23 05:06:02	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-23 05:07:07	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-23 05:07:09	-->	Gama11 (~quassel@p5DC1F3C3.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 05:07:35	<--	marinas (~marinas@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:08:10	-->	BlaXpirit (~blaxpirit@54-12-124-91.pool.ukrtel.net) has joined ##c++
2014-11-23 05:09:09	<--	japro (~japro@77-59-183-11.dclient.hispeed.ch) has quit (Ping timeout: 240 seconds)
2014-11-23 05:09:32	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-23 05:10:20	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-23 05:11:14	-->	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-23 05:13:55	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 05:14:32	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Remote host closed the connection)
2014-11-23 05:15:20	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-23 05:16:04	-->	o] (~achubergs@97-113-5-187.tukw.qwest.net) has joined ##c++
2014-11-23 05:16:14	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Off to fly a kite)
2014-11-23 05:16:18	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Quit: WeeChat 1.0-dev)
2014-11-23 05:17:03	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 05:17:23	-->	chxane (~chxane@pool-98-115-120-66.phlapa.fios.verizon.net) has joined ##c++
2014-11-23 05:17:53	<--	o-0-o (~achubergs@174-21-217-239.tukw.qwest.net) has quit (Ping timeout: 255 seconds)
2014-11-23 05:18:21	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-23 05:21:02	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-23 05:21:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 05:21:19	-->	bantug (~bantug@192.210.214.197) has joined ##c++
2014-11-23 05:21:35	<--	bantug (~bantug@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 05:22:15	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2014-11-23 05:23:20	-->	Kasu (~Kasu@c83-253-25-70.bredband.comhem.se) has joined ##c++
2014-11-23 05:24:14	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 05:24:22	-->	wardswort (~wardswort@192.210.214.197) has joined ##c++
2014-11-23 05:24:22	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-23 05:25:08	<--	davi (davi@gnu/davi) has quit (Ping timeout: 264 seconds)
2014-11-23 05:26:19	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-23 05:27:33	-->	nyqiust (~nyquist@178.162.199.144) has joined ##c++
2014-11-23 05:27:55	<--	wardswort (~wardswort@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:28:45	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Client Quit)
2014-11-23 05:28:58	-->	Li (~john@unaffiliated/li) has joined ##c++
2014-11-23 05:29:03	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-23 05:29:05	Li	where can I find lists of C++/Netbeans opensource projects?
2014-11-23 05:30:29	-->	dermody (~dermody@192.210.214.197) has joined ##c++
2014-11-23 05:31:59	cbreak	google?
2014-11-23 05:32:26	<--	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-23 05:32:53	-->	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 05:34:02	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 255 seconds)
2014-11-23 05:35:20	<--	dermody (~dermody@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:36:14	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-23 05:36:37	iveevue	!stdcpp C++/Netbeans
2014-11-23 05:36:38	nolyc	Standard C++ has no notion of `C++/Netbeans', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-11-23 05:37:05	-->	fender0107401 (~fender010@114.244.71.203) has joined ##c++
2014-11-23 05:37:09	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-23 05:37:33	<--	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-23 05:37:45	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 05:38:08	-->	oates (~oates@192.210.214.197) has joined ##c++
2014-11-23 05:38:11	<--	fender0107401 (~fender010@114.244.71.203) has quit (Client Quit)
2014-11-23 05:39:40	<--	oates (~oates@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:39:59	-->	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has joined ##c++
2014-11-23 05:41:35	<--	F404 (~francisco@189-70-169-213.user.veloxzone.com.br) has quit (Ping timeout: 258 seconds)
2014-11-23 05:42:20	-->	segovia (~segovia@192.210.214.197) has joined ##c++
2014-11-23 05:43:03	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 05:43:07	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 256 seconds)
2014-11-23 05:43:52	Jinxit	what's considered the modern way of looping through a vector in C++?
2014-11-23 05:43:55	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-23 05:44:06	<--	segovia (~segovia@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:44:15	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Ping timeout: 258 seconds)
2014-11-23 05:44:27	Stryyker	Depending on needs it could be a range based for loop or algorithm based
2014-11-23 05:44:31	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 05:44:54	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 05:44:56	iveevue	Jinxit, Could always use auto
2014-11-23 05:45:09	iveevue	for(auto i : &v) {}
2014-11-23 05:45:17	iveevue	I think thats the syntax, probably wrong...
2014-11-23 05:45:52	Jinxit	I've seen people use auto i, auto& i, auto&& i, could someone brief me on the differences?
2014-11-23 05:46:09	Stryyker	copy, reference
2014-11-23 05:46:13	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-23 05:46:17	Jinxit	and the last one?
2014-11-23 05:46:56	-->	rothell (~rothell@192.210.214.197) has joined ##c++
2014-11-23 05:47:00	<--	rothell (~rothell@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:47:19	-->	immibis_ (~ChatZill1@125-237-204-205.jetstream.xtra.co.nz) has joined ##c++
2014-11-23 05:48:28	<--	immibis (~ChatZill1@125-239-92-73.jetstream.xtra.co.nz) has quit (Ping timeout: 258 seconds)
2014-11-23 05:48:38	--	immibis_ is now known as immibis
2014-11-23 05:48:50	cbreak	also a reference.
2014-11-23 05:49:19	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 240 seconds)
2014-11-23 05:49:32	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-23 05:49:36	-->	whitson (~whitson@192.210.214.197) has joined ##c++
2014-11-23 05:50:16	<--	b0lt (r00t@unaffiliated/bolt) has quit (Remote host closed the connection)
2014-11-23 05:50:34	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-23 05:51:59	<--	Gama11 (~quassel@p5DC1F3C3.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-23 05:52:49	-->	hexagoxel (~hexagoxel@kiel-5f768b2f.pool.mediaWays.net) has joined ##c++
2014-11-23 05:53:11	<--	whitson (~whitson@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:55:13	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 05:55:44	-->	durdan (~durdan@192.210.214.197) has joined ##c++
2014-11-23 05:55:44	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 244 seconds)
2014-11-23 05:56:10	<--	durdan (~durdan@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:56:14	Jinxit	so there's no difference?
2014-11-23 05:58:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 05:58:47	-->	protasewi (~protasewi@192.210.214.197) has joined ##c++
2014-11-23 05:59:03	pEYEd	is there a guid to working with switch/case and vectors?
2014-11-23 05:59:12	<--	protasewi (~protasewi@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 05:59:12	-->	FlorianJW-terra (~florian@madways.de) has joined ##c++
2014-11-23 05:59:55	Stryyker	Sounds like you have a specific use case. Maybe if you explained with suitable details you will get the needed answers. BTW, do you have a C++ textbook?
2014-11-23 06:00:31	cbreak	pEYEd: why would anyone bother working with switch/case?
2014-11-23 06:00:41	cbreak	pEYEd: it's inconvenient and hard to use
2014-11-23 06:01:51	-->	faycurry (~faycurry@192.210.214.197) has joined ##c++
2014-11-23 06:02:23	Stryyker	cbreak: Do you have any links to guides to alternative ways?
2014-11-23 06:02:47	cbreak	use if
2014-11-23 06:02:49	-->	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has joined ##c++
2014-11-23 06:03:13	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-23 06:03:25	<--	faycurry (~faycurry@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:05:06	pEYEd	cbreak it's the only thing I can think of. I have records coming in via popen in sets of 7. but the 3rd item has the keyword buy or sell. If it has sell on it, I need the whole set of 7 chucked into the garbage.  https://bpaste.net/show/e9450e72df36
2014-11-23 06:05:49	-->	komarov (~komarov@178.62.189.37) has joined ##c++
2014-11-23 06:06:03	-->	lytle (~lytle@192.210.214.197) has joined ##c++
2014-11-23 06:06:24	<--	lytle (~lytle@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:06:44	pEYEd	switch/case seemed like a decent solution to this weird issue.
2014-11-23 06:08:03	cbreak	that I doubt.
2014-11-23 06:08:21	cbreak	your code sucks by the way
2014-11-23 06:08:28	cbreak	uninitialized raw arrays with fixed bounds
2014-11-23 06:08:58	cbreak	potentially improper null termination
2014-11-23 06:09:07	-->	deneui (~deneui@192.210.214.197) has joined ##c++
2014-11-23 06:09:12	<--	deneui (~deneui@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 06:09:20	cbreak	convoluted logic
2014-11-23 06:09:32	pEYEd	thanks
2014-11-23 06:09:45	pEYEd	should I get you a christmas card now?
2014-11-23 06:10:36	Stryyker	pEYEd: Do you have a C++ textbook?
2014-11-23 06:10:48	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-23 06:11:19	pEYEd	Is this 'patronize pEYEd day?'
2014-11-23 06:11:46	<--	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has quit (Ping timeout: 272 seconds)
2014-11-23 06:11:47	-->	nunley (~nunley@192.210.214.197) has joined ##c++
2014-11-23 06:12:20	<--	nunley (~nunley@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:12:30	Stryyker	No. It is asking about you having a good source of information so you can learn easier and better ways.
2014-11-23 06:13:26	Stryyker	I find working with std::string easier for many tasks than char arrays.
2014-11-23 06:13:46	pEYEd	popen
2014-11-23 06:13:51	pEYEd	no choice
2014-11-23 06:14:00	Stryyker	Must you use popen?
2014-11-23 06:14:05	pEYEd	yup
2014-11-23 06:14:09	pEYEd	it works
2014-11-23 06:14:28	Stryyker	Alternatives often work too. That is why I asked if you must use popen.
2014-11-23 06:14:37	pEYEd	system() did not
2014-11-23 06:14:51	-->	thurrell (~thurrell@192.210.214.197) has joined ##c++
2014-11-23 06:15:00	<--	thurrell (~thurrell@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:15:54	<--	yrter (~yrter@unaffiliated/yrter) has quit (Ping timeout: 256 seconds)
2014-11-23 06:16:54	pEYEd	and the next place the data is going is int or float once I get it organized..
2014-11-23 06:17:31	-->	donatien (~donatien@192.210.214.197) has joined ##c++
2014-11-23 06:18:03	<--	donatien (~donatien@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:18:13	-->	Sbidicuda (~antani@host26-234-dynamic.19-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-23 06:18:13	<--	Sbidicuda (~antani@host26-234-dynamic.19-79-r.retail.telecomitalia.it) has quit (Client Quit)
2014-11-23 06:18:36	cbreak	pEYEd: popen is no excuse
2014-11-23 06:18:39	<--	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 272 seconds)
2014-11-23 06:18:44	cbreak	it works with string too.
2014-11-23 06:19:19	cbreak	there's no excuse for bugs
2014-11-23 06:19:20	pEYEd	anything I have tried, popen stay locked in char.
2014-11-23 06:19:59	pEYEd	or it errors out with conversion issues.
2014-11-23 06:20:35	-->	warschaw (~warschaw@192.210.214.197) has joined ##c++
2014-11-23 06:21:00	<--	SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 256 seconds)
2014-11-23 06:21:47	<--	warschaw (~warschaw@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:23:00	-->	TheTeapot (~TheTeapot@101.164.210.152) has joined ##c++
2014-11-23 06:23:05	<--	komarov (~komarov@178.62.189.37) has quit (Ping timeout: 250 seconds)
2014-11-23 06:23:55	<--	lud (lud@gateway/shell/elitebnc/x-jtfnlogkpnytvdjf) has quit (Excess Flood)
2014-11-23 06:24:01	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-23 06:24:22	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-23 06:24:24	-->	ozog (~ozog@192.210.214.197) has joined ##c++
2014-11-23 06:24:54	<--	ozog (~ozog@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:26:01	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-23 06:26:05	-->	ludkiller (lud@gateway/shell/elitebnc/x-lqrlhsyfdomycfgu) has joined ##c++
2014-11-23 06:27:28	-->	lafield (~lafield@192.210.214.197) has joined ##c++
2014-11-23 06:27:31	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-23 06:28:02	<--	lafield (~lafield@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:28:13	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-23 06:29:38	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-23 06:30:55	-->	schleppy (~schleppy@192.210.214.197) has joined ##c++
2014-11-23 06:31:26	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 264 seconds)
2014-11-23 06:31:59	<--	schleppy (~schleppy@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:32:07	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-23 06:32:38	-->	Judas- (~carambola@93-167-164-19-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-23 06:32:57	-->	tarruda (~tarruda@191.33.35.146) has joined ##c++
2014-11-23 06:34:37	<--	Romtam1 (~Romtam@wikipedia/Romtam) has quit (Ping timeout: 245 seconds)
2014-11-23 06:34:44	-->	pascoal (~pascoal@192.210.214.197) has joined ##c++
2014-11-23 06:34:48	<--	pascoal (~pascoal@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:36:03	<--	immibis (~ChatZill1@125-237-204-205.jetstream.xtra.co.nz) has quit (Ping timeout: 250 seconds)
2014-11-23 06:36:24	-->	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has joined ##c++
2014-11-23 06:36:33	-->	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has joined ##c++
2014-11-23 06:37:16	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-23 06:37:25	-->	mcnairy (~mcnairy@192.210.214.197) has joined ##c++
2014-11-23 06:38:00	<--	mcnairy (~mcnairy@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:38:04	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-23 06:38:09	<--	SiGe___ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-23 06:38:14	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 06:39:42	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-23 06:40:14	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-23 06:40:21	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-23 06:40:51	-->	kepley (~kepley@192.210.214.197) has joined ##c++
2014-11-23 06:41:17	<--	kepley (~kepley@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:41:18	-->	kurahaupo (~kurahaupo@118.148.149.206) has joined ##c++
2014-11-23 06:41:37	<--	xace (~noname@unaffiliated/xace) has quit (Quit: leaving)
2014-11-23 06:41:40	<--	Judas- (~carambola@93-167-164-19-dynamic.dk.customer.tdc.net) has left ##c++
2014-11-23 06:43:55	-->	houghland (~houghland@192.210.214.197) has joined ##c++
2014-11-23 06:44:13	<--	houghland (~houghland@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:44:45	-->	ToastKid (~ToastKid@05468666.skybroadband.com) has joined ##c++
2014-11-23 06:44:58	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-23 06:45:05	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-23 06:45:29	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 06:46:09	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-23 06:46:10	-->	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has joined ##c++
2014-11-23 06:46:12	<--	Li (~john@unaffiliated/li) has left ##c++
2014-11-23 06:46:37	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-23 06:46:58	-->	caughron (~caughron@192.210.214.197) has joined ##c++
2014-11-23 06:46:59	<--	caughron (~caughron@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 06:48:12	<--	darkerstar (~indi@d24-141-157-125.home.cgocable.net) has quit (Read error: Connection reset by peer)
2014-11-23 06:49:29	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-23 06:49:39	-->	giandomen (~giandomen@192.210.214.197) has joined ##c++
2014-11-23 06:49:51	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 244 seconds)
2014-11-23 06:49:53	<--	giandomen (~giandomen@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:50:37	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-23 06:50:43	-->	Li (~john@unaffiliated/li) has joined ##c++
2014-11-23 06:50:55	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-23 06:51:10	-->	p|q (~plq@95.14.86.78) has joined ##c++
2014-11-23 06:51:18	Li	after importing an opensource project to IDE ,, how to find which file contains the main function?
2014-11-23 06:51:37	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit
2014-11-23 06:52:42	-->	fegan (~fegan@192.210.214.197) has joined ##c++
2014-11-23 06:52:43	<--	fegan (~fegan@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 06:52:43	mihipte	Find in All Files?
2014-11-23 06:52:49	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-23 06:52:54	mihipte	and which IDE?
2014-11-23 06:53:29	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-23 06:54:00	<--	Lasher` (~szuckerm@pluto.capsl.udel.edu) has quit (Read error: Connection reset by peer)
2014-11-23 06:54:50	Li	netbeans
2014-11-23 06:55:20	Li	I searched for main( but found bunch of files containing that
2014-11-23 06:55:23	-->	mabb (~mabb@192.210.214.197) has joined ##c++
2014-11-23 06:55:28	<--	mabb (~mabb@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 06:55:33	Li	not sure which one should be the right place
2014-11-23 06:55:59	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-23 06:56:16	Li	isn't there any standard unified name for such software document to show the diagram or something
2014-11-23 06:56:55	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 06:57:52	mihipte	Li, not that I know of... which project?
2014-11-23 06:58:04	-->	savine (~savine@192.210.214.197) has joined ##c++
2014-11-23 06:58:13	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-23 06:59:17	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-23 06:59:23	<--	savine (~savine@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:00:10	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-23 07:00:21	mihipte	Li, I suspect it's performing some magic, like only compiling a specific file-which-has-main in the Makefile
2014-11-23 07:00:45	Li	I'm asking in general way but right now I'm facing the same exact difficulty with two projects ... openbravo pos .. asterisk
2014-11-23 07:01:34	Li	mihipte: I didn't get what you mean.
2014-11-23 07:01:49	mihipte	openbravo doesn't look open source
2014-11-23 07:02:16	-->	bohrman (~bohrman@192.210.214.197) has joined ##c++
2014-11-23 07:02:23	<--	bohrman (~bohrman@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:02:28	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 245 seconds)
2014-11-23 07:03:00	<--	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-23 07:03:39	Li	http://sourceforge.net/projects/openbravopos/files/Openbravo%20POS/Openbravo%20POS%202.30.2/
2014-11-23 07:04:09	<--	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has quit (Ping timeout: 272 seconds)
2014-11-23 07:04:35	mihipte	bummer, just a src.zip
2014-11-23 07:04:57	-->	tromba (~tromba@192.210.214.197) has joined ##c++
2014-11-23 07:05:00	<--	tromba (~tromba@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:05:25	mihipte	Li, ar eyou familiar with make or cmake?
2014-11-23 07:05:30	mihipte	are you*
2014-11-23 07:06:17	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-23 07:06:57	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-23 07:06:58	Li	can't say familiar but I used make to istall programs on linux
2014-11-23 07:07:24	Li	however they don't serve my needs .. I need to understand how to rung junit tests on programs
2014-11-23 07:07:37	-->	oberhaus (~oberhaus@192.210.214.197) has joined ##c++
2014-11-23 07:07:38	mihipte	oh, Openbravo is Java
2014-11-23 07:07:47	mihipte	that probably won't have a Makefile
2014-11-23 07:07:57	Li	I don't even know what juints tests are but that is how the task fall on me out of the blue
2014-11-23 07:08:25	Li	yes openbravo pos java and asterisk c
2014-11-23 07:08:33	<--	oberhaus (~oberhaus@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:08:35	mihipte	search "unit test", junit is a tool for that for Java
2014-11-23 07:09:08	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Quit: snakenerd)
2014-11-23 07:09:13	mihipte	it's a way to test small pieces of code to make sure no simple bugs have returned
2014-11-23 07:10:14	-->	Gomitung (~mabsantos@a95-95-21-220.cpe.netcabo.pt) has joined ##c++
2014-11-23 07:10:48	mihipte	Li, this would be my first guess for Asterisk: http://svn.asterisk.org/svn/asterisk/trunk/main/asterisk.c
2014-11-23 07:10:52	-->	hodora (~appwl@dsl-sjkbrasgw2-50de31-156.dhcp.inet.fi) has joined ##c++
2014-11-23 07:11:00	mihipte	did you find multiple mains in both projects?
2014-11-23 07:11:04	mihipte	or which one?
2014-11-23 07:11:27	<--	TheTeapot (~TheTeapot@101.164.210.152) has quit (Ping timeout: 258 seconds)
2014-11-23 07:11:27	-->	durough (~durough@192.210.214.197) has joined ##c++
2014-11-23 07:11:48	<--	durough (~durough@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:13:07	mihipte	Li, tbh I don't know a general answer to give you
2014-11-23 07:13:22	-->	Semiarty (~opanki@91.109.47.11) has joined ##c++
2014-11-23 07:14:02	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2014-11-23 07:14:30	-->	brettmann (~brettmann@192.210.214.197) has joined ##c++
2014-11-23 07:15:03	<--	brettmann (~brettmann@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:15:11	<--	seishun (~Kakera@87.110.133.214) has quit (Remote host closed the connection)
2014-11-23 07:16:00	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-23 07:17:34	-->	earll (~earll@192.210.214.197) has joined ##c++
2014-11-23 07:17:38	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-23 07:17:46	<--	earll (~earll@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:19:25	-->	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has joined ##c++
2014-11-23 07:19:49	Li	not files named mains but files contain mains
2014-11-23 07:20:23	Li	I'm not even sure what I'm doing because I'm doing it for class project which I've been taken any classes on how doing it
2014-11-23 07:20:37	-->	barrocas (~barrocas@192.210.214.197) has joined ##c++
2014-11-23 07:21:05	<--	barrocas (~barrocas@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:21:07	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-23 07:21:22	-->	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 07:21:27	Li	I'm so fucking depressed right now and for the first time I thought to take my stupid damn life
2014-11-23 07:21:31	Li	fucking professors
2014-11-23 07:21:44	-->	TheGun (~ronnyma@89.10.253.157) has joined ##c++
2014-11-23 07:22:26	-->	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has joined ##c++
2014-11-23 07:22:26	<--	SiGe__ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-23 07:22:26	-->	SiGe____ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 07:22:38	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-23 07:22:45	<--	TheAncientGoat (~quassel@175.143.242.172) has quit (Ping timeout: 255 seconds)
2014-11-23 07:23:04	<--	TheGun (~ronnyma@89.10.253.157) has quit (Client Quit)
2014-11-23 07:23:26	-->	TheGun (~ronnyma@157.89-10-253.nextgentel.com) has joined ##c++
2014-11-23 07:23:41	pEYEd	I get a segment fault at execution  ->  https://bpaste.net/show/b26e2decb891   gdb ->  https://bpaste.net/show/026b34daecfb
2014-11-23 07:23:41	-->	sobieraj (~sobieraj@192.210.214.197) has joined ##c++
2014-11-23 07:23:52	<--	TheGun (~ronnyma@157.89-10-253.nextgentel.com) has left ##c++
2014-11-23 07:23:57	<--	sobieraj (~sobieraj@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:24:54	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-23 07:26:08	matt90	someone jumps off one of our engineering buildings every couple of years
2014-11-23 07:26:18	matt90	I'm not sure how people can take something like school so seriously
2014-11-23 07:26:19	-->	TheAncientGoat (~quassel@175.143.242.172) has joined ##c++
2014-11-23 07:26:32	<--	SiGe____ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-23 07:26:45	-->	byers (~byers@192.210.214.197) has joined ##c++
2014-11-23 07:26:49	<--	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has quit (Quit: Leaving)
2014-11-23 07:26:57	Eelis	maybe they don't take it seriously but are just tired of life
2014-11-23 07:27:08	matt90	I suppose
2014-11-23 07:27:09	-->	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has joined ##c++
2014-11-23 07:27:24	matt90	you were right, btw -- I cleaned up those two classes into one nicer looking class and it works exactly the same
2014-11-23 07:27:36	Eelis	glad to hear
2014-11-23 07:27:50	matt90	thanks for berating me into rethinking what I was doing ;)
2014-11-23 07:27:56	Eelis	yw
2014-11-23 07:28:02	matt90	I haven't had anyone looking at me code in 2-3 years now
2014-11-23 07:28:06	matt90	my*
2014-11-23 07:28:20	Eelis	i just write my code in Haskell to achieve that
2014-11-23 07:28:26	matt90	haha
2014-11-23 07:28:27	<--	byers (~byers@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:28:32	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-23 07:29:50	<--	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has quit
2014-11-23 07:30:08	-->	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has joined ##c++
2014-11-23 07:30:09	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 240 seconds)
2014-11-23 07:30:11	mihipte	Li, I know that you mean files containing mains, and that file is what I would expect to hold the proper main.
2014-11-23 07:30:13	<--	gobya (~gobya@229.pool85-52-113.dynamic.orange.es) has quit (Client Quit)
2014-11-23 07:30:23	<--	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has quit (Client Quit)
2014-11-23 07:31:07	-->	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has joined ##c++
2014-11-23 07:31:20	-->	karpel (~karpel@192.210.214.197) has joined ##c++
2014-11-23 07:32:46	<--	karpel (~karpel@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:33:03	-->	yopista (~gobya@229.pool85-52-113.dynamic.orange.es) has joined ##c++
2014-11-23 07:33:07	yopista	Hello
2014-11-23 07:34:08	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-23 07:34:38	mihipte	yo
2014-11-23 07:34:55	<--	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has quit
2014-11-23 07:35:32	-->	barters (~barters@192.210.214.197) has joined ##c++
2014-11-23 07:35:36	Eelis	!emh
2014-11-23 07:35:37	nolyc	Please state the nature of the C++ emergency.
2014-11-23 07:35:42	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 07:35:50	<--	barters (~barters@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:38:06	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-23 07:38:36	-->	bowlick (~bowlick@192.210.214.197) has joined ##c++
2014-11-23 07:38:51	<--	bowlick (~bowlick@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:39:18	yopista	I'm a newbie and I want to make a cmd app with a dll this is what I get -> http://ideone.com/Rz5nP1 my source code ->
2014-11-23 07:39:23	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-23 07:39:30	yopista	and this is my source code->http://ideone.com/FVHx3K
2014-11-23 07:40:13	mihipte	what do you mean, cmd app with a dll?
2014-11-23 07:40:46	yopista	a dll and a win32 application to test the dll
2014-11-23 07:41:00	yopista	a solution with two projects
2014-11-23 07:41:26	-->	gelignite (~gelignite@i528C3F22.versanet.de) has joined ##c++
2014-11-23 07:41:29	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-23 07:41:34	mihipte	yopista, what's the point of the dll? this seems like a bit overkill for learning
2014-11-23 07:41:39	-->	chittom (~chittom@192.210.214.197) has joined ##c++
2014-11-23 07:41:44	<--	chittom (~chittom@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:42:30	yopista	I want to connect a mysql database, but the problem is I can't connect the app with the dll
2014-11-23 07:42:53	<--	Gomitung (~mabsantos@a95-95-21-220.cpe.netcabo.pt) has quit
2014-11-23 07:44:20	-->	gerner (~gerner@192.210.214.197) has joined ##c++
2014-11-23 07:44:31	<--	ToastKid (~ToastKid@05468666.skybroadband.com) has left ##c++ ("Leaving")
2014-11-23 07:44:40	<--	gerner (~gerner@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:44:49	mihipte	yopista, I don't know enough to help you... try a Windows-specific channel? I don't know the names, but someone in here probably does
2014-11-23 07:45:13	mihipte	in fact...
2014-11-23 07:45:15	mihipte	!windows
2014-11-23 07:45:17	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-23 07:45:25	mihipte	win
2014-11-23 07:45:26	<--	nyqiust (~nyquist@178.162.199.144) has quit (Ping timeout: 240 seconds)
2014-11-23 07:45:39	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-23 07:45:59	-->	ijnbhu (bc698e8a@gateway/web/freenode/ip.188.105.142.138) has joined ##c++
2014-11-23 07:46:07	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 07:46:25	yopista	thank you mihipte
2014-11-23 07:47:24	-->	strick (~strick@192.210.214.197) has joined ##c++
2014-11-23 07:47:52	<--	strick (~strick@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:50:27	-->	kaler (~kaler@192.210.214.197) has joined ##c++
2014-11-23 07:50:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 07:50:57	<--	kaler (~kaler@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:51:02	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-23 07:51:19	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2014-11-23 07:51:50	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 07:52:29	<--	deadcode (~deadcode@75.146.15.253) has quit (Quit: Lost terminal)
2014-11-23 07:53:31	-->	archey (~archey@192.210.214.197) has joined ##c++
2014-11-23 07:53:35	<--	archey (~archey@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:53:40	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 07:55:19	<--	Li (~john@unaffiliated/li) has quit (Ping timeout: 272 seconds)
2014-11-23 07:55:23	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-23 07:55:24	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-23 07:56:11	-->	avino (~sonny@192.210.214.197) has joined ##c++
2014-11-23 07:56:18	<--	avino (~sonny@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 07:57:03	-->	xace (~noname@unaffiliated/xace) has joined ##c++
2014-11-23 07:57:16	-->	Malsasa_ (~Malsasa@125.164.133.3) has joined ##c++
2014-11-23 07:57:34	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-23 07:58:48	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 256 seconds)
2014-11-23 07:58:48	--	fstd_ is now known as fstd
2014-11-23 07:58:52	-->	gongalez (~gongalez@192.210.214.197) has joined ##c++
2014-11-23 07:58:53	<--	gongalez (~gongalez@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:01:32	-->	mcfatten (~burcin@192.210.214.197) has joined ##c++
2014-11-23 08:01:59	<--	jagob (~jacob@87-56-233-24-dynamic.dk.customer.tdc.net) has quit (Remote host closed the connection)
2014-11-23 08:02:05	<--	mcfatten (~burcin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:02:10	--	oleo__ is now known as oleo
2014-11-23 08:03:34	-->	nyqiust (~nyquist@5.63.146.228) has joined ##c++
2014-11-23 08:04:36	-->	ronchetto (~ronchetto@192.210.214.197) has joined ##c++
2014-11-23 08:04:38	<--	ronchetto (~ronchetto@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:04:43	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-23 08:05:26	<--	komarov (~komarov@pppoe.95-55-168-111.dynamic.avangarddsl.ru) has quit (Ping timeout: 272 seconds)
2014-11-23 08:05:32	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-23 08:05:38	-->	hz (~username@unaffiliated/hz) has joined ##c++
2014-11-23 08:06:33	-->	komarov (~komarov@95-55-3-85.dynamic.avangarddsl.ru) has joined ##c++
2014-11-23 08:07:17	-->	vandermee (~vandermee@192.210.214.197) has joined ##c++
2014-11-23 08:07:17	<--	vandermee (~vandermee@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:09:57	-->	crumrine (~crumrine@192.210.214.197) has joined ##c++
2014-11-23 08:11:04	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-23 08:12:27	-->	nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-23 08:13:56	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Ping timeout: 264 seconds)
2014-11-23 08:14:59	<--	boris`` (~boris@unaffiliated/boris/x-0919186) has quit (Ping timeout: 264 seconds)
2014-11-23 08:15:14	-->	boris`` (~boris@unaffiliated/boris/x-0919186) has joined ##c++
2014-11-23 08:16:23	<--	crumrine (~crumrine@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:16:34	-->	kaffeetrauma (~Thunderbi@5.147.4.15) has joined ##c++
2014-11-23 08:18:10	-->	fjellfras (~fjellfras@117.244.49.0) has joined ##c++
2014-11-23 08:19:08	-->	cotrell (~cotrell@192.210.214.197) has joined ##c++
2014-11-23 08:20:02	<--	cotrell (~cotrell@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:20:34	-->	ncd|leeN (~leeN@e181197211.adsl.alicedsl.de) has joined ##c++
2014-11-23 08:21:24	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-23 08:22:05	-->	soman (~ibram@37.112.218.35) has joined ##c++
2014-11-23 08:22:34	-->	ellzey (~ellzey@192.210.214.197) has joined ##c++
2014-11-23 08:23:10	<--	ellzey (~ellzey@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:23:27	soman	Do any differences for client code between using an extern const int MYCONST from namespace and using a static const int MYCONST from class exist?
2014-11-23 08:24:18	-->	davi (davi@wilbur.25thandclement.com) has joined ##c++
2014-11-23 08:24:18	<--	davi (davi@wilbur.25thandclement.com) has quit (Changing host)
2014-11-23 08:24:18	-->	davi (davi@gnu/davi) has joined ##c++
2014-11-23 08:24:39	NinjaPenguin	What does "client code" mean?
2014-11-23 08:24:49	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-23 08:25:01	soman	Code that uses that constant(s)
2014-11-23 08:25:28	NinjaPenguin	So you're asking the difference between extern and static?
2014-11-23 08:26:01	-->	dalgleish (~dalgleish@192.210.214.197) has joined ##c++
2014-11-23 08:26:04	<--	dalgleish (~dalgleish@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:26:15	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 244 seconds)
2014-11-23 08:26:33	NinjaPenguin	soman: http://stackoverflow.com/a/11056156
2014-11-23 08:26:34	soman	I think 'client code' could be extra in the question... I'm interested in differences between two ways using hard coded consts.
2014-11-23 08:26:38	NinjaPenguin	A quick google did it.
2014-11-23 08:27:22	NinjaPenguin	"Client code" is not terminology I recognize.
2014-11-23 08:27:37	NinjaPenguin	And what does "hard coded const" mean?
2014-11-23 08:27:39	-->	Felishia (~felishia@186-94-176-201.genericrev.cantv.net) has joined ##c++
2014-11-23 08:27:42	<--	fjellfras (~fjellfras@117.244.49.0) has quit (Ping timeout: 264 seconds)
2014-11-23 08:27:51	<--	m477 (~quassel@89-78-52-207.dynamic.chello.pl) has quit (Remote host closed the connection)
2014-11-23 08:28:13	Felishia	haaai? does anyone knows where I can find the scancodes for windows conio.h per key?
2014-11-23 08:28:21	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-23 08:28:23	NinjaPenguin	!windows
2014-11-23 08:28:24	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-23 08:28:24	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-23 08:28:39	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-23 08:28:42	-->	caughey (~caughey@192.210.214.197) has joined ##c++
2014-11-23 08:28:52	NinjaPenguin	Felishia: First hit on google; http://msdn.microsoft.com/en-us/library/aa299374%28v=vs.60%29.aspx
2014-11-23 08:29:05	<--	caughey (~caughey@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:29:09	<--	scai (~scai@p4FF0FD1B.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-23 08:29:54	-->	jwclough (~jwclough@c-24-5-194-103.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 08:30:03	Felishia	NinjaPenguin, meh I just need to know the codes... are they the same as linux?
2014-11-23 08:30:26	-->	fjellfras (~fjellfras@117.244.49.0) has joined ##c++
2014-11-23 08:30:33	NinjaPenguin	I don't know what you mean. :)
2014-11-23 08:31:26	Felishia	NinjaPenguin, :( it's ok...
2014-11-23 08:31:26	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-23 08:31:35	NinjaPenguin	Try ##c++-general
2014-11-23 08:31:45	-->	nieng (~nieng@192.210.214.197) has joined ##c++
2014-11-23 08:31:53	<--	nieng (~nieng@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:32:03	-->	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has joined ##c++
2014-11-23 08:32:14	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Remote host closed the connection)
2014-11-23 08:33:40	<--	Forbidden404 (~francisco@189-70-169-213.user.veloxzone.com.br) has quit (Client Quit)
2014-11-23 08:34:14	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-23 08:34:26	-->	palomar (~deem@192.210.214.197) has joined ##c++
2014-11-23 08:34:38	<--	palomar (~deem@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:35:18	-->	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has joined ##c++
2014-11-23 08:36:59	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Remote host closed the connection)
2014-11-23 08:37:29	-->	patneaude (~patneaude@192.210.214.197) has joined ##c++
2014-11-23 08:37:34	-->	sam__ (~sam@p2003004F2D3F42ED4DB9B22AD34DE7CA.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 08:37:34	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-23 08:37:37	<--	patneaude (~patneaude@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:40:10	-->	bjork (~bjork@192.210.214.197) has joined ##c++
2014-11-23 08:40:21	<--	bjork (~bjork@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:40:21	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-23 08:40:45	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-23 08:40:50	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-23 08:41:29	<--	yopista (~gobya@229.pool85-52-113.dynamic.orange.es) has quit
2014-11-23 08:43:14	-->	vitucci (~vitucci@192.210.214.197) has joined ##c++
2014-11-23 08:43:15	<--	vitucci (~vitucci@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:44:00	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-23 08:44:07	-->	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 08:45:09	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2014-11-23 08:45:30	<--	SiGe_ (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Remote host closed the connection)
2014-11-23 08:45:31	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 264 seconds)
2014-11-23 08:45:54	-->	fiske (~adger@192.210.214.197) has joined ##c++
2014-11-23 08:46:01	<--	fiske (~adger@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:46:44	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 08:47:08	<--	fjellfras (~fjellfras@117.244.49.0) has quit (Ping timeout: 272 seconds)
2014-11-23 08:48:35	-->	mieth (~mieth@192.210.214.197) has joined ##c++
2014-11-23 08:49:26	<--	mieth (~mieth@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:50:23	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-23 08:51:38	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-23 08:52:01	-->	hershenso (~hershenso@192.210.214.197) has joined ##c++
2014-11-23 08:52:09	<--	hershenso (~hershenso@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:52:43	-->	fjellfras (~fjellfras@117.244.49.0) has joined ##c++
2014-11-23 08:53:07	<--	jwclough (~jwclough@c-24-5-194-103.hsd1.ca.comcast.net) has quit (Quit: Leaving...)
2014-11-23 08:54:38	<--	ijnbhu (bc698e8a@gateway/web/freenode/ip.188.105.142.138) has quit (Quit: Page closed)
2014-11-23 08:54:42	-->	meridieth (~real@192.210.214.197) has joined ##c++
2014-11-23 08:54:46	<--	meridieth (~real@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 08:57:23	-->	kops (~kops@192.210.214.197) has joined ##c++
2014-11-23 08:57:29	<--	kops (~kops@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 08:57:36	<--	davi (davi@gnu/davi) has quit (Ping timeout: 240 seconds)
2014-11-23 08:57:46	-->	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has joined ##c++
2014-11-23 08:57:57	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-23 08:58:03	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 08:58:35	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 08:59:12	<--	Atque (~Atque@unaffiliated/atque) has quit (Quit: ...)
2014-11-23 08:59:16	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-23 09:00:03	-->	manzay (~manzay@192.210.214.197) has joined ##c++
2014-11-23 09:00:08	-->	andgra (~andgra@c-4f669022-74736162.cust.telenor.se) has joined ##c++
2014-11-23 09:00:21	<--	manzay (~manzay@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 09:01:02	<--	seishun (~Kakera@87.110.133.214) has quit (Client Quit)
2014-11-23 09:01:31	-->	Rifuli (~Rifiul@CPE-120-148-165-49.bjzv4.lon.bigpond.net.au) has joined ##c++
2014-11-23 09:01:39	Rifuli	Yo
2014-11-23 09:01:43	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-23 09:02:18	<--	seishun (~Kakera@87.110.133.214) has quit (Client Quit)
2014-11-23 09:02:48	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-23 09:02:49	Rifuli	How can I populate a vector with the return of a recursive function?
2014-11-23 09:02:50	<--	HerzogDeXtEr1 (~flex@i59F6B043.versanet.de) has quit (Quit: Leaving.)
2014-11-23 09:03:07	-->	kozak (~kozak@192.210.214.197) has joined ##c++
2014-11-23 09:03:14	<--	kozak (~kozak@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 09:03:28	Rifuli	for example myVector.push_back( item->recursive_f() );
2014-11-23 09:03:48	<--	Felishia (~felishia@186-94-176-201.genericrev.cantv.net) has left ##c++ ("Leaving")
2014-11-23 09:04:44	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-23 09:04:59	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.226) has joined ##c++
2014-11-23 09:05:47	-->	degolyer (~degolyer@192.210.214.197) has joined ##c++
2014-11-23 09:05:57	<--	degolyer (~degolyer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 09:06:41	NinjaPenguin	Rifuli: By using std::generate
2014-11-23 09:08:10	NinjaPenguin	What the function does is irrelevan.t
2014-11-23 09:08:14	NinjaPenguin	Irrelevant*
2014-11-23 09:08:51	-->	whetten (~whetten@192.210.214.197) has joined ##c++
2014-11-23 09:08:51	Rifuli	I'm just having a hard time wrapping my head around this
2014-11-23 09:08:56	<--	whetten (~whetten@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-23 09:08:58	NinjaPenguin	Rifuli: Around what?
2014-11-23 09:09:00	Rifuli	..I think I may have 'designed' this completely the wrong way
2014-11-23 09:09:24	Rifuli	brain is fuzzy <.<
2014-11-23 09:09:34	NinjaPenguin	I'll need some code to help you out.
2014-11-23 09:10:01	Rifuli	It's.. fairly convoluted and I'm not sure how to break it down to readable size
2014-11-23 09:10:35	<--	Mulvane_ (~Mulvane@mbv4.x.rootbsd.net) has quit
2014-11-23 09:10:44	NinjaPenguin	That's what testcases are for!
2014-11-23 09:10:52	Rifuli	Exactly
2014-11-23 09:10:59	Rifuli	But it's hard to build a test case when I'm not exactly sure what I'm trying to do
2014-11-23 09:11:16	NinjaPenguin	:|
2014-11-23 09:11:31	-->	causey (~causey@192.210.214.197) has joined ##c++
2014-11-23 09:11:42	<--	causey (~causey@192.210.214.197) has quit (Remote host closed the connection)
2014-11-23 09:12:38	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-23 09:14:55	dk0r	Someone sent me source with a for loop taking four parameters. e.g. for(int i=0; int sum=0; i<100; i=i++)   Is there any case where a for loop could possibly take 4-parameters?
2014-11-23 09:15:36	-->	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has joined ##c++
2014-11-23 09:16:24	NinjaPenguin	Loop doesn't take 4 parameters.
2014-11-23 09:16:44	-->	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-23 09:16:50	NinjaPenguin	I think what you saw was for (int i = 0, sum = 0; i < 100; ++i)
2014-11-23 09:18:03	opalraava	i=i++ is complete nonsense
2014-11-23 09:18:09	opalraava	just type i++
2014-11-23 09:18:27	matt90	i++ += i++
2014-11-23 09:18:29	<--	reVrost (~reVrost@CPE-58-172-99-21.mqzo1.cht.bigpond.net.au) has quit (Quit: Leaving)
2014-11-23 09:18:31	dk0r	NinjaPenguin, you're right: this is what I saw http://www.youtube.com/watch?v=pLa972Rgl1I&t=0m51s
2014-11-23 09:18:51	NinjaPenguin	Ew, that's C.
2014-11-23 09:18:54	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-23 09:18:56	NinjaPenguin	Take that far away from this channel.
2014-11-23 09:19:00	Rifuli	seems like a typo/hybrid of i = i + 1
2014-11-23 09:19:11	dk0r	I get errors when I try to compile it though. When I removed the "sum=0" from the for loop, then the source compiles fine.
2014-11-23 09:19:25	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-23 09:19:34	dk0r	So, NinjaPenguin, can a for loop accept four parameters?
2014-11-23 09:19:51	NinjaPenguin	dk0r: <NinjaPenguin> Loop doesn't take 4 parameters.
2014-11-23 09:19:59	matt90	dk0r: that's a comma, not a semicolon
2014-11-23 09:20:01	DanteLA	struct A { static Btype B; void func() { std::cout << B.a; std::cout << some_static_class::B.a } } <-- Is referencing the local static B 'faster' than referencing the foreign B ? For example would it be somehow more cache friendly?
2014-11-23 09:20:05	Rifuli	That guys voice annoys me.
2014-11-23 09:20:27	matt90	big men with tiny voices
2014-11-23 09:20:29	dk0r	Rifuli, still, the videos are pretty good for an openmp intro.
2014-11-23 09:20:43	Rifuli	I don't even know what OpenMP is ^_^
2014-11-23 09:20:43	dk0r	matt90, he looks short and fat to me
2014-11-23 09:20:50	matt90	big around
2014-11-23 09:20:50	NinjaPenguin	dk0r: Which is off topic and the language is C.
2014-11-23 09:21:01	dk0r	huh?
2014-11-23 09:21:27	dk0r	that source is written in c++, not C.
2014-11-23 09:21:34	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-23 09:21:38	NinjaPenguin	No, that's 100% C.
2014-11-23 09:21:54	dk0r	oh. Is that why for is taking four parameters?
2014-11-23 09:21:56	dk0r	idk C :\
2014-11-23 09:22:00	NinjaPenguin	No.
2014-11-23 09:22:02	dk0r	dude said all the code was in c++
2014-11-23 09:22:04	NinjaPenguin	My god...
2014-11-23 09:22:17	NinjaPenguin	For loop doesn't take 4 parameters.
2014-11-23 09:22:18	NinjaPenguin	It takes 3.
2014-11-23 09:22:23	NinjaPenguin	How many times do I have to repeat myself?
2014-11-23 09:22:23	pragma-	Opens link.  Sees "void main()" within 5 seconds.  Immediately closes link.
2014-11-23 09:22:27	pragma-	!next
2014-11-23 09:22:28	nolyc	Another satisfied customer, next!
2014-11-23 09:22:43	Rifuli	NinjaPenguin, no need to be a dick.
2014-11-23 09:22:51	dk0r	pragma-, that's code from one of the founders of openmp
2014-11-23 09:22:58	pragma-	Too bad he sucks at writing code.
2014-11-23 09:22:58	Rifuli	But true, that in most languages since forever, loops take 3 args
2014-11-23 09:23:00	-->	daNRG04 (~danny@e181226005.adsl.alicedsl.de) has joined ##c++
2014-11-23 09:23:15	<--	soman (~ibram@37.112.218.35) has quit (Quit: Leaving.)
2014-11-23 09:23:16	dk0r	<NinjaPenguin> I think what you saw was for (int i = 0, sum = 0; i < 100; ++i)
2014-11-23 09:23:28	matt90	the C++ standard requires int main
2014-11-23 09:23:29	NinjaPenguin	3 paramteres.
2014-11-23 09:23:36	matt90	so he's either writing C or wrong C++
2014-11-23 09:23:44	NinjaPenguin	It's C.
2014-11-23 09:23:48	matt90	"ill-formed"
2014-11-23 09:23:50	dk0r	NinjaPenguin, I see now. comma, not semicolon.
2014-11-23 09:24:01	NinjaPenguin	<matt90> dk0r: that's a comma, not a semicolon
2014-11-23 09:24:06	dk0r	ty
2014-11-23 09:24:09	Rifuli	haha
2014-11-23 09:24:12	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-inluddhkbmcymfdn) has joined ##c++
2014-11-23 09:24:17	DanteLA	Is there C++ way to do that for loop?
2014-11-23 09:24:38	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-23 09:24:54	DanteLA	i.e. the initialization at the 1/3 part
2014-11-23 09:25:36	-->	JesuZ (~JesuZ@dsl-hkibrasgw5-58c05f-197.dhcp.inet.fi) has joined ##c++
2014-11-23 09:25:37	NinjaPenguin	Yes, for loop's initialization part is for initialization.
2014-11-23 09:25:41	pragma-	You could even write `for (int i = 0, j = 10; j > 0, i < 10; j--, i++) ...` which is valid code.
2014-11-23 09:25:54	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-23 09:25:57	pragma-	though the j comparision would have no effect
2014-11-23 09:26:03	NinjaPenguin	Heh, yeah.
2014-11-23 09:26:23	<--	daN-R-G (~danny@e181224247.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2014-11-23 09:26:56	matt90	DanteLA: the comma operator evaluates both its operands and returns the result of the second
2014-11-23 09:27:40	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2014-11-23 09:27:42	pragma-	You could even do some nonsense like `for (int i = 0; i < 10; cout << "i is " << i << endl, i++);`
2014-11-23 09:27:42	-->	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has joined ##c++
2014-11-23 09:27:48	argoneus	hello
2014-11-23 09:27:54	matt90	ow my side effects
2014-11-23 09:28:16	argoneus	if I pass a pointer to a function (void bla(int* asd)) and then assign int* newasd = asd; in the function, "newasd" will point to wherever "asd" is pointing, right?
2014-11-23 09:29:10	argoneus	because the pointer itself is copied when passed, but where it's pointing stays the same
2014-11-23 09:29:26	argoneus	or am I missing something?
2014-11-23 09:29:30	matt90	you aren't
2014-11-23 09:29:37	argoneus	okay, great, cheers
2014-11-23 09:29:59	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-23 09:30:04	<--	argoneus (~argoneus@unaffiliated/argoneus) has left ##c++
2014-11-23 09:32:09	matt90	just remember that the value of a pointer is an address and the unary operator * is used to dereference that address
2014-11-23 09:32:22	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-23 09:32:39	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-23 09:32:49	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-11-23 09:32:58	matt90	(uintptr_t)asd even gives you the value as an integral type
2014-11-23 09:33:40	DanteLA	I think it is also worth mentioning that at a lower level the pointer is usually passed in a register and thus isn't even copied when calling the function
2014-11-23 09:33:58	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-23 09:34:07	Sculptor	guess that highly depends on implementation
2014-11-23 09:34:38	<--	Anthaas (~Anthaas@31.205.120.130) has quit (Read error: Connection reset by peer)
2014-11-23 09:36:48	matt90	that seems dependent on a lot of things
2014-11-23 09:37:26	-->	K-ballo (~sonoio@190.177.102.243) has joined ##c++
2014-11-23 09:38:07	DanteLA	well, mostly platform's function calling convention
2014-11-23 09:38:39	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-23 09:38:48	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-23 09:38:48	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-23 09:40:28	<--	JesuZ (~JesuZ@dsl-hkibrasgw5-58c05f-197.dhcp.inet.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-23 09:41:43	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 09:43:02	<--	FriskyKat (SomeWhere@90.208.35.78) has quit (Ping timeout: 244 seconds)
2014-11-23 09:43:16	-->	FriskyKat (SomeWhere@90.208.35.78) has joined ##c++
2014-11-23 09:43:31	-->	scai (~scai@p4FF0FD1B.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 09:43:55	-->	Guest93857 (~andrej@178.123.99.162) has joined ##c++
2014-11-23 09:43:57	-->	Clone_ (~Clone@igwe11.vub.ac.be) has joined ##c++
2014-11-23 09:44:00	-->	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-23 09:44:01	<--	Clone_ (~Clone@igwe11.vub.ac.be) has quit (Client Quit)
2014-11-23 09:44:15	<--	fjellfras (~fjellfras@117.244.49.0) has quit (Ping timeout: 240 seconds)
2014-11-23 09:44:32	-->	Clone_ (~Clone@igwe11.vub.ac.be) has joined ##c++
2014-11-23 09:44:54	<--	Clone_ (~Clone@igwe11.vub.ac.be) has quit (Client Quit)
2014-11-23 09:45:29	<--	Guest93857 (~andrej@178.123.99.162) has quit (Client Quit)
2014-11-23 09:45:44	-->	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has joined ##c++
2014-11-23 09:46:00	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-23 09:46:14	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-23 09:46:49	-->	Clone_ (~Clone@igwe11.vub.ac.be) has joined ##c++
2014-11-23 09:47:05	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-11-23 09:47:24	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 09:47:36	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-23 09:47:43	<--	Clone_ (~Clone@igwe11.vub.ac.be) has quit (Client Quit)
2014-11-23 09:47:56	-->	King_Hual` (~Hual@94.26.28.68) has joined ##c++
2014-11-23 09:49:21	matt90	what the heck
2014-11-23 09:49:22	<--	krnlyng (~liar@83.175.90.24) has quit (Read error: No route to host)
2014-11-23 09:49:33	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2014-11-23 09:49:48	matt90	movq %rdi, -8(%rbp)    movq -8(%rbp), %rdi
2014-11-23 09:49:48	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 240 seconds)
2014-11-23 09:49:59	matt90	what am I missing; why does that appear to do nothing
2014-11-23 09:50:23	<--	SiGe (~SiGe@usc-secure-wireless-207-072.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-23 09:50:46	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2014-11-23 09:52:04	-->	deekej (~deekej@23-237.197-178.cust.bluewin.ch) has joined ##c++
2014-11-23 09:52:25	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 265 seconds)
2014-11-23 09:52:59	-->	Clone_ (~Clone@infogroep.vub.ac.be) has joined ##c++
2014-11-23 09:53:19	<--	Clone_ (~Clone@infogroep.vub.ac.be) has quit (Client Quit)
2014-11-23 09:53:20	-->	fjellfras (~fjellfras@117.244.49.0) has joined ##c++
2014-11-23 09:53:36	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-23 09:53:48	<--	p|q (~plq@95.14.86.78) has quit (Ping timeout: 240 seconds)
2014-11-23 09:54:03	-->	Clone_ (~Clone@igwe.vub.ac.be) has joined ##c++
2014-11-23 09:54:29	<--	Clone_ (~Clone@igwe.vub.ac.be) has quit (Client Quit)
2014-11-23 09:54:34	DanteLA	matt90: doesn't compile
2014-11-23 09:55:44	matt90	yeah I'm confused... movq %rdi, -8(%rbp)   movq -8(%rbp), %rdi    movq %rdi, -16(%rbp)
2014-11-23 09:55:54	-->	snyp (~snyp@223.29.204.2) has joined ##c++
2014-11-23 09:56:03	-->	Clone_ (~Clone@igwe11.vub.ac.be) has joined ##c++
2014-11-23 09:56:04	matt90	"put the value in rdi on the stack, put that value back into rdi, then copy that into the stack"
2014-11-23 09:56:08	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 240 seconds)
2014-11-23 09:56:14	DanteLA	matt90: #asm ?
2014-11-23 09:56:23	<--	Clone_ (~Clone@igwe11.vub.ac.be) has quit (Client Quit)
2014-11-23 09:56:23	matt90	it's the answer to what you said
2014-11-23 09:56:41	matt90	the pointer is passed in rdi, copied to the stack, read back out, then copied again
2014-11-23 09:57:19	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-23 09:57:23	matt90	I haven't looked at asm in ~10 years though
2014-11-23 09:58:12	matt90	-O3 fixes it by replacing the whole program with retq :D
2014-11-23 09:58:16	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-23 09:58:29	DanteLA	matt90: x86_64 calling convention: "The first six integer or pointer arguments are passed in registers RDI, RSI, RDX, RCX, R8, and R9, while XMM0, XMM1, XMM2, XMM3, XMM4, XMM5, XMM6 and XMM7 are used for floating point arguments."
2014-11-23 09:58:47	DanteLA	"additional arguments are passed on the stack"
2014-11-23 09:58:47	-->	Clone_ (~Clone@igwe11.vub.ac.be) has joined ##c++
2014-11-23 09:58:48	<--	Clone_ (~Clone@igwe11.vub.ac.be) has quit (Client Quit)
2014-11-23 09:58:54	<--	fjellfras (~fjellfras@117.244.49.0) has quit (Ping timeout: 255 seconds)
2014-11-23 09:59:02	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 09:59:06	matt90	gotcha
2014-11-23 09:59:11	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-23 09:59:21	<--	jrolland-ubuntu (~jrolland@72.131.125.94) has quit (Ping timeout: 255 seconds)
2014-11-23 09:59:24	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit
2014-11-23 10:00:11	DanteLA	Well, to be precise, the System V AMD64 ABI calling convention, not x86_64
2014-11-23 10:00:49	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-23 10:00:58	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-23 10:01:01	<--	zima (zima@173.182.129.48) has quit (Remote host closed the connection)
2014-11-23 10:01:11	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-23 10:01:39	lamefun	Even Google Chrome JSON parser limits nesting depth to 100 instead of turning recursion into iteration.
2014-11-23 10:04:45	<--	King_Hual` (~Hual@94.26.28.68) has quit (Quit: RIP)
2014-11-23 10:04:51	lamefun	https://chromium.googlesource.com/chromium/src/base/+/master/json/json_parser.cc#24
2014-11-23 10:04:59	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-23 10:05:18	-->	hamster (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 10:06:03	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-23 10:07:48	-->	longbow (~androirc@ppp-94-68-194-142.home.otenet.gr) has joined ##c++
2014-11-23 10:08:06	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Ping timeout: 264 seconds)
2014-11-23 10:08:21	-->	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-23 10:09:35	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-23 10:09:41	mihipte	I'm trying to implement std::hash<MyType>... Does it require that my == operator and functions it depends on be inline? I get linker errors without stuff inlined.
2014-11-23 10:11:10	-->	p|q (~plq@78.179.105.40) has joined ##c++
2014-11-23 10:11:31	<--	psii_ (~psi@gateway/tor-sasl/foopsi) has quit (Quit: WeeChat 1.0.1)
2014-11-23 10:12:01	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-23 10:12:12	BlaXpirit	it's more likely some quirk with templates and #include
2014-11-23 10:12:16	DanteLA	mihipte: That's because you #include the .hpp file in more than one file
2014-11-23 10:13:02	DanteLA	mihipte: To fix either put the inlines or just define the functions and implement them in .cpp
2014-11-23 10:13:51	mihipte	DanteLA, it's not a "multiple definition" error it's the function being declared but not defined when I have the definition in my .cpp
2014-11-23 10:14:08	mihipte	and it's not a template function so I wouldn't expect that issue
2014-11-23 10:14:20	mihipte	it just happens to be called in a template
2014-11-23 10:14:58	DanteLA	why not just inline them then?
2014-11-23 10:15:12	mihipte	that's what I'm asking: is it required?
2014-11-23 10:16:16	mihipte	personally I ask the same thing about all C++ functions, "why not just inline them?" but it's against convention in general so I try to avoid it
2014-11-23 10:16:27	<--	p|q (~plq@78.179.105.40) has quit (Remote host closed the connection)
2014-11-23 10:16:33	<--	alza (~alza@167.88.36.237) has quit (Ping timeout: 244 seconds)
2014-11-23 10:17:04	BlaXpirit	sad thing is,
2014-11-23 10:17:10	BlaXpirit	it's actually sometimes required
2014-11-23 10:17:20	mihipte	is this one of those cases?
2014-11-23 10:17:54	BlaXpirit	i don't think so
2014-11-23 10:18:05	mihipte	then I'm missing something...
2014-11-23 10:18:16	<--	Malsasa_ (~Malsasa@125.164.133.3) has quit (Remote host closed the connection)
2014-11-23 10:18:19	BlaXpirit	wait
2014-11-23 10:18:33	DanteLA	I think a good reason for avoiding inlining when not useful is compilation speed and executable size
2014-11-23 10:18:40	BlaXpirit	I mean that separating class and its methods implementation is sometimes required
2014-11-23 10:18:54	mihipte	aha
2014-11-23 10:19:05	<--	David (~David@unaffiliated/david) has quit (Ping timeout: 245 seconds)
2014-11-23 10:19:33	mihipte	inlining it is then
2014-11-23 10:19:50	<--	TheAncientGoat (~quassel@175.143.242.172) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-23 10:20:13	DanteLA	If something is called in a template then doesn't it necessarily need to be inlined anyway?
2014-11-23 10:20:48	mihipte	that was basically my question <.< I wasn't aware of that restriction
2014-11-23 10:21:01	joel_falcou	inlining is always at compiler's discretion
2014-11-23 10:21:26	DanteLA	mihipte: The answer is yes, then
2014-11-23 10:21:56	mihipte	the contagiousness of const and inline is irritating...
2014-11-23 10:22:05	BlaXpirit	When I had problems with this stuff, http://cplusplus.com/forum/articles/10627/ seemed to help.
2014-11-23 10:22:27	mihipte	alright, thanks
2014-11-23 10:22:29	BlaXpirit	But I'm nowhere near being an expert, so this could be horrible, who knows
2014-11-23 10:22:30	-->	alza (~alza@167.88.36.237) has joined ##c++
2014-11-23 10:22:37	joel_falcou	inline is not contagious
2014-11-23 10:22:42	joel_falcou	const virulence is for your good
2014-11-23 10:22:58	-->	David (~David@unaffiliated/david) has joined ##c++
2014-11-23 10:23:00	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-23 10:23:02	<--	snyp (~snyp@223.29.204.2) has quit (Ping timeout: 258 seconds)
2014-11-23 10:23:26	mihipte	I guess the inlining is only contagious from templates... still >.>
2014-11-23 10:23:38	joel_falcou	and then
2014-11-23 10:23:51	joel_falcou	that's anyway compielr's prerogative to in the end decide what and when to inline
2014-11-23 10:24:13	mihipte	from my perspective inline just means it's in the header
2014-11-23 10:24:18	joel_falcou	no
2014-11-23 10:24:18	-->	TheAncientGoat (~quassel@175.143.242.172) has joined ##c++
2014-11-23 10:24:32	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 10:24:40	joel_falcou	inlien means the compiler can decide to not generate a function call for this particular code fragment but generate code inplace fo alling
2014-11-23 10:24:53	joel_falcou	unless code's too big or too complex or marked as not to be inlined ever.
2014-11-23 10:24:59	-->	Balzy (~Balzy@host80-167-dynamic.8-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-23 10:25:26	joel_falcou	templates are templates, tempalte instanciation *may* be inlined
2014-11-23 10:25:36	-->	phax (~phax@unaffiliated/phax) has joined ##c++
2014-11-23 10:27:14	Eelis	!inline
2014-11-23 10:27:16	nolyc	The inline specifier hints the compiler to inline a function, but is in this sense often ignored by modern compilers which are better at deciding when to inline functions (including those not marked inline) than humans. Functions marked inline must be defined in every TU in which they are used, making headers the appropriate place to define them if they are used in multiple TUs.
2014-11-23 10:28:25	mihipte	... yeah, that resolves to "in a header" in my mind
2014-11-23 10:28:50	mihipte	the rest of it cancels out
2014-11-23 10:28:51	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-23 10:29:12	-->	snyp (~snyp@150.129.132.145) has joined ##c++
2014-11-23 10:29:19	<--	snyp (~snyp@150.129.132.145) has quit (Max SendQ exceeded)
2014-11-23 10:29:28	-->	Ace (~ACE@94.254.45.76) has joined ##c++
2014-11-23 10:29:45	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-23 10:29:59	-->	snyp (~snyp@150.129.132.145) has joined ##c++
2014-11-23 10:30:03	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Client Quit)
2014-11-23 10:30:17	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-23 10:31:45	-->	_war10ck_ (~sayantan@106.51.131.135) has joined ##c++
2014-11-23 10:31:50	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-23 10:32:13	-->	eyeRobut (~Lingo@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has joined ##c++
2014-11-23 10:33:29	<--	hs366 (~ACE@94.254.45.76) has quit (Ping timeout: 255 seconds)
2014-11-23 10:37:08	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 10:37:59	<--	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has quit (Quit: leaving)
2014-11-23 10:38:12	<--	eyeRobut (~Lingo@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has quit (Ping timeout: 245 seconds)
2014-11-23 10:39:13	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-23 10:40:03	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-23 10:40:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 10:40:36	-->	eyeRobut (~Lingo@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has joined ##c++
2014-11-23 10:40:39	<--	tarruda (~tarruda@191.33.35.146) has quit (Quit: WeeChat 0.4.2)
2014-11-23 10:40:59	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-23 10:44:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 10:44:25	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-23 10:45:19	<--	ludkiller (lud@gateway/shell/elitebnc/x-lqrlhsyfdomycfgu) has quit (Excess Flood)
2014-11-23 10:46:27	-->	ludkiller (lud@gateway/shell/elitebnc/x-bvjnwlkpuwixsyvh) has joined ##c++
2014-11-23 10:47:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 10:47:49	<--	plitter (~plitter@84.48.49.52) has quit (Ping timeout: 256 seconds)
2014-11-23 10:48:01	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 10:48:10	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-23 10:52:25	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2014-11-23 10:52:38	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-23 10:55:06	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-23 10:55:06	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-23 10:55:06	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 10:55:10	<--	hodora (~appwl@dsl-sjkbrasgw2-50de31-156.dhcp.inet.fi) has quit (Ping timeout: 265 seconds)
2014-11-23 10:55:20	<--	K-ballo (~sonoio@190.177.102.243) has quit (Read error: Connection reset by peer)
2014-11-23 10:56:18	-->	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-23 10:56:19	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 10:58:04	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Quit: SiN_Bizkit)
2014-11-23 10:58:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 10:59:49	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-23 11:01:01	-->	jitta (~jitta@95.90.246.169) has joined ##c++
2014-11-23 11:05:30	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2014-11-23 11:05:45	<--	Leftas (~leftas@91.228.84.180) has quit (Read error: Connection timed out)
2014-11-23 11:06:21	-->	Leftas (~leftas@91.228.84.180) has joined ##c++
2014-11-23 11:06:33	<--	snyp (~snyp@150.129.132.145) has quit (Quit: Byeeeee)
2014-11-23 11:07:32	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-23 11:08:31	<--	sam__ (~sam@p2003004F2D3F42ED4DB9B22AD34DE7CA.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-11-23 11:08:53	-->	sam__ (~sam@p2003004F2D3F42ED4DB9B22AD34DE7CA.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 11:09:03	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-23 11:09:42	-->	Voidwalkr (~vector0@74.73.43.211) has joined ##c++
2014-11-23 11:09:45	-->	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-11-23 11:10:32	<--	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-23 11:11:25	<--	hamster (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-23 11:11:48	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-23 11:12:20	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-23 11:12:40	-->	hamster (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 11:14:36	-->	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has joined ##c++
2014-11-23 11:16:17	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-23 11:17:17	-->	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has joined ##c++
2014-11-23 11:18:06	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-23 11:18:47	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-23 11:19:39	-->	envi_un (kvirc@121.169.10.159) has joined ##c++
2014-11-23 11:20:44	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-23 11:21:00	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-23 11:21:40	<--	ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has quit (Quit: ARCADIVS)
2014-11-23 11:23:05	<--	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has quit (Ping timeout: 245 seconds)
2014-11-23 11:23:11	-->	Anthaas (~Anthaas@31.205.120.130) has joined ##c++
2014-11-23 11:23:23	<--	Voidwalkr (~vector0@74.73.43.211) has quit (Ping timeout: 255 seconds)
2014-11-23 11:23:26	<--	envi_u (kvirc@121.169.10.159) has quit (Ping timeout: 256 seconds)
2014-11-23 11:23:41	-->	Voidwalkr (Voidwalkr@74.73.43.211) has joined ##c++
2014-11-23 11:23:59	-->	Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-11-23 11:24:32	-->	huhze (~quassel@dslb-178-008-174-209.178.008.pools.vodafone-ip.de) has joined ##c++
2014-11-23 11:27:07	<--	proteusguy (~proteusgu@ppp-110-168-229-7.revip5.asianet.co.th) has quit (Ping timeout: 264 seconds)
2014-11-23 11:27:25	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 11:27:26	-->	Niedar (~nnscript@ip68-110-154-15.hr.hr.cox.net) has joined ##c++
2014-11-23 11:27:43	-->	Belgarion0 (~aoeu@Brain.campus.ltu.se) has joined ##c++
2014-11-23 11:27:53	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-23 11:27:59	--	MrFlibble is now known as LunarJetman
2014-11-23 11:28:46	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-23 11:29:17	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-23 11:29:42	<--	TheAncientGoat (~quassel@175.143.242.172) has quit (Remote host closed the connection)
2014-11-23 11:30:34	<--	Count_Niedar (~nnscript@ip68-110-154-15.hr.hr.cox.net) has quit (Ping timeout: 240 seconds)
2014-11-23 11:32:03	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-23 11:32:36	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-23 11:32:43	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Ping timeout: 265 seconds)
2014-11-23 11:35:00	-->	proteusguy (~proteusgu@ppp-110-168-229-7.revip5.asianet.co.th) has joined ##c++
2014-11-23 11:35:44	<--	heedypo (~heedypo@2.217.26.22) has quit (Quit: WeeChat 0.4.2)
2014-11-23 11:36:09	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-inluddhkbmcymfdn) has quit (Quit: Connection closed for inactivity)
2014-11-23 11:37:08	PSvils	is it bad "practice" to do static_casting?
2014-11-23 11:37:30	PSvils	I'm a noob in C++, but have extensive experience in other languages, though these are much higher level and often run on a VM or similar.
2014-11-23 11:37:58	PSvils	as far as I understand, static_cast would have no runtime overhead, hence there shouldn't be a problem?
2014-11-23 11:38:12	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-23 11:38:13	widmo	PSvils: It's not bad practice
2014-11-23 11:38:27	PSvils	okay :)
2014-11-23 11:38:51	widmo	C-style casting is, but it's used anyway by a lot of people ;D
2014-11-23 11:38:56	PSvils	I am a bit religious when it comes to obeying good practices, so this was just bothering my thinking a bit.
2014-11-23 11:39:20	PSvils	I thought c-style casting was the exact same as static_cast?
2014-11-23 11:39:21	-->	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has joined ##c++
2014-11-23 11:39:36	ville	c-style cast is the nuclear option
2014-11-23 11:39:39	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-23 11:39:52	matt90	c-style might be reinterpret
2014-11-23 11:42:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 11:42:35	PSvils	ah, gotcha : D
2014-11-23 11:42:52	<--	hamster (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-23 11:42:53	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Read error: Connection reset by peer)
2014-11-23 11:42:54	PSvils	my next problem is I need a sparse array, where the number of elements could get into the thousands.
2014-11-23 11:43:36	PSvils	any stl containers doing a good job of that?
2014-11-23 11:43:43	PSvils	or I assume just a map?
2014-11-23 11:43:49	PSvils	index is an integer value
2014-11-23 11:43:50	matt90	you want O(1)?
2014-11-23 11:44:06	-->	hamster (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 11:44:06	<--	komarov (~komarov@95-55-3-85.dynamic.avangarddsl.ru) has quit (Ping timeout: 258 seconds)
2014-11-23 11:44:19	PSvils	ideally yes!
2014-11-23 11:44:24	-->	komarov (~komarov@pppoe.95-55-144-59.dynamic.avangarddsl.ru) has joined ##c++
2014-11-23 11:44:39	PSvils	(I think lookup time is the most important in my scenario)
2014-11-23 11:44:48	matt90	a vector will be contiguous with constant random access
2014-11-23 11:45:02	matt90	a second vector with free indices gives you constant random insert
2014-11-23 11:45:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 11:45:31	matt90	at the expense of worst-case N*sizeof(size_t) overhead
2014-11-23 11:46:10	PSvils	mhm, it's this overhead I was looking to avoid, but this is getting to be a case of premature optimization.
2014-11-23 11:46:17	PSvils	I'll just roll with that then.
2014-11-23 11:46:52	matt90	you can trade memory for worse-than-constant time with a bitmap
2014-11-23 11:47:03	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-23 11:47:04	<--	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-23 11:47:30	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Read error: Connection reset by peer)
2014-11-23 11:47:42	-->	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has joined ##c++
2014-11-23 11:48:00	PSvils	matt90: bitmap == bitflag?
2014-11-23 11:48:38	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 11:48:57	matt90	yeah 1 for occupied etc
2014-11-23 11:50:24	-->	piotr (~larroy@188.226.212.206) has joined ##c++
2014-11-23 11:50:28	PSvils	matt90: not sure I understand : )
2014-11-23 11:50:53	matt90	nvm
2014-11-23 11:51:00	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Quit: 00 PC LOAD LETTER)
2014-11-23 11:51:26	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-23 11:51:39	matt90	if you really want a sparse array with constant insert/random get then just track whichever of used/unused buckets you prefer and eat the few kb worst case
2014-11-23 11:52:00	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-23 11:52:18	matt90	or use a map
2014-11-23 11:52:25	<--	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has quit (Ping timeout: 244 seconds)
2014-11-23 11:53:59	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-23 11:55:06	-->	scwizard (18d7ae18@gateway/web/freenode/ip.24.215.174.24) has joined ##c++
2014-11-23 11:55:14	scwizard	I read on the reddits: "clang seems to have a working implementation for c++ modules now, so inclusion in C++17 seems realistic."
2014-11-23 11:55:16	scwizard	is this true?
2014-11-23 11:57:03	-->	kaleid0 (~kaleid0@2600:1014:b127:c03b:6391:2cee:4cd6:db9d) has joined ##c++
2014-11-23 11:57:53	-->	pfo_ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-23 11:59:27	-->	junaidnaseer2 (~junaid@212.101.51.237) has joined ##c++
2014-11-23 12:00:03	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Quit: Leaving...)
2014-11-23 12:01:09	matt90	you can view the status of the standard here http://isocpp.org/std/status
2014-11-23 12:02:12	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-23 12:02:35	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 12:03:21	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-23 12:04:45	marchelzo_	How does operator== work for std::tuple<size_t, size_t>? does it check that both of the size_ts match up?
2014-11-23 12:04:52	marchelzo_	I'm getting a weird bug
2014-11-23 12:05:18	matt90	http://en.cppreference.com/w/cpp/utility/tuple/operator_cmp
2014-11-23 12:06:19	marchelzo_	ok so it's not because of weird comparisons
2014-11-23 12:06:20	marchelzo_	thanks
2014-11-23 12:06:26	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-23 12:07:26	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-23 12:07:53	lamefun	How to de-duplicate? http://ideone.com/MuigO6
2014-11-23 12:07:55	prime	Hi, I posted a question here late last night. I'm doing an assignment to determine the validty and type of triangles in a simple console app. I chose c++ as a challenge since I don't know it. I restructured the program to minimize each function, but I'm still running into a single case where the if statement doesn't work as intended.
2014-11-23 12:08:04	<--	grep0r (grep0r@bitcoinshell.mooo.com) has quit (Ping timeout: 250 seconds)
2014-11-23 12:08:08	<--	eyeRobut (~Lingo@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has left ##c++
2014-11-23 12:08:52	prime	What i'm trying to do is check to see if any of the scanf's are non-numeric, so I converted it to a string, and ran through each letter yet for some reason unknown to me, it breaks the program versus every other "Yes or No to continue" end of do-while loop, if someone could take a look I've pasted it here: http://pastebin.com/4T4qGAG8
2014-11-23 12:09:33	<--	DexterLB (~dex@79.100.237.65) has quit (Read error: Connection reset by peer)
2014-11-23 12:11:39	-->	j0z (~j0z@unaffiliated/j0z) has joined ##c++
2014-11-23 12:11:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 12:12:48	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Remote host closed the connection)
2014-11-23 12:13:08	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-23 12:14:06	<--	huhze (~quassel@dslb-178-008-174-209.178.008.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-23 12:14:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 12:15:09	<--	Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 265 seconds)
2014-11-23 12:15:16	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-23 12:15:54	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-23 12:16:17	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 12:16:23	marchelzo_	You're writing C++
2014-11-23 12:16:28	marchelzo_	Don't use scanf
2014-11-23 12:17:53	-->	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has joined ##c++
2014-11-23 12:17:53	<--	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has quit (Changing host)
2014-11-23 12:17:53	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-23 12:18:25	-->	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 12:18:30	-->	DexterLB (~dex@84.238.159.106) has joined ##c++
2014-11-23 12:18:32	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has joined ##c++
2014-11-23 12:18:55	-->	Plasmastar (Plasma@unaffiliated/plasmastar) has joined ##c++
2014-11-23 12:19:24	-->	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has joined ##c++
2014-11-23 12:19:29	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Quit: Leaving...)
2014-11-23 12:20:03	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-23 12:20:33	prime	I went with scanf because of the requirements asking to have space separated int terms. I would think there's a better way, but I'm not sure of which
2014-11-23 12:21:02	prime	The point of that requirement is so a user can backspace and correct their input
2014-11-23 12:21:54	LunarJetman	still no reason to use scanf
2014-11-23 12:22:02	-->	fjellfras (~fjellfras@117.244.49.0) has joined ##c++
2014-11-23 12:22:48	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 256 seconds)
2014-11-23 12:23:30	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-23 12:23:50	<--	blast (~quassel@d60-65-191-146.col.wideopenwest.com) has quit (Client Quit)
2014-11-23 12:23:54	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-23 12:24:00	prime	Whats an alternative?
2014-11-23 12:24:17	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 12:24:33	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-23 12:26:13	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-23 12:27:35	<--	Ace (~ACE@94.254.45.76) has quit (Quit: Leaving)
2014-11-23 12:27:46	-->	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has joined ##c++
2014-11-23 12:28:14	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-23 12:30:16	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 12:30:25	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-23 12:30:53	marchelzo_	does set.find(x) == set.end() imply that x is not a member of set?
2014-11-23 12:30:57	<--	scwizard (18d7ae18@gateway/web/freenode/ip.24.215.174.24) has quit (Ping timeout: 246 seconds)
2014-11-23 12:31:00	<--	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has quit (Remote host closed the connection)
2014-11-23 12:31:05	<--	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-23 12:31:36	Oxyd	Yes.
2014-11-23 12:31:39	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-23 12:32:33	<--	andgra (~andgra@c-4f669022-74736162.cust.telenor.se) has quit (Remote host closed the connection)
2014-11-23 12:32:43	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Read error: Connection reset by peer)
2014-11-23 12:33:20	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2014-11-23 12:33:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 12:33:50	-->	Kicer (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-23 12:35:07	-->	wulfling (~wulfling@32.97.110.57) has joined ##c++
2014-11-23 12:35:09	wulfling	hi
2014-11-23 12:35:12	Supicioso	I have a std::map that causes seg faults on linux but works perfectly fine.
2014-11-23 12:35:16	wulfling	I have class, lets say its called ClassTest.
2014-11-23 12:35:18	Supicioso	I can't seem to to figure why
2014-11-23 12:35:38	marchelzo_	Can someone just look at this and tell me if anything is obviously wrong? http://hastebin.com/nujimofogo.avrasm
2014-11-23 12:35:40	wulfling	I want the user to be prompted for how many objects need to be created. Then create them with names like ClassTest1, ClassTest2, etc
2014-11-23 12:35:45	Supicioso	I'll just try rewriting the entire class.
2014-11-23 12:36:10	davidstone	Supicioso: Turn on compiler warnings
2014-11-23 12:36:15	-->	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 12:36:18	davidstone	If that doesn't fix it, run your program through valgrind
2014-11-23 12:36:24	marchelzo_	wulfling: You can't
2014-11-23 12:36:25	Supicioso	They are on
2014-11-23 12:36:27	Supicioso	I think
2014-11-23 12:36:35	wulfling	AW. Shucks :(
2014-11-23 12:36:41	Supicioso	valgrind? That a linux program?
2014-11-23 12:36:45	davidstone	Yes
2014-11-23 12:36:56	wulfling	What's preventing me from doing it?
2014-11-23 12:36:59	davidstone	http://valgrind.org/
2014-11-23 12:37:09	marchelzo_	wulfling: you could have some sort of collection, call it something like ClassTests, and then have ClassTests[1], ClassTests[2], etc.
2014-11-23 12:37:23	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 12:37:23	wulfling	Ah, an array right
2014-11-23 12:37:35	marchelzo_	wulfling: You would have to define variables at runtime which isn't possible in C++
2014-11-23 12:37:37	davidstone	If that doesn't catch it, https://www.google.com/search?q=c%2B%2B+undefined+behavior+sanitizer
2014-11-23 12:37:49	Supicioso	Thanks, I'll give that a whirl. Tried using gdb, it points me to the line, but doesn't do much more then that.
2014-11-23 12:37:51	marchelzo_	only in dynamic languages with "eval()" or similar
2014-11-23 12:37:57	wulfling	oh ok
2014-11-23 12:38:53	matt90	wulfling: static typing means the types have to exist at compile time
2014-11-23 12:39:13	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-23 12:39:25	<--	hamster (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-23 12:39:26	matt90	why do you need the type names to be user defined?
2014-11-23 12:39:50	<--	komarov (~komarov@pppoe.95-55-144-59.dynamic.avangarddsl.ru) has quit (Ping timeout: 240 seconds)
2014-11-23 12:40:03	marchelzo_	matt90: That's not what he said
2014-11-23 12:40:18	<--	longbow (~androirc@ppp-94-68-194-142.home.otenet.gr) has quit (Ping timeout: 264 seconds)
2014-11-23 12:40:36	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 255 seconds)
2014-11-23 12:40:42	wulfling	Hm. marchelzo_: is that possible witha 'defined' constructor?
2014-11-23 12:40:55	matt90	ah right, objects, not classes
2014-11-23 12:41:12	marchelzo_	wulfling: I'm not sure what you mean
2014-11-23 12:41:46	wulfling	I have a constructor defined in the class to create the object with 4 parameters
2014-11-23 12:41:47	-->	hamster (~jacob@nobelnet.dk) has joined ##c++
2014-11-23 12:41:57	marchelzo_	Ok
2014-11-23 12:42:06	wulfling	li,e ClassTest(int, int, int, int)
2014-11-23 12:43:50	marchelzo_	wulfling: That's reasonable. What do you by "is that possible" though?
2014-11-23 12:43:58	davidstone	std::vector<ClassTest> v; v.reserve(user_input); for (unsigned n = 0; n != user_input; ++n) { v.emplace_back(0, 1, 2, 3); }
2014-11-23 12:43:58	marchelzo_	s/by/mean by/
2014-11-23 12:44:20	wulfling	hmmm
2014-11-23 12:44:40	wulfling	how would i initialize the object as an array, if i need to pass 4 arguments to the constructor?
2014-11-23 12:45:06	wulfling	ClassTest i[choice]; would be with a 'default' constructor, not the one i defined
2014-11-23 12:45:28	marchelzo_	davidstone: is std::vector<ClassTest>(user_input); equivalent to your first two statements?
2014-11-23 12:45:29	davidstone	std::vector is a dynamically-sized array
2014-11-23 12:45:33	davidstone	No
2014-11-23 12:45:39	davidstone	Sadly
2014-11-23 12:45:43	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-23 12:45:47	pi-	http://pbrd.co/156tKSK <-- what is going on here?  Is 1. referring to line 324, or to some invisible automatically generated operator?
2014-11-23 12:46:06	davidstone	The constructor that takes a std::size_t as an argument is the same as std::vector<ClassTest> v; v.resize(user_input);
2014-11-23 12:46:17	davidstone	It default constructs user_input elements, rather than reserving space for them
2014-11-23 12:46:20	-->	Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-23 12:46:45	marchelzo_	ahh
2014-11-23 12:47:00	-->	brennanos (~brennanos@c-76-17-201-40.hsd1.mn.comcast.net) has joined ##c++
2014-11-23 12:47:01	-->	anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2014-11-23 12:47:33	wulfling	marchelzo_, i wrote ClassTest[i]("a string","another string"123,456); but it fails
2014-11-23 12:47:46	wulfling	variable-sized object 'I' may not be initialized|
2014-11-23 12:48:09	marchelzo_	wulfling: do what davidstone said
2014-11-23 12:48:09	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 12:48:20	davidstone	The built-in array type requires a static size
2014-11-23 12:48:32	davidstone	And you cannot specify the constructor for the values
2014-11-23 12:48:35	davidstone	They are default constructed
2014-11-23 12:48:52	davidstone	Unless you explicitly list out all of the values
2014-11-23 12:48:56	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-23 12:49:14	davidstone	int array[5] = { 0, 1, 23, 74, 39 };
2014-11-23 12:49:24	davidstone	Each argument is initializing a separate integer
2014-11-23 12:49:25	wulfling	Also, what i said i wrote isnt accurate. It's actually ClassTest I[choice]("string","a string",123,456);
2014-11-23 12:49:35	davidstone	That does not work
2014-11-23 12:49:40	wulfling	Hrmpf
2014-11-23 12:49:50	davidstone	And even if we did have that syntax, it would require choice to be a compile-time constant
2014-11-23 12:50:00	davidstone	std::vector is the run-time way to do this
2014-11-23 12:50:11	wulfling	oh vectors. right
2014-11-23 12:50:19	wulfling	Dynamic array, if im not wrong?
2014-11-23 12:50:52	marchelzo_	wulfling: also, you won't get integers and strings in the same vector
2014-11-23 12:50:55	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-23 12:51:42	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 240 seconds)
2014-11-23 12:51:55	-->	blast (~quassel@d27-96-217-103.nap.wideopenwest.com) has joined ##c++
2014-11-23 12:51:57	<--	zhangxaochen (~zhangxaoc@218.108.29.108) has quit (Read error: Connection reset by peer)
2014-11-23 12:52:10	davidstone	His goal was to construct `choice` instances of ClassTest, to which he would construct with those arguments
2014-11-23 12:52:11	-->	komarov (~komarov@178.62.189.37) has joined ##c++
2014-11-23 12:52:12	<--	fjellfras (~fjellfras@117.244.49.0) has quit (Ping timeout: 255 seconds)
2014-11-23 12:52:17	-->	zhangxaochen (~zhangxaoc@218.108.29.108) has joined ##c++
2014-11-23 12:52:17	wulfling	hmmmm kay
2014-11-23 12:52:23	davidstone	It's a single type constructed with two strings and two integers.
2014-11-23 12:52:38	-->	MrClaw (~waclaw@128.140.221.84) has joined ##c++
2014-11-23 12:52:48	wulfling	and vectors don't like multiple types?
2014-11-23 12:52:54	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: Lost terminal)
2014-11-23 12:52:55	marchelzo_	ahh, right. For some reason I thought he wanted to initialize the array with those values.
2014-11-23 12:52:59	davidstone	std::vector<T> can only contain <T>
2014-11-23 12:53:24	wulfling	would a pastebin help?
2014-11-23 12:53:27	davidstone	But it sounds like that's what you need
2014-11-23 12:55:52	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 12:57:22	<--	blast (~quassel@d27-96-217-103.nap.wideopenwest.com) has quit (Ping timeout: 240 seconds)
2014-11-23 12:58:21	wulfling	http://pastebin.com/uKSvnBVZ
2014-11-23 12:59:00	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 12:59:28	wulfling	I had to inline the functions otherwise it complains about multiple definitions...
2014-11-23 12:59:54	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.226) has quit (Ping timeout: 264 seconds)
2014-11-23 13:00:44	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-23 13:00:58	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Ping timeout: 258 seconds)
2014-11-23 13:01:19	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-23 13:01:41	wulfling	is that normal?
2014-11-23 13:02:22	-->	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has joined ##c++
2014-11-23 13:02:25	<--	K-ballo (~sonoio@181.228.126.42) has quit (Read error: Connection reset by peer)
2014-11-23 13:02:39	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Read error: Connection reset by peer)
2014-11-23 13:02:50	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-23 13:03:03	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2014-11-23 13:03:16	-->	SiGe__ (~SiGe@usc-secure-wireless-088-072.usc.edu) has joined ##c++
2014-11-23 13:05:09	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-23 13:05:26	ville	you are doing somethikng silly then
2014-11-23 13:05:45	wulfling	ville: you looked at the code?
2014-11-23 13:05:46	ville	are you including the cpp file somewhere rather than the header?
2014-11-23 13:06:21	wulfling	OH. that worked
2014-11-23 13:06:27	<--	yrter (~yrter@unaffiliated/yrter) has quit (Quit: yrter)
2014-11-23 13:06:27	<--	deekej (~deekej@23-237.197-178.cust.bluewin.ch) has quit (Quit: See ya! Bye!)
2014-11-23 13:06:53	ville	that would count as silly
2014-11-23 13:07:28	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-23 13:07:43	<--	SiGe__ (~SiGe@usc-secure-wireless-088-072.usc.edu) has quit (Ping timeout: 250 seconds)
2014-11-23 13:08:01	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-23 13:08:19	wulfling	But...
2014-11-23 13:08:29	wulfling	If the functions are defined in a separate CPP file....
2014-11-23 13:08:42	wulfling	Will main.cpp know what those functions do, from the .h file?
2014-11-23 13:09:28	ville	in general each source, not header, file is compiled into an object file and then those object files are linked to form the executable
2014-11-23 13:09:34	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-23 13:10:13	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 13:14:06	<--	Voidwalkr (Voidwalkr@74.73.43.211) has quit (Read error: No route to host)
2014-11-23 13:14:06	<--	blackwind_123 (~IceChat9@117.202.16.189) has quit (Ping timeout: 264 seconds)
2014-11-23 13:14:06	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-23 13:14:06	wulfling	oh ok
2014-11-23 13:14:06	-->	devbug_ (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-23 13:14:06	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-23 13:14:06	<--	TheBeerinator (~TheBeerin@c-66-41-147-9.hsd1.mn.comcast.net) has quit (Disconnected by services)
2014-11-23 13:14:06	-->	TheGhostinator (~TheBeerin@c-66-41-147-9.hsd1.mn.comcast.net) has joined ##c++
2014-11-23 13:14:06	-->	Kelsie|2 (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-11-23 13:14:06	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-23 13:14:06	--	LunarJetman is now known as Guest37212
2014-11-23 13:14:06	<--	Guest37212 (LunarJetma@2.124.188.136) has quit (Disconnected by services)
2014-11-23 13:14:06	-->	KAHR-Alpha_ (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-23 13:14:06	-->	f0ster_ (~f0ster@c-71-193-133-40.hsd1.or.comcast.net) has joined ##c++
2014-11-23 13:14:06	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-23 13:14:06	-->	markand_ (~markand@ks3292218.kimsufi.com) has joined ##c++
2014-11-23 13:14:06	wulfling	That's why i should always use projects instead of standalone files, right?
2014-11-23 13:14:06	<--	komarov (~komarov@178.62.189.37) has quit (Ping timeout: 250 seconds)
2014-11-23 13:14:06	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-23 13:14:06	Supicioso	How would I make a class that takes [] operators?
2014-11-23 13:14:06	wulfling	Im using CodeBlocks ^.^
2014-11-23 13:14:06	<--	dh (dh@bsd.ee) has quit (Disconnected by services)
2014-11-23 13:14:06	-->	dh__ (dh@bsd.ee) has joined ##c++
2014-11-23 13:14:06	-->	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-23 13:14:06	--	markand_ is now known as Guest45198
2014-11-23 13:14:06	-->	Voidwalkr (Voidwalkr@74.73.43.211) has joined ##c++
2014-11-23 13:14:06	<--	yobber (~bismilah@li629-190.members.linode.com) has quit (Excess Flood)
2014-11-23 13:14:06	-->	f10__ (~flo@77.87.48.159) has joined ##c++
2014-11-23 13:14:06	ville	Supicioso: write an operator [] for it
2014-11-23 13:14:06	-->	naraku_9333 (~quassel@73.9.90.158) has joined ##c++
2014-11-23 13:14:06	davidstone	operator[](some_argument_type)
2014-11-23 13:14:06	Supicioso	hmm
2014-11-23 13:14:06	ville	wulfling: in general some sort of build system is used to drive the above process
2014-11-23 13:14:06	<--	PSvils (~Owner@81.198.225.19) has quit (Ping timeout: 256 seconds)
2014-11-23 13:14:06	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2014-11-23 13:14:06	--	KAHR-Alpha_ is now known as KAHR-Alpha
2014-11-23 13:14:06	<--	markand (~markand@unaffiliated/markand) has quit (Read error: Connection reset by peer)
2014-11-23 13:14:06	<--	anders0 (~anders0@213.47.181.68) has quit (Ping timeout: 264 seconds)
2014-11-23 13:14:06	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-23 13:14:06	ville	(your ide may have its own build system)
2014-11-23 13:14:06	<--	edran (~quassel@217.147.92.250) has quit (Read error: Connection reset by peer)
2014-11-23 13:14:08	-->	edran (~emacs@217.147.92.250) has joined ##c++
2014-11-23 13:14:15	<--	f0ster (~f0ster@unaffiliated/f0ster) has quit (Ping timeout: 256 seconds)
2014-11-23 13:14:35	-->	yobber (~bismilah@li629-190.members.linode.com) has joined ##c++
2014-11-23 13:14:44	<--	sam__ (~sam@p2003004F2D3F42ED4DB9B22AD34DE7CA.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-23 13:14:48	<--	Kelsie (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 256 seconds)
2014-11-23 13:14:48	<--	naraku9333 (~quassel@73.9.90.158) has quit (Ping timeout: 256 seconds)
2014-11-23 13:15:01	<--	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has quit (Ping timeout: 264 seconds)
2014-11-23 13:15:22	Supicioso	Thanks davidstone, figured it out.
2014-11-23 13:15:22	<--	zer0def (~zer0def@5.254.147.216) has quit (Ping timeout: 256 seconds)
2014-11-23 13:15:22	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-23 13:15:34	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-23 13:15:37	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2014-11-23 13:15:37	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-23 13:16:04	-->	anders0 (~anders0@213.47.181.68) has joined ##c++
2014-11-23 13:17:04	<--	wulfling (~wulfling@32.97.110.57) has quit
2014-11-23 13:17:19	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-23 13:17:50	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 265 seconds)
2014-11-23 13:20:17	-->	wulfling (~wulfling@32.97.110.57) has joined ##c++
2014-11-23 13:20:44	wulfling	hmmmmm quick question about best practices. Is it alright to pass a class' function as a parameter to another function, or should i use variables?
2014-11-23 13:21:13	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-23 13:21:22	ville	err what?
2014-11-23 13:21:27	IWishIKnew	I don't see why not...
2014-11-23 13:21:39	wulfling	ville?
2014-11-23 13:21:44	IWishIKnew	through a function pointer, I assume?
2014-11-23 13:21:46	wulfling	What don't you get in my question, i can try to clarify.
2014-11-23 13:21:50	ville	wulfling: i don't understand what you are asking
2014-11-23 13:21:55	wulfling	oh
2014-11-23 13:21:59	prime	Following http://ideone.com/RX5o10 and the advice not to use scanf for inputting 3 integer terms in a console separated by whitespaces, I've gotten over one hurdle but now it seems my test for digits is returning alphabet characters as 0's
2014-11-23 13:22:02	wulfling	ville, did you see my pastebin?
2014-11-23 13:22:39	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-23 13:23:14	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 264 seconds)
2014-11-23 13:23:26	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 13:23:39	wulfling	cout << "Invoice1's total: " << invoice1.getInvoiceAmount(invoice1.getQuantity(), invoice1.getPartCost()) << "$" << endl;
2014-11-23 13:23:41	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-23 13:23:43	wulfling	like, is that fine?
2014-11-23 13:24:03	IWishIKnew	that doesn't pass the function.
2014-11-23 13:24:09	IWishIKnew	That passes the result of the function.
2014-11-23 13:24:14	wulfling	oh right
2014-11-23 13:24:27	IWishIKnew	so, to answer you: yes it is fine.
2014-11-23 13:24:37	IWishIKnew	as long as you're ok with those functions being executed.
2014-11-23 13:25:03	wulfling	well, i guess it would run anyways if i passed a variable to getInvoiceAmount, right?
2014-11-23 13:25:24	peterR``	imbue is a great word
2014-11-23 13:25:46	wulfling	err. i mean, if i stored getQuantity()'s and getPartCost()'s values in two separate variables?
2014-11-23 13:25:58	peterR``	and scanf is a reasonable indicator of homework :)
2014-11-23 13:26:11	wulfling	then passed those two variables to getInvoiceAmount?
2014-11-23 13:26:49	IWishIKnew	wulfling:  of course it would work.  Why do you think that wouldn't work?
2014-11-23 13:27:07	wulfling	Im not saying it wouldn't, im trying to underestand what would be preferable
2014-11-23 13:27:16	wulfling	is there an advantage in using one way or the other?
2014-11-23 13:27:26	IWishIKnew	it doesn't really matter when we're talking about passing arguments.
2014-11-23 13:27:33	wulfling	oh ok
2014-11-23 13:27:52	prime	I would love to handle the input being wrong at time of input in a while loop, but that goes out of how it was intended to allow the user to do wrong and notify them afterwards
2014-11-23 13:27:54	wulfling	if i passed variables to getInvoiceAmount would it be more readable?
2014-11-23 13:28:05	IWishIKnew	Except when we talk about efficiency:  is it better to allocate space for an extra variable just to pass an argument, or re-use the result of a function call?
2014-11-23 13:28:10	IWishIKnew	I go for the function call.
2014-11-23 13:28:20	wulfling	Oh ok... Yeah
2014-11-23 13:28:24	IWishIKnew	you would trade performance.
2014-11-23 13:28:40	IWishIKnew	performance vs readability:  go for performance...
2014-11-23 13:28:48	IWishIKnew	just remember to document your code.
2014-11-23 13:28:51	wulfling	Yep
2014-11-23 13:29:01	wulfling	I think this one's pretty self-explanatory
2014-11-23 13:29:06	wulfling	not sure what comments could i add..
2014-11-23 13:29:19	IWishIKnew	it looks like it's readable enough.
2014-11-23 13:29:21	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 13:29:35	-->	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has joined ##c++
2014-11-23 13:29:51	 *	wulfling is learning with Deitel & Deitel's "How to Program in C++ 8th edition"
2014-11-23 13:29:56	-->	skeuomor1 (~skeuomorf@197.32.251.154) has joined ##c++
2014-11-23 13:30:26	IWishIKnew	books aren't the best way to learn C++ unless you have areally good one.
2014-11-23 13:30:34	IWishIKnew	I learned through the internet.
2014-11-23 13:30:43	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-11-23 13:30:54	wulfling	DEitel & Deitel's work is pretty solid i think
2014-11-23 13:31:12	IWishIKnew	I don't know about their work, so you'll have to ask somone who knows.
2014-11-23 13:31:26	wulfling	oh ok
2014-11-23 13:31:30	obiwahn	is there a good book on template programming?
2014-11-23 13:31:46	<--	f10__ (~flo@77.87.48.159) has quit (Ping timeout: 264 seconds)
2014-11-23 13:31:49	IWishIKnew	you mean template meta-programming?
2014-11-23 13:32:03	wulfling	IWishIKnew: i also noticed using the wrong stream operator makes the compiler shit itself. eh
2014-11-23 13:32:05	<--	dh__ (dh@bsd.ee) has quit (Quit: "Fhtagn-Nagh Yog Sothoth")
2014-11-23 13:32:17	-->	dh (dh@bsd.ee) has joined ##c++
2014-11-23 13:32:31	obiwahn	i have started to play with an multidimensional array ... i think i have the grips on basic variadric templates. but i need some examples how to make clever use of them:)
2014-11-23 13:32:38	IWishIKnew	wulfling:  that's because when you use the wrong operator, what you're actually doing is trying to use an operator that doesn't exist for that particular stream.
2014-11-23 13:32:40	obiwahn	IWishIKnew: i guess
2014-11-23 13:33:03	<--	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 255 seconds)
2014-11-23 13:33:36	wulfling	its looking for a 'char' that doesnt exist in that stream right?
2014-11-23 13:33:52	<--	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has quit (Quit: Leaving)
2014-11-23 13:34:08	IWishIKnew	wulfling:  no, the compiler tries to find the declaration of that operator, and doesn't find one.
2014-11-23 13:34:29	wulfling	oh thats what i meant
2014-11-23 13:35:00	<--	j0z (~j0z@unaffiliated/j0z) has quit (Remote host closed the connection)
2014-11-23 13:35:07	-->	zer0def (~zer0def@5.254.151.98) has joined ##c++
2014-11-23 13:35:09	-->	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-11-23 13:35:29	IWishIKnew	actually, what it does is it tries to find the definition.
2014-11-23 13:35:50	IWishIKnew	I don't know what it does after that.
2014-11-23 13:36:01	wulfling	it looks like it tries to.... substitute?
2014-11-23 13:36:09	wulfling	template argument deduction/substition failed:
2014-11-23 13:36:22	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-23 13:37:15	IWishIKnew	for operator?
2014-11-23 13:37:46	wulfling	the next line is
2014-11-23 13:37:59	wulfling	'std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}' is not derived from 'std::basic_istream<_CharT, _Traits>'|
2014-11-23 13:38:04	IWishIKnew	Is this an error you got using the wrong operator.
2014-11-23 13:38:05	IWishIKnew	?
2014-11-23 13:38:08	wulfling	Yea
2014-11-23 13:39:15	IWishIKnew	look up how templates work.
2014-11-23 13:39:34	IWishIKnew	when you implicitly instantiate a template the compiler deduces it's type.
2014-11-23 13:39:43	<--	skeuomor1 (~skeuomorf@197.32.251.154) has quit (Quit: leaving)
2014-11-23 13:39:48	IWishIKnew	in this case, the error means that the compiler could not deduce it's type.
2014-11-23 13:40:55	-->	Rafaelfsilva (~Rafaelfsi@177.184.115.76) has joined ##c++
2014-11-23 13:41:09	<--	Anodl (~Anodl@p4FDEEB22.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-23 13:41:16	wulfling	how does a compiler 'deduce;'?
2014-11-23 13:41:50	IWishIKnew	Finite state machine.
2014-11-23 13:42:01	-->	K-ballo (~sonoio@181.228.59.173) has joined ##c++
2014-11-23 13:42:06	IWishIKnew	There can be only a limited number of options, so the compiler can deduce.
2014-11-23 13:42:24	wulfling	#if's and #else's ?
2014-11-23 13:42:49	IWishIKnew	for example: you passed an integer to a templated function that has three instantiations with three different definitions for each.  If you pass an int and there
2014-11-23 13:43:08	IWishIKnew	s a definition for that type, then it can use it.
2014-11-23 13:43:14	wulfling	oh ok
2014-11-23 13:43:14	IWishIKnew	otherwise, it will give an error.
2014-11-23 13:43:17	IWishIKnew	it's pretty basic.
2014-11-23 13:43:28	 *	wulfling didnt learn about templates yet.
2014-11-23 13:43:40	wulfling	I'm stuck wrapping my head around pointers. :<
2014-11-23 13:43:48	NinjaPenguin	Pointers are easy. :3
2014-11-23 13:43:57	IWishIKnew	wulfling:  http://en.cppreference.com/w/cpp/language/templates
2014-11-23 13:44:12	IWishIKnew	NinjaPenguin:  I remember finding pointers hard to learn initially.
2014-11-23 13:44:21	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-23 13:45:28	NinjaPenguin	Me too but I'm not a smart person.
2014-11-23 13:45:33	IWishIKnew	wulfling:  the key thing to remember is that the pointer itself is not the object it points to.  Example:
2014-11-23 13:45:33	IWishIKnew	int *x = new int; *x = 5;
2014-11-23 13:45:33	IWishIKnew	x is not five, but *x is five.
2014-11-23 13:46:46	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-23 13:46:52	<--	kaleid0 (~kaleid0@2600:1014:b127:c03b:6391:2cee:4cd6:db9d) has quit (Ping timeout: 258 seconds)
2014-11-23 13:47:02	IWishIKnew	another thing to remember:  you only have to delete it if you allocated it with "new".
2014-11-23 13:47:18	IWishIKnew	char *ch = "Hello World!" doesn't need to be deleted.
2014-11-23 13:47:31	NinjaPenguin	const char *
2014-11-23 13:47:36	IWishIKnew	oh, yeah.
2014-11-23 13:47:44	IWishIKnew	well, it's enough to make the point.
2014-11-23 13:47:57	wulfling	hmmmm right
2014-11-23 13:48:00	wulfling	IWishIKnew
2014-11-23 13:48:15	wulfling	Lets say i have an array, called Test[3] = {1, 2, 3 };
2014-11-23 13:48:19	<--	heiner (~heiner@p5B3FE8CB.dip0.t-ipconnect.de) has quit (Disconnected by services)
2014-11-23 13:48:21	NinjaPenguin	const char * <- A pointer to const char. char * const <- a constant pointer to char.
2014-11-23 13:48:23	-->	heiner_ (~heiner@p5B3FF73C.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 13:49:01	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-23 13:49:05	wulfling	if i use std::cout (because we should use 'using namespace std;' apparently) << Marks << endl;
2014-11-23 13:49:18	wulfling	it prints the address of the array's name right?
2014-11-23 13:49:21	NinjaPenguin	Shouldn't use*
2014-11-23 13:49:30	wulfling	Yes, that's what i meant Ninja
2014-11-23 13:49:53	NinjaPenguin	Yes. It prints the array's address. The array decays to a pointer in this case.
2014-11-23 13:50:04	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Client Quit)
2014-11-23 13:50:05	IWishIKnew	wulfling:  your array is called "test", why are you giving "marks" as the argument?
2014-11-23 13:50:14	wulfling	Oh. Confused with the code im looking at.
2014-11-23 13:50:37	wulfling	The array for this example is called Test[]
2014-11-23 13:50:52	wulfling	so let's say that i write cout << &Test[0] << endl;
2014-11-23 13:50:54	NinjaPenguin	I think geordi has an overloaded operator << for arrays though.
2014-11-23 13:51:09	NinjaPenguin	<< a; int a[]{1, 2, 3};
2014-11-23 13:51:09	geordi	{1, 2, 3}
2014-11-23 13:51:13	NinjaPenguin	Yush.
2014-11-23 13:51:25	wulfling	Is it normal it's the same address for the first value and and the array's name?
2014-11-23 13:51:32	NinjaPenguin	Yes.
2014-11-23 13:51:41	wulfling	Is there a reason for that?
2014-11-23 13:51:45	NinjaPenguin	Yes.
2014-11-23 13:51:47	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-23 13:51:54	wulfling	Could i know what that reason is please?
2014-11-23 13:52:07	NinjaPenguin	That's where the array starts.
2014-11-23 13:52:12	IWishIKnew	geordi:  {int x[]{1, 2, 3, 4, 5}; std::cout<< x<< std::endl;}
2014-11-23 13:52:12	geordi	{1, 2, 3, 4, 5}
2014-11-23 13:52:16	IWishIKnew	:\
2014-11-23 13:52:29	NinjaPenguin	std::endl? Seriously?
2014-11-23 13:52:30	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-23 13:52:41	IWishIKnew	geordi:  {int x[]{1, 2, 3, 4, 5}; int *y(x); std::cout<< y<< std::endl;}
2014-11-23 13:52:41	geordi	0x7fffbd572900
2014-11-23 13:52:48	-->	LM741 (~LM741@65.28.169.170) has joined ##c++
2014-11-23 13:52:58	IWishIKnew	geordi:  {int x[]{1, 2, 3, 4, 5}; int *y(x); std::cout<< y[0]<< std::endl;}
2014-11-23 13:52:59	geordi	1
2014-11-23 13:53:03	IWishIKnew	geordi:  {int x[]{1, 2, 3, 4, 5}; int *y(x); std::cout<< y<< std::endl;}
2014-11-23 13:53:03	geordi	0x7fff1ccb4060
2014-11-23 13:53:05	IWishIKnew	:)
2014-11-23 13:53:06	wulfling	wait, geordi is like, a c++
2014-11-23 13:53:10	wulfling	compiler?
2014-11-23 13:53:13	IWishIKnew	yep.
2014-11-23 13:53:13	NinjaPenguin	Yes.
2014-11-23 13:53:14	TinoDidriksen	Yes
2014-11-23 13:53:17	NinjaPenguin	<< help
2014-11-23 13:53:18	geordi	Mini-manual:  http://www.eelis.net/geordi/
2014-11-23 13:53:20	wulfling	Woah that's nice
2014-11-23 13:53:22	-->	kkragoth (~kkragoth@077222244047.warszawa.vectranet.pl) has joined ##c++
2014-11-23 13:53:23	-->	atod_ (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-23 13:53:31	 *	wulfling wonders how well it handles infinite loops
2014-11-23 13:53:39	NinjaPenguin	Oh you can try anything you want.
2014-11-23 13:53:39	TinoDidriksen	It handles all abuse very well.
2014-11-23 13:53:42	NinjaPenguin	It's not easy to break it.
2014-11-23 13:53:44	TinoDidriksen	#geordi
2014-11-23 13:53:48	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-23 13:53:53	wulfling	tino, is that aroom?
2014-11-23 13:53:55	IWishIKnew	geordi:  {while(true){std::cout<< "Hello!";} }
2014-11-23 13:54:00	wulfling	oh
2014-11-23 13:54:03	IWishIKnew	lol
2014-11-23 13:54:06	TinoDidriksen	Yes, #geordi is where you go to test code.
2014-11-23 13:54:06	geordi	Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!He
2014-11-23 13:54:10	wulfling	LOL
2014-11-23 13:54:22	-->	rishin458 (~user3418@115.185.97.105) has joined ##c++
2014-11-23 13:54:28	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-23 13:54:32	IWishIKnew	I have to leave.
2014-11-23 13:54:34	IWishIKnew	cya!
2014-11-23 13:54:38	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-11-23 13:54:41	wulfling	laters i- oops
2014-11-23 13:54:46	davidstone	Why is the class called std::reference_wrapper instead of std::reference
2014-11-23 13:54:58	davidstone	Just because that was the boost name?
2014-11-23 13:55:08	NinjaPenguin	Geordi has a timer and it blocks system calls and responds to crashes.
2014-11-23 13:55:09	wulfling	lol
2014-11-23 13:55:30	wulfling	system calls? like shutting down a system?
2014-11-23 13:55:30	NinjaPenguin	Because it's a wrapper, not a reference?
2014-11-23 13:55:35	NinjaPenguin	There's already std::ref, IIRC.
2014-11-23 13:55:43	davidstone	std::ref is a function that returns a std::reference_wrapper
2014-11-23 13:55:52	davidstone	We need the function to use type deduction for the template parameter
2014-11-23 13:56:01	davidstone	std::ref(T &) returns std::reference_wrapper<T>
2014-11-23 13:56:03	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-23 13:56:07	NinjaPenguin	wulfling: Yes, basically.
2014-11-23 13:56:28	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-23 13:58:03	wulfling	geidi: int x; std::cout << x;
2014-11-23 13:58:06	wulfling	ughrf
2014-11-23 13:58:10	wulfling	geordi: int x; std::cout << x;
2014-11-23 13:58:10	geordi	error: 'cout' in namespace 'std' does not name a type
2014-11-23 13:58:19	wulfling	whut
2014-11-23 13:58:43	NinjaPenguin	Read the manual. :)
2014-11-23 13:58:48	wulfling	geordi: int x; std::cout<<x;
2014-11-23 13:58:48	geordi	Same error.
2014-11-23 13:58:55	davidstone	lol
2014-11-23 13:58:57	NinjaPenguin	And please test geordi in #geordi
2014-11-23 13:58:58	wulfling	ha.
2014-11-23 13:59:02	wulfling	"Same error" lol.
2014-11-23 13:59:03	wulfling	ok
2014-11-23 14:00:49	-->	nefarious (~Nef@unaffiliated/nefarious) has joined ##c++
2014-11-23 14:01:12	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-23 14:01:22	wulfling	oh std is implicitely used
2014-11-23 14:01:37	NinjaPenguin	Nah, geordi uses "using namespace std;"
2014-11-23 14:01:38	<--	anders0 (~anders0@213.47.181.68) has quit (Read error: Connection reset by peer)
2014-11-23 14:03:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 14:03:42	King_Hual	i am sorry to hear that
2014-11-23 14:03:56	NinjaPenguin	It's a good thing.
2014-11-23 14:04:25	<--	phax (~phax@unaffiliated/phax) has quit (Quit: phax)
2014-11-23 14:04:28	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-23 14:04:54	o]	no. it kills babies
2014-11-23 14:04:58	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-23 14:04:58	King_Hual	it's bad practice
2014-11-23 14:05:08	o]	your dick will fly off
2014-11-23 14:05:15	-->	italys (~adamr@71-34-89-64.ptld.qwest.net) has joined ##c++
2014-11-23 14:05:40	NinjaPenguin	King_Hual: For an IRC bot, it's acceptable.
2014-11-23 14:05:47	wulfling	NinjaPenguin
2014-11-23 14:06:04	<--	Th0mas (~Th0mas@2a01:7c8:aaaf:2cd:f5be:f3a1:8c0a:5edc) has quit (Quit: Bye)
2014-11-23 14:06:05	davidstone	Nobody is writing an entire system for georgi
2014-11-23 14:06:11	davidstone	Brevity is probably more important here
2014-11-23 14:06:11	wulfling	the FAQ shows it. "Omits the otherwise implicitely added "using namespace std;" "
2014-11-23 14:06:14	davidstone	*geordi
2014-11-23 14:06:20	<--	lamefun (~lamefun2@5.167.185.70) has quit (Quit: Leaving)
2014-11-23 14:06:20	o]	no. it is WRONG
2014-11-23 14:06:24	NinjaPenguin	wulfling: Read it again.
2014-11-23 14:06:31	-->	anders0 (~anders0@213.47.181.68) has joined ##c++
2014-11-23 14:06:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 14:06:59	-->	Th0mas (~Th0mas@th0mas.nl) has joined ##c++
2014-11-23 14:07:24	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-23 14:07:40	wulfling	Don't use std:: qualification; namespace std has been using'd.
2014-11-23 14:08:06	o]	King_Hual: help them to understand!!!
2014-11-23 14:08:34	<--	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has quit (Quit: mdkess)
2014-11-23 14:08:52	-->	kyoshero (~kyoshero@112.198.79.139) has joined ##c++
2014-11-23 14:09:39	wulfling	NinjaPenguin, what am i missing?
2014-11-23 14:09:41	King_Hual	sry o] i warned them
2014-11-23 14:09:46	King_Hual	let them swim in ignorance
2014-11-23 14:09:48	King_Hual	ignorance is bliss
2014-11-23 14:10:05	 *	JamesNZ floats lazily
2014-11-23 14:10:14	wulfling	brb
2014-11-23 14:10:17	<--	wulfling (~wulfling@32.97.110.57) has left ##c++
2014-11-23 14:10:23	NinjaPenguin	wulfling> Don't use std:: qualification; namespace std has been using'd.
2014-11-23 14:10:26	NinjaPenguin	Why didn't anybody !grab that?!
2014-11-23 14:10:29	Oxyd	geordi --no-using-std { cout << "This will fail."; }
2014-11-23 14:10:29	geordi	error: 'cout' was not declared in this scope
2014-11-23 14:10:44	Oxyd	If you do insist on not using namespace std;, geordi does have you covered.
2014-11-23 14:11:12	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 255 seconds)
2014-11-23 14:12:04	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-23 14:12:28	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-23 14:12:49	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-23 14:13:03	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Max SendQ exceeded)
2014-11-23 14:13:09	<--	mikroflops (~yogurt@178.174.137.62) has quit (Ping timeout: 272 seconds)
2014-11-23 14:14:07	MrFlibble	hi peeps
2014-11-23 14:14:07	-->	woot__ (~quassel@91-115-253-157.adsl.highway.telekom.at) has joined ##c++
2014-11-23 14:14:07	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-23 14:14:12	-->	woot___ (~quassel@91-115-253-157.adsl.highway.telekom.at) has joined ##c++
2014-11-23 14:15:03	<--	rishin458 (~user3418@115.185.97.105) has quit (Quit: TurboIRC for Android. Available @ Google Play.)
2014-11-23 14:16:01	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Remote host closed the connection)
2014-11-23 14:16:54	-->	mikroflops (~yogurt@178.174.137.62) has joined ##c++
2014-11-23 14:17:11	marchelzo_	Can anyone help me this? I've been trying to make it work for while now. Other channels don't seem to very active. http://codepad.org/Y3zOJaiP
2014-11-23 14:17:26	marchelzo_	s/to/to be/
2014-11-23 14:17:30	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-23 14:17:31	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-23 14:17:37	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-23 14:17:45	<--	Voidwalkr (Voidwalkr@74.73.43.211) has quit
2014-11-23 14:17:59	lh_mouse	!give marchelzo_ topic
2014-11-23 14:18:00	nolyc	marchelzo_: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-23 14:18:50	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 240 seconds)
2014-11-23 14:19:02	marchelzo_	lh_mouse: fair enough
2014-11-23 14:19:36	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-23 14:19:46	<--	woot___ (~quassel@91-115-253-157.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2014-11-23 14:19:46	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-23 14:19:51	NinjaPenguin	My god that is ugly.
2014-11-23 14:20:33	-->	lh_mouse_ (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-23 14:20:34	marchelzo_	NinjaPenguin: what do you mean?
2014-11-23 14:20:44	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Disconnected by services)
2014-11-23 14:20:50	NinjaPenguin	There are no empty lines.
2014-11-23 14:20:50	--	lh_mouse_ is now known as lh_mouse
2014-11-23 14:20:56	NinjaPenguin	IT's just a big, ugly pile.
2014-11-23 14:21:23	NinjaPenguin	And you could most likely break it down to smaller functions.
2014-11-23 14:21:55	MrFlibble	That's all my settings types wired up to widgets in my new plugin settings system. Qt FTW.
2014-11-23 14:23:45	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-23 14:23:51	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-23 14:23:52	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-23 14:24:50	-->	endomancer (~endomance@101.191.33.121) has joined ##c++
2014-11-23 14:25:39	<--	nyqiust (~nyquist@5.63.146.228) has quit (Ping timeout: 264 seconds)
2014-11-23 14:26:01	<--	Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-11-23 14:26:50	<--	kriskropd (~kris@unaffiliated/kriskropd) has quit (Ping timeout: 250 seconds)
2014-11-23 14:26:55	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 255 seconds)
2014-11-23 14:27:32	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-23 14:27:34	<--	yeticry (~yeticry@60.168.84.4) has quit (Ping timeout: 244 seconds)
2014-11-23 14:29:06	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-11-23 14:29:35	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-23 14:29:54	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 14:30:05	-->	derer (~derer@192.210.214.197) has joined ##c++
2014-11-23 14:31:20	<--	elnn (~elnn@175.125.92.57) has quit (Remote host closed the connection)
2014-11-23 14:31:37	-->	elnn (~elnn@175.125.92.57) has joined ##c++
2014-11-23 14:33:35	-->	Gama11 (~quassel@p5DC1F3C3.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 14:33:45	<--	Artpicre (~Artpicre@unaffiliated/artpicre) has quit (Ping timeout: 250 seconds)
2014-11-23 14:34:02	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 14:34:31	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-23 14:34:37	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 255 seconds)
2014-11-23 14:35:16	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-23 14:35:33	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-11-23 14:35:49	peterR``	I do a lot of push_backs onto a vector - what's the best way to reverse entries I just pushed?
2014-11-23 14:36:31	-->	Artpicre (~Artpicre@vit94-10-78-240-193-57.fbx.proxad.net) has joined ##c++
2014-11-23 14:36:33	peterR``	basically how do I get the right iterators to call std::reverse?
2014-11-23 14:36:38	rkreis	peterR``, http://en.cppreference.com/w/cpp/algorithm/reverse
2014-11-23 14:36:56	rkreis	just use .begin() and .end()
2014-11-23 14:37:03	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 240 seconds)
2014-11-23 14:37:03	jesyspa	Save the size before pushing, then use that.
2014-11-23 14:37:21	peterR``	.begin is wrong since it may not be empty
2014-11-23 14:37:32	MrFlibble	why?
2014-11-23 14:37:35	MrFlibble	what?
2014-11-23 14:38:16	marchelzo_	.being() + .size() then
2014-11-23 14:38:46	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-11-23 14:39:06	-->	Skiez (~Skiez@105.155.3.22) has joined ##c++
2014-11-23 14:39:13	MrFlibble	std::reverse(v.begin(), v.end());
2014-11-23 14:39:57	peterR``	MrFlibble - said vector was not empty before I started pushing and I want to reverse only what I pushed
2014-11-23 14:40:18	peterR``	storing the size looks good though
2014-11-23 14:40:34	MrFlibble	such question is off-topic.
2014-11-23 14:41:08	MrFlibble	##c++-general for specific algorithm help.
2014-11-23 14:42:09	-->	baffo32 (18273d46@gateway/web/freenode/ip.24.39.61.70) has joined ##c++
2014-11-23 14:42:32	<--	B-Knock (~bushdio@pool-100-40-112-200.prvdri.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-23 14:42:46	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-23 14:43:14	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 14:43:19	-->	B-Knock (~bushdio@pool-100-40-112-200.prvdri.fios.verizon.net) has joined ##c++
2014-11-23 14:44:19	Skiez	hey ppl
2014-11-23 14:45:20	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-23 14:47:37	<--	_war10ck_ (~sayantan@106.51.131.135) has quit (Quit: leaving)
2014-11-23 14:47:53	-->	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 14:48:03	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-23 14:48:14	Skiez	can somebody take a look at this : http://ideone.com/DhB3WP
2014-11-23 14:49:16	-->	yuung (~john@71-223-24-245.phnx.qwest.net) has joined ##c++
2014-11-23 14:49:25	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-23 14:49:51	-->	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-23 14:50:14	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2014-11-23 14:50:29	yuung	i have a class inheriting from 2 classes with the same function name, and i need to use a specific class' function in the child class.  i don't suppose there's a way to specify which class I want to use
2014-11-23 14:50:53	yuung	and i know it's an indicator of bad design, but i wrote neither of these classes (using QT and SFML)
2014-11-23 14:51:11	baffo32	yuung: ParentClass::memberfunc(args);
2014-11-23 14:51:38	baffo32	and yes you should wrap functionality rather than confusingly inheriting from two classes that overlap
2014-11-23 14:51:41	baffo32	=)
2014-11-23 14:52:04	yuung	baffo32, thanks!  that worked, i didn't think that syntax would work.
2014-11-23 14:52:22	yuung	baffo32, i'm considering just changing the function name in the SFML library and rebuilding XD
2014-11-23 14:52:46	PSvils	using variadic templates, is there a way to generate a set of methods for each template passed? this seems to be down the macro road, but not sure how I could accomplish something like this. The use case is that I need to have a class that manages a vector for each template type passed.
2014-11-23 14:53:11	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-23 14:53:12	PSvils	yuung: I would say the multiple inheritance is the bad design : P
2014-11-23 14:53:20	<--	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2014-11-23 14:53:29	yuung	PSvils, i know - i'm following a tutorial that does it :(
2014-11-23 14:53:51	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 255 seconds)
2014-11-23 14:53:59	-->	deekej (~deekej@23-237.197-178.cust.bluewin.ch) has joined ##c++
2014-11-23 14:54:05	yuung	and the frosting on top:  the tutorial uses outdated versions of SFML & QT so back when it was written it would have made sense.
2014-11-23 14:54:28	yuung	anyways, thanks for the help!
2014-11-23 14:55:29	PSvils	baffo32: sorry to poke directly - have any thoughts on my variadic templates question? :)
2014-11-23 14:55:54	baffo32	PSvils I feel pretty confident you can do that but my brain is fuzzing trying to figure out for sure how
2014-11-23 14:56:11	baffo32	PSvils also I assume you mean for each _type_ passed
2014-11-23 14:56:17	PSvils	yep :)
2014-11-23 14:56:19	baffo32	i'm thinking down the line of all the member funcs being the same name
2014-11-23 14:56:20	PSvils	typenames
2014-11-23 14:56:40	PSvils	that could be possible, it's guaranteed each typename will be unique.
2014-11-23 14:56:59	PSvils	guaranteed -> there should be an error if the same type is passed more than once.
2014-11-23 14:57:20	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-23 14:57:40	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 14:57:42	baffo32	then you could just have the memberfunc templated on hte type and let the user of the class handle it ...
2014-11-23 14:57:44	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-23 14:58:07	baffo32	I bet there's a rock-awesome solution I'm not familiar with
2014-11-23 14:58:08	PSvils	on the type passed?
2014-11-23 14:58:13	PSvils	not sure what you mean :)
2014-11-23 14:58:21	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-23 14:58:38	baffo32	so like MyClass<double,float,Crocodile> object; object.memberfunc<Crocodile>();
2014-11-23 14:59:25	PSvils	and in that case - how for example would inside memberfunc I get the container that was made for Crocodile from the class constructor?
2014-11-23 14:59:30	PSvils	mmm...not sure if I'm making sense
2014-11-23 14:59:58	baffo32	use another templated member function inside the constructor
2014-11-23 15:00:18	-->	koolkalang (827f30f3@gateway/web/freenode/ip.130.127.48.243) has joined ##c++
2014-11-23 15:00:45	PSvils	baffo32: can I iterate the templates passed?
2014-11-23 15:00:49	PSvils	template types*
2014-11-23 15:00:57	baffo32	PSvils in c++11 you can
2014-11-23 15:01:36	PSvils	well this indeed solves my problems! :)
2014-11-23 15:01:42	PSvils	thanks for the help!
2014-11-23 15:04:03	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 15:05:09	<--	LM741 (~LM741@65.28.169.170) has quit (Ping timeout: 264 seconds)
2014-11-23 15:05:54	-->	snyp (~Snyp@150.129.132.66) has joined ##c++
2014-11-23 15:05:56	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-23 15:06:13	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-23 15:06:49	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-23 15:07:53	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Quit: Leaving...)
2014-11-23 15:11:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 15:12:13	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 250 seconds)
2014-11-23 15:14:08	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-23 15:14:25	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-23 15:14:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 15:15:00	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-23 15:15:23	<--	brennanos (~brennanos@c-76-17-201-40.hsd1.mn.comcast.net) has quit (Quit: Vision[0.9.7-H-090423]: i've been blurred!)
2014-11-23 15:16:35	-->	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has joined ##c++
2014-11-23 15:17:31	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-23 15:17:48	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Quit: leaving)
2014-11-23 15:18:33	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-23 15:18:39	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-23 15:20:05	<--	baffo32 (18273d46@gateway/web/freenode/ip.24.39.61.70) has quit (Quit: Page closed)
2014-11-23 15:20:29	-->	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-23 15:21:33	-->	Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-11-23 15:23:34	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 15:24:05	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-23 15:24:23	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 258 seconds)
2014-11-23 15:24:43	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-23 15:25:53	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-23 15:26:32	micom	I AM C++ PROGRAMMER
2014-11-23 15:26:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 15:27:29	Sculptor	congrats
2014-11-23 15:27:35	MrFlibble	micom: don't shout.
2014-11-23 15:27:35	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2014-11-23 15:28:11	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-23 15:28:45	 *	o11c hands micom a bucket of UB
2014-11-23 15:29:24	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ixonksxqmzotxukj) has joined ##c++
2014-11-23 15:29:30	-->	raray (~quassel@CM-POP9-1162.catv.wtnet.de) has joined ##c++
2014-11-23 15:29:51	Sculptor	maybe that's his pep talk
2014-11-23 15:31:04	micom	 o11c dont worry i have got undefined behavior sanitizer from GCC. It will catch all of them.
2014-11-23 15:32:12	o11c	hah, as it
2014-11-23 15:32:14	o11c	*if
2014-11-23 15:34:21	-->	komarov (~komarov@95-55-14-247.dynamic.avangarddsl.ru) has joined ##c++
2014-11-23 15:35:03	-->	Sos (Sos@d181-38.icpnet.pl) has joined ##c++
2014-11-23 15:36:07	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 244 seconds)
2014-11-23 15:38:22	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-23 15:38:41	<--	woot__ (~quassel@91-115-253-157.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2014-11-23 15:39:51	-->	immibis (~ChatZill1@125-237-204-205.jetstream.xtra.co.nz) has joined ##c++
2014-11-23 15:39:57	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has joined ##c++
2014-11-23 15:39:57	-->	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has joined ##c++
2014-11-23 15:40:37	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-23 15:40:50	<--	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 258 seconds)
2014-11-23 15:41:16	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-11-23 15:41:49	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-23 15:42:16	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-23 15:43:18	<--	rendar (~I@host147-176-dynamic.22-79-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2014-11-23 15:44:21	marchelzo_	is *set.begin() always the most recently added element for a std::set?
2014-11-23 15:44:37	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-23 15:45:04	hs_	isn't set sorted?
2014-11-23 15:45:26	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 15:45:38	marchelzo_	oh yeah. nevermind T_T
2014-11-23 15:48:38	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 15:49:04	-->	scdarius (~darka@178.62.68.191) has joined ##c++
2014-11-23 15:49:54	-->	rendar (~I@host147-176-dynamic.22-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-23 15:50:23	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-23 15:50:53	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-23 15:50:53	o11c	.insert() returns an iterator
2014-11-23 15:51:07	o11c	or a pair<iterator, bool>
2014-11-23 15:52:08	<--	scai (~scai@p4FF0FD1B.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-23 15:52:21	<--	rvchangue (~rvchangue@unaffiliated/rvchangue) has quit (Ping timeout: 272 seconds)
2014-11-23 15:52:45	-->	safinaskar (~user@188.234.0.9) has joined ##c++
2014-11-23 15:53:42	-->	rvchangue (~rvchangue@unaffiliated/rvchangue) has joined ##c++
2014-11-23 15:54:05	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-23 15:55:44	MrFlibble	C++11 lambdas are great; saving so much time.
2014-11-23 15:56:26	-->	snakenerd (~Thunderbi@177.41.228.72) has joined ##c++
2014-11-23 15:56:36	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-23 15:56:45	lh_mouse	C++14 lambdas are greater.
2014-11-23 15:57:27	-->	Skiez_ (~Skiez@105.155.3.22) has joined ##c++
2014-11-23 15:58:02	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-23 15:58:04	MrFlibble	that auto thing?
2014-11-23 15:58:08	MrFlibble	not needed that feature yet
2014-11-23 15:59:06	<--	astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-23 16:00:37	Supicioso	Could someone take a look at this and see what I'm doing wrong? http://ideone.com/Qc2aTt : As seen on line 45, the value is always empty. Inaccessable to be more exact. I can't figure out why it's not being assigned.
2014-11-23 16:00:49	<--	junaidnaseer2 (~junaid@212.101.51.237) has quit (Ping timeout: 264 seconds)
2014-11-23 16:01:00	<--	Skiez (~Skiez@105.155.3.22) has quit (Ping timeout: 256 seconds)
2014-11-23 16:01:13	<--	fujiro (~fujiro@public138959.cdma.centertel.pl) has quit (Remote host closed the connection)
2014-11-23 16:01:25	lh_mouse	!not a testcase
2014-11-23 16:01:27	nolyc	Stop! A testcase must 1) be self-contained and 2) reproduce the problem. Don't paste another link here until: I) you've pasted your testcase to http://ideone.com, II) there are no irrelevant compile errors and III) it reproduces the problem. See the testcase checklist at http://eel.is/c++/testcase/
2014-11-23 16:01:28	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-23 16:01:38	<--	adamm (~adamm@debian/developer/adamm) has quit (Remote host closed the connection)
2014-11-23 16:01:45	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-23 16:02:31	lh_mouse	oh, hmm. horrible code.
2014-11-23 16:02:36	hs_	your operator[] returns a Key_Value
2014-11-23 16:02:52	<--	snyp (~Snyp@150.129.132.66) has quit (Quit: WeeChat 1.0.1)
2014-11-23 16:02:55	hs_	not a reference..
2014-11-23 16:03:12	<--	snakenerd (~Thunderbi@177.41.228.72) has quit (Quit: snakenerd)
2014-11-23 16:03:44	hs_	and why all that memcpy nonsense to get a string to a char*?
2014-11-23 16:03:46	hs_	just use a string..
2014-11-23 16:04:23	o11c	MrFlibble: also the extended captures
2014-11-23 16:05:32	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-23 16:05:49	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-23 16:07:03	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 244 seconds)
2014-11-23 16:08:12	-->	wilornel_ (~ubuntu@ec2-54-68-25-61.us-west-2.compute.amazonaws.com) has joined ##c++
2014-11-23 16:09:16	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 16:09:53	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 16:10:43	Supicioso	Thanks hs_ I'll try that. I try to use char* because I find myself having to convert them back to char* from string eventually anyway.
2014-11-23 16:11:39	<--	kkragoth (~kkragoth@077222244047.warszawa.vectranet.pl) has quit (Quit: Leaving)
2014-11-23 16:11:44	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-23 16:11:45	<--	kaffeetrauma (~Thunderbi@5.147.4.15) has quit (Quit: kaffeetrauma)
2014-11-23 16:13:48	wilornel_	Hey guys! I have a struct that inherits from another one, but has an additional member: `struct B: public A{ public: long double additional_member; B(){ additional_member = 0; }; B(additional_member); };` When I cast an A to a B, the `additional_member` member is non-zero. Am I doing this correctly?
2014-11-23 16:13:48	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 16:14:52	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 16:14:59	lh_mouse	You can't `cast` an A to a B. You can only `cast` an A & to a B & or an A * to B *.
2014-11-23 16:15:00	-->	m477 (~quassel@adsg37.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-23 16:16:21	wilornel_	lh_mouse: That's what I am doing. Sorry for not being clear
2014-11-23 16:16:23	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-23 16:16:27	wilornel_	So, I am going from A * to B *
2014-11-23 16:16:45	<--	SparkDog (spark@dog.thdo.woaf.net) has quit (Quit: 16:23 -!- Irssi: Uptime: 516d 23h 6m 52s)
2014-11-23 16:16:54	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 255 seconds)
2014-11-23 16:17:12	wilornel_	Why am I getting a non-zero value in my member?
2014-11-23 16:17:13	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 16:17:16	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-23 16:17:20	yuung	can anyone with SFML experience tell me why my renderWindow.draw(sprite) is making my program crash witha  segfault?
2014-11-23 16:18:09	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-23 16:18:18	lh_mouse	Is your A * pointing to an object of type B or a type that derives from B?
2014-11-23 16:19:27	wilornel_	lh_mouse it points to a type that derives from A
2014-11-23 16:19:40	<--	hamster (~jacob@nobelnet.dk) has quit (Ping timeout: 255 seconds)
2014-11-23 16:20:03	lh_mouse	wilornel_, then you get UB.
2014-11-23 16:20:07	wilornel_	UB?
2014-11-23 16:20:10	lh_mouse	!ub
2014-11-23 16:20:12	nolyc	Undefined behavior results when programs attempt to do things for which the standard defines no semantics, and requires no diagnostic either. Examples include dereferencing invalid pointers and dividing by zero. Executing such programs may cause them to produce incorrect results, crash, silently "work", or even format the hard drive.
2014-11-23 16:20:14	<--	cubed_root (~cubed_roo@c-69-242-104-56.hsd1.nj.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-23 16:20:14	-->	1JTAA3UEH (~SiGe@usc-secure-wireless-088-072.usc.edu) has joined ##c++
2014-11-23 16:20:20	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Quit: Bye!)
2014-11-23 16:20:21	wilornel_	Also, that new type that derives from A does not add any members
2014-11-23 16:20:23	wilornel_	ach... : |
2014-11-23 16:20:34	wilornel_	I understand
2014-11-23 16:20:58	lh_mouse	If I were the guy who wrote your compiler I would format your hard drive.
2014-11-23 16:21:15	wilornel_	hahah
2014-11-23 16:21:23	wilornel_	or just cleanup the RAM, no?
2014-11-23 16:21:47	lh_mouse	Don't play with UB.
2014-11-23 16:21:48	wilornel_	I guess the program was looking in an address where there was nothing relevant defined
2014-11-23 16:21:52	wilornel_	yeah I get it
2014-11-23 16:22:00	wilornel_	so, should I put the `additional_member` in A ?
2014-11-23 16:22:17	<--	safinaskar (~user@188.234.0.9) has quit (Read error: Connection reset by peer)
2014-11-23 16:22:25	lh_mouse	yuung, try ##c++-general.
2014-11-23 16:22:32	wilornel_	yuung: java.com/en/download/apple_manual.jsp
2014-11-23 16:22:43	wilornel_	I meant : http://www.cplusplus.com/forum/general/39165/
2014-11-23 16:22:51	wilornel_	or even: http://en.sfml-dev.org/forums/index.php?topic=8802.0
2014-11-23 16:23:58	yuung	wilornel_, lh_mouse, ty
2014-11-23 16:24:16	wilornel_	so lh_mouse. How do you think I should fix this?
2014-11-23 16:25:53	-->	ppl (~ppl@76.4.244.86) has joined ##c++
2014-11-23 16:27:53	lh_mouse	wilornel_, you can't `fix` it. You are casting a pointer, which isn't pointing to B, to point to B, which is wrong in most cases. Consider rewriting your code.
2014-11-23 16:28:18	wilornel_	lh_mouse: yeah, how should I rework my structs?
2014-11-23 16:28:59	-->	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has joined ##c++
2014-11-23 16:30:33	DanteLA	Can I drop-in-and-replace 'bool' with 'char' in code and have everything still working, probably even with identical machine code?
2014-11-23 16:31:21	DanteLA	(well I did that and everything seems to work, but I was wondering if there are some pitfalls)
2014-11-23 16:32:28	-->	Bleakwise (~Bleakwise@2602:30a:c0d9:a259:c89e:e08a:1b10:b697) has joined ##c++
2014-11-23 16:32:48	DanteLA	To me it seems the only difference is to allow more states in that one byte
2014-11-23 16:32:54	<--	xenoph (~siaran@89.11.172.72) has quit (Quit: Leaving)
2014-11-23 16:33:07	-->	phax (~phax@unaffiliated/phax) has joined ##c++
2014-11-23 16:33:13	o11c	DanteLA: assuming it never stores-and-then-compares states other than 0 or 1, yeah
2014-11-23 16:33:33	o11c	DanteLA: though I think on the CPU 'bool' is 8-bit and 'char' is 64-bit
2014-11-23 16:33:40	o11c	so probably not identical machine code
2014-11-23 16:33:56	DanteLA	o11c: I think C++ standard says char is 8-bits
2014-11-23 16:34:03	o11c	no, it doesn't
2014-11-23 16:34:10	o11c	but that's not what I'm talkingabout anyways
2014-11-23 16:34:23	o11c	if you read the AMD64 architecture ABI guide
2014-11-23 16:34:30	o11c	it tells how C types are extended in registers
2014-11-23 16:34:55	o11c	and I'm pretty sure char gets extended to 64-bits (i.e. a whole register) wherease bool only gets extended to 8-bits
2014-11-23 16:35:08	DanteLA	hmm. Ok I have to check this out
2014-11-23 16:35:22	o11c	(note that if 'int8_t' exists in <stdint>, *then* the C++ standard guarantees char is 8 bits)
2014-11-23 16:35:31	DanteLA	At least the storage of char should be 1 byte according to the standard, I think
2014-11-23 16:35:35	o11c	right
2014-11-23 16:35:46	o11c	but 1 byte may be 64-bits for all the standard cares
2014-11-23 16:38:00	<--	raray (~quassel@CM-POP9-1162.catv.wtnet.de) has quit (Remote host closed the connection)
2014-11-23 16:38:53	Supicioso	\o/ Figured it out.
2014-11-23 16:39:40	<--	ppl (~ppl@76.4.244.86) has left ##c++
2014-11-23 16:41:40	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 16:41:51	Twey	Or seven
2014-11-23 16:42:21	o11c	Twey: no, at least 8
2014-11-23 16:42:59	lh_mouse	DanteLA, no.
2014-11-23 16:43:25	lh_mouse	geordi, << static_cast<bool>(65), static_cast<char>(65);
2014-11-23 16:43:26	geordi	true, A
2014-11-23 16:43:39	Twey	o11c: Really?  There used to be some machines with seven-bit bytes.  I think C supported them.
2014-11-23 16:43:54	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 16:44:03	o11c	not ansi C for sure
2014-11-23 16:44:12	lh_mouse	geordi, << static_cast<bool>(256), static_cast<char>(256); // better
2014-11-23 16:44:12	geordi	true,
2014-11-23 16:44:39	o11c	Twey: 9 bit bytes were a thing though
2014-11-23 16:44:58	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-23 16:45:03	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 16:45:28	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-23 16:46:36	Twey	o11c: Got a standard reference?  I don't remember any minimum size for bytes in the C standard
2014-11-23 16:46:39	wilornel_	Can I have a vector containing classes that inherit from A? I do not want to cast the elements to A though
2014-11-23 16:47:12	wilornel_	** or a vector that contains pointers pointing to classes that inherit from A...
2014-11-23 16:47:39	DanteLA	lh_mouse: What do those lines prove?
2014-11-23 16:48:04	lh_mouse	[05:37:38] <DanteLA> Can I drop-in-and-replace 'bool' with 'char' in code and have everything still working, probably even with identical machine code? // nope
2014-11-23 16:48:14	hs_	Twey, there are rules about representative capabilities of char
2014-11-23 16:48:47	hs_	(but dragon age is fun so I can't look for them now)
2014-11-23 16:48:50	lh_mouse	if you cast 256 to bool you get true, but if you cast 256 to char you get zero thus false.
2014-11-23 16:48:59	o11c	Twey: C99 5.2.4.2.1 ? number of bits for smallest object that is not a bit-field (byte) CHAR_BIT  8
2014-11-23 16:49:02	<--	gelignite (~gelignite@i528C3F22.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-23 16:49:33	DanteLA	lh_mouse: No, I mean you have code that uses bool and you replace that with a char
2014-11-23 16:50:14	o11c	same in C89 (but the only pdf I have of that is a crappy scan)
2014-11-23 16:50:26	Twey	wilornel_: No, but you can have a vector of A&
2014-11-23 16:50:55	Twey	wilornel_: The elements of a vector all have to have the same size, so they all have to be of the same type
2014-11-23 16:51:06	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-23 16:51:07	wilornel_	ach..
2014-11-23 16:51:12	lh_mouse	DanteLA, why do you need to do that?
2014-11-23 16:51:34	wilornel_	Twey: The thing is, the classes that inherit from A add some members...
2014-11-23 16:51:46	wilornel_	maybe I should be using an... interface instead?
2014-11-23 16:51:55	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Remote host closed the connection)
2014-11-23 16:52:27	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-23 16:53:03	wilornel_	Twey: (And I want to keep those members)
2014-11-23 16:53:08	-->	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has joined ##c++
2014-11-23 16:53:34	o11c	gasp
2014-11-23 16:53:46	o11c	C++98 has an unnecessary right-recursive grammar rule!
2014-11-23 16:53:47	DanteLA	lh_mouse: Because I have code that had a bool state for object being visible or not visible and I needed more states. Making that variable char instead means objects stay the same size, but I now have more states
2014-11-23 16:53:58	Twey	o11c: Ah, nice!  Thanks
2014-11-23 16:54:02	o11c	cv-qualifier-seq: cv-qualifier cv-qualifier-seq_opt
2014-11-23 16:54:57	lh_mouse	DanteLA, use a new name and comment the old one out, then check every line where the old one is used, and rewrite it.
2014-11-23 16:54:59	Twey	wilornel_: It's fine to add some members; you just won't be able to access them any more (which is correct, because you don't know *what* kind of thing that inherits from A you have when you pull an A& out of the vector ? all you know is that it has *at least* the members of A)
2014-11-23 16:55:08	lh_mouse	It is the safest way.
2014-11-23 16:55:24	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has quit (Ping timeout: 258 seconds)
2014-11-23 16:55:43	<--	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-11-23 16:55:47	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Ping timeout: 258 seconds)
2014-11-23 16:55:49	-->	zwer_f (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-23 16:55:56	Twey	wilornel_: You don't lose the members if you store an A& (though you would if you cast it up to an A)
2014-11-23 16:56:27	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-23 16:56:46	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 250 seconds)
2014-11-23 16:57:20	DanteLA	o11c: I can't find the part where the ABI says bool is extended to one byte. So far only that bool is in 8-byte INTEGER class along with a char.
2014-11-23 16:57:46	-->	JSharpe (~JSharpe@31.205.60.241) has joined ##c++
2014-11-23 16:57:51	lh_mouse	DanteLA, there is _Bool in C.
2014-11-23 16:58:03	lh_mouse	or  #include <stdbool.h>   bool v = true;
2014-11-23 16:58:08	o11c	DanteLA: I admit I haven't actually read the document to know exactly where to look, but I am pretty confident
2014-11-23 16:58:08	-->	LanDi (~LOL@186.232.216.90) has joined ##c++
2014-11-23 16:58:11	<--	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has quit (Ping timeout: 265 seconds)
2014-11-23 16:58:43	det	o11c, Are you writing a C++ parser ?
2014-11-23 16:59:01	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-23 16:59:05	o11c	DanteLA: anyway, the best thing for what you want would be:  enum class NotJustBoolAnymore { old_false, old_true, new_state };
2014-11-23 16:59:07	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-23 16:59:16	o11c	det: yes
2014-11-23 16:59:26	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-23 16:59:27	o11c	or rather I'm writing 7 of them
2014-11-23 16:59:31	Twey	wilornel_: If you have B inheriting from A, some B b, and an A& a(b), you can store a in a std::vector<A&>.  You can't access the B-only members of b through a (without an unsafe cast), because you don't know statically that the A& you get out is really a reference to a B ? it's valid to put a reference to an A in there too.  If you want to be sure that it's a reference to a B, then you should make a
2014-11-23 16:59:34	Twey	std::vector<B&> instead (or just a std::vector<B>)
2014-11-23 16:59:39	o11c	I figure that is easier and more useful than just one
2014-11-23 16:59:41	Barrin6	<< 12345 % 10;
2014-11-23 16:59:41	geordi	5
2014-11-23 16:59:47	det	o11c, using some kind of LR parser generator ?
2014-11-23 17:00:00	-->	Burga (~andrewm@dsl-58-7-44-16.wa.westnet.com.au) has joined ##c++
2014-11-23 17:00:07	<--	PSvils (~Owner@81.198.225.19) has quit (Ping timeout: 265 seconds)
2014-11-23 17:00:09	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-23 17:00:19	<--	Kicer (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-23 17:00:58	o11c	no, I'm hand-rolling an ad-hoc generator
2014-11-23 17:01:07	o11c	I want to be able to control the conflicts
2014-11-23 17:01:13	o11c	probably with a hint file + comments
2014-11-23 17:01:18	Twey	wilornel_: But you *do* dynamically have a B, not an A, so any virtual methods inside the B will still know about and be able to access the B-only members
2014-11-23 17:01:37	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-23 17:03:27	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-23 17:03:33	<--	PSvils (~Owner@81.198.225.19) has left ##c++
2014-11-23 17:03:44	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-23 17:04:57	-->	k0nichiwa (~jdoe@174.71.181.20) has joined ##c++
2014-11-23 17:05:28	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-23 17:05:28	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-23 17:05:55	<--	daNRG04 (~danny@e181226005.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-23 17:07:08	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-23 17:07:32	-->	gelignite (~gelignite@i528C3F22.versanet.de) has joined ##c++
2014-11-23 17:08:22	<--	gelignite (~gelignite@i528C3F22.versanet.de) has quit (Client Quit)
2014-11-23 17:08:49	-->	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-23 17:09:23	DanteLA	o11c: System V Application Binary Interface AMD64 Architecture - document does say that: 'When a value of type _Bool is returned or passed in a register or on the stack, bits 1 to 7 shall be zero'
2014-11-23 17:09:23	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-23 17:09:25	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 240 seconds)
2014-11-23 17:09:46	DanteLA	But I found nothing that says it is handled as 1 byte in registers
2014-11-23 17:10:13	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-23 17:10:17	MrFlibble	off-topic.
2014-11-23 17:10:39	-->	Mandragoran (63e3ffab@gateway/web/cgi-irc/kiwiirc.com/ip.99.227.255.171) has joined ##c++
2014-11-23 17:10:51	Mandragoran	Would you guys recommend Accelerated C++ or C++ primer 5th edition?
2014-11-23 17:10:56	-->	HerzogDeXtEr (~flex@i59F6B043.versanet.de) has joined ##c++
2014-11-23 17:11:38	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-23 17:12:25	o11c	DanteLA: that implies it
2014-11-23 17:12:41	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-23 17:12:54	DanteLA	o11c: No, it doesn't. Just before that is says bool is passed in 8-byte registers. That only says 7 bits of the first byte are zero
2014-11-23 17:12:55	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 17:14:01	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Remote host closed the connection)
2014-11-23 17:15:06	o11c	...
2014-11-23 17:15:10	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-23 17:15:13	MrFlibble	DanteLA: off-topic.
2014-11-23 17:15:29	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 17:16:01	DanteLA	Fine. Anyway easiest is just to check compiler output to see how things go
2014-11-23 17:16:55	<--	Burga (~andrewm@dsl-58-7-44-16.wa.westnet.com.au) has quit
2014-11-23 17:17:32	<--	Mandragoran (63e3ffab@gateway/web/cgi-irc/kiwiirc.com/ip.99.227.255.171) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-23 17:18:41	<--	saLOUt (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 244 seconds)
2014-11-23 17:18:43	-->	Skywing (~Skywing@valera-ext.nynaeve.net) has joined ##c++
2014-11-23 17:22:31	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 17:22:43	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-23 17:22:51	-->	Burga (~andrewm@dsl-58-7-44-16.wa.westnet.com.au) has joined ##c++
2014-11-23 17:23:09	yuung	ugh, does anyone here have SFML experience? especially with integrating QT
2014-11-23 17:23:13	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-23 17:23:21	NinjaPenguin	!give yuung topic
2014-11-23 17:23:23	nolyc	yuung: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-23 17:23:33	yuung	*sigh*
2014-11-23 17:23:38	yuung	 #sfml is invite only ;_;
2014-11-23 17:23:43	NinjaPenguin	!general
2014-11-23 17:23:45	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-23 17:23:47	lh_mouse	DanteLA, if the other 7 bits contain non-zero values you get UB.
2014-11-23 17:24:36	lh_mouse	geordi, -w << val, !val; char c = 0xFF; bool &val = reinterpret_cast<bool &>(c); // DanteLA
2014-11-23 17:24:37	geordi	true, true
2014-11-23 17:25:08	<--	Skiez_ (~Skiez@105.155.3.22) has quit (Quit: Leaving)
2014-11-23 17:25:38	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 17:26:18	o11c	geordi -w { bool val; cout << val, !val; }
2014-11-23 17:26:18	geordi	false, true
2014-11-23 17:26:23	o11c	ugh, stupid geordi
2014-11-23 17:26:38	o11c	that one can also be   true, true
2014-11-23 17:27:13	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-23 17:27:47	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Quit: Colloquy for iPad - http://colloquy.mobi)
2014-11-23 17:28:22	<--	envi (kvirc@220.121.234.166) has quit (Read error: Connection reset by peer)
2014-11-23 17:28:23	-->	lamefun (~lamefun2@5.167.185.70) has joined ##c++
2014-11-23 17:29:48	-->	mkad (~error@m90-132-100-251.cust.tele2.se) has joined ##c++
2014-11-23 17:29:49	<--	mkad (~error@m90-132-100-251.cust.tele2.se) has quit (Changing host)
2014-11-23 17:29:49	-->	mkad (~error@unaffiliated/mkad) has joined ##c++
2014-11-23 17:30:01	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-23 17:30:09	DanteLA	o11c: I did some tests and so far machine code with char was identical to bool, when used like a bool
2014-11-23 17:30:20	<--	oleo (~oleo@xdsl-87-79-254-89.netcologne.de) has quit (Ping timeout: 256 seconds)
2014-11-23 17:30:34	o11c	huh, maybe I'm wrong about char being 64-bits
2014-11-23 17:30:43	DanteLA	However, I'm not sure if this is what I should be doing on Sunday night
2014-11-23 17:30:43	<--	Skywing (~Skywing@valera-ext.nynaeve.net) has left ##c++
2014-11-23 17:30:45	o11c	or maybe the optimizer is smart
2014-11-23 17:30:57	lh_mouse	DanteLA, when you cast an int to bool, they differ.
2014-11-23 17:31:03	-->	oleo (~oleo@xdsl-78-35-185-46.netcologne.de) has joined ##c++
2014-11-23 17:31:06	-->	orgcandman (~user@unaffiliated/orgcandman) has joined ##c++
2014-11-23 17:31:30	o11c	lh_mouse: what he really means is "are there any places in *my* codebase"
2014-11-23 17:31:50	o11c	DanteLA: but really, use an enum-class and ask for char as the underlying type
2014-11-23 17:32:41	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Remote host closed the connection)
2014-11-23 17:32:50	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Client Quit)
2014-11-23 17:33:41	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-23 17:34:45	<--	koolkalang (827f30f3@gateway/web/freenode/ip.130.127.48.243) has quit (Quit: Page closed)
2014-11-23 17:34:53	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-23 17:34:56	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-23 17:36:01	<--	orgcandman (~user@unaffiliated/orgcandman) has quit (Read error: Connection reset by peer)
2014-11-23 17:36:51	<--	Kasu (~Kasu@c83-253-25-70.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-11-23 17:37:38	<--	Balzy (~Balzy@host80-167-dynamic.8-87-r.retail.telecomitalia.it) has quit (Ping timeout: 264 seconds)
2014-11-23 17:37:38	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 264 seconds)
2014-11-23 17:37:46	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 17:38:34	<--	lamefun (~lamefun2@5.167.185.70) has quit (Remote host closed the connection)
2014-11-23 17:39:21	-->	Josef_K (~jeremy@203.87.3.106) has joined ##c++
2014-11-23 17:39:42	<--	mkad (~error@unaffiliated/mkad) has quit (Quit: Wychodzi)
2014-11-23 17:40:10	-->	Balzy (~Balzy@host80-167-dynamic.8-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-23 17:40:31	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-23 17:40:56	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-11-23 17:40:57	<--	jitta (~jitta@95.90.246.169) has quit (Quit: Stay stressed, then give up.)
2014-11-23 17:43:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 17:43:44	<--	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has quit (Quit: leaving)
2014-11-23 17:45:23	-->	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has joined ##c++
2014-11-23 17:46:44	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 17:47:07	-->	orgcandman (~user@unaffiliated/orgcandman) has joined ##c++
2014-11-23 17:48:14	<--	Anthaas (~Anthaas@31.205.120.130) has quit (Read error: Connection reset by peer)
2014-11-23 17:48:31	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-23 17:48:35	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2014-11-23 17:48:41	-->	BlueProtoman (~smitty@38.105.236.163) has joined ##c++
2014-11-23 17:50:01	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-23 17:50:06	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Quit: Leaving)
2014-11-23 17:50:46	<--	K-ballo (~sonoio@181.228.59.173) has quit (Read error: Connection reset by peer)
2014-11-23 17:50:57	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 264 seconds)
2014-11-23 17:51:15	-->	collincd (~collincd@unaffiliated/collincd) has joined ##c++
2014-11-23 17:51:56	<--	rendar (~I@host147-176-dynamic.22-79-r.retail.telecomitalia.it) has quit
2014-11-23 17:52:36	<--	BlaXpirit (~blaxpirit@54-12-124-91.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-23 17:55:18	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 17:56:49	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 17:58:58	<--	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-11-23 17:59:12	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-23 17:59:22	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-23 18:00:51	<--	ski (~ski@remote1.student.chalmers.se) has quit (Ping timeout: 256 seconds)
2014-11-23 18:01:07	<--	endomancer (~endomance@101.191.33.121) has quit (Quit: endomancer)
2014-11-23 18:01:21	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 265 seconds)
2014-11-23 18:02:24	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 255 seconds)
2014-11-23 18:02:49	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-23 18:03:52	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-23 18:04:38	<--	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has quit (Quit: Leaving)
2014-11-23 18:05:38	<--	pixelate (~pixelate@139.194.92.39) has quit (Quit: WeeChat 1.0.1)
2014-11-23 18:06:29	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-23 18:08:06	-->	pixelate (~pixelate@139.194.92.39) has joined ##c++
2014-11-23 18:09:11	-->	realloc1 (~realloc1@aftr-185-17-204-65.dynamic.mnet-online.de) has joined ##c++
2014-11-23 18:09:49	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-23 18:10:18	-->	dupondje (~dupondje@artemis.dupie.be) has joined ##c++
2014-11-23 18:10:26	<--	dupondje (~dupondje@artemis.dupie.be) has left ##c++
2014-11-23 18:10:31	<--	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has quit (Ping timeout: 265 seconds)
2014-11-23 18:10:56	-->	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has joined ##c++
2014-11-23 18:11:54	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 255 seconds)
2014-11-23 18:14:20	-->	Voidwalkr (Voidwalkr@74.73.43.211) has joined ##c++
2014-11-23 18:14:34	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Ping timeout: 250 seconds)
2014-11-23 18:14:37	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-23 18:16:48	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has joined ##c++
2014-11-23 18:16:48	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 18:17:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 18:18:20	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-23 18:18:29	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-23 18:18:36	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-11-23 18:18:56	<--	blo (~blo@unaffiliated/blo) has quit (Ping timeout: 264 seconds)
2014-11-23 18:21:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 18:21:54	-->	blo (~blo@unaffiliated/blo) has joined ##c++
2014-11-23 18:22:45	-->	pingupingu (~pinguping@unaffiliated/pingupingu) has joined ##c++
2014-11-23 18:23:53	<--	Burgundy (~burgundy@188.26.10.149) has quit (Remote host closed the connection)
2014-11-23 18:24:21	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 18:24:37	-->	TheLorax (~chris@23.233.29.132) has joined ##c++
2014-11-23 18:24:57	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 18:25:40	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-23 18:26:48	<--	Josef_K (~jeremy@203.87.3.106) has quit (Ping timeout: 258 seconds)
2014-11-23 18:27:00	<--	yuung (~john@71-223-24-245.phnx.qwest.net) has quit (Ping timeout: 240 seconds)
2014-11-23 18:28:00	-->	nocbreak (~cbreak@80-218-136-26.dclient.hispeed.ch) has joined ##c++
2014-11-23 18:28:19	<--	cbreak (~cbreak@80-218-136-26.dclient.hispeed.ch) has quit (Ping timeout: 245 seconds)
2014-11-23 18:29:49	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 244 seconds)
2014-11-23 18:30:14	<--	Semiarty (~opanki@91.109.47.11) has quit (Ping timeout: 258 seconds)
2014-11-23 18:30:55	-->	Josef_K (~jeremy@203.87.3.106) has joined ##c++
2014-11-23 18:31:18	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-23 18:32:18	<--	Balzy (~Balzy@host80-167-dynamic.8-87-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-23 18:32:32	<--	LanDi (~LOL@186.232.216.90) has quit (Remote host closed the connection)
2014-11-23 18:35:15	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 18:35:42	-->	Burgundy (~burgundy@188.26.10.149) has joined ##c++
2014-11-23 18:37:17	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Remote host closed the connection)
2014-11-23 18:37:26	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-23 18:37:40	-->	enterprisedc_ (~enterpris@ip98-164-211-60.oc.oc.cox.net) has joined ##c++
2014-11-23 18:38:27	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 18:38:27	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-23 18:38:35	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-23 18:38:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 18:38:44	<--	enterprisedc (~enterpris@ip98-164-211-60.oc.oc.cox.net) has quit (Ping timeout: 256 seconds)
2014-11-23 18:38:44	--	enterprisedc_ is now known as enterprisedc
2014-11-23 18:39:20	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-23 18:39:39	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-23 18:41:23	 *	pi- watching https://www.youtube.com/watch?v=Am2is2QCvxY&list=UUMlGfpWw-RUdWX_JbLCukXg
2014-11-23 18:41:36	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-23 18:42:56	<--	Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-11-23 18:43:17	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-23 18:43:28	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-23 18:45:42	<--	ncd|leeN (~leeN@e181197211.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-23 18:47:28	-->	ski (~ski@remote1.student.chalmers.se) has joined ##c++
2014-11-23 18:47:37	--	nocbreak is now known as cbreak
2014-11-23 18:47:42	-->	r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-23 18:48:34	-->	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-23 18:48:36	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-23 18:48:52	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 264 seconds)
2014-11-23 18:49:40	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-23 18:50:03	-->	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has joined ##c++
2014-11-23 18:52:18	<--	Burga (~andrewm@dsl-58-7-44-16.wa.westnet.com.au) has quit (Ping timeout: 255 seconds)
2014-11-23 18:53:12	<--	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-23 18:53:36	-->	Moleboy (470e930b@gateway/web/freenode/ip.71.14.147.11) has joined ##c++
2014-11-23 18:53:48	Moleboy	Hey guys, I'm working on making my first linked list but having a couple issues with it :-/
2014-11-23 18:54:01	o11c	!give Moleboy raii
2014-11-23 18:54:02	nolyc	Moleboy: Resource Acquisition Is Initialization: a bad name for the idea of acquiring resources in constructors (generally) and having destructors make sure they're released. Failure to acquire any resources is signaled by throwing an exception. It's better referred to as Scope-Bound Resource Management. http://www.hackcraft.net/raii/
2014-11-23 18:54:05	o11c	!give Moleboy rule of 3
2014-11-23 18:54:06	nolyc	Moleboy: If you have one of 1) non-empty destructor 2) copy constructor 3) copy assignment operator then you almost certainly need _all_ three.
2014-11-23 18:54:13	o11c	Moleboy: do you understand those?
2014-11-23 18:54:28	o11c	if you want to skip the copy-ctor/copy-assign, explicitly =delete them for now
2014-11-23 18:54:30	Moleboy	One sec
2014-11-23 18:55:37	-->	AAAaaaAAA (~AAAAaaaaA@cpe-72-227-156-106.nyc.res.rr.com) has joined ##c++
2014-11-23 18:55:39	Moleboy	I have an empty destructor, and I have a constructor, though I'm not sure I do understand everything you have there :-X
2014-11-23 18:55:58	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-23 18:56:47	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-23 18:57:25	<--	AAAaaaAAA (~AAAAaaaaA@cpe-72-227-156-106.nyc.res.rr.com) has left ##c++
2014-11-23 18:57:32	-->	bbbbBBBBbbbb (~AAAAaaaaA@cpe-72-227-156-106.nyc.res.rr.com) has joined ##c++
2014-11-23 18:57:56	<--	bbbbBBBBbbbb (~AAAAaaaaA@cpe-72-227-156-106.nyc.res.rr.com) has left ##c++
2014-11-23 18:58:30	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Quit: Colloquy for iPad - http://colloquy.mobi)
2014-11-23 18:58:34	-->	CCCcccCCC (48e39c6a@gateway/web/freenode/ip.72.227.156.106) has joined ##c++
2014-11-23 18:58:58	Moleboy	o11c: forgive me, but I'm not quite sure the relevance
2014-11-23 18:59:06	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-23 18:59:17	Moleboy	o11c: would  you mind explaining? o.o
2014-11-23 18:59:22	<--	Logan54 (~logan@212.164.213.192) has quit (Ping timeout: 272 seconds)
2014-11-23 18:59:34	pi-	Moleboy: you haven't asked a question yet...
2014-11-23 18:59:54	d_s	hi, does anyone know where can i find materials from this presentation? http://lanyrd.com/2013/accu2013/scgdxz/
2014-11-23 19:00:19	d_s	does accu archive those things?
2014-11-23 19:00:47	Moleboy	pi-: I know, that's pretty much why I'm confused, it feels like I got an answer before I asked xD
2014-11-23 19:01:21	Moleboy	I think I figured out one of my issues, so I'm sorry for bothering y'all >.<
2014-11-23 19:02:11	pi-	Moleboy: come back if you need any more random factoids
2014-11-23 19:02:50	Moleboy	pi-: will do =D
2014-11-23 19:02:58	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-23 19:03:05	pi-	!next
2014-11-23 19:03:06	nolyc	Another satisfied customer, next!
2014-11-23 19:03:49	-->	blast (~quassel@d4-50-54-46.try.wideopenwest.com) has joined ##c++
2014-11-23 19:03:52	-->	dan_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has joined ##c++
2014-11-23 19:03:59	--	dan_ is now known as Guest30532
2014-11-23 19:04:20	<--	blast (~quassel@d4-50-54-46.try.wideopenwest.com) has quit (Read error: Connection reset by peer)
2014-11-23 19:04:43	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-23 19:05:39	<--	deekej (~deekej@23-237.197-178.cust.bluewin.ch) has quit (Remote host closed the connection)
2014-11-23 19:06:07	o11c	Moleboy: I answered beforer you asked because most newbie issues are the same thing
2014-11-23 19:06:48	<--	CCCcccCCC (48e39c6a@gateway/web/freenode/ip.72.227.156.106) has quit (Quit: Page closed)
2014-11-23 19:07:38	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Quit: Colloquy for iPad - http://colloquy.mobi)
2014-11-23 19:08:37	<--	hexagoxel (~hexagoxel@kiel-5f768b2f.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-23 19:10:40	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-23 19:12:38	--	r0bby_ is now known as robbyoconnor
2014-11-23 19:12:45	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-23 19:13:34	<--	realloc1 (~realloc1@aftr-185-17-204-65.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-23 19:13:34	<--	phax (~phax@unaffiliated/phax) has quit (Quit: phax)
2014-11-23 19:13:53	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2014-11-23 19:14:20	-->	realloc1 (~realloc1@aftr-185-17-204-65.dynamic.mnet-online.de) has joined ##c++
2014-11-23 19:14:46	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-23 19:16:28	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 250 seconds)
2014-11-23 19:16:38	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:cc2f:13be:b4a8:3e08) has quit (Quit: Leaving)
2014-11-23 19:18:42	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-23 19:18:42	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 19:19:35	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-23 19:19:46	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Quit: Leaving)
2014-11-23 19:19:59	<--	ludkiller (lud@gateway/shell/elitebnc/x-bvjnwlkpuwixsyvh) has quit (Excess Flood)
2014-11-23 19:20:36	-->	miked (d85d9564@gateway/web/cgi-irc/kiwiirc.com/ip.216.93.149.100) has joined ##c++
2014-11-23 19:20:44	-->	ludkiller (lud@gateway/shell/elitebnc/x-agggaldvrbqiluto) has joined ##c++
2014-11-23 19:21:18	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-23 19:22:00	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 19:23:12	<--	miked (d85d9564@gateway/web/cgi-irc/kiwiirc.com/ip.216.93.149.100) has quit (Client Quit)
2014-11-23 19:23:17	-->	thedaymna (d85d9564@gateway/web/cgi-irc/kiwiirc.com/ip.216.93.149.100) has joined ##c++
2014-11-23 19:23:51	<--	Gama11 (~quassel@p5DC1F3C3.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-23 19:23:57	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-23 19:25:37	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-23 19:26:44	<--	kurahaupo (~kurahaupo@118.148.149.206) has quit (Ping timeout: 264 seconds)
2014-11-23 19:29:21	--	Anoniem4l is now known as Anoniemal`afk
2014-11-23 19:32:01	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-23 19:32:18	-->	bassguitarman (sid40024@gateway/web/irccloud.com/x-jffsuutlozreglye) has joined ##c++
2014-11-23 19:33:25	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-23 19:36:47	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 258 seconds)
2014-11-23 19:38:13	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-23 19:38:20	-->	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-11-23 19:40:46	<--	Moleboy (470e930b@gateway/web/freenode/ip.71.14.147.11) has quit (Ping timeout: 246 seconds)
2014-11-23 19:40:57	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-23 19:41:59	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-23 19:42:48	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-23 19:43:51	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-23 19:44:13	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-23 19:44:54	-->	rkreis_ (~robin@pD9EF13EA.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 19:44:57	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Client Quit)
2014-11-23 19:45:32	<--	Guest30532 (~dan@c-76-120-69-67.hsd1.co.comcast.net) has left ##c++
2014-11-23 19:46:10	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Client Quit)
2014-11-23 19:48:25	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 19:48:41	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-23 19:48:43	<--	rkreis (~robin@p5B37778E.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-23 19:48:50	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-23 19:48:51	Supicioso	Seems like all of my errors and segfaults are being causes by std::string. :/
2014-11-23 19:49:12	Supicioso	switching back to char* and never looking back is quiet the viable option.
2014-11-23 19:49:31	hs_	are you using .c_str()?
2014-11-23 19:49:44	-->	phax (~phax@unaffiliated/phax) has joined ##c++
2014-11-23 19:50:09	<--	phax (~phax@unaffiliated/phax) has quit (Client Quit)
2014-11-23 19:50:50	Supicioso	Yup.
2014-11-23 19:51:21	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-23 19:51:30	hs_	keep in mind that it isn't a copy of the string
2014-11-23 19:51:38	Supicioso	I'm aware.
2014-11-23 19:51:40	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 19:51:40	-->	Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has joined ##c++
2014-11-23 19:52:10	Stryyker	You were probably using it wrong or something
2014-11-23 19:52:50	marchelzo_	{ std::string s {"Heldo"}; s.c_str()[3] = 'l'; cout << s << endl; }
2014-11-23 19:52:50	geordi	error: assignment of read-only location '*(s.basic_string<_CharT, _Traits, _Alloc>::c_str<char, char_traits<char>, allocator<char> >() + 3u)'
2014-11-23 19:53:23	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-23 19:54:19	marchelzo_	{ char *s = malloc(100); strcpy(s,"Heldo"); std::string s2 {"Heldo"}; s2.c_str()[3] = 'l'; cout << s2 << endl; }
2014-11-23 19:54:19	geordi	error: invalid conversion from 'void*' to 'char*'
2014-11-23 19:54:30	marchelzo_	{ char *s = (char*)malloc(100); strcpy(s,"Heldo"); std::string s2 {"Heldo"}; s2.c_str()[3] = 'l'; cout << s2 << endl; }
2014-11-23 19:54:30	geordi	error: assignment of read-only location '*(s2.basic_string<_CharT, _Traits, _Alloc>::c_str<char, char_traits<char>, allocator<char> >() + 3u)'
2014-11-23 19:54:34	marchelzo_	ok i give up
2014-11-23 19:54:51	Supicioso	As I expected. Using char* instead of std::string rids me of the seg faults.
2014-11-23 19:54:51	marchelzo_	{ char *s = (char*)malloc(100); strcpy(s,"Heldo"); std::string s2 {s}; s2.c_str()[3] = 'l'; cout << s2 << endl; }
2014-11-23 19:54:51	geordi	Same error.
2014-11-23 19:55:11	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Remote host closed the connection)
2014-11-23 19:55:18	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-23 19:55:20	marchelzo_	Why am I getting an error there?
2014-11-23 19:55:20	hs_	yeah, because std::string is probably broken...?
2014-11-23 19:55:22	pEYEd	my code is only returning 1 record set{} on line 40 https://bpaste.net/show/2931645c95fc when it should be returning many.
2014-11-23 19:55:55	-->	dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-23 19:56:07	o11c	Supicioso: go ahead, *tell* a channel full of wannabe (and real) C++ experts how one of the major vendor's string class is broken
2014-11-23 19:56:12	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-23 19:56:24	o11c	(some of us *do* know bugs in it, but I really doubt you're hitting them)
2014-11-23 19:56:28	Supicioso	Never said std::string was broken.
2014-11-23 19:56:38	o11c	< Supicioso> Seems like all of my errors and segfaults are being causes by std::string.
2014-11-23 19:56:43	o11c	that is saying std::string is broken
2014-11-23 19:56:47	Supicioso	I'm pretty sure it's the compiler since it works fine on windows but wigs out on gcc
2014-11-23 19:57:03	o11c	what you *really* meant to say is "I suck at using libraries correctly so there are segfaults in my own code"
2014-11-23 19:57:09	marchelzo_	My money is on undefined behavior
2014-11-23 19:57:15	Supicioso	I'm not using any libraries.
2014-11-23 19:57:15	MrFlibble	Supicioso: I am pretty sure that your code has a bug causing UB.
2014-11-23 19:57:33	MrFlibble	blaming the compiler is a LAST RESORT
2014-11-23 19:57:49	o11c	marchelzo_: well, all segfaults are UB, no money there
2014-11-23 19:58:00	o11c	my money is on expired pointers
2014-11-23 19:58:02	<--	bassguitarman (sid40024@gateway/web/irccloud.com/x-jffsuutlozreglye) has left ##c++
2014-11-23 19:58:11	o11c	anyone going to take oob indexing?
2014-11-23 19:58:11	Supicioso	I'm not using pointers either.
2014-11-23 19:58:30	o11c	[00:57:05] < hs_> are you using .c_str()?
2014-11-23 19:58:32	o11c	[00:58:25] < Supicioso> Yup.
2014-11-23 19:58:34	o11c	yes you are
2014-11-23 19:58:34	marchelzo_	o11c: Undefined behavior is in the source code, no? If it's a bug in the compiler, and the program is valid, would it still be considered UB?
2014-11-23 19:58:45	o11c	marchelzo_: ah, I see
2014-11-23 19:59:01	Supicioso	I was reading a past post on stackoverflow about gcc's std::string was broken in that particular version.
2014-11-23 19:59:08	Supicioso	So I switched to char* and low and behold it worked.
2014-11-23 19:59:28	MrFlibble	post a testcase or gtfo.
2014-11-23 20:00:04	Supicioso	std::string DbName; DbName = value; value being char*
2014-11-23 20:00:06	<--	Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-23 20:00:29	<--	mukunda_ (~mukunda@24.9.162.249) has quit (Remote host closed the connection)
2014-11-23 20:00:49	-->	mukunda_ (~mukunda@24.9.162.249) has joined ##c++
2014-11-23 20:01:01	hs_	what char*?
2014-11-23 20:02:15	MrFlibble	a code fragment is not a testcase
2014-11-23 20:02:18	-->	zhangxaochen_ (~zhangxaoc@218.108.29.108) has joined ##c++
2014-11-23 20:02:20	MrFlibble	a test case is compilable and runnable.
2014-11-23 20:03:08	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-23 20:03:13	newguise1234	is there a way to set a constant value(programmatically) in a lambda function?
2014-11-23 20:03:15	o11c	Supicioso: well that's a pointer, you said you weren't using those
2014-11-23 20:03:33	o11c	newguise1234: are you aware of C++14 constexpr changes?
2014-11-23 20:03:45	newguise1234	o11c: I'm not, thank you I'll look into it
2014-11-23 20:04:12	<--	Burgundy (~burgundy@188.26.10.149) has quit (Remote host closed the connection)
2014-11-23 20:04:16	o11c	newguise1234: that said, what are you really trying to do?
2014-11-23 20:05:29	<--	zhangxaochen (~zhangxaoc@218.108.29.108) has quit (Ping timeout: 255 seconds)
2014-11-23 20:06:33	newguise1234	o11c: I'm trying to store a predicate function for use with copy_if in a function pointer
2014-11-23 20:06:58	newguise1234	the value it has to check against will change pretty much per-iteration though
2014-11-23 20:06:59	o11c	'auto' ?
2014-11-23 20:07:08	o11c	ooh
2014-11-23 20:07:12	newguise1234	I thought I could do this using [&]() {}
2014-11-23 20:07:18	o11c	do you want []() mutable {} ?
2014-11-23 20:07:27	newguise1234	but it turns out you can't store a reference lambda in a function pointer
2014-11-23 20:07:28	o11c	lambdas are constant by default
2014-11-23 20:07:36	newguise1234	oh kay
2014-11-23 20:07:53	o11c	but insert the 'mutable' keyword and you can write to your captured variables
2014-11-23 20:08:14	-->	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has joined ##c++
2014-11-23 20:08:21	-->	Burgundy (~burgundy@188.25.248.210) has joined ##c++
2014-11-23 20:09:06	newguise1234	o11c: what I meant was.  I have a setFunction function.  This is to set the functions and will be specified in a specialized template function.
2014-11-23 20:09:17	newguise1234	I need it to store the "referenced" variable
2014-11-23 20:09:33	newguise1234	so it can be called in the main function
2014-11-23 20:09:40	newguise1234	Its not that big of a deal
2014-11-23 20:09:48	newguise1234	I was just trying to split up my templated code
2014-11-23 20:09:52	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-23 20:10:05	newguise1234	so I can write easy specialized cases for it when I need to deal with another type
2014-11-23 20:10:14	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-23 20:10:27	o11c	newguise1234: also remember that lambdas are nothing special
2014-11-23 20:10:37	o11c	a lambda is just a class and the captures are its member variables
2014-11-23 20:10:42	o11c	nothing more, nothing less
2014-11-23 20:10:47	hs_	(no)
2014-11-23 20:10:48	newguise1234	oh okay
2014-11-23 20:10:48	Supicioso	All the cool kids use lambdas
2014-11-23 20:10:53	newguise1234	lol
2014-11-23 20:11:17	hs_	and you can't have a function pointer to a capturing lambda (I think that was your discovery newguise1234)
2014-11-23 20:11:24	newguise1234	right
2014-11-23 20:12:23	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-flmwoxrznumnnonv) has quit (Quit: Connection closed for inactivity)
2014-11-23 20:12:24	<--	MrFlibble (LunarJetma@2.124.188.136) has quit (Quit: MrFlibble)
2014-11-23 20:13:50	-->	Frisky-Ka (SomeWhere@90.217.161.214) has joined ##c++
2014-11-23 20:13:51	Supicioso	is valgrind used to find memory leaks also?
2014-11-23 20:14:06	Supicioso	oh wait. dumb question. derp.
2014-11-23 20:14:20	hs_	newguise1234, if you just want to initialize a constant you could use a static local in the lambda
2014-11-23 20:15:11	newguise1234	hs_: would I be able to set that using a variable from the surrounding scope?
2014-11-23 20:15:20	newguise1234	or would I still need to use a reference lambda for that
2014-11-23 20:15:32	hs_	you can already do that I think
2014-11-23 20:16:25	<--	Tribeam (~Tribeam@68-114-124-127.dhcp.slid.la.charter.com) has quit
2014-11-23 20:16:51	<--	FriskyKat (SomeWhere@90.208.35.78) has quit (Ping timeout: 264 seconds)
2014-11-23 20:17:06	o11c	hs_: you *can* create a std::function from a capturing lambda, but I'm not sure if std::function is needed at all here
2014-11-23 20:17:13	-->	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has joined ##c++
2014-11-23 20:17:22	hs_	yeah I don't think so
2014-11-23 20:17:51	-->	Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has joined ##c++
2014-11-23 20:18:02	hs_	{ void(*p)() = [](){ int y = x; cout << y; }; p(); } int x = 40;
2014-11-23 20:18:03	geordi	40
2014-11-23 20:18:18	hs_	as long as it has linkage I think you are ok using it in the function
2014-11-23 20:18:30	hs_	(locals don't)
2014-11-23 20:18:39	hs_	so you could initialize with a function
2014-11-23 20:18:48	hs_	doesn't even need to be static
2014-11-23 20:20:38	newguise1234	cool thank you
2014-11-23 20:20:47	newguise1234	is [](){} the same as [=](){} then?
2014-11-23 20:20:52	<--	bumbar_ (~username@unaffiliated/bumbar) has quit (Ping timeout: 272 seconds)
2014-11-23 20:21:01	Oxyd	No.
2014-11-23 20:21:02	hs_	no, [=] is default copy capture
2014-11-23 20:21:06	Oxyd	[] doesn't capture anything.
2014-11-23 20:21:56	newguise1234	nvm, it compiled when I didn't actually use an outside variable :/
2014-11-23 20:22:23	<--	ludkiller (lud@gateway/shell/elitebnc/x-agggaldvrbqiluto) has quit (Excess Flood)
2014-11-23 20:23:35	-->	ludkiller (lud@gateway/shell/elitebnc/x-mlpfaletsxmjyurm) has joined ##c++
2014-11-23 20:24:07	-->	nikki93_ (~nikki93@nat-oitwireless-outside-vapornet3-o-109.Princeton.EDU) has joined ##c++
2014-11-23 20:24:20	<--	LM741 (~LM741@cpe-65-28-169-170.wi.res.rr.com) has left ##c++
2014-11-23 20:24:38	<--	thedaymna (d85d9564@gateway/web/cgi-irc/kiwiirc.com/ip.216.93.149.100) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-23 20:24:40	--	Frisky-Ka is now known as FriskyKat
2014-11-23 20:24:53	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ixonksxqmzotxukj) has quit (Quit: Connection closed for inactivity)
2014-11-23 20:25:35	newguise1234	hs_: is that using the bot's syntax? or is that totally valid c++.  I try to compile it and I get "error: 'x' was not declared in this scope"
2014-11-23 20:25:50	<--	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-23 20:26:03	det	Supicioso, Was your "char *" null terminated ?
2014-11-23 20:26:26	Supicioso	I don't think so.
2014-11-23 20:26:44	Oxyd	geordi: int x = 40; int main() { void(*p)() = [](){ int y = x; cout << y; }; p(); }  // newguise1234, this would be more C++-y syntax.
2014-11-23 20:26:44	geordi	40
2014-11-23 20:26:51	hs_	newguise1234, there is a global "int x = 40:" in my example
2014-11-23 20:26:55	hs_	yeah
2014-11-23 20:26:57	Oxyd	geordi allows you to rearrange things a little.
2014-11-23 20:26:58	newguise1234	okay, I understand now
2014-11-23 20:27:14	hs_	if you want something a little better use a function
2014-11-23 20:27:14	newguise1234	thank you very much yall
2014-11-23 20:27:29	newguise1234	I think I might just do that instead haha
2014-11-23 20:27:46	newguise1234	just specialise a less than and greater than function for my different templates
2014-11-23 20:28:16	-->	TheAncientGoat (~quassel@210.195.220.183) has joined ##c++
2014-11-23 20:28:32	newguise1234	nvm, I don't know, I'll work on it, shove the copy_if into the specialized portion, then I can just use a reference lambda
2014-11-23 20:28:46	det	Supicioso, operator= with a char * expect a null terminated string, how else would it know how much data to copy ?
2014-11-23 20:30:22	Supicioso	by null terminated do you mean placing 0x00 at the tail end of a char* string?
2014-11-23 20:30:49	det	Im giving you a reason why operator= on std::string with a char * could crash
2014-11-23 20:30:56	det	I dont know anything about your scenario
2014-11-23 20:31:13	det	If you are using a string literal, it is already null terminated
2014-11-23 20:31:19	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 20:31:21	Supicioso	I could probably be it.
2014-11-23 20:31:25	Supicioso	That*
2014-11-23 20:33:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 20:33:56	-->	Micos (Micos@2a02:2f0b:607f:ffff::bc1b:ae78) has joined ##c++
2014-11-23 20:35:15	-->	LongCatTH (~LongCatTH@165.93.138.193) has joined ##c++
2014-11-23 20:35:15	<--	LongCatTH (~LongCatTH@165.93.138.193) has quit (Changing host)
2014-11-23 20:35:15	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-23 20:36:09	det	Supicioso, manually null terminating is a bad solution too, if that is your problem, then you presumably know the length somehow and you should use the correct .assign overload
2014-11-23 20:36:11	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-23 20:36:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 20:38:40	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-23 20:38:58	<--	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has quit (Ping timeout: 250 seconds)
2014-11-23 20:40:15	<--	pyon (~user@unaffiliated/pyon) has quit (Quit: rcirc on GNU Emacs 24.4.1)
2014-11-23 20:40:17	-->	yuung (~john@71-223-24-245.phnx.qwest.net) has joined ##c++
2014-11-23 20:43:12	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 20:44:28	<--	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-11-23 20:45:27	<--	1JTAA3UEH (~SiGe@usc-secure-wireless-088-072.usc.edu) has quit (Remote host closed the connection)
2014-11-23 20:45:32	-->	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has joined ##c++
2014-11-23 20:46:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 20:48:28	<--	hz (~username@unaffiliated/hz) has quit (Quit: Leaving.)
2014-11-23 20:49:14	<--	komarov (~komarov@95-55-14-247.dynamic.avangarddsl.ru) has quit (Ping timeout: 240 seconds)
2014-11-23 20:50:59	<--	ludkiller (lud@gateway/shell/elitebnc/x-mlpfaletsxmjyurm) has quit (Excess Flood)
2014-11-23 20:51:05	-->	adamm (~adamm@debian/developer/adamm) has joined ##c++
2014-11-23 20:51:40	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-23 20:52:28	-->	Clinteger (~Clinteger@unaffiliated/clinteger) has joined ##c++
2014-11-23 20:52:50	Clinteger	hi guys
2014-11-23 20:52:51	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-23 20:53:00	-->	ludkiller (lud@gateway/shell/elitebnc/x-qjpvazvjguesacww) has joined ##c++
2014-11-23 20:53:11	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-qdlwpbardtpkhckh) has joined ##c++
2014-11-23 20:53:20	<--	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has left ##c++
2014-11-23 20:54:36	-->	Guest97604 (~username@APN-122-102-62-gprs.simobil.net) has joined ##c++
2014-11-23 20:55:10	<--	Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-23 20:55:30	<--	Garner (uid38417@gateway/web/irccloud.com/x-oomzbujlnigwlwtk) has quit (Quit: Connection closed for inactivity)
2014-11-23 20:56:26	det	!give Clinteger hi
2014-11-23 20:56:27	nolyc	Clinteger: Hi and welcome to ##C++! This channel is for the discussion of standard C++. For algorithms, libraries, platforms and tools, go to ##C++-general. Beginner questions might get more appropriate responses in ##C++-basic.
2014-11-23 20:56:55	Clinteger	hehe thanks det, I'm still working on phrasing my question--proved to be more difficult than I suspected to make it nice and irc-concise
2014-11-23 20:57:14	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-23 20:57:58	Oxyd	Do take your time.
2014-11-23 20:58:10	<--	Micos (Micos@2a02:2f0b:607f:ffff::bc1b:ae78) has quit (Quit: Leaving)
2014-11-23 20:58:10	-->	SiGe (~SiGe@usc-secure-wireless-088-072.usc.edu) has joined ##c++
2014-11-23 20:58:46	-->	AmR|EiSa (~quassel@41.42.234.176) has joined ##c++
2014-11-23 20:58:56	AmR|EiSa	Hello..,
2014-11-23 20:59:25	det	!give AmR|EiSa hi
2014-11-23 20:59:25	-->	Node231 (Node231@74.197.16.84) has joined ##c++
2014-11-23 20:59:34	det	uhoh
2014-11-23 20:59:47	AmR|EiSa	How I can open chan for support C++ for Arabic language ?
2014-11-23 21:00:15	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-23 21:00:15	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 255 seconds)
2014-11-23 21:01:16	det	probably a better question for #freenode
2014-11-23 21:01:17	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-23 21:01:28	Node231	http://www.sgi.com/tech/stl/BackInsertionSequence.html what is "amortized constant time" does it just mean it's constant unless it has to reallocate, in which case it's linear?
2014-11-23 21:01:32	-->	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has joined ##c++
2014-11-23 21:01:50	Oxyd	Node231: Yes.
2014-11-23 21:02:01	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-23 21:02:08	Node231	neato thanks
2014-11-23 21:02:43	-->	komarov (~komarov@178.62.189.37) has joined ##c++
2014-11-23 21:02:53	det	Node231, it means that any individual operation is not constant time, but that the sum of all operations will be as if they were
2014-11-23 21:03:14	Clinteger	okay, well in rephrasing my question, I discovered the answer :)
2014-11-23 21:03:31	det	!give Clinteger ggl rubber duck debugging
2014-11-23 21:03:33	nolyc	Clinteger: http://en.wikipedia.org/wiki/Rubber_duck_debugging
2014-11-23 21:03:48	Clinteger	hehe, I was trying to get a dependent name to compile, needed a typename there ;)
2014-11-23 21:03:56	Clinteger	also assuming this question is probably too basic for here :-)
2014-11-23 21:04:07	Oxyd	There's ##C++-basic as well.
2014-11-23 21:06:50	lh_mouse	I bet half of newbies in ##c++-basic don't know how to use templates. So be welcome here.
2014-11-23 21:07:09	jeaye	^
2014-11-23 21:08:28	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-23 21:10:19	-->	Burga (~andrewm@124-170-152-229.dyn.iinet.net.au) has joined ##c++
2014-11-23 21:12:22	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 21:13:16	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-23 21:15:02	-->	BlueProtoman0 (~smitty@72.22.187.219) has joined ##c++
2014-11-23 21:15:21	<--	Node231 (Node231@74.197.16.84) has quit
2014-11-23 21:15:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 21:18:09	<--	Guest97604 (~username@APN-122-102-62-gprs.simobil.net) has quit (Ping timeout: 256 seconds)
2014-11-23 21:18:23	<--	BlueProtoman (~smitty@38.105.236.163) has quit (Ping timeout: 250 seconds)
2014-11-23 21:19:45	-->	juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-11-23 21:21:06	juliohm	Given int a,b,c; Would you write a=1, b=2, c=3; or a=1; b=2; c=3;? In the first case the compiler takes a simpler or more complicated path?
2014-11-23 21:21:25	juliohm	I know this is irrelevant, just curious
2014-11-23 21:21:47	juliohm	I know that in the comma separated list, it will only return the last expression
2014-11-23 21:21:59	juliohm	in the second case it will return 3 times?
2014-11-23 21:22:07	adamm	these are equivalent.
2014-11-23 21:22:15	adamm	there is nothing to "return"
2014-11-23 21:22:43	juliohm	adamm, the compiler can figure it out and make these two cases the same assembly, correct?
2014-11-23 21:23:10	adamm	you can look at it via debugger if you'd like to.
2014-11-23 21:23:15	juliohm	I prefer the first as it looks cleaner
2014-11-23 21:23:44	juliohm	adamm, if you are sure it is equivalent I won't bother
2014-11-23 21:23:48	jeaye	juliohm: There is no difference.
2014-11-23 21:24:45	-->	muscle-man (~mike@cpe-24-166-34-21.neo.res.rr.com) has joined ##c++
2014-11-23 21:25:34	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-23 21:26:48	juliohm	Thanks everyone :)
2014-11-23 21:27:26	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-23 21:28:59	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-11-23 21:29:11	<--	komarov (~komarov@178.62.189.37) has quit (Ping timeout: 250 seconds)
2014-11-23 21:29:17	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-23 21:29:22	-->	kurahaupo (~kurahaupo@118.148.159.93) has joined ##c++
2014-11-23 21:29:33	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-11-23 21:32:23	<--	SiGe (~SiGe@usc-secure-wireless-088-072.usc.edu) has quit (Remote host closed the connection)
2014-11-23 21:32:43	<--	orgcandman (~user@unaffiliated/orgcandman) has left ##c++ ("Killed buffer")
2014-11-23 21:33:47	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-23 21:35:09	-->	dutzy (~dutzy@2601:7:2400:31a:9ce4:e0a5:a81b:2f98) has joined ##c++
2014-11-23 21:36:06	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-23 21:36:27	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 240 seconds)
2014-11-23 21:37:25	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-23 21:38:15	-->	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-23 21:39:04	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 21:39:30	-->	realloc11 (~realloc1@aftr-185-17-204-199.dynamic.mnet-online.de) has joined ##c++
2014-11-23 21:41:28	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Remote host closed the connection)
2014-11-23 21:42:27	<--	realloc1 (~realloc1@aftr-185-17-204-65.dynamic.mnet-online.de) has quit (Ping timeout: 264 seconds)
2014-11-23 21:43:18	<--	clincher (~quassel@cpe-76-168-138-8.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-23 21:44:30	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 258 seconds)
2014-11-23 21:45:09	-->	clincher (~quassel@cpe-76-168-138-8.socal.res.rr.com) has joined ##c++
2014-11-23 21:45:28	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Quit: Meow)
2014-11-23 21:45:50	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-23 21:45:58	scrote	hi
2014-11-23 21:47:02	Supicioso	Should I be calling delete everytime I'm done with a pointer or dynamic array?
2014-11-23 21:47:56	jeaye	You should not be using new and delete.
2014-11-23 21:47:58	lh_mouse	!give Supicioso stdref unique_ptr
2014-11-23 21:48:00	nolyc	Supicioso: http://en.cppreference.com/w/cpp/memory/unique_ptr
2014-11-23 21:48:19	Supicioso	Ah, I'll give it a read.
2014-11-23 21:49:19	Supicioso	Wow, never new this existed. The more you know.
2014-11-23 21:49:50	<--	BlueProtoman0 (~smitty@72.22.187.219) has left ##c++
2014-11-23 21:49:58	juliohm	Supicioso, raw pointers are wrong C++ in general
2014-11-23 21:50:06	juliohm	always keep with smart pointers
2014-11-23 21:50:34	lh_mouse	Raw pointers are now wrong.
2014-11-23 21:50:41	-->	crafty1 (~crafty1@24.229.140.232.res-cmts.sm.ptd.net) has joined ##c++
2014-11-23 21:50:56	lh_mouse	Raw **owning** pointers are generally wrong.
2014-11-23 21:51:18	Supicioso	That is good to know. This'll probably fix majority of the leaks I'm seeing.
2014-11-23 21:52:03	jeaye	Give Supicioso nopointers
2014-11-23 21:52:08	jeaye	!give Supicioso nopointers
2014-11-23 21:52:09	nolyc	Supicioso: http://klmr.me/slides/modern-cpp.pdf
2014-11-23 21:52:11	Supicioso	fail
2014-11-23 21:52:15	jeaye	Fuck you.
2014-11-23 21:52:18	Supicioso	lol
2014-11-23 21:52:27	Supicioso	Fight the man!
2014-11-23 21:52:41	jeaye	Read the damn pdf.
2014-11-23 21:52:49	jeaye	Make the world a better place.
2014-11-23 21:53:12	JamesNZ	Is there a talk that goes with that?
2014-11-23 21:53:16	Supicioso	Would advoiding pointers help stave off possible memory leaks?
2014-11-23 21:53:32	jeaye	JamesNZ: Not that I know of.
2014-11-23 21:53:34	Supicioso	This pdf does look like a very fancy ted talk slide show lol
2014-11-23 21:53:42	jeaye	There have been _many_ talks on the subject though.
2014-11-23 21:54:02	JamesNZ	jeaye: Ah.
2014-11-23 21:54:04	jeaye	Supicioso: Using RAII almost entirely resolves leaking issues.
2014-11-23 21:54:17	jeaye	RAII is not something new to C++.
2014-11-23 21:54:52	<--	kyoshero (~kyoshero@112.198.79.139) has quit (Quit: Leaving)
2014-11-23 21:54:55	lh_mouse	There has been auto_ptr since c++98, 98!!
2014-11-23 21:55:02	<--	Burgundy (~burgundy@188.25.248.210) has quit (Remote host closed the connection)
2014-11-23 21:55:06	jeaye	:|
2014-11-23 21:55:12	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-23 21:55:16	juliohm	Entering in this discussion about RAII or not, I see many frameworks using the factory pattern design, which I understand is violating RAII. What are your comments about it?
2014-11-23 21:55:18	jeaye	Well, boost has had smart pointers for quite some time.
2014-11-23 21:55:44	lh_mouse	It has been 16 years since auto_ptr was born and you idiots are still UNAWARE of it?!
2014-11-23 21:55:52	matt90	why do people name their functions in pascal case
2014-11-23 21:55:54	matt90	please just... stop
2014-11-23 21:56:02	juliohm	When we deliver the resource acquisition to a static method and delete the resource by reference counting. This is violating RAII, correct?
2014-11-23 21:56:11	lh_mouse	juliohm, rm -r that_framework
2014-11-23 21:56:35	-->	LanDi (~LOL@186.232.216.90) has joined ##c++
2014-11-23 21:56:37	juliohm	lh_mouse, what do we do when we need objects alive during the entire lifetime of the program?
2014-11-23 21:56:50	juliohm	RAII is not optimal for that, right?
2014-11-23 21:56:53	lh_mouse	juliohm, static
2014-11-23 21:56:59	jeaye	RAII doesn't apply there. Make it static.
2014-11-23 21:57:14	juliohm	the objects are created dynamically
2014-11-23 21:57:21	juliohm	like the user pressing buttons
2014-11-23 21:57:23	Supicioso	RAII <-- those are some big words
2014-11-23 21:57:25	juliohm	and generating new stuff
2014-11-23 21:57:38	juliohm	!give Supicioso RAII
2014-11-23 21:57:40	nolyc	Supicioso: Resource Acquisition Is Initialization: a bad name for the idea of acquiring resources in constructors (generally) and having destructors make sure they're released. Failure to acquire any resources is signaled by throwing an exception. It's better referred to as Scope-Bound Resource Management. http://www.hackcraft.net/raii/
2014-11-23 21:57:49	jeaye	Then they don't exist for the live of the program, juliohm.
2014-11-23 21:57:55	jeaye	life
2014-11-23 21:57:58	Supicioso	I was reading the wiki
2014-11-23 21:58:03	juliohm	jeaye, I mean soon as they are created
2014-11-23 21:58:19	jeaye	Put them into a static unique_ptr then.
2014-11-23 21:58:24	Supicioso	rm -rf* <----
2014-11-23 21:58:26	Supicioso	Fixed that for you.
2014-11-23 21:58:27	juliohm	The better way of dealing with that is by the factory design, could you please confirm?
2014-11-23 21:58:42	lh_mouse	There is static and there is boost::call_once(and it has come into c++11).
2014-11-23 21:59:03	Supicioso	I wonder if boost will ever become standard at some point.
2014-11-23 21:59:09	juliohm	jeaye, lh_mouse do you have any code snippets exemplifying the usage? What are the pros/cons compared to factory design?
2014-11-23 21:59:12	jeaye	Supicioso: A lot of it does.
2014-11-23 21:59:12	lh_mouse	my_singleton &get_instance(){ static my_singleton obj; return obj; }
2014-11-23 21:59:20	Supicioso	oh neat.
2014-11-23 21:59:30	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-23 21:59:31	jeaye	Supicioso: shared_ptr, unique_ptr, thread, etc
2014-11-23 21:59:35	jeaye	All were in boost.
2014-11-23 21:59:38	lh_mouse	You need to add locks if you are using c++98.
2014-11-23 21:59:51	lh_mouse	boost does not have unique_ptr.
2014-11-23 21:59:52	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-23 21:59:55	Supicioso	Wow. I thought they were kind of odly similar.
2014-11-23 22:00:05	lh_mouse	It has scoped_ptr that isn't movable.
2014-11-23 22:00:06	jeaye	Sure it does, lh_mouse.
2014-11-23 22:00:08	juliohm	lh_mouse, what if I need to release the resource before terminating the program?
2014-11-23 22:00:19	juliohm	static goes till the end, correct?
2014-11-23 22:00:24	lh_mouse	juliohm, you need to do NOTHING.
2014-11-23 22:00:36	juliohm	?
2014-11-23 22:00:52	lh_mouse	static objects are destroyed in reverse order of how they have been constructed.
2014-11-23 22:01:10	jeaye	lh_mouse: http://www.boost.org/doc/libs/1_37_0/doc/html/boost/interprocess/unique_ptr.html
2014-11-23 22:01:17	jeaye	No longer present.
2014-11-23 22:01:26	jeaye	It _was_, however. Just lacked move semantics.
2014-11-23 22:01:32	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Quit: ChatZilla 0.9.91 [Firefox 28.0/20140314220517])
2014-11-23 22:02:31	lh_mouse	jeaye, let's do not talk about stuff that no longer exists.
2014-11-23 22:02:31	jeaye	juliohm: In a static unique_ptr, just call .reset() to release it
2014-11-23 22:02:33	juliohm	lh_mouse, I mean, suppose the user deletes some big array in the GUI, how a static could be useful?
2014-11-23 22:02:53	jeaye	lh_mouse: I said they _were_ in boost. You were wrong.
2014-11-23 22:02:55	jeaye	'nough said.
2014-11-23 22:03:12	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-23 22:03:26	-->	marvimias (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has joined ##c++
2014-11-23 22:03:28	juliohm	What do you guys think of the factory pattern design?
2014-11-23 22:03:38	jeaye	juliohm: Stop fucking asking the same question.
2014-11-23 22:03:51	juliohm	jeaye, I'm trying to grasp if I'll implement it or not
2014-11-23 22:03:51	jeaye	It's been 4-5 times now.
2014-11-23 22:04:03	-->	Guest77311 (~burgundy@188.26.170.33) has joined ##c++
2014-11-23 22:04:03	<--	Guest77311 (~burgundy@188.26.170.33) has quit (Excess Flood)
2014-11-23 22:04:06	lh_mouse	juliohm, virtual shared_ptr<session_base> on_client_connect() = 0;
2014-11-23 22:04:08	lh_mouse	!next
2014-11-23 22:04:09	nolyc	Another satisfied customer, next!
2014-11-23 22:04:16	marvimias	So i'm working on an archive of many CodeChef snippets of code. I'm currently working on this easy ATM problem: http://www.codechef.com/problems/HS08TEST According to the compiler, it says i have it right but i exceeded the time limit in which this must compile in! So what can i do to optimize this for it to compile at a much faster rate? Any theories or hints are appreciate it, your welcome to offer your code if you please but its n
2014-11-23 22:04:17	marvimias	ot necessary, just any form of information is helpful!
2014-11-23 22:04:54	marvimias	Here is the code: http://pastebin.com/dspmfm7G
2014-11-23 22:05:14	-->	Burgundy (~burgundy@188.26.170.33) has joined ##c++
2014-11-23 22:05:28	Stryyker	I haven't looked at your code. Do you know what forward declarations are?
2014-11-23 22:06:20	-->	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has joined ##c++
2014-11-23 22:07:54	<--	ryonagana (~quassel@179.154.123.2) has quit (Read error: Connection reset by peer)
2014-11-23 22:11:38	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 22:12:25	<--	k0nichiwa (~jdoe@174.71.181.20) has quit (Ping timeout: 256 seconds)
2014-11-23 22:12:57	marvimias	Anyone?
2014-11-23 22:13:39	-->	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has joined ##c++
2014-11-23 22:14:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 22:14:57	<--	seronis (~seronis@unaffiliated/seronis) has quit (Ping timeout: 240 seconds)
2014-11-23 22:15:52	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit (Read error: Connection reset by peer)
2014-11-23 22:17:23	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-23 22:17:52	mihipte	marvimias, it's taking too long to *compile*?
2014-11-23 22:18:24	marvimias	I removed a loop, so it is a bit better now: http://pastebin.com/uj9wpQAM
2014-11-23 22:18:29	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-23 22:18:40	Supicioso	Yey for mysql_init memory leaks.
2014-11-23 22:18:51	Supicioso	So much for a leak free program.
2014-11-23 22:19:10	mihipte	marvimias, are you sure it's not the runtime that's taking too long?
2014-11-23 22:19:19	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2014-11-23 22:19:27	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-23 22:20:01	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-23 22:20:52	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-23 22:21:39	<--	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has quit (Quit: Leaving)
2014-11-23 22:24:28	-->	Kn|t3 (~agarwalvi@2401:fa00:a:0:71a4:b95f:2ef4:6e50) has joined ##c++
2014-11-23 22:27:18	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-23 22:28:24	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-23 22:29:44	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-23 22:30:28	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-23 22:30:39	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-23 22:33:38	<--	AmR|EiSa (~quassel@41.42.234.176) has quit (Remote host closed the connection)
2014-11-23 22:35:45	<--	HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (Ping timeout: 258 seconds)
2014-11-23 22:38:37	<--	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has quit (Quit: Leaving)
2014-11-23 22:40:48	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-23 22:42:27	<--	Sos (Sos@d181-38.icpnet.pl) has quit (Quit: Leaving)
2014-11-23 22:45:45	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 22:48:44	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-23 22:48:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 22:49:53	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 22:52:56	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 22:53:12	<--	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has quit (Ping timeout: 244 seconds)
2014-11-23 22:54:44	<--	crandersons (~crantron@cpe-23-240-14-135.socal.res.rr.com) has quit
2014-11-23 22:54:59	-->	basic6_ (~basic6@p4FCB7FBE.dip0.t-ipconnect.de) has joined ##c++
2014-11-23 22:55:42	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 265 seconds)
2014-11-23 22:55:42	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Ping timeout: 265 seconds)
2014-11-23 22:55:42	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Read error: Connection reset by peer)
2014-11-23 22:56:48	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 22:57:47	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-23 22:58:06	<--	basic6 (~basic6@p4FCB79D4.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-23 22:58:42	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-23 23:01:49	<--	LanDi (~LOL@186.232.216.90) has quit (Remote host closed the connection)
2014-11-23 23:05:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 23:05:31	<--	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has quit (Ping timeout: 250 seconds)
2014-11-23 23:05:43	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-23 23:06:07	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-11-23 23:06:17	-->	AmR|EiSa (~quassel@41.42.234.176) has joined ##c++
2014-11-23 23:06:34	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-23 23:07:04	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-23 23:08:13	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 23:11:22	<--	TheLorax (~chris@23.233.29.132) has quit (Quit: Leaving)
2014-11-23 23:12:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 23:14:21	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Quit: WeeChat 0.4.2)
2014-11-23 23:15:30	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 23:17:34	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-23 23:21:40	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 23:22:18	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-11-23 23:22:53	-->	jazzz (~jazzz@109.188.127.245) has joined ##c++
2014-11-23 23:23:17	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-23 23:24:46	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 23:26:47	jazzz	hi. i'm having hard time trying to understand why my program exits when executing syslog function http://pastebin.com/Jr3EmK23
2014-11-23 23:27:16	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-23 23:27:58	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-23 23:29:58	roxfan	what does the debugger say?
2014-11-23 23:30:38	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-11-23 23:31:01	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-23 23:31:13	<--	dooshtuRabbit1 (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has quit (Quit: Leaving)
2014-11-23 23:31:57	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-23 23:32:00	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit
2014-11-23 23:32:14	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-23 23:35:08	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-23 23:35:40	<--	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has quit (Quit: WeeChat 1.0.1)
2014-11-23 23:36:14	-->	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has joined ##c++
2014-11-23 23:36:22	-->	snyp (~Snyp@14.99.88.252) has joined ##c++
2014-11-23 23:37:27	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-23 23:38:07	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-23 23:39:54	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-23 23:42:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 23:44:02	<--	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has quit (Ping timeout: 255 seconds)
2014-11-23 23:45:25	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 23:45:33	jazzz	roxfan: well, actually i have no idea how to debug forked process. reading about that now.
2014-11-23 23:46:26	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-23 23:46:33	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-23 23:46:34	-->	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has joined ##c++
2014-11-23 23:47:07	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-23 23:49:30	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-23 23:51:36	<--	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has quit (Quit: Leaving)
2014-11-23 23:52:29	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Bye.....)
2014-11-23 23:52:40	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-23 23:52:43	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-23 23:54:54	-->	licnep (uid4387@gateway/web/irccloud.com/x-titdtsrcmugngrzg) has joined ##c++
2014-11-23 23:55:54	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Quit: WeeChat 1.0)
2014-11-23 23:57:30	-->	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has joined ##c++
2014-11-23 23:59:05	juliohm	I see Qt programs use new everywhere, should I use unique_ptr instead?
2014-11-23 23:59:30	juliohm	or shared_ptr<>
2014-11-23 23:59:51	juliohm	QWidget* widget = new QFoo();
2014-11-23 23:59:57	juliohm	widget->show()
2014-11-24 00:00:25	juliohm	Do we need smart pointers here?
2014-11-24 00:00:38	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-24 00:02:26	juliohm	oh, qt widgets have only one parent and are destroyed by them
2014-11-24 00:03:12	juliohm	no sharing
2014-11-24 00:03:50	kadoban	juliohm: Yeah, smart pointers assume you are responsible for cleaning them up, but you're not in the Qt framework, in general. So you'd break things by doing that.
2014-11-24 00:04:51	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-24 00:06:06	juliohm	I got it, very nice things are clean
2014-11-24 00:07:07	moonchild	juliohm: qt does its own internal memory management
2014-11-24 00:07:16	juliohm	that is cool
2014-11-24 00:07:23	o11c	{ auto fn = []() mutable {}; }
2014-11-24 00:07:23	geordi	warning: variable 'fn' set but not used
2014-11-24 00:07:30	o11c	geordi -w { auto fn = [] mutable {}; }
2014-11-24 00:07:30	geordi	error: expected '{' before 'mutable'
2014-11-24 00:07:36	o11c	interesting ^
2014-11-24 00:07:45	moonchild	widgets free the memory you give them, so refer to the qt docs & style guides
2014-11-24 00:08:03	<--	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has quit (Ping timeout: 264 seconds)
2014-11-24 00:08:58	moonchild	...its really annoying when the api gets the memory management wrong
2014-11-24 00:09:25	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 240 seconds)
2014-11-24 00:10:40	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-24 00:12:51	adamm	which api?
2014-11-24 00:13:00	moonchild	qt
2014-11-24 00:13:08	adamm	how is it "wrong"?
2014-11-24 00:13:48	moonchild	now and then you end up with a ref-counting cycle, and its pretty ugly to debug
2014-11-24 00:14:37	<--	r3g3x (~r3g3x@unaffiliated/r3g3x) has quit (Quit: Leaving)
2014-11-24 00:14:57	moonchild	ran into that a few years back with something in QSSLSocket
2014-11-24 00:15:09	adamm	That never really happend to me yet.
2014-11-24 00:15:16	moonchild	something about the keys wasn't being freed when it should have been
2014-11-24 00:16:20	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-24 00:17:12	<--	dutzy (~dutzy@2601:7:2400:31a:9ce4:e0a5:a81b:2f98) has quit (Quit: Leaving)
2014-11-24 00:18:17	-->	Garner (uid38417@gateway/web/irccloud.com/x-karwdwvtklkvgkpc) has joined ##c++
2014-11-24 00:18:54	<--	bb010g (uid21050@gateway/web/irccloud.com/x-xndrkhvnhvmdbize) has quit (Quit: Connection closed for inactivity)
2014-11-24 00:19:22	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Quit: ???????)
2014-11-24 00:19:29	-->	Haxxa (~Harrison@cpe-120-149-49-246.oirx3.win.bigpond.net.au) has joined ##c++
2014-11-24 00:20:33	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 00:23:15	<--	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has quit (Quit: mdkess)
2014-11-24 00:25:52	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 00:26:44	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-24 00:29:09	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 00:29:38	<--	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Quit: Leaving)
2014-11-24 00:30:16	-->	endomancer (~endomance@2001:8003:2e3b:e301:48a0:6389:26a1:5449) has joined ##c++
2014-11-24 00:30:25	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-24 00:30:47	<--	Rafaelfsilva (~Rafaelfsi@177.184.115.76) has quit (Ping timeout: 245 seconds)
2014-11-24 00:31:22	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-24 00:32:36	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-24 00:35:24	<--	mike_f (~MF@194.28.69.111.static.snap.net.nz) has quit
2014-11-24 00:35:39	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-24 00:37:59	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 00:38:38	-->	f00dMonsta (~f00dMonst@198.58.138.101) has joined ##c++
2014-11-24 00:39:16	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 258 seconds)
2014-11-24 00:39:36	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-24 00:39:47	zq	is everyone asleep
2014-11-24 00:40:01	s00pcan	I wish
2014-11-24 00:40:15	zq	ah, a fellow burner of the midnight oil
2014-11-24 00:40:18	 *	JamesNZ snoreszzzzzzz
2014-11-24 00:40:55	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 00:41:06	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 00:42:14	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Quit:  Hexchat -  A REAL handcrafted IRC client.)
2014-11-24 00:42:28	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Client Quit)
2014-11-24 00:44:08	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 00:45:45	-->	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has joined ##c++
2014-11-24 00:47:08	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-24 00:47:28	-->	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has joined ##c++
2014-11-24 00:49:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 00:51:15	<--	jazzz (~jazzz@109.188.127.245) has quit (Quit: leaving)
2014-11-24 00:51:29	-->	jazzz (~jazzz@109.188.127.245) has joined ##c++
2014-11-24 00:52:54	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 00:52:55	Chris	zq: are you familiar with timezones?
2014-11-24 00:54:51	<--	proteusguy (~proteusgu@ppp-110-168-229-7.revip5.asianet.co.th) has quit (Ping timeout: 244 seconds)
2014-11-24 00:55:00	jeaye	Hah. It's 14:06.
2014-11-24 00:56:41	<--	DeadSix27 (~deadsix@unaffiliated/deadsix17) has quit (Ping timeout: 250 seconds)
2014-11-24 00:58:38	-->	DeadSix27 (~deadsix@unaffiliated/deadsix17) has joined ##c++
2014-11-24 00:59:03	Chris	jeaye: I guess your clock is 3 minutes fast :)
2014-11-24 00:59:04	<--	nikki93_ (~nikki93@nat-oitwireless-outside-vapornet3-o-109.Princeton.EDU) has quit (Remote host closed the connection)
2014-11-24 00:59:11	Chris	Where are you?
2014-11-24 00:59:34	Chris	17:07 here
2014-11-24 00:59:57	jeaye	Singapore
2014-11-24 01:00:05	V-ille	didn't we have a
2014-11-24 01:00:08	V-ille	!a/s/l
2014-11-24 01:00:10	V-ille	no
2014-11-24 01:00:13	-->	kmpiyo (~kampiyo@177.231.128.139) has joined ##c++
2014-11-24 01:00:18	Chris	I'm so sorry.
2014-11-24 01:00:21	jeaye	V-ille: We did.
2014-11-24 01:00:29	jeaye	!fun
2014-11-24 01:00:31	nolyc	##c++ is a topical channel. There is No Fun Allowed in ##c++.
2014-11-24 01:00:34	jeaye	Hmm
2014-11-24 01:00:39	moonchild	i think its in the gretting for the chan
2014-11-24 01:00:44	moonchild	!topic
2014-11-24 01:00:45	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-24 01:00:52	jeaye	Ah.
2014-11-24 01:00:56	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has quit (Quit: WeeChat 0.3.7)
2014-11-24 01:01:22	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 01:01:47	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-24 01:01:55	<--	chxane (~chxane@pool-98-115-120-66.phlapa.fios.verizon.net) has quit (Quit: Leaving)
2014-11-24 01:01:58	<--	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has quit (Ping timeout: 240 seconds)
2014-11-24 01:02:32	<--	srjek (~srjek@46dhcp67.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-24 01:02:40	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-24 01:02:43	-->	srjek (~srjek@46dhcp67.ece.uic.edu) has joined ##c++
2014-11-24 01:04:07	-->	PCChris (d81a634c@gateway/web/freenode/ip.216.26.99.76) has joined ##c++
2014-11-24 01:06:08	<--	yuung (~john@71-223-24-245.phnx.qwest.net) has quit (Quit: Leaving)
2014-11-24 01:06:14	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-24 01:06:20	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-24 01:06:22	<--	notpara (~para@213.187.75.26) has quit (Quit: ->)
2014-11-24 01:07:31	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Quit: leaving)
2014-11-24 01:08:24	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-24 01:09:08	-->	proteusguy (~proteusgu@ppp-110-168-229-1.revip5.asianet.co.th) has joined ##c++
2014-11-24 01:09:27	<--	pingupingu (~pinguping@unaffiliated/pingupingu) has quit (Quit: Konversation terminated!)
2014-11-24 01:10:48	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2014-11-24 01:11:48	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has quit (Quit: WeeChat 0.3.7)
2014-11-24 01:12:04	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 01:12:33	<--	oleo (~oleo@xdsl-78-35-185-46.netcologne.de) has quit (Quit: Verlassend)
2014-11-24 01:13:01	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has quit (Client Quit)
2014-11-24 01:13:16	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 01:13:29	-->	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-11-24 01:13:35	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 01:13:37	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has left ##c++
2014-11-24 01:15:47	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 01:17:05	<--	endomancer (~endomance@2001:8003:2e3b:e301:48a0:6389:26a1:5449) has quit (Quit: endomancer)
2014-11-24 01:17:47	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-24 01:18:01	<--	proteusguy (~proteusgu@ppp-110-168-229-1.revip5.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-24 01:18:14	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-24 01:20:15	-->	endomancer (~endomance@2001:8003:2e3b:e301:ecac:7c40:e927:7c50) has joined ##c++
2014-11-24 01:21:00	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-24 01:22:51	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-24 01:24:04	-->	HerzogDeXtEr1 (~flex@i59F6D149.versanet.de) has joined ##c++
2014-11-24 01:24:48	matt90	!fun isn't c++
2014-11-24 01:24:52	matt90	ban !fun
2014-11-24 01:25:03	<--	PCChris (d81a634c@gateway/web/freenode/ip.216.26.99.76) has quit (Quit: Page closed)
2014-11-24 01:25:39	<--	derer (~derer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-24 01:25:45	-->	nikki93_ (~nikki93@nat-oitwireless-outside-vapornet3-o-109.Princeton.EDU) has joined ##c++
2014-11-24 01:25:48	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-24 01:25:50	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2014-11-24 01:26:36	<--	nikki93_ (~nikki93@nat-oitwireless-outside-vapornet3-o-109.Princeton.EDU) has quit (Client Quit)
2014-11-24 01:26:57	<--	HerzogDeXtEr (~flex@i59F6B043.versanet.de) has quit (Ping timeout: 250 seconds)
2014-11-24 01:27:00	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 240 seconds)
2014-11-24 01:27:56	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-24 01:28:00	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-24 01:28:36	-->	orta (~orta@192.210.214.197) has joined ##c++
2014-11-24 01:30:11	-->	oliprof2 (~oliprof2@95.147.72.144) has joined ##c++
2014-11-24 01:31:10	-->	ilhami (~IlhamiD@91.194.37.55) has joined ##c++
2014-11-24 01:31:24	-->	Oliprof (~Olipro@95.147.72.144) has joined ##c++
2014-11-24 01:31:24	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 01:32:32	-->	proteusguy (~proteusgu@ppp-110-168-229-1.revip5.asianet.co.th) has joined ##c++
2014-11-24 01:32:46	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-24 01:33:03	<--	oliprof2 (~oliprof2@95.147.72.144) has quit (Read error: Connection reset by peer)
2014-11-24 01:33:32	-->	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has joined ##c++
2014-11-24 01:33:33	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 245 seconds)
2014-11-24 01:33:59	<--	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has quit (Client Quit)
2014-11-24 01:34:13	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-24 01:34:36	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 265 seconds)
2014-11-24 01:34:37	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has left ##c++
2014-11-24 01:35:00	-->	fOrcee (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-24 01:35:34	-->	BlaXpirit (~blaxpirit@54-12-124-91.pool.ukrtel.net) has joined ##c++
2014-11-24 01:35:40	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 01:36:38	-->	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has joined ##c++
2014-11-24 01:36:57	-->	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has joined ##c++
2014-11-24 01:37:01	<--	Kn|t3 (~agarwalvi@2401:fa00:a:0:71a4:b95f:2ef4:6e50) has quit (Ping timeout: 258 seconds)
2014-11-24 01:37:22	zap0	it is a tropical channel, perhaps you meant banana fun?
2014-11-24 01:37:35	<--	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has left ##c++
2014-11-24 01:38:11	-->	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has joined ##c++
2014-11-24 01:38:12	<--	ilhami (~IlhamiD@91.194.37.55) has quit (Ping timeout: 256 seconds)
2014-11-24 01:38:26	-->	ilhami (~IlhamiD@91.194.37.55) has joined ##c++
2014-11-24 01:41:15	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-24 01:41:48	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-24 01:42:20	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-24 01:42:47	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 244 seconds)
2014-11-24 01:44:25	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-24 01:44:48	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 01:45:42	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-24 01:46:02	-->	armyriad (~armyriad@104.207.136.75) has joined ##c++
2014-11-24 01:47:29	<--	ilhami (~IlhamiD@91.194.37.55) has quit (Ping timeout: 255 seconds)
2014-11-24 01:48:37	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-24 01:49:18	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 01:49:27	-->	Kn|t3 (~agarwalvi@2401:fa00:a:0:71a4:b95f:2ef4:6e50) has joined ##c++
2014-11-24 01:49:51	--	Kn|t3 is now known as Guest49103
2014-11-24 01:50:15	<--	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has quit (Ping timeout: 264 seconds)
2014-11-24 01:51:34	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 01:53:25	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-24 01:53:50	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-24 01:54:38	<--	wakd (~wakd@unaffiliated/wakd) has quit (Ping timeout: 244 seconds)
2014-11-24 01:56:29	-->	luxigo (~luxigo@ppp-27-55-130-49.revip3.asianet.co.th) has joined ##c++
2014-11-24 01:57:04	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 01:57:16	-->	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has joined ##c++
2014-11-24 01:58:25	<--	fOrcee (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has left ##c++
2014-11-24 01:58:29	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-24 02:00:49	<--	luxigo (~luxigo@ppp-27-55-130-49.revip3.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-24 02:01:53	-->	Olipro_ (~Olipro@95.147.72.64) has joined ##c++
2014-11-24 02:02:03	<--	Oliprof (~Olipro@95.147.72.144) has quit (Ping timeout: 272 seconds)
2014-11-24 02:03:19	<--	Christsensen (~Christsen@2a00:1a28:1166:b::1010) has quit (Ping timeout: 272 seconds)
2014-11-24 02:03:25	<--	Josef_K (~jeremy@203.87.3.106) has quit (Ping timeout: 264 seconds)
2014-11-24 02:03:26	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-24 02:06:42	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-24 02:06:52	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-24 02:07:01	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-24 02:07:54	-->	Kostenko_ (~Kostenko@bl13-151-239.dsl.telepac.pt) has joined ##c++
2014-11-24 02:08:20	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 02:08:24	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Ping timeout: 240 seconds)
2014-11-24 02:09:05	<--	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has quit (Quit: :q!)
2014-11-24 02:10:26	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (Remote host closed the connection)
2014-11-24 02:10:35	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-24 02:10:49	-->	kszatan (~kszatan@94.42.137.2) has joined ##c++
2014-11-24 02:10:50	<--	Kostenko (~Kostenko@bl13-155-130.dsl.telepac.pt) has quit (Ping timeout: 255 seconds)
2014-11-24 02:10:58	-->	Gvidon (~gvidon@unaffiliated/gvidon) has joined ##c++
2014-11-24 02:12:32	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 02:13:52	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-24 02:13:56	<--	Voidwalkr (Voidwalkr@74.73.43.211) has quit
2014-11-24 02:13:59	-->	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has joined ##c++
2014-11-24 02:15:11	-->	reiser_ (~reiser@116.58.243.196) has joined ##c++
2014-11-24 02:15:57	-->	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-11-24 02:18:47	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-24 02:18:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 02:21:30	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-24 02:22:06	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 02:22:30	<--	realloc11 (~realloc1@aftr-185-17-204-199.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-24 02:22:37	-->	ilhami (~IlhamiD@194.182.245.60) has joined ##c++
2014-11-24 02:22:49	<--	reiser_ (~reiser@116.58.243.196) has quit (Read error: Connection reset by peer)
2014-11-24 02:23:06	-->	reiser_ (~reiser@116.58.243.196) has joined ##c++
2014-11-24 02:23:20	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 264 seconds)
2014-11-24 02:23:52	<--	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has quit
2014-11-24 02:24:01	-->	hexagoxel (~hexagoxel@kiel-4d0672ff.pool.mediaways.net) has joined ##c++
2014-11-24 02:24:02	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-qdlwpbardtpkhckh) has quit (Quit: Connection closed for inactivity)
2014-11-24 02:24:45	-->	TzilTzal (~yh@203.126.56.18) has joined ##c++
2014-11-24 02:25:22	-->	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-144-2.revip2.asianet.co.th) has joined ##c++
2014-11-24 02:25:49	-->	samuel02 (~samuel02@pub94-188.pub.ltu.se) has joined ##c++
2014-11-24 02:25:56	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-24 02:26:39	-->	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has joined ##c++
2014-11-24 02:27:01	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 02:27:30	<--	samuel02 (~samuel02@pub94-188.pub.ltu.se) has quit (Remote host closed the connection)
2014-11-24 02:28:08	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 264 seconds)
2014-11-24 02:28:44	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-24 02:28:44	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-24 02:28:44	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-24 02:29:33	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 02:29:37	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-24 02:29:45	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 02:30:34	Jinxit	should one mess with inline to optimize, or is it better to rely on the compiler?
2014-11-24 02:30:53	hypera1r	rely on the compiler
2014-11-24 02:30:58	-->	nardev (~nardev@77.238.221.157) has joined ##c++
2014-11-24 02:31:08	hypera1r	well, for the most part
2014-11-24 02:31:26	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-24 02:31:29	Jinxit	when is it better to explicitly inline then?
2014-11-24 02:31:30	Stryyker	profile and see if it will make any maerial difference
2014-11-24 02:31:37	Jinxit	true
2014-11-24 02:31:50	-->	timj1 (~timj@p5DDB30FA.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 02:31:56	hypera1r	in reality, unless you're compiling with -flto, the compiler won't be able to inline anything that hasn't been #included
2014-11-24 02:32:06	hypera1r	as in, the entire function body
2014-11-24 02:32:14	hypera1r	rather than just the function signature
2014-11-24 02:32:25	Jinxit	oh okay
2014-11-24 02:32:33	hypera1r	and if you do toss this function into a header, you're going to have to set inline on it
2014-11-24 02:32:48	Jinxit	yeah that's for header-only stuff right?
2014-11-24 02:32:52	hypera1r	otherwise you get issues with conflicting symbols and the like
2014-11-24 02:32:53	hypera1r	yeah
2014-11-24 02:33:05	hypera1r	the inline keyword has two effects
2014-11-24 02:33:08	hypera1r	one is to weaken the symbol
2014-11-24 02:33:28	hypera1r	to avoid symbol clashes between multiple .o's being linked together which had included the same function from the header
2014-11-24 02:33:50	hypera1r	and the other effect is just to hint to the compiler that it's inline
2014-11-24 02:34:12	hypera1r	i think compilers usually just ignore the inline keyword and decide on their own whether they want to inline the function or not
2014-11-24 02:34:19	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 02:34:28	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-24 02:34:43	<--	timj (~timj@p4FC96BB1.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-24 02:35:05	<--	atod_ (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-24 02:35:31	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-24 02:36:04	Jinxit	so if I write it, it MIGHT inline, if I don't, it will never inline?
2014-11-24 02:36:38	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-24 02:36:49	hypera1r	nono
2014-11-24 02:36:49	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-24 02:36:59	hypera1r	if you write it, it might inline, and if you don't, it still might inline.
2014-11-24 02:37:00	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 02:37:16	hypera1r	in other words, the real usecase for the inline keyword is to avoid these errors:
2014-11-24 02:37:22	hypera1r	test2.o: In function `helloworld()':
2014-11-24 02:37:23	hypera1r	test2.cc:(.text+0x0): multiple definition of `helloworld()'
2014-11-24 02:37:23	hypera1r	test.o:test.cc:(.text+0x0): first defined here
2014-11-24 02:37:28	-->	Christsensen (~Christsen@p3E9E9F47.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 02:37:30	mihipte	vaguely more likely to inline if you write it
2014-11-24 02:37:52	Jinxit	mhm okay
2014-11-24 02:38:18	--	SubCreative is now known as Sub|zzz
2014-11-24 02:39:57	hypera1r	there is a way to force inlining
2014-11-24 02:40:06	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-24 02:40:08	hypera1r	but it's compiler specific, and you should only do it if you really know what you're doing
2014-11-24 02:40:15	hypera1r	otherwise just trust the compiler
2014-11-24 02:40:20	-->	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-24 02:40:25	Jinxit	"paste the code" :D
2014-11-24 02:40:36	mihipte	that works too <.<
2014-11-24 02:40:59	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-24 02:41:00	Jinxit	I'm not in a specific use case actually, just want to learn how stuff works, thanks
2014-11-24 02:41:08	-->	jagob (~jacob@h195.natout.aau.dk) has joined ##c++
2014-11-24 02:41:20	<--	kmpiyo (~kampiyo@177.231.128.139) has quit (Remote host closed the connection)
2014-11-24 02:41:24	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-24 02:41:45	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 02:42:09	Jinxit	are lambda functions inlined or not?
2014-11-24 02:42:47	latexi95	depends
2014-11-24 02:43:21	Jinxit	let me guess, compiler decides?
2014-11-24 02:43:26	latexi95	yup
2014-11-24 02:43:28	Jinxit	lol
2014-11-24 02:43:33	Jinxit	compilers are too damn smart I say
2014-11-24 02:44:02	mihipte	lambda functions are just normal functions anyway... you just don't have the syntax to put modifiers on them
2014-11-24 02:44:22	Jinxit	alright
2014-11-24 02:45:43	<--	HerzogDeXtEr1 (~flex@i59F6D149.versanet.de) has quit (Quit: Leaving.)
2014-11-24 02:46:43	<--	Burga (~andrewm@124-170-152-229.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-24 02:47:01	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-24 02:47:07	<--	hexagoxel (~hexagoxel@kiel-4d0672ff.pool.mediaways.net) has quit (Ping timeout: 264 seconds)
2014-11-24 02:47:11	-->	nardev_ (~nardev@77.238.221.157) has joined ##c++
2014-11-24 02:49:05	cbreak	lambda functions are not generally normal functions
2014-11-24 02:49:31	cbreak	mihipte: they are closer related to general functor objects, since they can have state.
2014-11-24 02:50:10	mihipte	cbreak, eh, forgot about the [&] semantics
2014-11-24 02:50:27	<--	Betal (~Beta@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2014-11-24 02:50:48	cbreak	generally they are either used in combination with std::function, in which case they are very likely impossible to inline, or with templates in which case chances are very good they are inlined, unless you use shitty compilers such as visual studio
2014-11-24 02:50:53	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:6007:9425:5f93:b2c) has joined ##c++
2014-11-24 02:50:56	mihipte	normal... member... functions
2014-11-24 02:51:38	cbreak	any capture is state.
2014-11-24 02:51:52	<--	schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-24 02:51:54	Adrinael	Closure is just an additional hidden parameter though
2014-11-24 02:52:04	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 02:52:07	cbreak	parameter?
2014-11-24 02:52:28	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-24 02:52:32	Adrinael	Yes
2014-11-24 02:52:35	cbreak	they are objects
2014-11-24 02:52:45	-->	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has joined ##c++
2014-11-24 02:52:46	Adrinael	Yes, and passed as parameter to the lambda function
2014-11-24 02:52:48	cbreak	they are self-contained
2014-11-24 02:52:55	mihipte	abstraction of 'this'
2014-11-24 02:53:00	Adrinael	What mihipte said
2014-11-24 02:53:14	cbreak	template<typename T> void do_stuff(T t) // you can pass a lambda, no hidden parameter
2014-11-24 02:53:19	cbreak	lambdas are self-contained
2014-11-24 02:53:21	Adrinael	Still the point stands, chances are good that lambdas are inlined unless on a shitty compiler
2014-11-24 02:53:30	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 02:53:37	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-24 02:53:48	cbreak	same with function: you can pass one into std::function, without additional parameter
2014-11-24 02:53:53	cbreak	because they are objects
2014-11-24 02:53:57	Adrinael	I'm talking about the closure that gets passed to the lambda function
2014-11-24 02:54:05	cbreak	oh, that's irrelevant
2014-11-24 02:54:37	cbreak	what influences inlining is wether the code can be found at compile time, not the data it works on
2014-11-24 02:55:03	Adrinael	Not arguing against that
2014-11-24 02:55:26	Adrinael	I'm arguing against what mihipte said; that state does not affect inline-ability at all
2014-11-24 02:55:28	-->	textbox (~lukaspuke@89.249.80.102) has joined ##c++
2014-11-24 02:55:48	mihipte	yeah, I had a brain fart
2014-11-24 02:56:50	<--	textbox (~lukaspuke@89.249.80.102) has quit (Quit: Using Circe, the loveliest of all IRC clients)
2014-11-24 02:57:07	cbreak	actual inlining is just an implementation detail for performance anyway.
2014-11-24 02:57:13	-->	samuel02 (~samuel02@pub94-188.pub.ltu.se) has joined ##c++
2014-11-24 02:58:38	-->	ptx (~ptx@0133500856.0.fullrate.dk) has joined ##c++
2014-11-24 02:58:58	<--	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 03:01:21	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-24 03:02:31	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-24 03:03:41	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-24 03:03:41	matt90	great, the log messages from my nodes are combinatorial
2014-11-24 03:03:47	matt90	221GB before I caught it
2014-11-24 03:04:07	-->	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-24 03:04:11	-->	confusaest (~ntnix@192.227.142.100) has joined ##c++
2014-11-24 03:04:29	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-24 03:04:48	<--	stfn (~stfn@unaffiliated/stfn) has quit (Remote host closed the connection)
2014-11-24 03:04:59	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-24 03:05:01	-->	TheHackOps (~TheHackOp@203-158-39-145.dyn.iinet.net.au) has joined ##c++
2014-11-24 03:05:16	-->	stfn (~stfn@unaffiliated/stfn) has joined ##c++
2014-11-24 03:06:41	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-24 03:07:28	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Ping timeout: 255 seconds)
2014-11-24 03:08:04	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-11-24 03:09:02	obiwahn	hi i am looking for a book on c++11 meta template programming. which should i read?
2014-11-24 03:09:20	pEYEd	what am I missing?  ->  65:14: error: expected primary-expression before '*' token  ->   https://bpaste.net/show/03f144b1b025
2014-11-24 03:09:23	TinoDidriksen	!books
2014-11-24 03:09:24	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-24 03:10:02	TinoDidriksen	pEYEd, FILE* is a type. You're not passing a value of type FILE*
2014-11-24 03:10:32	<--	Guest45198 (~markand@ks3292218.kimsufi.com) has quit (Changing host)
2014-11-24 03:10:36	-->	Guest45198 (~markand@unaffiliated/markand) has joined ##c++
2014-11-24 03:10:36	--	Guest45198 is now known as markand
2014-11-24 03:11:30	TinoDidriksen	pEYEd, looks like you meant for buyfp to be a function local instead of a passed in arg.
2014-11-24 03:12:17	<--	samuel02 (~samuel02@pub94-188.pub.ltu.se) has quit
2014-11-24 03:12:47	-->	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-24 03:13:17	pEYEd	thank you!
2014-11-24 03:13:24	-->	Rav3n (~Rav3n@unaffiliated/rav3nsw0rd) has joined ##c++
2014-11-24 03:13:30	<--	mitch0 (~mitch@2E8B5F8F.catv.pool.telekom.hu) has quit (Quit: leaving)
2014-11-24 03:13:49	-->	mitch0 (~mitch@2E8B5F8F.catv.pool.telekom.hu) has joined ##c++
2014-11-24 03:14:08	-->	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-24 03:15:31	obiwahn	Advanced C++ Metaprogramming - Is that good what do you think?
2014-11-24 03:16:09	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-24 03:17:08	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 03:20:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 03:21:07	matt90	its in the list
2014-11-24 03:21:32	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 03:21:55	<--	jazzz (~jazzz@109.188.127.245) has quit (Quit: leaving)
2014-11-24 03:22:19	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-24 03:23:09	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 03:23:09	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-24 03:23:22	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-24 03:25:21	<--	orta (~orta@192.210.214.197) has quit (Remote host closed the connection)
2014-11-24 03:25:28	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 272 seconds)
2014-11-24 03:25:44	<--	AmR|EiSa (~quassel@41.42.234.176) has quit (Read error: Connection reset by peer)
2014-11-24 03:26:16	<--	k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Ping timeout: 250 seconds)
2014-11-24 03:26:52	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-24 03:27:37	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 240 seconds)
2014-11-24 03:27:51	<--	nardev (~nardev@77.238.221.157) has quit (Quit: Ex-Chat)
2014-11-24 03:28:18	-->	lamarque (~lamarque@192.210.214.197) has joined ##c++
2014-11-24 03:29:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:29:57	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-24 03:30:19	<--	reiser_ (~reiser@116.58.243.196) has quit (Quit: Leaving)
2014-11-24 03:31:30	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:31:42	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:32:16	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-24 03:32:50	-->	k0nichiwa (~jdoe@64.238.189.61) has joined ##c++
2014-11-24 03:33:30	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:33:31	<--	moonchild (~loon@73.13.118.191) has quit (Ping timeout: 255 seconds)
2014-11-24 03:33:43	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:34:40	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:34:40	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:6007:9425:5f93:b2c) has quit (Quit: Leaving)
2014-11-24 03:34:52	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:35:16	ville	i am not sure if any of the tmp books have been updated to c++11. while none of the pre-c++11 tmp becomes invalid some of it is superceded by c++11 solutions.
2014-11-24 03:35:30	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-24 03:37:29	-->	AmR|EiSa (~quassel@41.42.234.176) has joined ##c++
2014-11-24 03:37:32	Jinxit	maybe a good way would be to read a book on it and then look at what changed in C++11?
2014-11-24 03:38:02	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 256 seconds)
2014-11-24 03:38:16	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-24 03:38:21	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:38:38	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:39:04	-->	jrnas (~jrnas@unaffiliated/xedasx) has joined ##c++
2014-11-24 03:39:55	-->	joel_falcou (~Joel@193.55.35.23) has joined ##c++
2014-11-24 03:40:23	<--	joel_falcou (~Joel@193.55.35.23) has quit (Client Quit)
2014-11-24 03:40:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:40:52	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:41:09	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 264 seconds)
2014-11-24 03:41:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:41:52	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:42:34	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:42:43	-->	leakybuckit (~leakybuck@pb-d-128-141-130-203.cern.ch) has joined ##c++
2014-11-24 03:42:47	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:42:52	-->	atod_ (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-24 03:43:05	-->	avvs (~avvs@gateway/tor-sasl/avvs) has joined ##c++
2014-11-24 03:43:05	<--	matt90 (~matt90@149-169-138-60.nat.asu.edu) has quit (Quit: Leaving)
2014-11-24 03:45:01	-->	trader (~errol@ALyon-553-1-186-127.w92-157.abo.wanadoo.fr) has joined ##c++
2014-11-24 03:45:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:45:51	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:46:23	<--	ilhami (~IlhamiD@194.182.245.60) has quit (Ping timeout: 264 seconds)
2014-11-24 03:47:29	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:47:44	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:48:20	Sausage	geordi -w { Foo foo; cout << foo.a, foo.b; } static i; struct Foo { int a; int b; Foo() : b(++i), a(++i) { } };
2014-11-24 03:48:20	geordi	error: 'i' does not name a type
2014-11-24 03:48:33	Sausage	geordi -w { Foo foo; cout << foo.a, foo.b; } static int i; struct Foo { int a; int b; Foo() : b(++i), a(++i) { } };
2014-11-24 03:48:34	geordi	1, 2
2014-11-24 03:48:36	Sausage	whoopsies
2014-11-24 03:49:11	Sausage	What should I be looking at for the order that the parameters for the initializers are executed in?
2014-11-24 03:49:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:49:48	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:50:04	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-24 03:50:33	Sausage	Are the parameters only executed when the object is initialized?
2014-11-24 03:51:21	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-11-24 03:51:30	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:51:51	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:52:17	Sausage	I think it would have to be, or you couldn't rely on base-class initialization for calling virtual functions
2014-11-24 03:52:38	-->	Yepoleb_ (~quassel@188-22-160-77.adsl.highway.telekom.at) has joined ##c++
2014-11-24 03:52:38	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:52:38	<--	Yepoleb (~quassel@91-115-114-253.adsl.highway.telekom.at) has quit (Killed (sinisalo.freenode.net (Nickname regained by services)))
2014-11-24 03:52:38	--	Yepoleb_ is now known as Yepoleb
2014-11-24 03:52:41	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-24 03:52:48	Sausage	Or any function in a base class, probably still bad to use virtual ones.
2014-11-24 03:52:54	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:53:10	-->	rriemann (~rriemann@dhcp-67-115.ixxi.ens-lyon.fr) has joined ##c++
2014-11-24 03:54:16	-->	losh (~losh@staff-fr.corp.dailymotion.com) has joined ##c++
2014-11-24 03:54:37	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:54:50	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:55:23	Sausage	Yeah, figured, it's just an unordered list of expressions, the order is completely meaningless. =p
2014-11-24 03:55:59	<--	endomancer (~endomance@2001:8003:2e3b:e301:ecac:7c40:e927:7c50) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-24 03:56:42	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:56:43	-->	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-24 03:57:02	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 03:57:03	-->	newbie07 (~Areks@rs.gridnine.com) has joined ##c++
2014-11-24 03:57:12	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-24 03:57:37	<--	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Read error: Connection reset by peer)
2014-11-24 03:57:42	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-24 03:57:54	-->	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-24 03:58:23	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-24 03:58:59	-->	BlaXpirit-UA (~blaxpirit@37-107-132-95.pool.ukrtel.net) has joined ##c++
2014-11-24 03:59:36	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 03:59:55	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:00:32	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:00:44	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:01:16	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 04:01:43	<--	BlaXpirit (~blaxpirit@54-12-124-91.pool.ukrtel.net) has quit (Ping timeout: 255 seconds)
2014-11-24 04:02:25	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-24 04:02:33	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:02:50	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:02:59	-->	nostoi (~nostoi@31.Red-176-84-193.dynamicIP.rima-tde.net) has joined ##c++
2014-11-24 04:03:52	<--	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-11-24 04:05:30	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:05:39	<--	b0lt (r00t@unaffiliated/bolt) has quit (Remote host closed the connection)
2014-11-24 04:05:49	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:06:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:06:47	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:06:59	<--	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Read error: Connection reset by peer)
2014-11-24 04:07:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:07:40	-->	akatsukibay2 (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-24 04:07:47	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:09:23	-->	cleopatra (~clerene@200.125.191.150) has joined ##c++
2014-11-24 04:09:28	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:09:29	-->	endomancer (~endomance@2001:8003:2e3b:e301:ecac:7c40:e927:7c50) has joined ##c++
2014-11-24 04:09:50	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:09:58	cleopatra	mmmmm
2014-11-24 04:10:35	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:10:49	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:11:53	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:12:05	<--	cleopatra (~clerene@200.125.191.150) has left ##c++ ("Saliendo")
2014-11-24 04:12:09	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:12:46	-->	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has joined ##c++
2014-11-24 04:13:28	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:13:44	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:15:25	--	Shozan is now known as SHODAN
2014-11-24 04:16:12	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:16:12	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 04:16:27	lh_mouse	Such a long host...
2014-11-24 04:16:46	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 04:16:54	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-24 04:17:35	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 240 seconds)
2014-11-24 04:17:43	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-24 04:18:04	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 250 seconds)
2014-11-24 04:18:12	-->	HerzogDeXtEr (~flex@i59F6D149.versanet.de) has joined ##c++
2014-11-24 04:19:53	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 04:20:14	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-24 04:20:18	-->	mgaunard_ (~mgaunard@193.55.35.2) has joined ##c++
2014-11-24 04:20:28	<--	kszatan (~kszatan@94.42.137.2) has quit (Ping timeout: 265 seconds)
2014-11-24 04:21:57	-->	kszatan (~kszatan@94.42.137.2) has joined ##c++
2014-11-24 04:22:13	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has quit (Ping timeout: 258 seconds)
2014-11-24 04:22:35	-->	jzp113 (7c5dcb6d@gateway/web/freenode/ip.124.93.203.109) has joined ##c++
2014-11-24 04:23:53	mgaunard_	who's right here?
2014-11-24 04:23:58	mgaunard_	geordi: void f(...) {} struct foo { template<class... Args> static auto call(Args&&... args) -> decltype(f(foo(), args...)) { f(foo(), args...); } };
2014-11-24 04:23:59	geordi	Success
2014-11-24 04:24:06	mgaunard_	clang: void f(...) {} struct foo { template<class... Args> static auto call(Args&&... args) -> decltype(f(foo(), args...)) { f(foo(), args...); } };
2014-11-24 04:24:09	clang	error: invalid use of incomplete type 'foo'
2014-11-24 04:24:26	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-24 04:24:40	-->	altin (~altin@46.99.59.89) has joined ##c++
2014-11-24 04:24:40	<--	altin (~altin@46.99.59.89) has quit (Changing host)
2014-11-24 04:24:40	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-24 04:24:48	<--	k0nichiwa (~jdoe@64.238.189.61) has quit (Ping timeout: 240 seconds)
2014-11-24 04:24:53	<--	altin (~altin@flossk/altin) has quit (Remote host closed the connection)
2014-11-24 04:25:39	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-24 04:25:50	-->	kaffeetrauma1 (~Thunderbi@n58.informatik.fh-dortmund.de) has joined ##c++
2014-11-24 04:26:07	Adrinael	clang, replace { f( with { return f(
2014-11-24 04:26:10	clang	Same error.
2014-11-24 04:27:13	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Ping timeout: 250 seconds)
2014-11-24 04:27:33	-->	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has joined ##c++
2014-11-24 04:28:05	<--	mrueg (~mrueg@gentoo/developer/mrueg) has quit (Ping timeout: 250 seconds)
2014-11-24 04:28:59	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-24 04:29:45	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2014-11-24 04:30:36	-->	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-24 04:30:49	-->	fOrcee (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-24 04:31:16	-->	nda__ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-24 04:31:36	belz	mgaunard_: std::declval ..
2014-11-24 04:32:07	<--	nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 240 seconds)
2014-11-24 04:32:18	<--	enterprisedc (~enterpris@ip98-164-211-60.oc.oc.cox.net) has quit (Ping timeout: 245 seconds)
2014-11-24 04:32:44	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-24 04:32:59	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit
2014-11-24 04:34:00	<--	collincd (~collincd@unaffiliated/collincd) has quit (Quit: Ping timeout: IT'S OVER 9000!)
2014-11-24 04:34:34	-->	jzp113_ (7c5dcb6d@gateway/web/freenode/ip.124.93.203.109) has joined ##c++
2014-11-24 04:35:20	ppf	in which situation would i need decltype or result_of?
2014-11-24 04:35:23	<--	efreet (efreet@efreet.xxx) has quit (Ping timeout: 255 seconds)
2014-11-24 04:36:23	<--	jzp113 (7c5dcb6d@gateway/web/freenode/ip.124.93.203.109) has quit (Ping timeout: 246 seconds)
2014-11-24 04:37:05	-->	mrueg (~mrueg@gentoo/developer/mrueg) has joined ##c++
2014-11-24 04:37:12	PlasmaHH	you? never.
2014-11-24 04:37:50	ppf	so who would? :)
2014-11-24 04:39:19	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-24 04:40:07	cbreak	ppf: when ever you want to have the type of an expression
2014-11-24 04:40:11	-->	komarov (~komarov@95-55-14-247.dynamic.avangarddsl.ru) has joined ##c++
2014-11-24 04:40:24	ppf	sure
2014-11-24 04:41:04	ppf	i'm trying to think of a situation where i would need the compiler to fill that in for me
2014-11-24 04:41:19	--	murrekatt_ is now known as murrekatt
2014-11-24 04:41:37	ppf	i've definitely never been in that situation :)
2014-11-24 04:41:47	ville	ppf: templates are usually the cause
2014-11-24 04:42:28	Adrinael	Not knowing which particular overload would be chosen
2014-11-24 04:43:11	mgaunard_	belz: for some reason, I need to have the same code inside the declaration and the definition
2014-11-24 04:43:22	ppf	i'm  guessing it's something you need to marry templaty ducktyping with strict static typing
2014-11-24 04:43:45	cbreak	not really
2014-11-24 04:43:58	cbreak	templates are strictly statically typed
2014-11-24 04:44:41	ppf	sure
2014-11-24 04:45:03	ppf	i'm referring to the frequent use of templates to implement ducktyping
2014-11-24 04:49:13	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 04:49:13	-->	NoNMaDDe_ (~NoNMaDDeN@ppp-58-11-144-2.revip2.asianet.co.th) has joined ##c++
2014-11-24 04:49:13	<--	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-144-2.revip2.asianet.co.th) has quit (Read error: Connection reset by peer)
2014-11-24 04:49:13	-->	immibis_ (~ChatZill1@122-59-116-97.jetstream.xtra.co.nz) has joined ##c++
2014-11-24 04:49:14	<--	immibis (~ChatZill1@125-237-204-205.jetstream.xtra.co.nz) has quit (Ping timeout: 264 seconds)
2014-11-24 04:49:14	--	immibis_ is now known as immibis
2014-11-24 04:49:39	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Client Quit)
2014-11-24 04:50:00	<--	jzp113_ (7c5dcb6d@gateway/web/freenode/ip.124.93.203.109) has quit (Ping timeout: 246 seconds)
2014-11-24 04:50:55	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 04:51:20	<--	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has quit
2014-11-24 04:52:51	belz	mgaunard_: why? as long as same types come out..
2014-11-24 04:53:05	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Client Quit)
2014-11-24 04:53:20	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-24 04:53:20	<--	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has quit (Quit: SiN_Bizkit)
2014-11-24 04:54:14	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-24 04:54:21	fOrcee	Hi
2014-11-24 04:54:25	fOrcee	I heard there were cupcakes
2014-11-24 04:54:45	<--	snyp (~Snyp@14.99.88.252) has quit (Quit: WeeChat 1.0.1)
2014-11-24 04:54:47	-->	Morzan (5eb12252@gateway/web/freenode/ip.94.177.34.82) has joined ##c++
2014-11-24 04:55:09	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-24 04:55:19	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-24 04:55:36	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-24 04:56:08	quaz0r	!stdcpp cupcakes
2014-11-24 04:56:08	nolyc	Standard C++ has no notion of `cupcakes', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-11-24 04:56:11	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-24 04:56:50	-->	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has joined ##c++
2014-11-24 04:56:52	quaz0r	no cupcakes to be had here bro, just really intense autism
2014-11-24 04:57:26	PlasmaHH	template<class T> void do_foo( T* t, decltype(t->foo())* = 0 );
2014-11-24 04:57:47	<--	dooshtuRabbit (~dooshtuRa@2601:c:2f01:d2b7:145b:b442:60e:9256) has quit (Ping timeout: 258 seconds)
2014-11-24 04:58:07	-->	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has joined ##c++
2014-11-24 04:58:19	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 256 seconds)
2014-11-24 04:58:29	<--	trader (~errol@ALyon-553-1-186-127.w92-157.abo.wanadoo.fr) has left ##c++
2014-11-24 04:58:38	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-24 04:59:02	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-24 04:59:33	fOrcee	Cool, I'll take two of those, thanks, quaz0r
2014-11-24 04:59:51	<--	AmR|EiSa (~quassel@41.42.234.176) has left ##c++ ("http://quassel-irc.org - Chat comfortably. Anywhere.")
2014-11-24 04:59:55	<--	Morzan (5eb12252@gateway/web/freenode/ip.94.177.34.82) has quit
2014-11-24 05:00:44	<--	FlorianJW-terra (~florian@madways.de) has quit (Quit: Leaving.)
2014-11-24 05:00:46	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Quit: Leaving)
2014-11-24 05:00:59	<--	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has quit (Ping timeout: 255 seconds)
2014-11-24 05:02:15	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:02:31	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:02:51	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:03:17	tesuji	I have a C-API that requires a function pointer as a callback. I would like to be able to bind an instance of a class to one of its member functions and use that as the callback. Is that possible, short of creating a free function and a global object?
2014-11-24 05:03:22	mgaunard_	belz: because I can use a macro to avoid typing it twice
2014-11-24 05:03:24	tesuji	clang, { struct A{ void foo(){ BARK; } }; typedef void(*fnptr)(void); A a; fnptr f1 = bind(&A::foo, a); f1(); }
2014-11-24 05:03:27	clang	error: no viable conversion from '__bind<void (A::*)(), A &>' to 'fnptr' (aka 'void (*)()')
2014-11-24 05:04:07	<--	licnep (uid4387@gateway/web/irccloud.com/x-titdtsrcmugngrzg) has quit (Quit: Connection closed for inactivity)
2014-11-24 05:04:30	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:04:35	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-24 05:04:45	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:04:48	Adrinael	tesuji, the C code wouldn't know how to call such a function. Something somewhere needs to create a free function that calls the member function on the correct object.
2014-11-24 05:05:02	-->	kapil_ (uid36151@gateway/web/irccloud.com/x-cgpwnzzjqppilwya) has joined ##c++
2014-11-24 05:05:26	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-24 05:05:30	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-24 05:05:35	tesuji	Adrinael: I see.
2014-11-24 05:05:47	ppf	tesuji: i guess you can wrap it in a lambda
2014-11-24 05:05:59	tesuji	ppf: no you cannot
2014-11-24 05:06:11	tesuji	{ struct A{ void foo(){ BARK; } }; typedef void(*fnptr)(void); A a; fnptr f1 = [&a](){ bind(&A::foo, a)(); }; }
2014-11-24 05:06:11	geordi	error: cannot convert 'main(int, char**)::<lambda()>' to 'fnptr {aka void (*)()}' in initialization
2014-11-24 05:06:29	Adrinael	Only lambdas without a closure can be converted to a function pointer
2014-11-24 05:06:47	Adrinael	Where would the closure be if it was convertible?
2014-11-24 05:06:52	ppf	true ...
2014-11-24 05:07:14	-->	Malsasa_ (~Malsasa@125.164.139.31) has joined ##c++
2014-11-24 05:07:26	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:07:43	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:09:06	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:09:21	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:09:35	<--	mrueg (~mrueg@gentoo/developer/mrueg) has quit (Ping timeout: 255 seconds)
2014-11-24 05:09:56	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-24 05:10:27	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:10:47	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:12:08	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 264 seconds)
2014-11-24 05:12:25	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:12:45	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:13:28	-->	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has joined ##c++
2014-11-24 05:14:45	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: No route to host)
2014-11-24 05:14:45	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 05:14:45	<--	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has quit (Quit: Leaving)
2014-11-24 05:14:45	belz	mgaunard_: use c++14 or make it free function?
2014-11-24 05:16:54	-->	efreet (efreet@efreet.xxx) has joined ##c++
2014-11-24 05:16:54	-->	mrueg (~mrueg@gentoo/developer/mrueg) has joined ##c++
2014-11-24 05:18:09	<--	nostoi (~nostoi@31.Red-176-84-193.dynamicIP.rima-tde.net) has quit (Quit: Verlassend)
2014-11-24 05:18:26	belz	or make some ugly work around, like adding foo parameter after the pack with default and use that in both.. :p
2014-11-24 05:19:42	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:20:07	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:20:16	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-24 05:20:44	-->	Gama11 (~quassel@p5DD1EBE0.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:21:28	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:21:34	-->	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has joined ##c++
2014-11-24 05:21:49	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:23:12	-->	HewloThere (~HewloTher@180.200.154.73) has joined ##c++
2014-11-24 05:23:22	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:23:45	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:23:57	<--	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has quit (Ping timeout: 255 seconds)
2014-11-24 05:24:45	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-24 05:24:52	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-24 05:25:18	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:25:31	HewloThere	Hi guys! Would you mind filling out a very quick multiple choice survey about development and programming? http://goo.gl/forms/R7NtyuVkBD Thanks to anyone who does!
2014-11-24 05:25:47	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:25:54	<--	HewloThere (~HewloTher@180.200.154.73) has quit (Killed (idoru (Spam is off topic on freenode.)))
2014-11-24 05:26:02	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-24 05:26:55	-->	paul424 (~chatzilla@91.207.69.143) has joined ##c++
2014-11-24 05:27:43	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:28:05	-->	JoshSyn (~swoorup@d122-111-246-16.per801.wa.optusnet.com.au) has joined ##c++
2014-11-24 05:28:41	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:28:46	<--	dooshtuRabbit (~dooshtuRa@c-76-117-55-220.hsd1.nj.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-24 05:28:57	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-24 05:29:03	-->	V-ille (~ville@59ec6584.symbio.com) has joined ##c++
2014-11-24 05:29:11	RokerHRO	:-(
2014-11-24 05:29:38	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 05:32:28	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-24 05:33:40	-->	SiGe__ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 05:33:40	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-24 05:33:41	<--	zwer_f (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-24 05:34:06	Jinxit	poor duder
2014-11-24 05:34:57	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-24 05:35:16	<--	komarov (~komarov@95-55-14-247.dynamic.avangarddsl.ru) has quit (Ping timeout: 258 seconds)
2014-11-24 05:35:17	RokerHRO	undude
2014-11-24 05:35:28	-->	ockomock (~bpxbzbpx@h-157-207.a163.priv.bahnhof.se) has joined ##c++
2014-11-24 05:35:45	-->	o-0-o (~achubergs@97-113-31-93.tukw.qwest.net) has joined ##c++
2014-11-24 05:37:10	<--	ockomock (~bpxbzbpx@h-157-207.a163.priv.bahnhof.se) has left ##c++
2014-11-24 05:38:08	<--	o] (~achubergs@97-113-5-187.tukw.qwest.net) has quit (Ping timeout: 272 seconds)
2014-11-24 05:38:18	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Quit: Leaving)
2014-11-24 05:38:40	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-24 05:41:08	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-24 05:41:18	<--	kaffeetrauma1 (~Thunderbi@n58.informatik.fh-dortmund.de) has quit (Ping timeout: 272 seconds)
2014-11-24 05:41:52	-->	snakenerd (~Thunderbi@177.19.61.118) has joined ##c++
2014-11-24 05:43:41	-->	cleamoon (~Thunderbi@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-24 05:43:51	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2014-11-24 05:44:32	-->	movsb (~denis@cpc1-cmbg1-0-0-cust737.5-4.cable.virginm.net) has joined ##c++
2014-11-24 05:45:52	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Client Quit)
2014-11-24 05:46:20	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2014-11-24 05:47:51	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-24 05:48:30	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-24 05:49:12	<--	losh (~losh@staff-fr.corp.dailymotion.com) has quit (Ping timeout: 245 seconds)
2014-11-24 05:50:09	<--	immibis (~ChatZill1@122-59-116-97.jetstream.xtra.co.nz) has quit (Ping timeout: 272 seconds)
2014-11-24 05:50:15	--	murrekatt is now known as murrekatt_
2014-11-24 05:51:01	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-24 05:51:43	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-24 05:52:25	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-qryibjjngomezxfn) has joined ##c++
2014-11-24 05:52:39	<--	snakenerd (~Thunderbi@177.19.61.118) has quit (Quit: snakenerd)
2014-11-24 05:52:54	<--	schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-24 05:53:03	-->	losh (~losh@staff-fr.corp.dailymotion.com) has joined ##c++
2014-11-24 05:54:41	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-24 05:55:36	-->	woot_ (~quassel@91-115-253-157.adsl.highway.telekom.at) has joined ##c++
2014-11-24 05:57:06	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-24 05:57:29	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 05:57:47	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:00:11	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 06:01:26	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-24 06:01:55	<--	Malsasa_ (~Malsasa@125.164.139.31) has quit (Ping timeout: 240 seconds)
2014-11-24 06:03:06	-->	Malsasa_ (~Malsasa@36.74.23.57) has joined ##c++
2014-11-24 06:03:07	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 06:05:39	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-24 06:06:02	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:06:18	<--	movsb (~denis@cpc1-cmbg1-0-0-cust737.5-4.cable.virginm.net) has quit (Quit: leaving)
2014-11-24 06:06:42	-->	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-24 06:07:23	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-24 06:07:57	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-24 06:08:42	<--	jrnas (~jrnas@unaffiliated/xedasx) has quit (Quit: leaving)
2014-11-24 06:08:43	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 06:09:15	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:09:54	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 06:10:21	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-24 06:10:40	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-24 06:12:07	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-24 06:15:03	-->	pappa (~pappa@91.141.4.127.wireless.dyn.drei.com) has joined ##c++
2014-11-24 06:15:05	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:15:57	<--	MrClaw (~waclaw@128.140.221.84) has left ##c++
2014-11-24 06:16:29	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-24 06:17:31	--	Malsasa_ is now known as Malsasa
2014-11-24 06:20:31	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 06:21:10	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-24 06:21:39	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-24 06:22:07	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-24 06:22:14	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-24 06:23:17	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-24 06:23:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 06:24:03	<--	mitch0 (~mitch@2E8B5F8F.catv.pool.telekom.hu) has quit (Ping timeout: 256 seconds)
2014-11-24 06:24:34	-->	heedypo (~heedypo3@host-89-241-246-157.as13285.net) has joined ##c++
2014-11-24 06:24:36	<--	Rifuli (~Rifiul@CPE-120-148-165-49.bjzv4.lon.bigpond.net.au) has quit (Quit: Leaving)
2014-11-24 06:26:25	-->	snyp (~Snyp@14.99.88.252) has joined ##c++
2014-11-24 06:29:56	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 06:30:07	-->	jrnas (~jrnas@unaffiliated/xedasx) has joined ##c++
2014-11-24 06:30:17	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-24 06:32:04	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-24 06:33:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 06:36:47	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:38:34	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-24 06:40:58	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 06:42:04	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Quit: ????????!)
2014-11-24 06:42:14	-->	jzp113 (d21e0eaf@gateway/web/freenode/ip.210.30.14.175) has joined ##c++
2014-11-24 06:42:40	<--	jzp113 (d21e0eaf@gateway/web/freenode/ip.210.30.14.175) has quit (Changing host)
2014-11-24 06:42:40	-->	jzp113 (d21e0eaf@unaffiliated/jzp113) has joined ##c++
2014-11-24 06:42:40	<--	jzp113 (d21e0eaf@unaffiliated/jzp113) has quit (Changing host)
2014-11-24 06:42:40	-->	jzp113 (d21e0eaf@gateway/web/freenode/ip.210.30.14.175) has joined ##c++
2014-11-24 06:42:48	jzp113	hi
2014-11-24 06:42:54	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 06:43:09	-->	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 06:45:50	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-24 06:45:53	-->	stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-24 06:47:21	-->	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-24 06:50:24	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-24 06:50:24	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 06:51:33	-->	fahren (fahren@fook.org) has joined ##c++
2014-11-24 06:52:14	<--	paul424 (~chatzilla@91.207.69.143) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-24 06:52:35	<--	netj_ (~netj@128.12.163.109) has quit (Remote host closed the connection)
2014-11-24 06:53:42	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 06:53:43	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 240 seconds)
2014-11-24 06:53:43	--	shintahW2 is now known as shintahW
2014-11-24 06:54:57	-->	netj (~netj@128.12.163.109) has joined ##c++
2014-11-24 06:57:06	-->	inad922 (~inad925@gst22.ccs.bbk.ac.uk) has joined ##c++
2014-11-24 06:58:44	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 244 seconds)
2014-11-24 06:58:48	qdii	hey
2014-11-24 06:59:16	qdii	am I right to assume that whenever thread 1?writes into a variable, and thread 2 reads it, that variable has to be synchronized somehow
2014-11-24 07:00:31	lh_mouse	You need atomic.
2014-11-24 07:01:35	qdii	yeah, or mutexes, or whatever, right ?
2014-11-24 07:01:40	-->	soooga (~soooga@101.205.8.166) has joined ##c++
2014-11-24 07:01:49	<--	soooga (~soooga@101.205.8.166) has quit (Max SendQ exceeded)
2014-11-24 07:02:36	tamaroth	qdii: or semaphores, yes
2014-11-24 07:02:37	-->	soooga (~soooga@101.205.8.166) has joined ##c++
2014-11-24 07:04:48	cnap	any1 knows jzp113 ?
2014-11-24 07:05:15	<--	woot_ (~quassel@91-115-253-157.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2014-11-24 07:05:40	<--	soooga (~soooga@101.205.8.166) has quit (Client Quit)
2014-11-24 07:05:47	cnap	he just pmed me and hes trying to send me an image + talking some random stuff that I don't even understand
2014-11-24 07:06:15	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-24 07:06:28	<--	MrC (Ben@bensplace.info) has quit (Ping timeout: 264 seconds)
2014-11-24 07:06:33	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-24 07:06:56	<--	kurahaupo (~kurahaupo@118.148.159.93) has quit (Ping timeout: 245 seconds)
2014-11-24 07:09:00	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 07:09:28	<--	kszatan (~kszatan@94.42.137.2) has quit (Ping timeout: 256 seconds)
2014-11-24 07:10:11	-->	kszatan (~kszatan@94.42.137.2) has joined ##c++
2014-11-24 07:11:32	<--	mrueg (~mrueg@gentoo/developer/mrueg) has quit (Read error: Connection reset by peer)
2014-11-24 07:11:43	-->	b1rkh0ff (~b1rkh0ff@31.176.186.159) has joined ##c++
2014-11-24 07:12:17	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 07:12:57	-->	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 07:13:46	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-24 07:14:36	-->	mrueg (~mrueg@gentoo/developer/mrueg) has joined ##c++
2014-11-24 07:16:24	qdii	is there a way to ensure that I?can use threading policy std::async on this system?
2014-11-24 07:16:43	qdii	basically, a coworker wrote a class which will only work if std::async is available
2014-11-24 07:17:12	qdii	I?would like to add an assert() as early as possible to make sure this is the case, so we know in debug that all our target systems respect that
2014-11-24 07:18:01	mihipte	qdii, at the very least you could make a test case that uses std::async and run it on your targets
2014-11-24 07:18:03	<--	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has quit
2014-11-24 07:18:10	Jinxit	can't you just use async and see if it throws?
2014-11-24 07:18:48	Jinxit	<- doesn't actually know
2014-11-24 07:18:48	<--	NoNMaDDe_ (~NoNMaDDeN@ppp-58-11-144-2.revip2.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 07:18:48	qdii	yeah I could do that, but that's a bit clumsy in an assert
2014-11-24 07:18:48	qdii	mihipte: right, yep, not very practical, but doable
2014-11-24 07:18:50	<--	mrueg (~mrueg@gentoo/developer/mrueg) has quit (Ping timeout: 250 seconds)
2014-11-24 07:18:51	<--	ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has quit (Ping timeout: 250 seconds)
2014-11-24 07:18:56	Jinxit	wrap it in a function? idk
2014-11-24 07:19:11	Jinxit	assert(asyncavailable())
2014-11-24 07:19:23	jzp113	how to paint the light line use c++
2014-11-24 07:19:32	Jinxit	w h a t
2014-11-24 07:19:55	mihipte	qdii, why do you even need assert? you get an exception (or compile error) for free, right?
2014-11-24 07:20:07	<--	kloeri (~kloeri@freenode/staff/exherbo.happy.birthday.kloeri) has quit (Changing host)
2014-11-24 07:20:07	-->	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has joined ##c++
2014-11-24 07:20:07	qdii	assert( []() { try { std::async( std::async, []() { return; } ) } catch ( std::system_error& ) { return false; } return true; }() );
2014-11-24 07:20:25	qdii	mihipte: to get it as soon as possible
2014-11-24 07:21:12	mihipte	ah, I see
2014-11-24 07:21:12	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 245 seconds)
2014-11-24 07:21:12	Jinxit	just put that in a function and call it in your assert
2014-11-24 07:22:38	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-24 07:23:58	<--	proteusguy (~proteusgu@ppp-110-168-229-1.revip5.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 07:24:38	<--	snyp (~Snyp@14.99.88.252) has quit (Quit: WeeChat 1.0.1)
2014-11-24 07:25:22	-->	ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has joined ##c++
2014-11-24 07:27:02	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 07:27:24	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 255 seconds)
2014-11-24 07:27:59	<--	SiGe__ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 07:28:08	-->	Tazmain (~Tazmainia@197.82.203.122) has joined ##c++
2014-11-24 07:28:21	<--	yano (~yano@freenode/staff/yano) has quit (Ping timeout: 612 seconds)
2014-11-24 07:28:32	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-24 07:28:43	Tazmain	hi all is there any reason to declare a void print() as a const ? I understand making getters const but not something like print ?
2014-11-24 07:29:31	-->	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has joined ##c++
2014-11-24 07:29:59	Jinxit	const is just to make sure that it doesn't modify state at all
2014-11-24 07:30:08	-->	ilhami (~IlhamiD@91.194.37.55) has joined ##c++
2014-11-24 07:30:19	Jinxit	correct me if I'm wrong, but const functions can only call const functions
2014-11-24 07:30:33	Tazmain	Jinxit, I get that for the gettings, but is there really any need for that with a print ?
2014-11-24 07:30:40	Jinxit	so you might get locked if you don't use it properly
2014-11-24 07:30:43	-->	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 07:31:19	ville	Tazmain: it's not needed for a getter either. const is a property you want to have on every possible function of your class.
2014-11-24 07:31:25	Jinxit	^
2014-11-24 07:31:31	Jinxit	it's courtesy if nothing else
2014-11-24 07:31:33	cbreak	Tazmain: make everything const unless you can not.
2014-11-24 07:31:48	cbreak	Tazmain: or you will suffer
2014-11-24 07:31:48	Tazmain	why , he asks stupidly ?
2014-11-24 07:32:03	Jinxit	because then you are sure your function does not have side effects
2014-11-24 07:32:13	cbreak	yourFunction(SomeType const & argument) { argument.print(); } // will this work?
2014-11-24 07:32:17	ville	Tazmain: basically it makes everything nicer to use
2014-11-24 07:32:22	Tazmain	Oh I see
2014-11-24 07:32:27	Jinxit	imagine if you call the function addNumbers(a, b)
2014-11-24 07:32:28	<--	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 07:32:29	cbreak	Tazmain: argument is const
2014-11-24 07:32:33	Jinxit	you expect it to return a + b
2014-11-24 07:32:36	cbreak	Tazmain: you can not modify it
2014-11-24 07:32:42	Jinxit	but it ALSO changes the value of a to 5
2014-11-24 07:32:46	cbreak	Tazmain: print() wants to modify it so you can not call it.
2014-11-24 07:32:51	cbreak	unless it's const :)
2014-11-24 07:32:52	Jinxit	that could never happen with const arguments
2014-11-24 07:33:05	<--	aslant (~aslant@37.157.33.76) has quit (Read error: Connection reset by peer)
2014-11-24 07:33:17	-->	Malsasa_ (~Malsasa@36.82.85.150) has joined ##c++
2014-11-24 07:33:21	<--	Malsasa (~Malsasa@36.74.23.57) has quit (Ping timeout: 240 seconds)
2014-11-24 07:33:22	Jinxit	(I realized half-way through that it was const arguments and not functions, but the same argument applies)
2014-11-24 07:33:30	Tazmain	I see
2014-11-24 07:33:37	-->	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 07:33:37	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 240 seconds)
2014-11-24 07:33:52	ville	the language made the unfortunate decission of not making everything const by-default
2014-11-24 07:33:59	-->	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has joined ##c++
2014-11-24 07:34:18	Tazmain	and if you implement a constructor Employee()::Employee() :name("No name yet"),  you are setting the private vars already ?
2014-11-24 07:34:21	qdii	unfortunate decision? making everything thread-safe has a cost
2014-11-24 07:34:23	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-24 07:34:52	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 07:35:17	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-24 07:35:23	cbreak	making everything const is free
2014-11-24 07:35:35	cbreak	you'd only have to write foo setThing(Thing t) mutable { ... }
2014-11-24 07:35:42	--	Malsasa_ is now known as Malsasa
2014-11-24 07:35:48	cbreak	instead of it being implied in the absence of const
2014-11-24 07:36:04	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (Remote host closed the connection)
2014-11-24 07:37:15	qdii	if I use std::atomic<T> for an user-defined T class, will it fallback to protecting it using mutexes ? or will it just not compile?
2014-11-24 07:37:22	Jinxit	I'd prefer mutable over const for sure
2014-11-24 07:38:19	mihipte	I have a pure-virtual function I'm implementing in subclasses. For some reason it's still considered pure-virtual by the compiler, even though I move the definition into the declaration. I don't have a circular dependency, not that that should even matter at this point. Ugh!
2014-11-24 07:38:29	-->	yano (~yano@freenode/staff/yano) has joined ##c++
2014-11-24 07:38:31	<--	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has quit (Ping timeout: 245 seconds)
2014-11-24 07:38:55	qdii	post some code?
2014-11-24 07:39:16	mihipte	I don't have a minimal... I could link the repo, but I don't think that would work.
2014-11-24 07:39:32	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-24 07:39:37	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 265 seconds)
2014-11-24 07:39:42	cbreak	mihipte: you probably don't implement it in the derived class
2014-11-24 07:39:52	qdii	did you add override in your derived class?
2014-11-24 07:40:09	mihipte	headdesk... I'm looking at the override... *twilight zone* I think!
2014-11-24 07:40:18	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 07:41:18	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: No route to host)
2014-11-24 07:41:21	<--	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 272 seconds)
2014-11-24 07:42:09	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 07:42:31	-->	jrolland-ubuntu (~jrolland@72.131.125.94) has joined ##c++
2014-11-24 07:42:31	ville	qdii: const doesn't mean thread-safe even if sutter says so.
2014-11-24 07:42:32	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-24 07:42:53	-->	daNRG (~danny@WL-POOL1-ONT-112.UNI-MUENSTER.DE) has joined ##c++
2014-11-24 07:43:03	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:19b1:9488:63dc:2587) has joined ##c++
2014-11-24 07:43:53	Jinxit	ville: is there some obscure edge case or is it generally not safe to assume const is thread-safe?
2014-11-24 07:43:58	ville	it's a practice he would like it to mean. that is mark a function const it means you've written in in thread-safe manner.
2014-11-24 07:44:20	Jinxit	(I haven't gotten into C++ multithreading yet)
2014-11-24 07:44:30	-->	j_wright (~jwright@unaffiliated/j-wright/x-9145068) has joined ##c++
2014-11-24 07:44:45	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:19b1:9488:63dc:2587) has quit (Read error: Connection reset by peer)
2014-11-24 07:44:47	qdii	ville: Meyers says so too
2014-11-24 07:44:56	qdii	item 15 of his new book
2014-11-24 07:45:19	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:19b1:9488:63dc:2587) has joined ##c++
2014-11-24 07:45:41	ville	yes it's what they wish it would mean for "void f() const" but there is absolutely nothing in the language that makes it so.
2014-11-24 07:45:48	<--	ilhami (~IlhamiD@91.194.37.55) has quit (Ping timeout: 255 seconds)
2014-11-24 07:46:13	qdii	what they say is not exactly that though
2014-11-24 07:46:33	qdii	it is: if the library standard uses your class, then the const member function it uses have to be thread safe
2014-11-24 07:47:07	 *	qdii apologizes for his English
2014-11-24 07:47:11	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2014-11-24 07:47:24	<--	marcel_4208 (~marcel_42@p200300514E630E54BA27EBFFFEE3D78E.dip0.t-ipconnect.de) has left ##c++
2014-11-24 07:47:28	mihipte	and of course my minimal builds fine, going from scratch
2014-11-24 07:47:53	mihipte	I /hate/ going the other way =S
2014-11-24 07:48:07	qdii	so unless you can guarantee that your const member functions will never be called even remotely by the stdlib ?
2014-11-24 07:48:14	ville	that's a requirement that comes from the standard library. it's not something intrinsic about const though.
2014-11-24 07:48:48	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-24 07:49:43	qdii	any chance you?d have pointers to the reasons why this is so, though?
2014-11-24 07:49:46	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 244 seconds)
2014-11-24 07:49:49	-->	mrueg (~mrueg@gentoo/developer/mrueg) has joined ##c++
2014-11-24 07:50:01	ville	what is "this" in above sentence?
2014-11-24 07:50:01	qdii	I know sutter explained it in a video, but I can't seem to find it anymore
2014-11-24 07:50:15	qdii	the standard library's new interpretation of const-ness
2014-11-24 07:50:21	-->	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-24 07:50:55	ville	nope. the sutter video was "you don't know what const and mutable mean" or some such?
2014-11-24 07:51:02	Tazmain	What is the difference with constructors by going Foo:Foo(string name) { the_name = name;} and Foo::Foo(string name) : the_name(name) {} ?
2014-11-24 07:51:29	ville	Tazmain: the latter is logically what you meant to happen.
2014-11-24 07:51:37	<--	jzp113 (d21e0eaf@gateway/web/freenode/ip.210.30.14.175) has quit (Quit: Page closed)
2014-11-24 07:51:44	ville	Tazmain: in practice it may very well end up the same instructions.
2014-11-24 07:51:45	-->	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has joined ##c++
2014-11-24 07:51:53	-->	lynnard (~lingnan@cpc3-walt13-2-0-cust268.13-2.cable.virginm.net) has joined ##c++
2014-11-24 07:51:55	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 07:51:56	<--	HerzogDeXtEr (~flex@i59F6D149.versanet.de) has quit (Quit: Leaving.)
2014-11-24 07:52:24	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-24 07:52:45	lynnard	I have a class like: namespace MyPackage { class MyClass {...}; const MyClass Nil; } but the compiler complains undefined reference to MyClass for my const Nil
2014-11-24 07:52:50	lynnard	what's going wrong here?
2014-11-24 07:52:56	Tazmain	ville, so the only time you can't use the latter fully is when you make a new pointer ?
2014-11-24 07:53:08	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-24 07:53:21	ville	Tazmain: umm. no?
2014-11-24 07:53:30	Jinxit	lynnard: might want to put a minimal example on ideone
2014-11-24 07:54:31	Tazmain	ville, so you can make a dynamic array using the latter notation ?
2014-11-24 07:54:38	ville	Tazmain: the first form requires the member to be default constructible and assignable. the second form requires the member to be copy constructible.
2014-11-24 07:55:00	-->	The (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has joined ##c++
2014-11-24 07:55:10	mihipte	well, removing files allows it to build... can this be caused by a circular dependency which doesn't involve the problem file? if so I could look for that
2014-11-24 07:55:14	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 255 seconds)
2014-11-24 07:55:14	--	fstd_ is now known as fstd
2014-11-24 07:55:16	Tazmain	right.... will have to go read up on that
2014-11-24 07:55:24	ville	Tazmain: yes you can call new in ctor-initializer
2014-11-24 07:55:59	<--	The (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has left ##c++
2014-11-24 07:56:28	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 07:57:18	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 240 seconds)
2014-11-24 07:58:34	-->	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has joined ##c++
2014-11-24 07:59:04	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 07:59:04	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-24 08:01:00	qdii	ville: ahh yeah, thanks
2014-11-24 08:01:52	<--	BlaXpirit-UA (~blaxpirit@37-107-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-24 08:01:53	cbreak	ville: concurrent const access does not cause data races
2014-11-24 08:02:05	<--	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 08:02:12	-->	BlaXpirit (~blaxpirit@37-107-132-95.pool.ukrtel.net) has joined ##c++
2014-11-24 08:02:17	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-24 08:03:33	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 240 seconds)
2014-11-24 08:04:32	-->	Malsasa_ (~Malsasa@36.81.183.224) has joined ##c++
2014-11-24 08:05:02	<--	Malsasa (~Malsasa@36.82.85.150) has quit (Ping timeout: 255 seconds)
2014-11-24 08:05:10	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 258 seconds)
2014-11-24 08:05:15	ville	cbreak: you can have write from one thread and read through const in another.
2014-11-24 08:06:01	ville	cbreak: i am suprised to find out if the standard guarantees behaviour for that.
2014-11-24 08:06:30	-->	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has joined ##c++
2014-11-24 08:08:22	<--	jeaye (~jeaye@unaffiliated/jeaye) has quit (Quit: WeeChat 1.0)
2014-11-24 08:08:46	-->	Affliction` (affliction@2600:3c01::13:ffff) has joined ##c++
2014-11-24 08:09:00	<--	Affliction (affliction@2600:3c01::13:ffff) has quit (Read error: Connection reset by peer)
2014-11-24 08:09:36	cbreak	ville: the standard only guarantees that const accesses alone don't cause data races
2014-11-24 08:09:48	-->	MrC (Ben@bensplace.info) has joined ##c++
2014-11-24 08:10:40	ville	yes well it doesn't require the keyword "const" to do that. it guarantees concurrent reads are alright.
2014-11-24 08:11:41	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Read error: Connection reset by peer)
2014-11-24 08:12:17	coolcat	Did you say that write from one thread and read through a const from another is not a data race?
2014-11-24 08:12:17	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-24 08:12:19	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-24 08:12:42	ville	no, i said you can possibly write such program.
2014-11-24 08:12:46	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-24 08:13:13	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Remote host closed the connection)
2014-11-24 08:13:16	lynnard	Having a problem with const definition
2014-11-24 08:13:38	lynnard	I have namespace MyNamespace { class MyClass {...}; const MyClass Nil }
2014-11-24 08:13:39	-->	jeaye (~jeaye@unaffiliated/jeaye) has joined ##c++
2014-11-24 08:13:40	zap0	lynnard, const is a virus... much like humans are on this planet.
2014-11-24 08:13:44	coolcat	I mean is this suposed to valid and data race free?
2014-11-24 08:13:57	ville	it's broken
2014-11-24 08:14:10	lynnard	now because my constructor and deconstructor are defined in the cpp so compiler can't instantiate const MyClass Nil
2014-11-24 08:14:21	lynnard	but I still want user be able to refer to those constants
2014-11-24 08:14:26	lynnard	so what's way to do it
2014-11-24 08:14:32	ville	lynnard: extern?
2014-11-24 08:14:37	zap0	lynnard, static
2014-11-24 08:14:55	lynnard	ville: but wouldn't that mean the user has to import my cpp file as well in order to use the constants
2014-11-24 08:15:02	lynnard	zap0: static...?
2014-11-24 08:15:15	ville	lynnard: no. just link with the library
2014-11-24 08:15:18	<--	Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 265 seconds)
2014-11-24 08:15:19	<--	Mio-chan (sid46333@gateway/web/irccloud.com/x-cixldpsgkbysbhjk) has quit (Read error: Connection reset by peer)
2014-11-24 08:15:28	<--	termos (sid18647@gateway/web/irccloud.com/x-imrsnlnacjnswtxw) has quit (Read error: Connection reset by peer)
2014-11-24 08:15:29	<--	CARAM_ (sid27279@gateway/web/irccloud.com/x-vnmhtfrnfvjyiuzt) has quit (Read error: Connection reset by peer)
2014-11-24 08:15:29	<--	KnownSyntax (uid7983@gateway/web/irccloud.com/x-dxpdlaqxtxabdfgv) has quit (Read error: Connection reset by peer)
2014-11-24 08:15:32	lynnard	ville: how..?
2014-11-24 08:16:04	ville	however his "compiler" is told to link with 3rd party libraries
2014-11-24 08:16:09	-->	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-24 08:16:16	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-qryibjjngomezxfn) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	kapil_ (uid36151@gateway/web/irccloud.com/x-cgpwnzzjqppilwya) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	hellschreiber (sid17037@gateway/web/irccloud.com/x-vuvaonuiaawoflqb) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	Hello71 (~Hello71@wikipedia/Hello71) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	Tee_Pee (uid23783@gateway/web/irccloud.com/x-yswvajseugtwljvi) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	Karethoth (sid23042@gateway/web/irccloud.com/x-vzournfykowafurz) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:16	<--	skarn (skarn@unaffiliated/skarn) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:31	-->	Tee_Pee (uid23783@gateway/web/irccloud.com/x-deasybjvgyujetel) has joined ##c++
2014-11-24 08:16:41	-->	Mio-chan (sid46333@gateway/web/irccloud.com/x-whynxfpnspecmqrj) has joined ##c++
2014-11-24 08:16:43	-->	kapil_ (uid36151@gateway/web/irccloud.com/x-mdcskpducfsrzwzz) has joined ##c++
2014-11-24 08:16:45	<--	tsimpson (quasselcor@ubuntu/member/stdin) has quit (Ping timeout: 265 seconds)
2014-11-24 08:16:48	-->	hellschreiber (sid17037@gateway/web/irccloud.com/x-cuvhlraaxmlelesu) has joined ##c++
2014-11-24 08:16:58	-->	termos (sid18647@gateway/web/irccloud.com/x-phszaskipbrsvjpq) has joined ##c++
2014-11-24 08:17:02	-->	Karethoth (sid23042@gateway/web/irccloud.com/x-eckwjfzmpvxbhifv) has joined ##c++
2014-11-24 08:17:15	zap0	lynnard, if you want to hide data from the user in a cpp file;  but then expect the compiler to "magically" know this data...   you might need to get your unicorn to shit some more impossibium.
2014-11-24 08:17:50	-->	skarn (skarn@unaffiliated/skarn) has joined ##c++
2014-11-24 08:17:51	cbreak	lynnard: that will collide horribly
2014-11-24 08:17:55	-->	Hello71 (~Hello71@wikipedia/Hello71) has joined ##c++
2014-11-24 08:18:04	cbreak	lynnard: since you get a new copy of Nil in every file where this is included
2014-11-24 08:18:08	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-dkdwmzvsfoqwkoxd) has joined ##c++
2014-11-24 08:18:13	cbreak	so the linker will spit lots of duplicate symbol errors at you
2014-11-24 08:18:22	cbreak	lynnard: this is unrelated to constructors/destructors
2014-11-24 08:18:25	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-24 08:18:30	-->	CARAM_ (sid27279@gateway/web/irccloud.com/x-kybdvhcuerlupxve) has joined ##c++
2014-11-24 08:18:30	-->	tsimpson (quasselcor@ubuntu/member/stdin) has joined ##c++
2014-11-24 08:18:34	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-24 08:18:36	-->	KnownSyntax (uid7983@gateway/web/irccloud.com/x-ynqravokthjocbld) has joined ##c++
2014-11-24 08:19:54	zap0	lynnard, exactly what problem are you trying to solve with this seperation of code from header?
2014-11-24 08:20:01	mihipte	crap
2014-11-24 08:20:07	<--	devbug_ (~quassel@d108-180-247-142.bchsia.telus.net) has quit (Ping timeout: 265 seconds)
2014-11-24 08:20:10	mihipte	I typoed the function name
2014-11-24 08:20:10	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-24 08:20:27	mihipte	I got all the way to the last few lines of code before seeing it
2014-11-24 08:20:41	-->	oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-11-24 08:20:52	-->	Extreme (~Extreme@unaffiliated/extreme7) has joined ##c++
2014-11-24 08:20:59	-->	n3bul4 (~nebul4@201.22.59.86.static.gvt.net.br) has joined ##c++
2014-11-24 08:21:16	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-24 08:21:22	mihipte	actually didn't see it... I renamed it and the error went away
2014-11-24 08:23:09	-->	Stryyker (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-24 08:23:26	<--	JesuZ (~JesuZ@xdsl-77-86-196-55.nebulazone.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 08:23:29	-->	blast (~quassel@d4-50-54-46.try.wideopenwest.com) has joined ##c++
2014-11-24 08:23:31	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-24 08:23:55	--	Malsasa_ is now known as Malsasa
2014-11-24 08:24:00	<--	blast (~quassel@d4-50-54-46.try.wideopenwest.com) has quit (Read error: Connection reset by peer)
2014-11-24 08:24:18	-->	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has joined ##c++
2014-11-24 08:24:25	<--	stryyker2 (stryyker16@about/windows/staff/stryyker) has quit (Ping timeout: 255 seconds)
2014-11-24 08:24:49	<--	rriemann (~rriemann@dhcp-67-115.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2014-11-24 08:25:14	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-24 08:28:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 08:30:21	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-24 08:30:33	-->	rriemann (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has joined ##c++
2014-11-24 08:31:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 08:31:46	-->	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has joined ##c++
2014-11-24 08:31:56	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-24 08:32:01	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-24 08:33:40	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-24 08:35:26	<--	akatsukibay2 (mangekyo@14-201-217-28.tpgi.com.au) has quit
2014-11-24 08:37:13	<--	rriemann (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2014-11-24 08:37:54	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-24 08:38:07	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-24 08:38:15	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-24 08:39:09	-->	Guest21944 (~Admin@subscr-46-148-174-204.dhcp-docsis.net.tomkow.pl) has joined ##c++
2014-11-24 08:39:15	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 250 seconds)
2014-11-24 08:40:36	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 08:42:00	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 08:44:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 08:45:05	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-24 08:45:10	mihipte	I'm writing to cout, and flushing... why would I not see any output?
2014-11-24 08:45:52	wilx	Are you redirecting it?
2014-11-24 08:46:15	mihipte	not unless my IDE is being stupid...
2014-11-24 08:46:26	mihipte	will look into that
2014-11-24 08:46:36	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-24 08:47:43	-->	blut (864c2693@gateway/web/freenode/ip.134.76.38.147) has joined ##c++
2014-11-24 08:47:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 08:48:24	blut	hello. i would like to declare and initialize a volatile static unsigned int member
2014-11-24 08:48:50	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-24 08:48:58	mihipte	apparently the IDE is being stupid... running the executable directly I get all the stuff I was supposed to.
2014-11-24 08:48:59	blut	how do i initialize it?
2014-11-24 08:49:52	cbreak	blut: volatile member? Sounds braindead.
2014-11-24 08:50:09	cbreak	blut: but static members are initialized like globals
2014-11-24 08:50:48	blut	cbreak: it's multithreaded
2014-11-24 08:50:52	cbreak	blut: so?
2014-11-24 08:50:59	cbreak	blut: volatile doesn't have anything to do with threading
2014-11-24 08:51:33	blut	cbreak: so i use volatile to ensure it is not cached
2014-11-24 08:51:46	cbreak	blut: sounds idiotic.
2014-11-24 08:51:56	cbreak	blut: why do you worry about caching?
2014-11-24 08:52:06	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-24 08:52:12	cbreak	you're not allowed to access it from different threads anyway.
2014-11-24 08:52:15	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-11-24 08:52:36	cbreak	unless it's protected by a mutex, or it is atomic, in which case caching is not an issue
2014-11-24 08:52:37	blut	cbreak: why wouldn't i
2014-11-24 08:52:45	cbreak	blut: because it's not thread safe, duh
2014-11-24 08:53:19	-->	bumbar_ (~username@89-212-164-76.dynamic.t-2.net) has joined ##c++
2014-11-24 08:53:19	<--	bumbar_ (~username@89-212-164-76.dynamic.t-2.net) has quit (Changing host)
2014-11-24 08:53:19	-->	bumbar_ (~username@unaffiliated/bumbar) has joined ##c++
2014-11-24 08:53:49	blut	cbreak: oh that is part of the program to ensure it is safe
2014-11-24 08:54:00	<--	fOrcee (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Quit: Leaving)
2014-11-24 08:54:08	cbreak	blut: no
2014-11-24 08:54:14	cbreak	blut: it doesn't change thread safety
2014-11-24 08:54:26	cbreak	it's just as thread-unsafe with volatile as it is without
2014-11-24 08:54:34	blut	cbreak: yes
2014-11-24 08:54:49	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-24 08:54:52	cbreak	volatile is 100% worthless for thread safety.
2014-11-24 08:55:06	blut	cbreak: but you'd think maybe i want to use a variable to ensure thread safety?
2014-11-24 08:55:13	-->	eckesicle (uid12692@gateway/web/irccloud.com/x-ldglntmqaqlldral) has joined ##c++
2014-11-24 08:55:20	cbreak	what?
2014-11-24 08:55:39	cbreak	if you want to ensure thread safety, you'd use a mutex or maybe atomics
2014-11-24 08:55:46	mihipte	sorry, IDE, that was my fault for running the wrong project. =\
2014-11-24 08:56:01	blut	right
2014-11-24 08:56:27	cbreak	both include memory fences that prevent any problems with caching
2014-11-24 08:56:30	blut	cbreak: in this case i might use locks, but that results in pretty much the same code
2014-11-24 08:56:40	cbreak	so there's no reason to make your program slow by putting in worthless volatile
2014-11-24 08:57:55	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 245 seconds)
2014-11-24 08:58:22	blut	cbreak: this program is slow either way. a volatile variable really won't make the difference here
2014-11-24 08:58:28	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-24 08:58:35	cbreak	then don't make it volatile.
2014-11-24 08:59:03	<--	avvs (~avvs@gateway/tor-sasl/avvs) has quit (Ping timeout: 250 seconds)
2014-11-24 08:59:09	mdkess	Build question on Linux - when creating a C++ project, how do you manage paths? I mean, say that the build outputs some binaries to build/bin and some libraries to build/lib - how do you set up paths properly for these binaries, for when other people want to check out and build/run the project?
2014-11-24 08:59:59	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 09:00:22	cbreak	cmake? :)
2014-11-24 09:02:27	-->	Anthaas (a170e867@gateway/web/freenode/ip.161.112.232.103) has joined ##c++
2014-11-24 09:03:30	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 09:04:05	blut	cbreak: alright, you are correct. atomic does pretty much what i had in mind.
2014-11-24 09:04:34	-->	pygospa (~kth@te52.informatik.uni-bremen.de) has joined ##c++
2014-11-24 09:05:04	<--	yeticry (~yeticry@114.96.138.107) has quit (Remote host closed the connection)
2014-11-24 09:05:27	-->	yeticry (~yeticry@114.96.138.107) has joined ##c++
2014-11-24 09:07:31	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 09:08:00	pygospa	Hi. I'm currently struggling with C++. I have a headder defining a namespace. In this namespace (kbdev), I have a class (Task), declaring a number of Methods. Now I want these methods to have access to a member variable (fd), so I put it directly under "protected:" inside the class.
2014-11-24 09:09:08	mihipte	pygospa, where do you define the methods? in the header or a .cpp?
2014-11-24 09:09:30	kadoban	pygospa: 'protected' is more for subclasses of your class. It's used for defining the API that subclasses can/should use.
2014-11-24 09:09:54	mihipte	however, your class can get to protected stuff that's in it
2014-11-24 09:10:19	kadoban	pygospa: If it's only for the class itself, 'private' is probably what you want.
2014-11-24 09:10:43	pygospa	Now from my class definition file I want to access this protected variable from inside the different methods. The class uses the namespace, and I prefix the Methods with the class name. But no matter how I try, I always get 'not member in scope' error. I've already tried it with prefixing the class, with this, with changing the variable to public, with redefining it in the class definition itself.
2014-11-24 09:10:48	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 09:10:50	mihipte	pygospa, I suspect that you have your methods in a .cpp and forgot to put ClassName:: before the names
2014-11-24 09:10:52	-->	komarov (~komarov@178.62.189.37) has joined ##c++
2014-11-24 09:11:03	mihipte	oh, nvm
2014-11-24 09:11:13	-->	Superlokkus (~Superlokk@wh0963.dip.tu-dresden.de) has joined ##c++
2014-11-24 09:11:15	<--	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has quit (Read error: Connection reset by peer)
2014-11-24 09:11:16	pygospa	mihipte: Tried that one. Didn't help.
2014-11-24 09:11:32	-->	KarolisK (~karolis@193.219.83.48) has joined ##c++
2014-11-24 09:11:39	<--	Christsensen (~Christsen@p3E9E9F47.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-11-24 09:11:41	mihipte	I meant for the definition, not the call
2014-11-24 09:11:52	mihipte	pygospa, can you link some code?
2014-11-24 09:12:03	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 245 seconds)
2014-11-24 09:12:29	-->	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-24 09:12:54	kadoban	pygospa: A testcase would help immensely. Note that #include doesn't do anything more than copy and paste the code in where you say, so you can do it in one file identically really if it makes it easier to show.
2014-11-24 09:13:06	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Quit: leaving)
2014-11-24 09:13:15	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-24 09:13:32	<--	atod_ (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Quit: leaving)
2014-11-24 09:14:02	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-24 09:14:07	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-24 09:14:15	-->	Christsensen (~Christsen@2a00:1a28:1163:2::1002) has joined ##c++
2014-11-24 09:14:46	-->	Forbidden404 (~francisco@189-70-170-77.user.veloxzone.com.br) has joined ##c++
2014-11-24 09:16:49	pygospa	Here you go: http://privatepaste.com/81601e723f
2014-11-24 09:17:22	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-24 09:17:57	pygospa	The Variable in question is "fd". And I'm accessing it on lines 91, 114, and 203
2014-11-24 09:18:38	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-usafiydolklkcorv) has joined ##c++
2014-11-24 09:18:39	pygospa	I also have the same issue with the no_of_kbds, but I guess that's the identical problem.
2014-11-24 09:18:42	kadoban	pygospa: Instead of 'using namespace', which is a bad idea in general anyway, try just putting all that stuff in the namespace?
2014-11-24 09:19:40	mihipte	using namespace is fine IMO, for a custom namespace and within a .cpp
2014-11-24 09:21:33	pygospa	This is btw. one of the error messages I am getting (the others look alike): error: ?fd? is not a member of ?kbdev::Task? read(Task::fd, &ev, sizeof(ev));
2014-11-24 09:21:36	mihipte	pygospa, tbh I don't see a problem yet
2014-11-24 09:21:54	-->	oleo (~oleo@xdsl-78-35-188-212.netcologne.de) has joined ##c++
2014-11-24 09:21:57	pygospa	Sometimes I also get the error: "protected variable was not declared in this scope"
2014-11-24 09:22:02	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Ping timeout: 244 seconds)
2014-11-24 09:22:20	mihipte	which name is that last one for?
2014-11-24 09:22:28	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-24 09:22:33	mihipte	how the heck does it know it's protected? 0_o
2014-11-24 09:23:02	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-24 09:23:43	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-24 09:24:34	mihipte	pygospa, which variable is the last message for?
2014-11-24 09:24:55	pygospa	mihipte: For the same variable - it always depends on if I add the Task:: or kbdev::Task:: as namespace, or not.
2014-11-24 09:25:09	mihipte	pygospa, also, what's the very first error?
2014-11-24 09:25:13	kadoban	pygospa: This is where an actual testcase is a bonus. If we could actually try compiling something and have a hope of it succeeding, it's easy to toy with it and figure out what's wrong. ideone.com helps.
2014-11-24 09:27:43	pygospa	kadoban: The problem is, that I'm developing this under the 'ROCK'-Framework, which you'd probably need to install as well to compile it (http://www.rock-robotics.org/stable/). It's highly dependant on Orocos and has it's own build tools to help you compile the code.
2014-11-24 09:28:05	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-24 09:28:44	ppf	pygospa: configureHook should be complaining about a missing select_kbd
2014-11-24 09:28:57	kadoban	pygospa: The key to a testcase is, we don't care...and your problem probably doesn't either. Write a toy with namespaces and reproduce the same problem.
2014-11-24 09:29:16	kadoban	!testcase
2014-11-24 09:29:17	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-24 09:29:44	kadoban	Note the checklist. Using it increases your odds of getting an actual answer manyfold.
2014-11-24 09:30:03	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-24 09:30:27	-->	acrussell (adamcrusse@awww.jeah.net) has joined ##c++
2014-11-24 09:30:42	mihipte	pygospa, typically you find the problem while you build that, too
2014-11-24 09:31:13	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-24 09:31:27	kadoban	I suspect that the problem is just that you're using 'using namespace' instead of putting that stuff actually in the namespace, but I'm not really up for writing the testcase myself.
2014-11-24 09:31:43	<--	inad922 (~inad925@gst22.ccs.bbk.ac.uk) has quit (Quit: Leaving)
2014-11-24 09:31:44	<--	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has quit (Ping timeout: 240 seconds)
2014-11-24 09:32:02	mihipte	kadoban, that technique works for me for 15-odd classes on MinGW and MSVC
2014-11-24 09:32:21	mihipte	I highly doubt it's related
2014-11-24 09:32:42	pygospa	Okey. I'll look into that. Thank you so much for all your help and input so far! I'll return when I have some new results.
2014-11-24 09:33:23	ppf	pygospa: what does open(..) return?
2014-11-24 09:33:27	<--	daNRG (~danny@WL-POOL1-ONT-112.UNI-MUENSTER.DE) has quit (Read error: Connection reset by peer)
2014-11-24 09:34:11	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 09:34:12	-->	it_ (~it_@212.243.190.164) has joined ##c++
2014-11-24 09:34:42	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-24 09:34:52	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-24 09:35:06	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-24 09:36:03	-->	FlorianJW-terra (~florian@madways.de) has joined ##c++
2014-11-24 09:37:46	ppf	this assignment is pretty weird: fd = &tmp;
2014-11-24 09:38:12	ppf	tmp is int[.] where . is some dynamic value?
2014-11-24 09:38:23	ppf	fd is declared as int (*)fd;
2014-11-24 09:39:19	it_	so fd is a pointer to an int
2014-11-24 09:39:26	it_	and tmp an array of ints?
2014-11-24 09:39:43	it_	I'd say fd = tmp would make more sense then
2014-11-24 09:39:53	it_	but isn't &tmp the adress of the first value in tmp?
2014-11-24 09:39:53	<--	lucasjones (~quassel@109.201.152.11) has quit (Remote host closed the connection)
2014-11-24 09:40:03	-->	lucasjones (~quassel@46.166.186.199) has joined ##c++
2014-11-24 09:40:03	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-24 09:40:06	it_	so fd = &tmp[0]
2014-11-24 09:40:14	wilx	ppf: Maybe you should show the actual code.
2014-11-24 09:40:33	wilx	it_: No, you can have a point to array (as opposed to a pointer to element).
2014-11-24 09:40:37	ppf	wilx: it's pygospa's code
2014-11-24 09:40:55	-->	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has joined ##c++
2014-11-24 09:41:01	wilx	ppf: OK, I have not been paying close attention. "0
2014-11-24 09:41:09	it_	wilx: You mean fd = tmp ? Is that the same as fd = &tmp ?
2014-11-24 09:41:23	ppf	np
2014-11-24 09:41:25	wilx	It is not in any case, AFAIK.
2014-11-24 09:42:02	it_	yes but then I don't understand what you mean
2014-11-24 09:42:19	it_	isn't tmp the same as tmp[0] ?
2014-11-24 09:42:28	it_	and therefore &tmp is &tmp[0]
2014-11-24 09:42:31	ppf	is 'int (*)fd;' legal syntax anyways?
2014-11-24 09:42:31	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 09:43:05	wilx	geordi: { int (*) fd; }
2014-11-24 09:43:05	geordi	error: expected primary-expression before 'int'
2014-11-24 09:43:17	ppf	it_: tmp is the same is "tmp + 0"
2014-11-24 09:43:17	it_	well ...
2014-11-24 09:43:18	wilx	geordi: { int (*fd)[]; }
2014-11-24 09:43:18	geordi	warning: unused variable 'fd'
2014-11-24 09:43:21	wheals	tmp is not the same as tmp[0], one is an array and the other is an int
2014-11-24 09:43:24	ppf	it's some kind of an address
2014-11-24 09:43:31	pygospa	ppf: Sorry, I ommited the 'select_kbd'-part. It's also declared in the header. tmp should return an array of integer values, I was using int *fd before, but the compiler was complaining about a type missmatch from int * to int (*) - so I just tried that, and that was getting rid of that error.
2014-11-24 09:43:33	ppf	whereas tmp[0] is the value at that address
2014-11-24 09:43:38	-->	ac_slater_ (~weechat@96.237.110.242) has joined ##c++
2014-11-24 09:43:47	wilx	geordi: explain int (*fd)[];
2014-11-24 09:43:47	geordi	error: 'explain' does not name a type
2014-11-24 09:43:51	it_	I thought tmp would become a pointer at runtime?
2014-11-24 09:43:53	wilx	Hmm....
2014-11-24 09:44:04	ville	arrays are arrays. they are not pointers. they will however convert implicitly to pointers.
2014-11-24 09:44:04	wilx	!explain int (*fd)[];
2014-11-24 09:44:12	ppf	it_: tmp is an array
2014-11-24 09:44:15	wilx	Hm....what was it?
2014-11-24 09:44:17	ac_slater_	o/
2014-11-24 09:44:33	it_	ville: that's what I mean
2014-11-24 09:44:42	ppf	wilx:  that's a function pointer
2014-11-24 09:44:47	ppf	array of *
2014-11-24 09:44:57	it_	that's a function returning an array of ints
2014-11-24 09:45:14	it_	oh wait fail
2014-11-24 09:45:15	ppf	pygospa: i believe the compiler shouldn't accept int (*) fd;
2014-11-24 09:45:15	it_	XDE
2014-11-24 09:45:27	-->	thecha (tehcha@unaffiliated/thecha) has joined ##c++
2014-11-24 09:45:37	wilx	ppf: Nope, I is an array pointer.
2014-11-24 09:45:49	ville	pointer-to-an-array
2014-11-24 09:45:54	pygospa	My plan was to build an array at runtime, and then save it so other functions can use it. As I cannot declare an unsized array in C++ and then assign some other array to it, I was thinking of using the pointer to that array.
2014-11-24 09:46:09	wilx	geordi: {} int (*fd)[];
2014-11-24 09:46:09	geordi	<no output>
2014-11-24 09:46:10	ppf	yeah, you're right :X
2014-11-24 09:46:25	wilx	geordi: -r << ETYPE_DESC(fd)
2014-11-24 09:46:26	geordi	lvalue pointer to an array of integers
2014-11-24 09:46:42	ppf	pygospa: you're doing that wrong on multiple levels
2014-11-24 09:46:56	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-11-24 09:47:06	ppf	a) you're trying to hand out a pointer to a local array
2014-11-24 09:47:11	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Ping timeout: 256 seconds)
2014-11-24 09:47:15	-->	it_ (~it_@212.243.190.164) has joined ##c++
2014-11-24 09:47:31	ppf	any accesses to that outside the scope of configurehook would create very bad results
2014-11-24 09:47:32	-->	kriskropd (~kris@unaffiliated/kriskropd) has joined ##c++
2014-11-24 09:47:35	thecha	i am trying to port my c++ software project to windows system i am using this mingw32 cosmtehing bla cmomp?iler but my problem is the gtkmm library i use is in a folder the codeblocks (IDE) doesnt find how can i make it find it?
2014-11-24 09:48:06	ppf	b) you shouldn't use arrays like that in c++
2014-11-24 09:48:09	ppf	that's C!
2014-11-24 09:48:17	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-11-24 09:48:30	ppf	just use a vector!
2014-11-24 09:48:59	-->	rriemann (~rriemann@dhcp-183-214.ens-lyon.fr) has joined ##c++
2014-11-24 09:49:27	-->	Anodl1 (~Anodl@213.157.2.74) has joined ##c++
2014-11-24 09:49:42	ppf	pygospa:  that being said, this discussion is probably more suited for ##c++-general
2014-11-24 09:50:36	pygospa	ppf: Okey. Thanks! I'll look into that. I just tried to figure out the error I got, according to my google search history - it must have been something along the line:  error: cannot convert ?int (*)[]? to ?int*? in assignment
2014-11-24 09:51:52	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-24 09:52:15	pygospa	pygospa: And as said, I got rid of it with changing the type from int* to int (*). But yeah, as you have guessed, I'm not that comfortable with pointer arithmetic (I used to do heavily programming in Java and Ruby before this). So thank's a lot again for your input. I'll google about how to solve this with vectors instead!
2014-11-24 09:54:30	<--	suppahsrv (~mopmop@95.238.200.80) has quit (Ping timeout: 244 seconds)
2014-11-24 09:54:43	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Remote host closed the connection)
2014-11-24 09:54:44	ppf	pygospa: just avoid using pointers and you'll still create perfectly good c++ code
2014-11-24 09:56:15	-->	ison__ (2eba4fb2@gateway/web/freenode/ip.46.186.79.178) has joined ##c++
2014-11-24 09:56:28	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-11-24 09:56:37	<--	ison__ (2eba4fb2@gateway/web/freenode/ip.46.186.79.178) has left ##c++
2014-11-24 09:56:45	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-24 09:57:12	-->	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2014-11-24 09:57:25	-->	DrSkyLizard (~quassel@unaffiliated/shiningthrough) has joined ##c++
2014-11-24 09:57:46	DrSkyLizard	Can I have a default paramter set to the value of another non default parameter? How about to the value of another default parameter?
2014-11-24 09:58:15	DrSkyLizard	In the former case I get "error nonDefaultParameter1 was not declared in this scope"
2014-11-24 09:58:30	VladolfPutler	say I have a C-style string "<tag>" and I want to put "tag" into a C++ string. What way can I get rid of the < > with the least amount of code?
2014-11-24 09:58:41	DrSkyLizard	but it its declared! the compiler is dumb!
2014-11-24 09:58:44	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-24 09:59:03	kadoban	DrSkyLizard: No to both afaik. It's declared, but not in the scope it needs to be for that to work.
2014-11-24 09:59:21	DrSkyLizard	:((
2014-11-24 09:59:37	kadoban	DrSkyLizard: You might be able to do a workaround by refactoring what your arguments mean, or having a default sentinal value or something that then gets set to whatever you want inside the function body.
2014-11-24 09:59:51	-->	lamefun (~lamefun2@5.166.225.171) has joined ##c++
2014-11-24 09:59:54	DrSkyLizard	I need to make it a pointer
2014-11-24 10:00:10	DrSkyLizard	otherwise with const ref it interface I can't instantiate it as default
2014-11-24 10:00:18	DrSkyLizard	s/it//
2014-11-24 10:00:26	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-24 10:00:41	DrSkyLizard	because that's the API/interface
2014-11-24 10:01:12	DrSkyLizard	const point to const pointer ftw
2014-11-24 10:02:12	DrSkyLizard	VladolfPutler: your string *always* looks like that? i.e. 5 chars?
2014-11-24 10:02:23	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 10:02:24	DrSkyLizard	VladolfPutler: or is the tag of variable lenght?
2014-11-24 10:02:55	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-24 10:02:56	blut	VladolfPutler: use string (const string& str, size_t pos, size_t len = npos);
2014-11-24 10:03:07	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-24 10:03:16	-->	plamen (user@nat/mslo/x-vptsvjxckxodsbgl) has joined ##c++
2014-11-24 10:03:55	blut	VladolfPutler: sorry i meant string (const char* s, size_t n);
2014-11-24 10:03:57	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-24 10:04:10	-->	notpara (~para@213.187.75.26) has joined ##c++
2014-11-24 10:04:25	VladolfPutler	yeah, I just thought about upping the offset to +1, so I skip the first <
2014-11-24 10:04:26	DrSkyLizard	won't the former with pos = cstring[0] or cstring and len = strlen(strpos) - 1 do the same thing?
2014-11-24 10:04:27	-->	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-24 10:04:29	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-24 10:04:35	DrSkyLizard	err, strlen(cstring)
2014-11-24 10:04:40	blut	VladolfPutler: you can determine the size from the distance between < and > and use [1] for the
2014-11-24 10:04:44	blut	beginning
2014-11-24 10:05:01	VladolfPutler	but the ending > is sometimes ommited, so that's spoiling the easy solution :S
2014-11-24 10:05:18	mihipte	what language are you parsing? =\
2014-11-24 10:05:29	blut	VladolfPutler: then search for the next separator as is '>' or ' '
2014-11-24 10:05:40	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 240 seconds)
2014-11-24 10:05:45	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 10:05:53	mihipte	maybe XML but ignoring attributes
2014-11-24 10:06:26	VladolfPutler	mihipte, I'm parsing XML yes, but it's a simple scheme, and I intend not to use a library
2014-11-24 10:07:11	VladolfPutler	but maybe I'll leave it like this, the occasional ending > won't break the code :p
2014-11-24 10:07:18	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Quit: Leaving...)
2014-11-24 10:07:20	mihipte	if you have C++11 and are comfortable with regexes, they might help... or they might just give you another problem :)
2014-11-24 10:07:26	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-24 10:07:44	VladolfPutler	mihipte, yes I thought about regexes, I haven't used them a lot in C++ though
2014-11-24 10:08:08	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 10:08:08	-->	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has joined ##c++
2014-11-24 10:08:47	mihipte	XML and regexes, the dynamic duo
2014-11-24 10:09:00	ppf	VladolfPutler: maybe just pull in a lightweight xml library
2014-11-24 10:09:17	ville	no such thing.
2014-11-24 10:09:28	ppf	hehehe
2014-11-24 10:09:50	<--	Anthaas (a170e867@gateway/web/freenode/ip.161.112.232.103) has quit (Ping timeout: 246 seconds)
2014-11-24 10:10:04	<--	rawfodog_ (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2014-11-24 10:10:25	<--	b0lt (r00t@unaffiliated/bolt) has quit (Quit: telnet irc.freenode.net 6667)
2014-11-24 10:10:39	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-24 10:10:49	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 255 seconds)
2014-11-24 10:10:50	<--	ludkiller (lud@gateway/shell/elitebnc/x-qjpvazvjguesacww) has quit (Excess Flood)
2014-11-24 10:11:05	-->	illerucis (~illerucis@199.201.65.135) has joined ##c++
2014-11-24 10:11:11	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-24 10:11:20	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Remote host closed the connection)
2014-11-24 10:11:36	-->	ludkiller (lud@gateway/shell/elitebnc/x-ktncqrbhdjzcntya) has joined ##c++
2014-11-24 10:11:55	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-24 10:11:56	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-24 10:12:03	<--	mdkess (~mdkess@pool-72-80-148-209.nycmny.fios.verizon.net) has quit (Quit: mdkess)
2014-11-24 10:13:03	<--	heedypo (~heedypo3@host-89-241-246-157.as13285.net) has quit (Ping timeout: 264 seconds)
2014-11-24 10:13:33	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 10:13:36	<--	Gvidon (~gvidon@unaffiliated/gvidon) has quit (Quit: Leaving.)
2014-11-24 10:13:48	lamefun	How do I search std::map by a C string without copying it into a std::string?
2014-11-24 10:15:03	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-24 10:15:24	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-24 10:15:31	<--	komarov (~komarov@178.62.189.37) has quit (Ping timeout: 272 seconds)
2014-11-24 10:16:01	lh_mouse	lamefun, use c++14.
2014-11-24 10:16:05	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-24 10:16:46	lamefun	lh_mouse, "string"s?
2014-11-24 10:17:11	mihipte	lh_mouse, surely it just copies it to a std::string for you?
2014-11-24 10:17:23	DrSkyLizard	Why do you care about copying?
2014-11-24 10:17:32	DrSkyLizard	premature optimization
2014-11-24 10:17:35	DrSkyLizard	in C++ FTW!
2014-11-24 10:17:36	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-24 10:18:17	<--	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has quit (Ping timeout: 256 seconds)
2014-11-24 10:19:00	<--	Anodl1 (~Anodl@213.157.2.74) has quit (Quit: Leaving.)
2014-11-24 10:19:10	lamefun	iterator find (const key_type& k)
2014-11-24 10:19:11	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 10:19:18	mihipte	lamefun, one option might be to write a hash function that takes char* and set your map key type to size_t... not a literal solution, but close
2014-11-24 10:19:23	lamefun	why can't it search by anything that can be compared with key_type instead?
2014-11-24 10:19:45	lamefun	"STL is very generic cool library" ha-ha-ha-ha-ha.
2014-11-24 10:19:57	<--	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has quit (Remote host closed the connection)
2014-11-24 10:20:45	<--	Superlokkus (~Superlokk@wh0963.dip.tu-dresden.de) has quit (Quit: Leaving...)
2014-11-24 10:20:59	-->	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:7572:773:470b:2a6c) has joined ##c++
2014-11-24 10:21:52	-->	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has joined ##c++
2014-11-24 10:21:55	<--	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has quit (Changing host)
2014-11-24 10:21:55	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-24 10:22:37	lamefun	Oh, Microsoft, enlighten us! Oh, Apple, show us the way! Oh, Google, guide us to wisdom! Oh, Oracle, give us the knowledge! I pray to you!
2014-11-24 10:22:46	mihipte	Oracle fits best there
2014-11-24 10:23:19	ville	pretty sure c++14 has lookup with non-key-type or it's in the works at least
2014-11-24 10:24:08	ville	!ggl c++ heterogenous lookup
2014-11-24 10:24:09	nolyc	http://stackoverflow.com/questions/7804955/heterogeneous-containers-in-c
2014-11-24 10:24:21	lamefun	http://en.cppreference.com/w/cpp/container/map/find oh
2014-11-24 10:24:23	lamefun	nice
2014-11-24 10:24:35	ville	umm not that so link at least..
2014-11-24 10:26:28	-->	mitch0 (~mitch@2E8B5F8F.catv.pool.telekom.hu) has joined ##c++
2014-11-24 10:26:35	lamefun	I was looking at cplusplus.com reference
2014-11-24 10:26:53	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 272 seconds)
2014-11-24 10:27:01	mihipte	oh, they haven't updated to 14?
2014-11-24 10:27:02	ville	it's known bad reference site
2014-11-24 10:27:39	<--	MrIlyas (~MrIlyas@cable-46.253.161.121.coditel.net) has quit (Read error: Connection reset by peer)
2014-11-24 10:27:39	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 10:28:20	mihipte	never seen any sensible complaint agaisnt cplusplus before, or seen them fail... but if they don't update soon I'll agree
2014-11-24 10:28:39	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-24 10:29:17	kadoban	cplusplus used to be much worse, for a looonng time. It's still not as nice as cppreference anyway.
2014-11-24 10:30:48	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Remote host closed the connection)
2014-11-24 10:32:33	pragma-	They both suck.
2014-11-24 10:33:14	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-24 10:33:35	pygospa	ppf: Oh my god! It compiles! Thank you so very much! It must have been something with the pointer - I switched to Vector (and left most of the code untouched) - now everything is working as it should. Still wondering why it was complaining about the scope of the member though...
2014-11-24 10:33:43	kadoban	Well, everything sucks. Some things suck less than others though.
2014-11-24 10:34:11	<--	mihipte (~mihipte@cpe-72-181-136-31.tx.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-24 10:34:24	seishun	the standard doesn't suck I guess
2014-11-24 10:34:41	<--	pappa (~pappa@91.141.4.127.wireless.dyn.drei.com) has quit (Ping timeout: 240 seconds)
2014-11-24 10:35:04	<--	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has quit (Quit: Leaving)
2014-11-24 10:35:24	<--	lamefun (~lamefun2@5.166.225.171) has quit (Quit: Leaving)
2014-11-24 10:35:41	ville	you will find lot of people who would disagree with that statement
2014-11-24 10:35:46	-->	prosper_ (~prosper@user3-85-59.wireless.utoronto.ca) has joined ##c++
2014-11-24 10:36:22	Supicioso	!show me valgrind
2014-11-24 10:36:28	Supicioso	:(
2014-11-24 10:36:48	jeaye	!next2
2014-11-24 10:36:50	nolyc	Another dissatisfied customer, next!
2014-11-24 10:36:59	<--	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 10:37:36	-->	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-24 10:37:36	<--	nacon (~nacon@HSI-KBW-46-223-234-121.hsi.kabel-badenwuerttemberg.de) has quit (Changing host)
2014-11-24 10:37:36	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2014-11-24 10:37:55	-->	paulzz (~paul@cpc7-runc5-2-0-cust291.1-3.cable.virginm.net) has joined ##c++
2014-11-24 10:38:37	Supicioso	!give me valgrind
2014-11-24 10:38:39	nolyc	me: valgrind is http://valgrind.org - a program execution supervisor for x86, x86_64, ARM and PPC Linux that can debug heap memory usage errors like invalid accesses and memory leaks efficiently. It also contains a cache-, a heap- and a call-graph profiler.
2014-11-24 10:38:41	Supicioso	\o/
2014-11-24 10:39:07	-->	dumdedum (~dumdedum@83.138.250.188.dyn.user.ono.com) has joined ##c++
2014-11-24 10:39:20	<--	paulzz (~paul@cpc7-runc5-2-0-cust291.1-3.cable.virginm.net) has left ##c++
2014-11-24 10:39:48	-->	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-11-24 10:39:57	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-24 10:40:13	<--	DrSkyLizard (~quassel@unaffiliated/shiningthrough) has quit (Remote host closed the connection)
2014-11-24 10:40:26	-->	daNRG (~danny@WL-POOL1-ONT-112.UNI-MUENSTER.DE) has joined ##c++
2014-11-24 10:41:50	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-24 10:43:42	-->	eric__ (~eric@pool-72-79-243-168.spfdma.east.verizon.net) has joined ##c++
2014-11-24 10:43:56	<--	Budd (~eric@pool-108-8-193-150.spfdma.east.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-24 10:45:17	<--	eric__ (~eric@pool-72-79-243-168.spfdma.east.verizon.net) has quit (Client Quit)
2014-11-24 10:45:25	-->	eric__ (~eric@pool-72-79-243-168.spfdma.east.verizon.net) has joined ##c++
2014-11-24 10:45:57	<--	eric__ (~eric@pool-72-79-243-168.spfdma.east.verizon.net) has left ##c++
2014-11-24 10:46:22	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Read error: Connection reset by peer)
2014-11-24 10:47:00	-->	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-11-24 10:47:15	-->	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has joined ##c++
2014-11-24 10:47:45	<--	acrussell (adamcrusse@awww.jeah.net) has quit (Quit: Leaving.)
2014-11-24 10:49:37	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-11-24 10:51:13	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-24 10:51:19	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-24 10:51:39	<--	kapil_ (uid36151@gateway/web/irccloud.com/x-mdcskpducfsrzwzz) has quit (Quit: Connection closed for inactivity)
2014-11-24 10:51:59	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-24 10:52:09	<--	rriemann (~rriemann@dhcp-183-214.ens-lyon.fr) has quit (Ping timeout: 240 seconds)
2014-11-24 10:52:39	o-0-o	'efficiently'
2014-11-24 10:53:24	-->	[H]unt3r (~H]unt3r@137.28.95.175) has joined ##c++
2014-11-24 10:53:55	<--	thecha (tehcha@unaffiliated/thecha) has quit (Ping timeout: 264 seconds)
2014-11-24 10:54:58	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 10:55:13	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-24 10:56:03	<--	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-11-24 10:56:04	-->	thecha (~tehcha@unaffiliated/thecha) has joined ##c++
2014-11-24 10:57:37	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 245 seconds)
2014-11-24 10:58:10	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-24 10:58:11	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 10:58:18	-->	Superlokkus (~Superlokk@wh0183.dip.tu-dresden.de) has joined ##c++
2014-11-24 10:58:26	-->	Dendo (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-24 10:58:46	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 10:58:47	<--	Superlokkus (~Superlokk@wh0183.dip.tu-dresden.de) has quit (Read error: Connection reset by peer)
2014-11-24 10:58:47	-->	Unscrupulous (~unscrupt@172.56.33.170) has joined ##c++
2014-11-24 10:58:59	-->	Superlokkus (~Superlokk@wh0183.dip.tu-dresden.de) has joined ##c++
2014-11-24 10:59:13	<--	Dendo (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has left ##c++
2014-11-24 10:59:15	-->	Poireau (~Poireau@ip-80-236-230-14.dsl.scarlet.be) has joined ##c++
2014-11-24 10:59:24	-->	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-11-24 10:59:44	<--	muscle-man (~mike@cpe-24-166-34-21.neo.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-24 11:00:22	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-24 11:00:28	<--	blut (864c2693@gateway/web/freenode/ip.134.76.38.147) has quit (Ping timeout: 246 seconds)
2014-11-24 11:00:40	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-24 11:00:46	BZEU	hey is Bjarnes book Principles and Practice Using C++ good? I'm not a beginner in programming but I never learned C++ correctly I suppose.
2014-11-24 11:01:00	<--	prosper_ (~prosper@user3-85-59.wireless.utoronto.ca) has quit (Ping timeout: 272 seconds)
2014-11-24 11:01:07	<--	Unscrup70 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-24 11:01:53	-->	scai (~scai@pD9EA69CD.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 11:02:36	-->	a_le (~a_le@28.sub-70-197-0.myvzw.com) has joined ##c++
2014-11-24 11:03:05	<--	Superlokkus (~Superlokk@wh0183.dip.tu-dresden.de) has quit (Client Quit)
2014-11-24 11:03:33	coolcat	BZEU, It's been enthusiastically by Herb Sutter as a very good starting point.
2014-11-24 11:04:27	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-11-24 11:04:40	<--	Tazmain (~Tazmainia@197.82.203.122) has quit (Quit: Leaving)
2014-11-24 11:04:51	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-24 11:05:25	--	Anoniemal`afk is now known as Anoniemal
2014-11-24 11:05:27	<--	PSvils (~Owner@81.198.225.19) has quit (Quit: Leaving.)
2014-11-24 11:05:29	--	Anoniemal is now known as Anoniem4l
2014-11-24 11:05:42	BZEU	Ah nice
2014-11-24 11:05:43	-->	rriemann (~rriemann@dhcp-183-214.ens-lyon.fr) has joined ##c++
2014-11-24 11:05:44	<--	lynnard (~lingnan@cpc3-walt13-2-0-cust268.13-2.cable.virginm.net) has left ##c++
2014-11-24 11:05:57	-->	kaffeetrauma (~Thunderbi@5.147.4.15) has joined ##c++
2014-11-24 11:06:10	-->	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-11-24 11:06:28	BZEU	A question, what can you do once you know C++ very well? Any expert here can answer how it feels. I mean can you just make up an idea and start coding it?
2014-11-24 11:07:04	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-24 11:07:35	kadoban	BZEU: Sure, but that's true of most languages. Once you know them, you can start to think about the idea you're trying to express instead of how to fit it into the language.
2014-11-24 11:07:49	o-0-o	everything
2014-11-24 11:07:51	o-0-o	!next
2014-11-24 11:07:52	nolyc	Another satisfied customer, next!
2014-11-24 11:08:01	kadoban	BZEU: Depending on the problem you're trying to solve, C++ may or may not be the best way to solve it, it depends. It's rarely the easiest way to solve most problems.
2014-11-24 11:08:18	-->	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-24 11:10:01	o-0-o	C++ is always the best way, if you are an expert :)
2014-11-24 11:10:05	BZEU	kadoban: I don't know what it is but I don't see other languages as strong as C++, C or ASM. I always wanted to master them.
2014-11-24 11:10:21	o-0-o	start now
2014-11-24 11:10:32	o-0-o	!give BZEU book
2014-11-24 11:10:33	nolyc	BZEU: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-24 11:10:35	BZEU	Should I buy this book?
2014-11-24 11:11:03	BZEU	I hate reading books from computer it's getting boring. Is it worth buying a book?
2014-11-24 11:11:17	o-0-o	if you have the money to spare, ofc
2014-11-24 11:11:26	kadoban	BZEU: If you're doing something close to hardware or need maximum speed and don't care how long it takes to develop/test/maintain the solution, then one of those is often a good fit. Otherwise, a higher level language might be a better fit. Of course if you just want to learn the language anway, feel free.
2014-11-24 11:11:31	o-0-o	but these silly questions suggest trolling
2014-11-24 11:12:09	BZEU	http://www.amazon.co.uk/Programming-Principles-Practice-Using-C/dp/0321992784/ref=sr_1_1?ie=UTF8&qid=1416846095&sr=8-1&keywords=Principles+and+Practice+Using+C%2B%2B
2014-11-24 11:12:10	nolyc	<http://tinyurl.com/lum2s2t> (at www.amazon.co.uk)
2014-11-24 11:12:17	BZEU	I was thinking of this one
2014-11-24 11:12:23	o-0-o	I am leaving. suck him up, suckers
2014-11-24 11:12:45	-->	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has joined ##c++
2014-11-24 11:13:25	-->	muscle-man (~mike@cpe-24-166-34-21.neo.res.rr.com) has joined ##c++
2014-11-24 11:15:27	<--	TheAncientGoat (~quassel@210.195.220.183) has quit (Remote host closed the connection)
2014-11-24 11:15:58	BZEU	kadoban: Are you experienced C++ developer?
2014-11-24 11:16:19	<--	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has quit (Quit: Ex-Chat)
2014-11-24 11:17:40	kadoban	BZEU: Sure.
2014-11-24 11:19:15	tworkin	are you experienced, little coder?
2014-11-24 11:19:32	<--	KarolisK (~karolis@193.219.83.48) has quit (Quit: Konversation terminated!)
2014-11-24 11:19:39	BZEU	me?
2014-11-24 11:20:29	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-24 11:22:34	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-24 11:23:04	BZEU	kadoban: http://isocpp.org/get-started
2014-11-24 11:23:07	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 272 seconds)
2014-11-24 11:23:26	BZEU	About the book I asked, "Are you completely new to programming?"
2014-11-24 11:23:57	BZEU	I'm not, but I don't know if this can be a good book still as I don't know C++ good.
2014-11-24 11:25:22	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-24 11:26:28	<--	Unscrupulous (~unscrupt@172.56.33.170) has quit (Ping timeout: 240 seconds)
2014-11-24 11:27:54	-->	lamefun (~lamefun2@5.166.225.171) has joined ##c++
2014-11-24 11:28:30	-->	kaleid0 (~kaleid0@2600:1014:b018:9080:c345:a48e:e12d:287) has joined ##c++
2014-11-24 11:28:51	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-24 11:29:29	Bloodust	!books
2014-11-24 11:29:30	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-24 11:29:44	<--	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has quit (Remote host closed the connection)
2014-11-24 11:30:02	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-24 11:30:10	BZEU	Bloodust: ??
2014-11-24 11:30:34	BZEU	I'm between Bjarnes Programming: Principles and Practice Using C++ and Primer C++
2014-11-24 11:30:34	Bloodust	what?
2014-11-24 11:30:43	Bloodust	oh sorry that wasnt for you
2014-11-24 11:30:55	BZEU	I see
2014-11-24 11:30:55	Bloodust	just a coincidence
2014-11-24 11:31:01	-->	wheals_ (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 11:31:11	BZEU	Bloodust: Could you help me decide?
2014-11-24 11:31:56	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Disconnected by services)
2014-11-24 11:31:58	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-24 11:32:01	--	wheals_ is now known as wheals
2014-11-24 11:32:03	Bloodust	sorry, busy
2014-11-24 11:32:26	tworkin	BZEU: Hendrix joke.
2014-11-24 11:32:30	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-24 11:32:53	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 255 seconds)
2014-11-24 11:33:14	<--	jagob (~jacob@h195.natout.aau.dk) has quit (Remote host closed the connection)
2014-11-24 11:33:20	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-24 11:33:20	--	shintahW2 is now known as shintahW
2014-11-24 11:33:42	<--	tecpo (~username@d75-158-25-22.abhsia.telus.net) has quit (Remote host closed the connection)
2014-11-24 11:33:51	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-24 11:33:52	<--	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 272 seconds)
2014-11-24 11:34:36	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Quit: Konversation terminated!)
2014-11-24 11:34:50	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 11:35:16	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 11:35:27	BZEU	^^
2014-11-24 11:35:34	BZEU	Anyone can help me out?
2014-11-24 11:35:49	tworkin	get the updated effective c++
2014-11-24 11:35:54	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-11-24 11:36:16	BZEU	I thought this one was advanced+
2014-11-24 11:36:17	BZEU	?
2014-11-24 11:36:33	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-24 11:37:37	-->	ferdna (~ferdna@cpe-69-23-141-88.elp.res.rr.com) has joined ##c++
2014-11-24 11:37:45	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-24 11:38:23	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Read error: Connection reset by peer)
2014-11-24 11:39:15	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 264 seconds)
2014-11-24 11:40:07	<--	dumdedum (~dumdedum@83.138.250.188.dyn.user.ono.com) has quit (Quit: foo)
2014-11-24 11:40:37	-->	SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-24 11:43:17	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 11:45:35	bumbar_	i'm getting an error saying that in B's constructor A is protected http://ideone.com/3S7wul (it works on my local machine and ideone, but not on another machine i'm trying to compile on)
2014-11-24 11:45:42	<--	pygospa (~kth@te52.informatik.uni-bremen.de) has quit (Quit: leaving)
2014-11-24 11:45:43	<--	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Ping timeout: 256 seconds)
2014-11-24 11:46:02	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-24 11:46:29	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 11:46:30	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-24 11:48:08	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-24 11:50:12	-->	prosper_ (~prosper@142.150.23.90) has joined ##c++
2014-11-24 11:50:19	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-24 11:51:00	<--	rriemann (~rriemann@dhcp-183-214.ens-lyon.fr) has quit (Ping timeout: 240 seconds)
2014-11-24 11:51:15	<--	scai (~scai@pD9EA69CD.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-24 11:52:04	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-24 11:52:49	<--	f00dMonsta (~f00dMonst@198.58.138.101) has quit (Ping timeout: 272 seconds)
2014-11-24 11:53:20	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 11:54:11	<--	leakybuckit (~leakybuck@pb-d-128-141-130-203.cern.ch) has quit (Quit: Leaving)
2014-11-24 11:55:17	-->	woozly (~woozly@unaffiliated/woozly) has joined ##c++
2014-11-24 11:56:01	-->	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has joined ##c++
2014-11-24 11:56:24	woozly	guys, If I want to access the object member, I can do this: this->member = 42; but Clion IDE used this construction: ClassName::member = 42; Is it okay?
2014-11-24 11:56:52	woozly	Of course I can access it without any prefixes, like: member = 42; But question is not about this way
2014-11-24 11:57:18	<--	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has quit (Remote host closed the connection)
2014-11-24 11:57:55	adamm	ClassName::member is for static members, the other one is for non-static members. I hope you know the difference.
2014-11-24 11:58:14	<--	prosper_ (~prosper@142.150.23.90) has quit (Remote host closed the connection)
2014-11-24 11:58:38	seishun	he means inside a member function, where both work
2014-11-24 11:58:50	<--	a_le (~a_le@28.sub-70-197-0.myvzw.com) has quit (Ping timeout: 258 seconds)
2014-11-24 11:58:56	seishun	ClassName::member looks weird if anything
2014-11-24 11:59:51	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-24 12:00:06	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-24 12:00:21	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-24 12:01:44	<--	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-24 12:02:04	Jinxit	doing ClassName::member might trick people into thinking it's static
2014-11-24 12:02:04	Jinxit	like it just did
2014-11-24 12:02:04	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-24 12:02:36	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-24 12:03:32	woozly	thank you guys. Of course I know that ClassName::member is for static, but IDE do this way in a member function, then I asked this question. Thank you guys for your explanation.
2014-11-24 12:04:26	-->	huhze (~quassel@dslb-178-008-174-209.178.008.pools.vodafone-ip.de) has joined ##c++
2014-11-24 12:04:26	adamm	Using this-> and Name:: inside Name to access member variables/functions is just a bad idea. Scoping rules exist for a reason.
2014-11-24 12:04:49	woozly	adamm: you mean clean 'member = 42' way?
2014-11-24 12:04:53	adamm	yes
2014-11-24 12:04:59	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-24 12:05:00	woozly	yeap, I think so too.
2014-11-24 12:05:47	-->	f00dMonsta (~f00dMonst@198.58.138.107) has joined ##c++
2014-11-24 12:06:33	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-24 12:06:39	<--	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2014-11-24 12:06:51	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-24 12:07:06	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-24 12:07:19	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-11-24 12:07:39	<--	aslant (~aslant@37.157.33.76) has quit (Read error: Connection reset by peer)
2014-11-24 12:08:05	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:945d:735c:3075:c55d) has joined ##c++
2014-11-24 12:08:40	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-24 12:09:18	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 12:09:25	-->	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-11-24 12:10:56	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-24 12:11:05	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-24 12:11:41	<--	thecha (~tehcha@unaffiliated/thecha) has quit (Quit: my absence if the biggest gift i can bestow upon anybody)
2014-11-24 12:12:15	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-24 12:12:24	<--	TheHackOps (~TheHackOp@203-158-39-145.dyn.iinet.net.au) has quit (Read error: Connection reset by peer)
2014-11-24 12:12:44	-->	doev (~doev@p4FE10FCE.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 12:12:48	-->	kurahaupo (~kurahaupo@118.148.153.94) has joined ##c++
2014-11-24 12:13:40	-->	jorj (~jorj@162.220.240.216) has joined ##c++
2014-11-24 12:14:28	-->	heedypo (~heedypo3@host-89-241-246-157.as13285.net) has joined ##c++
2014-11-24 12:14:47	-->	acrussell (adamcrusse@awww.jeah.net) has joined ##c++
2014-11-24 12:16:12	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Quit: asdf)
2014-11-24 12:16:23	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 265 seconds)
2014-11-24 12:16:26	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-24 12:16:43	-->	mihipte (~mihipte@74.194.233.238) has joined ##c++
2014-11-24 12:17:10	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-24 12:17:23	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-24 12:19:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 12:20:12	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-24 12:21:59	-->	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has joined ##c++
2014-11-24 12:22:36	-->	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has joined ##c++
2014-11-24 12:22:40	<--	Renderwahn (~render@176.126.244.88) has quit (Ping timeout: 240 seconds)
2014-11-24 12:22:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 12:24:06	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-24 12:25:08	-->	Rammelbieber (~Rammelbie@dslb-094-217-082-235.094.217.pools.vodafone-ip.de) has joined ##c++
2014-11-24 12:25:11	<--	daNRG (~danny@WL-POOL1-ONT-112.UNI-MUENSTER.DE) has quit (Remote host closed the connection)
2014-11-24 12:26:27	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-24 12:26:36	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 12:27:13	-->	Kopharex (~Kopharex@79.143.120.87) has joined ##c++
2014-11-24 12:27:15	<--	Kopharex (~Kopharex@79.143.120.87) has quit (Client Quit)
2014-11-24 12:27:44	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-24 12:31:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 12:31:46	<--	losh (~losh@staff-fr.corp.dailymotion.com) has quit (Quit: Leaving)
2014-11-24 12:32:18	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Quit: Leaving)
2014-11-24 12:33:33	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-24 12:34:30	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 12:35:05	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-24 12:35:09	<--	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has quit (Ping timeout: 258 seconds)
2014-11-24 12:35:10	<--	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-11-24 12:35:48	Supicioso	Visual Leak Detector detected 137 memory leaks (377135 bytes)
2014-11-24 12:35:49	Supicioso	Welp
2014-11-24 12:36:37	<--	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has quit (Remote host closed the connection)
2014-11-24 12:37:21	-->	Kopharex (~Kopharex@79.143.120.87) has joined ##c++
2014-11-24 12:38:18	<--	melter (~Melter@2001:4930:116:0:596a:ca7f:8a67:c4c2) has quit (Ping timeout: 272 seconds)
2014-11-24 12:38:46	<--	mihipte (~mihipte@74.194.233.238) has left ##c++
2014-11-24 12:39:56	-->	JamesNZ (~james@60-234-168-94.bitstream.orcon.net.nz) has joined ##c++
2014-11-24 12:39:59	<--	JamesNZ (~james@60-234-168-94.bitstream.orcon.net.nz) has quit (Changing host)
2014-11-24 12:39:59	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-24 12:40:11	-->	ravior (~ravior@89.121.200.106) has joined ##c++
2014-11-24 12:41:43	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 12:41:47	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:945d:735c:3075:c55d) has quit (Quit: Leaving)
2014-11-24 12:41:56	<--	ac_slater_ (~weechat@96.237.110.242) has quit (Ping timeout: 265 seconds)
2014-11-24 12:42:15	-->	Unscrupulous (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has joined ##c++
2014-11-24 12:43:08	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-24 12:45:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 12:45:15	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 12:45:19	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-24 12:46:08	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 244 seconds)
2014-11-24 12:46:48	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-24 12:47:29	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Client Quit)
2014-11-24 12:47:50	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-24 12:48:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 12:49:22	<--	JoshSyn (~swoorup@d122-111-246-16.per801.wa.optusnet.com.au) has quit (Ping timeout: 240 seconds)
2014-11-24 12:50:26	-->	sohail (~user@184.175.8.252) has joined ##c++
2014-11-24 12:51:37	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-24 12:51:38	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-24 12:52:35	-->	f00dMonsta_ (~f00dMonst@198.58.138.101) has joined ##c++
2014-11-24 12:53:21	-->	Xitano (~contato@r73-pw-pantano.ibys.com.br) has joined ##c++
2014-11-24 12:54:00	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-24 12:54:01	<--	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has quit (Remote host closed the connection)
2014-11-24 12:54:04	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-24 12:54:18	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 256 seconds)
2014-11-24 12:56:24	<--	ravior (~ravior@89.121.200.106) has quit (Remote host closed the connection)
2014-11-24 12:56:24	<--	f00dMonsta (~f00dMonst@198.58.138.107) has quit (Ping timeout: 265 seconds)
2014-11-24 12:57:00	-->	melter (~Melter@2001:4930:116:0:2413:a82a:ad53:2d35) has joined ##c++
2014-11-24 12:57:09	-->	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-11-24 12:58:23	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Quit: leaving)
2014-11-24 12:59:19	-->	Hannibal_Smith (~Hannibal_@host205-174-dynamic.40-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-24 12:59:59	-->	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 13:00:03	<--	plash (~plash@unaffiliated/plash) has quit (Ping timeout: 255 seconds)
2014-11-24 13:01:01	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-24 13:01:04	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 13:02:18	-->	hexagoxel (~hexagoxel@195.244.237.55) has joined ##c++
2014-11-24 13:04:16	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-24 13:04:50	<--	SiGe_ (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Ping timeout: 264 seconds)
2014-11-24 13:06:08	<--	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-gkimqkgtlimxbxvy) has quit (Remote host closed the connection)
2014-11-24 13:06:08	<--	CJKay (CJKay@gateway/shell/elitebnc/x-vokgqqblywomjgrw) has quit (Remote host closed the connection)
2014-11-24 13:07:57	-->	CJKay (CJKay@gateway/shell/elitebnc/x-iyegkaoapnkedasb) has joined ##c++
2014-11-24 13:08:09	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 13:08:14	-->	k0nichiwa (~jdoe@wsip-174-77-237-196.ga.at.cox.net) has joined ##c++
2014-11-24 13:08:55	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-24 13:10:44	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-24 13:12:10	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-24 13:12:15	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 258 seconds)
2014-11-24 13:12:33	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-24 13:12:49	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 13:13:00	-->	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-mcvuiucklqalmruh) has joined ##c++
2014-11-24 13:13:33	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 240 seconds)
2014-11-24 13:14:36	-->	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-11-24 13:14:48	<--	Kopharex (~Kopharex@79.143.120.87) has quit (Quit: Leaving)
2014-11-24 13:15:27	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Read error: Connection reset by peer)
2014-11-24 13:16:29	<--	[H]unt3r (~H]unt3r@137.28.95.175) has quit (Remote host closed the connection)
2014-11-24 13:16:33	-->	leeN (~leeN@g228050116.adsl.alicedsl.de) has joined ##c++
2014-11-24 13:17:43	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-24 13:17:45	-->	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has joined ##c++
2014-11-24 13:18:21	<--	astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-24 13:18:27	-->	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has joined ##c++
2014-11-24 13:19:07	-->	Hyn (b2c01778@gateway/web/freenode/ip.178.192.23.120) has joined ##c++
2014-11-24 13:20:10	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-24 13:20:17	<--	sohail (~user@184.175.8.252) has quit (Remote host closed the connection)
2014-11-24 13:20:42	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-24 13:21:55	-->	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has joined ##c++
2014-11-24 13:22:17	-->	w41_ (~w41@unaffiliated/w41) has joined ##c++
2014-11-24 13:22:44	--	Sub|zzz is now known as SubCreative
2014-11-24 13:22:59	<--	leeter (~leeter@unaffiliated/leeter) has quit (Client Quit)
2014-11-24 13:23:02	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-24 13:23:22	-->	MINIMAN10000 (~MINIMAN10@73.19.114.42) has joined ##c++
2014-11-24 13:23:55	<--	Hyn (b2c01778@gateway/web/freenode/ip.178.192.23.120) has quit (Client Quit)
2014-11-24 13:23:55	-->	xenoph (~module@89.11.172.72) has joined ##c++
2014-11-24 13:24:43	-->	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has joined ##c++
2014-11-24 13:24:48	-->	dunpeal (~dunpeal@wsip-70-167-155-210.oc.oc.cox.net) has joined ##c++
2014-11-24 13:24:53	<--	CJKay (CJKay@gateway/shell/elitebnc/x-iyegkaoapnkedasb) has quit (Changing host)
2014-11-24 13:24:53	-->	CJKay (CJKay@unaffiliated/cjkay) has joined ##c++
2014-11-24 13:24:53	<--	dunpeal (~dunpeal@wsip-70-167-155-210.oc.oc.cox.net) has quit (Changing host)
2014-11-24 13:24:53	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-24 13:24:53	<--	CJKay (CJKay@unaffiliated/cjkay) has quit (Changing host)
2014-11-24 13:24:53	-->	CJKay (CJKay@gateway/shell/elitebnc/x-iyegkaoapnkedasb) has joined ##c++
2014-11-24 13:25:02	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-24 13:25:12	<--	hexagoxel (~hexagoxel@195.244.237.55) has quit (Ping timeout: 264 seconds)
2014-11-24 13:25:47	MINIMAN10000	Alright so I created a C file that runs without main. Then I was curious what happends if I try to compile it in c++. http://puu.sh/d3RzA/a6e9747b21.png It says It forbids declaration of _start with no type [-fpermissive] Not sure what the fpermissive means is this still possible but I just don't understand what the error is saying or what?
2014-11-24 13:26:03	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-24 13:26:17	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 13:26:35	gigabytes	MINIMAN10000: you have to supply a return type
2014-11-24 13:27:02	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-24 13:27:04	TinoDidriksen	MINIMAN10000, it is also invalid C to not have a return type on the function. Try compiling in ANSI mode.
2014-11-24 13:27:09	-->	[H]unt3r (~H]unt3r@137.28.95.175) has joined ##c++
2014-11-24 13:27:14	MINIMAN10000	how do i compile in ansi mode?
2014-11-24 13:27:17	gigabytes	you can't declare functions without return type, which is instead allowed in some dialects of C
2014-11-24 13:27:45	ville	!give MINIMAN10000 -Wall
2014-11-24 13:27:46	nolyc	MINIMAN10000: -Wall is only -Wsome; it leaves out many warnings. To really get a lot of warnings, you should use '-Wall -Wextra -Wpedantic -std=c++11'
2014-11-24 13:27:47	TinoDidriksen	g++ -std=c++0x -pedantic -Wall -Wextra
2014-11-24 13:28:28	TinoDidriksen	MINIMAN10000, but, what you're trying to do is beyond the Standard, so go ask ##C++-general if you have problems.
2014-11-24 13:28:33	-->	mihipte (~mihipte@74.194.233.238) has joined ##c++
2014-11-24 13:28:33	<--	mihipte (~mihipte@74.194.233.238) has quit (Remote host closed the connection)
2014-11-24 13:28:35	 *	japro finds -Wextra to be a bit esoteric at times
2014-11-24 13:28:48	-->	mihipte (~mihipte@74.194.233.238) has joined ##c++
2014-11-24 13:29:05	<--	mihipte (~mihipte@74.194.233.238) has left ##c++
2014-11-24 13:29:10	TinoDidriksen	Really? I haven't found reason to complain about -Wextra so far.
2014-11-24 13:29:11	japro	or, hmm
2014-11-24 13:29:22	japro	was it -Weverything on clang i'm thinking of maybe?
2014-11-24 13:29:31	TinoDidriksen	-Weverything is crazy.
2014-11-24 13:29:40	ville	well that's literalily everything and is just nonsense
2014-11-24 13:29:44	-->	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-11-24 13:29:46	MINIMAN10000	lol
2014-11-24 13:30:00	japro	-Weffc++ or so was also hilarious
2014-11-24 13:30:08	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Remote host closed the connection)
2014-11-24 13:30:10	ville	yes that too
2014-11-24 13:30:42	Hannibal_Smith	MINIMAN10000, _start is supposed to be used for things like initializing glibc
2014-11-24 13:31:04	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 13:31:21	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2014-11-24 13:31:26	MINIMAN10000	im just having fun using the program's literal entry point.
2014-11-24 13:31:37	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-24 13:31:45	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-24 13:32:05	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-24 13:32:11	japro	i think they should add "-Wanything"
2014-11-24 13:32:19	-->	sixxx (5d306369@gateway/web/cgi-irc/kiwiirc.com/ip.93.48.99.105) has joined ##c++
2014-11-24 13:32:23	japro	it finds emits at least one warning for each program
2014-11-24 13:32:24	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 13:32:36	MINIMAN10000	alright yeah so you were right gigabytes  you can't declare functions without return type that was the problem
2014-11-24 13:33:01	wheals	warning: no warnings found
2014-11-24 13:33:04	MINIMAN10000	so theres nothing wrong with void _start() right?
2014-11-24 13:33:18	Hannibal_Smith	There is
2014-11-24 13:33:20	-->	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has joined ##c++
2014-11-24 13:33:30	gigabytes	MINIMAN10000: that's one of the most fundamentals differences from (pre-ansi) C
2014-11-24 13:33:35	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-24 13:34:03	MINIMAN10000	which is kind of unfortunate i like when defaults exist so i don't have to explicitly state every time.
2014-11-24 13:34:08	-->	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-11-24 13:34:17	TinoDidriksen	MINIMAN10000, _start is a reserved identifier. You're not allowed to make a global symbol starting with _
2014-11-24 13:34:24	<--	Christsensen (~Christsen@2a00:1a28:1163:2::1002) has quit (Quit: Leaving)
2014-11-24 13:34:34	Hannibal_Smith	MINIMAN10000, http://eli.thegreenplace.net/2012/08/13/how-statically-linked-programs-run-on-linux
2014-11-24 13:34:35	Hannibal_Smith	Read here
2014-11-24 13:34:37	MINIMAN10000	how would i get it to start... without _start. wat
2014-11-24 13:34:51	TinoDidriksen	MINIMAN10000, as I said, you're going beyond the Standard. Go ask ##C++-general
2014-11-24 13:34:56	<--	sixxx (5d306369@gateway/web/cgi-irc/kiwiirc.com/ip.93.48.99.105) has quit (Client Quit)
2014-11-24 13:35:38	MINIMAN10000	I should ask before i head over - im not using stdlib and so im literally just left with c++ so what makes it outside the scope of the c++ standard?
2014-11-24 13:35:39	TinoDidriksen	In this channel, you're not allowed to have _start
2014-11-24 13:36:08	MINIMAN10000	so _start itself is outside the standard?
2014-11-24 13:36:10	TinoDidriksen	_start is reserved for the implementation.
2014-11-24 13:36:44	MINIMAN10000	soab forwarded to namespace?
2014-11-24 13:37:04	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-24 13:37:15	MINIMAN10000	there spelt it wrong.
2014-11-24 13:37:52	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-24 13:38:34	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-24 13:39:00	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-24 13:41:03	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-24 13:41:04	-->	nebul4 (~nebul4@201.22.59.86.static.gvt.net.br) has joined ##c++
2014-11-24 13:41:07	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-24 13:41:15	--	davek_ is now known as davek
2014-11-24 13:41:16	-->	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has joined ##c++
2014-11-24 13:42:04	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-24 13:43:08	Smirnov	TinoDidriksen: starting with _ is fine, starting with __ or with _uppercase is not (it's reserved)
2014-11-24 13:43:26	TinoDidriksen	"begins with an underscore and is in the global namespace"
2014-11-24 13:43:28	<--	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has quit (Remote host closed the connection)
2014-11-24 13:43:30	<--	SiGe (~SiGe@usc-secure-wireless-207-006.usc.edu) has quit (Remote host closed the connection)
2014-11-24 13:43:31	Smirnov	oh you said global! never mind
2014-11-24 13:43:43	Smirnov	i didn't get my coffee yet this morning, sorry
2014-11-24 13:44:05	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-24 13:44:22	<--	n3bul4 (~nebul4@201.22.59.86.static.gvt.net.br) has quit (Ping timeout: 258 seconds)
2014-11-24 13:44:58	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit
2014-11-24 13:45:03	-->	heiner (~heiner@p5DC4E446.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 13:45:25	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Ping timeout: 244 seconds)
2014-11-24 13:46:13	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-24 13:46:37	<--	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-24 13:47:48	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-24 13:48:03	-->	theglass (~theglass@gateway/tor-sasl/theglass) has joined ##c++
2014-11-24 13:48:09	theglass	hi
2014-11-24 13:48:15	-->	n3bul4 (~nebul4@201.22.59.86.static.gvt.net.br) has joined ##c++
2014-11-24 13:48:27	<--	kaffeetrauma (~Thunderbi@5.147.4.15) has quit (Quit: kaffeetrauma)
2014-11-24 13:48:32	<--	heiner_ (~heiner@p5B3FF73C.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-24 13:48:41	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-24 13:49:18	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-24 13:49:27	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-24 13:49:28	-->	immibis (~ChatZill1@122-59-116-97.jetstream.xtra.co.nz) has joined ##c++
2014-11-24 13:50:53	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 265 seconds)
2014-11-24 13:51:36	<--	nebul4 (~nebul4@201.22.59.86.static.gvt.net.br) has quit (Ping timeout: 255 seconds)
2014-11-24 13:52:24	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-24 13:52:26	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-24 13:54:06	-->	Renderwahn (~render@176.126.244.88) has joined ##c++
2014-11-24 13:54:12	cbreak	not using the standard lib? Sounds stupid.
2014-11-24 13:55:32	--	tobleronegordon is now known as tobleronelunch[a
2014-11-24 13:55:43	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 255 seconds)
2014-11-24 13:56:07	<--	Olipro_ (~Olipro@95.147.72.64) has quit (Ping timeout: 250 seconds)
2014-11-24 13:57:09	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-24 13:57:11	-->	zackzack (527179e9@gateway/web/freenode/ip.82.113.121.233) has joined ##c++
2014-11-24 13:57:51	<--	lamefun (~lamefun2@5.166.225.171) has quit (Quit: Leaving)
2014-11-24 13:58:00	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 13:58:46	-->	hexagoxel (~hexagoxel@kiel-4d0672ff.pool.mediaWays.net) has joined ##c++
2014-11-24 13:59:49	joel_falcou	cbreak, welcome to 'we think w're better than everybody' type of company :p
2014-11-24 14:00:30	-->	SiGe_ (~SiGe@usc-secure-wireless-054-048.usc.edu) has joined ##c++
2014-11-24 14:01:30	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-24 14:02:09	-->	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has joined ##c++
2014-11-24 14:02:19	Eelis	sometimes you have to abandon the stdlib because of efficiency
2014-11-24 14:02:40	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 14:03:30	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-24 14:03:48	-->	vinleod_ (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-24 14:03:52	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Read error: Connection reset by peer)
2014-11-24 14:03:53	-->	SiGe___ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 14:04:14	micom	some guys in my company working at very very crucial stuff had you abandon stdlib as well, efficiency as well, even not mentioning about exceptions.
2014-11-24 14:04:20	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-24 14:04:41	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-24 14:04:51	joel_falcou	Eelis, my 10cts it's not OP case anyway
2014-11-24 14:05:08	--	vinleod_ is now known as vinleod
2014-11-24 14:05:14	joel_falcou	and if i had 1eur everytime someone told me that to find out their own stdlib repalcemetn was 3x worse ...
2014-11-24 14:05:49	<--	Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2014-11-24 14:06:00	Hannibal_Smith	micom, with what they replaced exceptions?
2014-11-24 14:06:46	micom	Hannibal_Smith, as far as i know error codes,
2014-11-24 14:06:52	<--	SiGe_ (~SiGe@usc-secure-wireless-054-048.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-24 14:06:53	Hannibal_Smith	Ok, thank you
2014-11-24 14:06:57	<--	lamarque (~lamarque@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-24 14:07:14	micom	some kind of fancy one comparable to AA solution
2014-11-24 14:07:17	cbreak	I've seen a few times exceptions being replaced with assertions...
2014-11-24 14:07:24	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-24 14:07:29	cbreak	it was depressing
2014-11-24 14:07:46	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-24 14:07:49	micom	and script in background if application==dead restart
2014-11-24 14:07:59	-->	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has joined ##c++
2014-11-24 14:08:23	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 14:09:03	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-24 14:09:27	joel_falcou	cbreak, he
2014-11-24 14:09:32	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-24 14:09:37	-->	markson (~markson@192.210.214.197) has joined ##c++
2014-11-24 14:10:26	micom	how you ever worked in corporation where  code-guideline was so strict that you feel it is not possible to create sth innovation, creative?
2014-11-24 14:10:43	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: dthdrthdrth)
2014-11-24 14:11:00	<--	n3bul4 (~nebul4@201.22.59.86.static.gvt.net.br) has quit (Quit: Leaving)
2014-11-24 14:12:31	<--	illerucis (~illerucis@199.201.65.135) has quit (Remote host closed the connection)
2014-11-24 14:12:37	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-24 14:13:27	cbreak	where I work, we have lots of different guidelines
2014-11-24 14:13:33	cbreak	depending on who started the project :)
2014-11-24 14:13:41	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:13:47	micom	how strict is yours?:D
2014-11-24 14:13:51	<--	mgaunard_ (~mgaunard@193.55.35.2) has quit (Ping timeout: 264 seconds)
2014-11-24 14:14:29	-->	kyoshero (~kyoshero@112.198.79.178) has joined ##c++
2014-11-24 14:14:31	Smirnov	yeah i've seen guidelines like you can't use boost at pretty much every place i've been at
2014-11-24 14:14:46	Smirnov	and then you just end up reinventing the wheel every time while crying yourself to sleep
2014-11-24 14:15:04	-->	tunage (~pEYEd@69.84.161.1) has joined ##c++
2014-11-24 14:15:09	-->	paul424 (~chatzilla@91.207.69.143) has joined ##c++
2014-11-24 14:15:47	MINIMAN10000	lol wat
2014-11-24 14:15:55	micom	!lol
2014-11-24 14:15:56	nolyc	Land O' Lakes Tourist Association is a four-season destination for fun, relaxation, outdoor activities and adventure.
2014-11-24 14:16:00	MINIMAN10000	they say you can't use boost and you just end up writing the things boost provides?
2014-11-24 14:16:22	micom	its common, have you ever seen dependency chart for boost?
2014-11-24 14:16:23	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-24 14:16:25	micom	MINIMAN10000,
2014-11-24 14:16:28	MINIMAN10000	Sounds like a nasty case of NIH which I try to avoid if at all possible.
2014-11-24 14:16:29	Smirnov	it's not so bad with C++11 now since it has most of the basic things i could want
2014-11-24 14:16:45	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Ping timeout: 255 seconds)
2014-11-24 14:16:50	MINIMAN10000	Never seen the dependency chart.
2014-11-24 14:16:58	micom	http://meetingcpp.com/tl_files/blog/bda/boost154_libxml.png
2014-11-24 14:17:02	MINIMAN10000	c++ doesn't have networking which is what i want ):
2014-11-24 14:17:05	micom	do not open with mobile internet
2014-11-24 14:17:15	MINIMAN10000	but yes c++11 does provide threads and wait which are pretty huge
2014-11-24 14:17:24	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-24 14:17:25	-->	suppahsrv (~mopmop@95.238.200.80) has joined ##c++
2014-11-24 14:17:37	Smirnov	i was thinking more like all the nice function things, bind, type traits, etc
2014-11-24 14:17:40	joel_falcou	not using boost is often due to misunderstanding on how to manage it.
2014-11-24 14:17:49	joel_falcou	which usually leaks in general codign practice
2014-11-24 14:17:52	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-24 14:18:14	MrFlibble	once asio, optional and lexical_cast are part of C++ I don't think I will need boost.
2014-11-24 14:18:16	joel_falcou	not speaking of ppll not allowaed to use std::vector
2014-11-24 14:18:31	micom	its weird to use std::experimental  for production so i prefer boost::optional over std::experimental::optional
2014-11-24 14:18:38	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Ping timeout: 264 seconds)
2014-11-24 14:19:14	joel_falcou	well, usually my advice is ot get a new job
2014-11-24 14:20:05	MINIMAN10000	Sometimes I feel bad when people talk about all these things "binds, type traits, polymorphism" and I literally have no idea what they are or where they would be beneficial.
2014-11-24 14:20:05	-->	pEYEd (~pEYEd@69.84.161.1) has joined ##c++
2014-11-24 14:20:19	joel_falcou	are you joking on polymorphism ?
2014-11-24 14:20:32	MINIMAN10000	nope not a clue on it and it seems to be more known.
2014-11-24 14:20:35	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 14:20:36	joel_falcou	...
2014-11-24 14:20:40	joel_falcou	seriously
2014-11-24 14:20:41	Smirnov	now the 'lol wat' adds up
2014-11-24 14:20:48	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit
2014-11-24 14:20:58	MINIMAN10000	anything beyond the basic terms features i don't really know of them
2014-11-24 14:21:28	joel_falcou	ok, no offense, but is it because you're new to this or young or do you really never tried to learn that ?
2014-11-24 14:21:28	MINIMAN10000	I guess ive just never gone out of my way to look for them because im writing the stuff that i want to write without them.
2014-11-24 14:21:50	joel_falcou	polymorphism is very vast, 10cts you do soem without knowing it
2014-11-24 14:21:55	<--	endomancer (~endomance@2001:8003:2e3b:e301:ecac:7c40:e927:7c50) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-24 14:21:57	joel_falcou	or do use C tyle naming of function overloading ?
2014-11-24 14:22:02	MINIMAN10000	like ive seen a lot of terms being thrown around every version of c++
2014-11-24 14:22:14	Smirnov	they teach polymorphism in intro computer science
2014-11-24 14:22:16	MINIMAN10000	I havn't done function overloading since java in hs
2014-11-24 14:22:21	joel_falcou	...
2014-11-24 14:22:23	joel_falcou	how
2014-11-24 14:22:24	joel_falcou	why
2014-11-24 14:22:25	joel_falcou	god
2014-11-24 14:22:30	MINIMAN10000	ive never needed to overload a function
2014-11-24 14:22:44	Smirnov	overloading functions is overrated, it only comes handy for templated code imh
2014-11-24 14:22:45	joel_falcou	!
2014-11-24 14:22:48	MINIMAN10000	keep in mind the couple projects ive even done in C/C++ are complete basics.
2014-11-24 14:22:54	joel_falcou	Smirnov, i beg to disagree
2014-11-24 14:23:09	joel_falcou	overloading != specialization
2014-11-24 14:23:10	MINIMAN10000	templates is another one of those words.
2014-11-24 14:23:11	K-ballo	overloading is crucial for generic programing
2014-11-24 14:23:11	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-24 14:23:11	Smirnov	well, unless you mean variadic overloading
2014-11-24 14:23:22	Smirnov	like adding extra parameters might be ok.
2014-11-24 14:23:23	-->	hbutcher (~hbutcher@c-24-15-16-105.hsd1.il.comcast.net) has joined ##c++
2014-11-24 14:23:24	joel_falcou	f(int) f(double) that's what  mean
2014-11-24 14:23:28	MINIMAN10000	^
2014-11-24 14:23:29	<--	tunage (~pEYEd@69.84.161.1) has quit (Ping timeout: 255 seconds)
2014-11-24 14:23:29	joel_falcou	just that
2014-11-24 14:23:30	Smirnov	yeah that's just specialization
2014-11-24 14:23:32	MINIMAN10000	thats what i know as overloading.
2014-11-24 14:23:32	joel_falcou	no
2014-11-24 14:23:34	joel_falcou	overloading
2014-11-24 14:23:40	joel_falcou	specialization is differnet
2014-11-24 14:23:47	<--	markson (~markson@192.210.214.197) has quit (Remote host closed the connection)
2014-11-24 14:23:47	joel_falcou	template<T> f(T) f(int) that's specialization
2014-11-24 14:23:49	Smirnov	it's the same purpose
2014-11-24 14:23:57	-->	aaelony (~aaelony@12.127.61.42) has joined ##c++
2014-11-24 14:23:59	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-24 14:24:00	joel_falcou	execpt the rule governign thme is vastly different
2014-11-24 14:24:07	joel_falcou	especially in function call resolution
2014-11-24 14:24:11	Smirnov	if you are calling the regular "f" from non-templated code you already know which type it is so you can easily call fInt, fDouble, etc
2014-11-24 14:24:13	MINIMAN10000	specialization and variadic overloading and specializations are all terms im unfamiliar with.
2014-11-24 14:24:24	joel_falcou	Smirnov, then you do C
2014-11-24 14:24:26	K-ballo	oh god...
2014-11-24 14:24:31	Smirnov	if you are calling "f" from templated code you *don't* know to call a different function by-name without reifing the type, so overloading is useful
2014-11-24 14:24:44	joel_falcou	lemme take 5s to catch ly breath into this paper bag please
2014-11-24 14:24:47	MINIMAN10000	lol
2014-11-24 14:25:07	<--	pEYEd (~pEYEd@69.84.161.1) has quit (Ping timeout: 265 seconds)
2014-11-24 14:25:21	MINIMAN10000	but yes overloading is one of the things I consider as quite useful even though ive yet to need it so far.
2014-11-24 14:25:25	K-ballo	Smirnov: calling your functions fInt, fDouble, etc it's just doing function overloading but without the proper language support
2014-11-24 14:25:34	joel_falcou	^? this
2014-11-24 14:25:52	MINIMAN10000	hah
2014-11-24 14:25:53	Smirnov	but my point is that you can do it just fine for non-templated call sites
2014-11-24 14:26:12	MINIMAN10000	wouldnt you then have to write fdouble ( double value )
2014-11-24 14:26:23	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Remote host closed the connection)
2014-11-24 14:26:23	MINIMAN10000	oh man ive seen the word double to much its starting to look weird to me.
2014-11-24 14:26:26	-->	dowgiallo (~dowgiallo@192.210.214.197) has joined ##c++
2014-11-24 14:26:30	-->	vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-24 14:26:31	MINIMAN10000	or i should say to many times in rapid succession.
2014-11-24 14:26:37	hs_	"float" always looks misspelled to me
2014-11-24 14:26:42	Smirnov	its just an observation of language expressibility.
2014-11-24 14:26:42	MINIMAN10000	huh
2014-11-24 14:26:42	-->	endomancer (~endomance@2001:8003:2e3b:e301:79f0:5e38:b480:36dd) has joined ##c++
2014-11-24 14:26:48	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-24 14:27:10	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 244 seconds)
2014-11-24 14:27:12	K-ballo	even C has had to do something about that, but I wouldn't call generic macros proper language support
2014-11-24 14:28:05	<--	huhze (~quassel@dslb-178-008-174-209.178.008.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-24 14:28:19	Smirnov	now readability wise, if overloading is used like sin(int), sin(double), etc it's usually not a problem since it does the same thing. when people start doing completely different things in overloads it becomes a problem because it's harder to tell which path it goes down while reading the code
2014-11-24 14:28:51	joel_falcou	Smirnov, misuse of a featrue is not valdi argument of this feature uselessness
2014-11-24 14:29:08	Smirnov	didn't say it was useless, just said it's overrated
2014-11-24 14:29:12	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2014-11-24 14:29:22	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-24 14:29:27	Smirnov	it clearly is very useful for template to allow specialization
2014-11-24 14:29:40	-->	thecha (tehcha@unaffiliated/thecha) has joined ##c++
2014-11-24 14:30:03	Smirnov	it's also useful to enable optional parameters
2014-11-24 14:30:07	<--	Guest21944 (~Admin@subscr-46-148-174-204.dhcp-docsis.net.tomkow.pl) has quit (Ping timeout: 240 seconds)
2014-11-24 14:31:17	<--	b0lt (r00t@unaffiliated/bolt) has quit (Quit: telnet irc.freenode.net 6667)
2014-11-24 14:31:54	<--	doev (~doev@p4FE10FCE.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-11-24 14:32:05	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:32:06	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit (Excess Flood)
2014-11-24 14:32:14	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 264 seconds)
2014-11-24 14:32:21	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-24 14:32:25	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:32:44	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit (Client Quit)
2014-11-24 14:32:51	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-24 14:33:58	-->	Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has joined ##c++
2014-11-24 14:34:11	-->	gelignite (~gelignite@i528C3BA7.versanet.de) has joined ##c++
2014-11-24 14:35:21	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:35:22	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit (Excess Flood)
2014-11-24 14:35:38	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:36:15	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-24 14:36:19	-->	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 14:36:31	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has left ##c++
2014-11-24 14:36:38	<--	f10_ (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-24 14:36:45	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 14:37:20	<--	SiGe___ (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Remote host closed the connection)
2014-11-24 14:37:46	-->	LittleJoe (411faa61@gateway/web/freenode/ip.65.31.170.97) has joined ##c++
2014-11-24 14:38:05	-->	emperiz (~emperiz@unaffiliated/emperiz) has joined ##c++
2014-11-24 14:39:01	<--	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2014-11-24 14:39:15	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:39:16	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit (Excess Flood)
2014-11-24 14:39:25	-->	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has joined ##c++
2014-11-24 14:39:34	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:39:36	--	tobleronelunch[a is now known as tobleronegordon
2014-11-24 14:39:42	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-24 14:39:50	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 14:39:59	<--	K-ballo (~sonoio@181.228.126.42) has quit (Read error: Connection reset by peer)
2014-11-24 14:40:15	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-24 14:40:30	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has left ##c++
2014-11-24 14:40:33	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:40:45	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has left ##c++
2014-11-24 14:40:50	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:41:11	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has quit (Excess Flood)
2014-11-24 14:41:58	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-24 14:42:01	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 14:42:46	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2014-11-24 14:42:47	-->	richy17 (~richy17@h245225.upc-h.chello.nl) has joined ##c++
2014-11-24 14:43:32	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-24 14:43:53	-->	joshumax (~Thunderbi@c-98-232-46-155.hsd1.wa.comcast.net) has joined ##c++
2014-11-24 14:44:13	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-24 14:44:19	joshumax	Hey, I have a question about a c++ function override idea
2014-11-24 14:45:18	joshumax	Is there a way to do a value-based override in c++ like this? - https://gist.github.com/joshumax/a48db7301982c0a2b037
2014-11-24 14:45:38	hs_	nope
2014-11-24 14:45:41	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-24 14:46:14	hs_	you can have non-type template parameters with values
2014-11-24 14:46:18	joshumax	Is there a specific reason why?
2014-11-24 14:46:42	joshumax	True, but it's not the same
2014-11-24 14:46:58	hs_	because calls like that are determined at compile time via types
2014-11-24 14:47:49	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-24 14:47:52	<--	hbutcher (~hbutcher@c-24-15-16-105.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2014-11-24 14:47:58	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Client Quit)
2014-11-24 14:48:23	joshumax	Wait, what do you mean? Wouldn't the hypothetical overrides have to be computed at runtime?
2014-11-24 14:48:24	tworkin	joshumax: let me introduce you to foo<50>();
2014-11-24 14:48:32	hs_	no
2014-11-24 14:48:51	-->	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 14:49:02	-->	o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has joined ##c++
2014-11-24 14:49:04	hs_	hypothetical overrides would involve different parameter types or different number of parameters
2014-11-24 14:49:09	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-24 14:49:18	Oxyd	There's no runtime overloading in C++. The closest to runtime overloading you can get is virtual functions.
2014-11-24 14:49:24	<--	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-24 14:49:26	joshumax	the nwhat would heppen if this was run?
2014-11-24 14:49:26	joshumax	for (int i = 0; i < 50; i++) {
2014-11-24 14:49:26	joshumax	    foo(i);
2014-11-24 14:49:26	joshumax	}
2014-11-24 14:49:29	-->	SiGe__ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 14:49:34	joshumax	Oxyd: I know
2014-11-24 14:50:00	joshumax	I'd have to hack a c++ compiler to do anything like this
2014-11-24 14:50:02	hs_	it would try to call ?? foo(int)
2014-11-24 14:50:13	hs_	well, it would find all "foo"
2014-11-24 14:50:19	hs_	and then try to match i with the parameter
2014-11-24 14:50:20	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Client Quit)
2014-11-24 14:50:26	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-24 14:50:29	joshumax	sure, but that would need to be found at runtime
2014-11-24 14:50:30	hs_	with preference ordering
2014-11-24 14:50:35	hs_	no
2014-11-24 14:50:44	hs_	the compiler finds all foo, etc
2014-11-24 14:50:53	hs_	once it does it bakes that call into the code
2014-11-24 14:50:56	joshumax	Wait...
2014-11-24 14:51:09	joel_falcou	c++ is compiled in case you didn't know
2014-11-24 14:51:24	o-O-o	:D
2014-11-24 14:51:44	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-24 14:51:48	joel_falcou	##php is probably over there -->
2014-11-24 14:51:51	joshumax	it would have to add a whole bunch of "cmp"s into every loop to do that at compile time
2014-11-24 14:51:58	joel_falcou	no
2014-11-24 14:52:02	joel_falcou	not how it works
2014-11-24 14:52:03	<--	wheals (~wheals@pool-71-191-145-207.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-24 14:52:10	joel_falcou	function overload is resolved at compile time
2014-11-24 14:52:14	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-24 14:52:14	joshumax	I know
2014-11-24 14:52:24	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 14:52:27	joel_falcou	and yes your stuff is basically wrapping your f's into a if
2014-11-24 14:52:30	-->	BearishMushroom_ (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-24 14:52:33	<--	[H]unt3r (~H]unt3r@137.28.95.175) has quit (Remote host closed the connection)
2014-11-24 14:52:35	joshumax	But I'm talking about a hypothetical overload system for values https://gist.github.com/joshumax/a48db7301982c0a2b037
2014-11-24 14:52:40	-->	[H]unt3r (~H]unt3r@137.28.95.175) has joined ##c++
2014-11-24 14:52:42	joel_falcou	f(int x) { return x < 25 ? first_f(x) : second_f(x); }
2014-11-24 14:52:46	joel_falcou	done
2014-11-24 14:52:56	joel_falcou	what's runtime stay at runtime
2014-11-24 14:53:01	-->	skeuomor1 (~skeuomorf@197.32.249.185) has joined ##c++
2014-11-24 14:53:02	joel_falcou	again we're not phph
2014-11-24 14:53:09	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-24 14:53:12	joshumax	runtime, see -- return x < 25 ? first_f(x) : second_f(x)
2014-11-24 14:53:18	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-24 14:53:34	joel_falcou	yeah
2014-11-24 14:53:36	joel_falcou	so write that
2014-11-24 14:53:41	joel_falcou	no need of language butchery for this
2014-11-24 14:53:57	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Ping timeout: 264 seconds)
2014-11-24 14:54:00	joshumax	Yeah, I know I can do this easily
2014-11-24 14:54:09	<--	b1rkh0ff (~b1rkh0ff@31.176.186.159) has quit (Ping timeout: 256 seconds)
2014-11-24 14:54:14	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-24 14:54:33	-->	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 14:54:37	joshumax	I just thought it would be neat if the compiler could do that for me and was curious if anyone tried this before...
2014-11-24 14:54:43	Hannibal_Smith	joshumax, other languages does this with pattern matching http://en.wikibooks.org/wiki/Haskell/Pattern_matching
2014-11-24 14:55:10	o-O-o	no
2014-11-24 14:55:13	o-O-o	!give Hannibal_Smith focus
2014-11-24 14:55:15	nolyc	Hannibal_Smith: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-11-24 14:55:41	-->	Cl-Martin (uid36038@gateway/web/irccloud.com/x-paxtrhclwpniycsp) has joined ##c++
2014-11-24 14:56:10	<--	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 264 seconds)
2014-11-24 14:56:35	-->	K-ballo (~sonoio@181.228.59.173) has joined ##c++
2014-11-24 14:57:20	joshumax	Instead of imbedding a bunch of if statements during runtime for the overloading system...I wonder if having the compiler create a function call search tree would make it a bit more efficient
2014-11-24 14:57:40	Oxyd	joshumax: http://coliru.stacked-crooked.com/a/fbb3922caa66534d -- you could do something like this in the library, no language change needed.
2014-11-24 14:58:31	joel_falcou	Oxyd, did you had taht handy or did you just typed it ?
2014-11-24 14:58:41	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 272 seconds)
2014-11-24 14:58:41	joshumax	Oxyd: That's cool
2014-11-24 14:58:46	Oxyd	joel_falcou: Typed it in.
2014-11-24 14:58:46	-->	_war10ck_ (~sayantan@106.51.136.14) has joined ##c++
2014-11-24 14:58:51	joel_falcou	XD
2014-11-24 14:59:01	Oxyd	I'm tired, so it's not like I'm doing anything useful anyway.
2014-11-24 14:59:14	Hannibal_Smith	joshumax, I'm unsure how a compiler can generate better code with your idea
2014-11-24 14:59:24	joel_falcou	hehe
2014-11-24 14:59:24	<--	Anodl (~Anodl@p5B355D97.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-24 15:00:23	joel_falcou	Oxyd, nice stuff
2014-11-24 15:00:23	joshumax	Hannibal_Smith: it wouldn't
2014-11-24 15:00:23	Oxyd	Could add some constructor so that you can initialise it with all overloads, instead of .add'ing them one by one.
2014-11-24 15:00:23	joshumax	It would only look cool ;P
2014-11-24 15:00:23	<--	richy17 (~richy17@h245225.upc-h.chello.nl) has left ##c++
2014-11-24 16:07:28	--	irc: disconnected from server
2014-11-24 16:07:42	-->	tc1 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 16:07:42	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 16:07:42	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 16:07:42	--	Nicks ##c++: [[H]unt3r _5kg _unreal_ _war10ck_ `Winslow a_le aaelony AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe akatsukibay2 alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik Areks armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas Backinside Banandana barfod basic6_ batmoz BearishMushroom_ Belgarion0 belz beowuff Betal Bigcheese biglama bitlord blackbit bladerunner BlastHardcheese BlaXpirit Bleakwise blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy bzf CARAM_ caveat- cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon_ clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 cryptoca cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dostoyevsky doug64k dowgiallo dts dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evangeline_ evilissimo EvilPenguin Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold Forbidden404 forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd Furai Galik Gama11 Garner geidi gelignite genpaku Gentle geordi ggherdov` GGMethos gigabytes GinoMan gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haswell Haxxa Heartbroken heedypo heiner heinrich5991 hell_razer Hello71 hellschreiber Henke37 herocoder HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire ilhami illerucis Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 it0a italys ivan\ ivan` ix007 j_wright jack_rabbit jagob jakemp JamesNZ japro jarrod_ Jaxan jayne jeaye Jeeb_ jesyspa jhj jiffe jimvideo Jinxit jitta joel_falcou jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth KarolisK Kasreyn kbtr Kelsie|2 Kevin-_- kevr kexmex Kicer86 KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero lamefun latexi95 leeN Left_Turn Legiion lenarhoyt LetoThe2nd liberal licnep LifeBlood Lilian linagee LittleJoe lllshamanlll Logan54 Lokomotiv lolek lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477 mads- manny- marchelzo_ markand martiert marvimias MasterPiece mavam maw Maxel Meeh megaTherion melter metallisto mf_ mgaunard_ micom mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim ppf pragma- Praise prime primepie prism proteusguy proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rammelbieber Rav3n Raziel refp Refresh rendar Renderwahn rethnor rfreeman_w richardwhiuk riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan roxlu rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan schleppel scrote Sculptor segy seishun senseibaka Seppoz Serus Shayanjm shintah shintahW SHODAN Shr3ddy66 Shuba sigtrm Silex Sjors skarn skeuomor1 ski SlashLife Slide-O-Mix Smirnov smokex soa2ii Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum sphenxes srjek stdvector stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle Tazmain tc1 Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheBigDeal thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timemage timj1 TinoDidriksen tk` TMM ToApolytoXaos TobiasFar_ tobleronegordon tomalak tomaw TommyC TomyLobo torei toresbe Tr0p1caL TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork_ Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ Xitano xnavor xrlk xsdg xulef xyz yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zackzack zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 16:07:42	--	Channel ##c++: 710 nicks (0 ops, 0 halfops, 0 voices, 710 normals)
2014-11-24 16:07:49	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 16:07:49	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 16:08:03	<--	tc1 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has left ##c++
2014-11-24 16:08:24	-->	newguise1234 (~tc@unaffiliated/newguise1234) has joined ##c++
2014-11-24 16:08:24	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 16:08:24	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 16:08:24	--	Nicks ##c++: [[H]unt3r _5kg _unreal_ _war10ck_ `Winslow a_le aaelony AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe akatsukibay2 alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik Areks armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas Backinside Banandana barfod basic6_ batmoz BearishMushroom_ Belgarion0 belz beowuff Betal Bigcheese biglama bitlord blackbit bladerunner BlastHardcheese BlaXpirit Bleakwise blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy bzf CARAM_ caveat- cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon_ clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 cryptoca cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dostoyevsky doug64k dowgiallo dts dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evangeline_ evilissimo EvilPenguin Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold Forbidden404 forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd Furai Galik Gama11 Garner geidi gelignite genpaku Gentle geordi ggherdov` GGMethos gigabytes GinoMan gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haswell Haxxa Heartbroken heedypo heiner heinrich5991 hell_razer Hello71 hellschreiber Henke37 herocoder HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire ilhami illerucis Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 it0a italys ivan\ ivan` ix007 j_wright jack_rabbit jagob jakemp JamesNZ japro jarrod_ Jaxan jayne jeaye Jeeb_ jesyspa jhj jiffe jimvideo Jinxit jitta joel_falcou jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth KarolisK Kasreyn kbtr Kelsie|2 Kevin-_- kevr kexmex Kicer86 KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero lamefun latexi95 leeN Left_Turn Legiion lenarhoyt LetoThe2nd liberal licnep LifeBlood Lilian linagee LittleJoe lllshamanlll Logan54 Lokomotiv lolek lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477 mads- manny- marchelzo_ markand martiert marvimias MasterPiece mavam maw Maxel Meeh megaTherion melter metallisto mf_ mgaunard_ micom mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim ppf pragma- Praise prime primepie prism proteusguy proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rammelbieber Rav3n Raziel refp Refresh rendar Renderwahn rethnor rfreeman_w richardwhiuk riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan roxlu rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan schleppel scrote Sculptor segy seishun senseibaka Seppoz Serus Shayanjm shintah shintahW SHODAN Shr3ddy66 Shuba sigtrm Silex Sjors skarn skeuomor1 ski SlashLife Slide-O-Mix Smirnov smokex soa2ii Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum sphenxes srjek stdvector stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle Tazmain Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheBigDeal thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timemage timj1 TinoDidriksen tk` TMM ToApolytoXaos TobiasFar_ tobleronegordon tomalak tomaw TommyC TomyLobo torei toresbe Tr0p1caL TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrupulous urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork_ Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ Xitano xnavor xrlk xsdg xulef xyz yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zackzack zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 16:08:24	--	Channel ##c++: 710 nicks (0 ops, 0 halfops, 0 voices, 710 normals)
2014-11-24 16:08:26	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 16:08:26	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 16:09:26	Supicioso	!next
2014-11-24 16:09:27	nolyc	Another satisfied customer, next!
2014-11-24 16:09:33	Supicioso	Dat delay doe
2014-11-24 16:09:55	JamesNZ	!next2
2014-11-24 16:09:56	nolyc	Another dissatisfied customer, next!
2014-11-24 16:09:57	o-O-o	dat face! dat ass!
2014-11-24 16:10:14	<--	Unscrupulous (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2014-11-24 16:10:48	-->	m477_ (~quassel@agrp131.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-24 16:11:30	<--	[H]unt3r (~H]unt3r@137.28.95.175) has quit
2014-11-24 16:11:35	-->	Unscrupulous (~unscrupt@172.56.32.129) has joined ##c++
2014-11-24 16:11:36	<--	paul424 (~chatzilla@91.207.69.143) has quit (Ping timeout: 258 seconds)
2014-11-24 16:12:08	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 16:12:29	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 272 seconds)
2014-11-24 16:12:31	<--	gelignite (~gelignite@i528C3BA7.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-24 16:12:57	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Read error: Connection reset by peer)
2014-11-24 16:14:15	-->	nivyaj (uid41702@gateway/web/irccloud.com/x-aegxseupexazpilr) has joined ##c++
2014-11-24 16:14:17	-->	Narfinger (~nobodynot@srbk-4d0b9faa.pool.mediaways.net) has joined ##c++
2014-11-24 16:14:26	<--	m477 (~quassel@adsg37.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 255 seconds)
2014-11-24 16:15:41	-->	Davidbrcz (~david@AToulouse-652-1-190-146.w82-125.abo.wanadoo.fr) has joined ##c++
2014-11-24 16:15:57	-->	StableEvan (~Thunderbi@dsl-64-246-157-30.bbr0.cxscny.statetel.com) has joined ##c++
2014-11-24 16:16:37	<--	Areks (~Areks@95-26-129-29.broadband.corbina.ru) has quit (Ping timeout: 250 seconds)
2014-11-24 16:16:43	-->	bb010g (uid21050@gateway/web/irccloud.com/x-eowyurnzonafvlwz) has joined ##c++
2014-11-24 16:19:34	Narfinger	hiho, i have some problems with template parameters, higher order function and default values, this seems to be the shortest code example i could come up with: http://ideone.com/5YQ4P4
2014-11-24 16:19:34	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 16:19:41	Narfinger	i don't get why it can't deduce the template parameter
2014-11-24 16:21:14	<--	Unscrupulous (~unscrupt@172.56.32.129) has quit (Read error: Connection reset by peer)
2014-11-24 16:21:14	-->	Unscrupulous (~unscrupt@172.56.32.129) has joined ##c++
2014-11-24 16:21:20	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 265 seconds)
2014-11-24 16:21:45	<--	Davidbrcz (~david@AToulouse-652-1-190-146.w82-125.abo.wanadoo.fr) has quit (Quit: Leaving)
2014-11-24 16:23:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 16:23:16	<--	b0lt (r00t@unaffiliated/bolt) has quit (Remote host closed the connection)
2014-11-24 16:23:16	-->	paul424 (~chatzilla@91.207.69.224) has joined ##c++
2014-11-24 16:23:16	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Remote host closed the connection)
2014-11-24 16:23:18	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-24 16:23:24	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 16:23:53	refp	V-ille: no, you are not on ignore any longer.
2014-11-24 16:24:25	-->	b0lt (r00t@178.74.28.62) has joined ##c++
2014-11-24 16:24:27	<--	b0lt (r00t@178.74.28.62) has quit (Changing host)
2014-11-24 16:24:27	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-24 16:25:01	o-O-o	!give refp news
2014-11-24 16:25:02	nolyc	refp: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-24 16:25:22	 *	_war10ck_ wonders whether to use inline function or not
2014-11-24 16:25:25	refp	however, o-O-o still is.
2014-11-24 16:25:48	o-O-o	!give refp news
2014-11-24 16:25:49	nolyc	refp: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-24 16:26:06	o-O-o	Narfinger: the template arg can't be deduced in this case
2014-11-24 16:26:09	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 265 seconds)
2014-11-24 16:26:15	-->	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has joined ##c++
2014-11-24 16:26:18	Narfinger	well that is what the compiler is telling me
2014-11-24 16:26:19	-->	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has joined ##c++
2014-11-24 16:26:19	<--	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has quit (Changing host)
2014-11-24 16:26:19	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-24 16:26:38	Narfinger	but how should i change it? i don't want to put the template argument in everytime i call the function
2014-11-24 16:26:40	o-O-o	it seems default args won't work for automatic arg deduction :)
2014-11-24 16:26:54	o-O-o	Narfinger: overload
2014-11-24 16:27:05	o-O-o	create two functions, instead of using default args
2014-11-24 16:27:07	o-O-o	they suck
2014-11-24 16:27:28	Narfinger	that seems counterintuitive to using functional programming in the case
2014-11-24 16:27:31	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 16:27:58	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 16:28:01	o-O-o	Narfinger: C++ is not a functional language
2014-11-24 16:28:04	o-O-o	!next
2014-11-24 16:28:05	Narfinger	can the type be deduced from the return type? so if i have in this case int i = total(23), can it pick the correct function for this?
2014-11-24 16:28:06	nolyc	Another satisfied customer, next!
2014-11-24 16:28:37	o-O-o	Narfinger: you can use some traits to do that. I'd guess std::result_of but I fail to provide an example now
2014-11-24 16:29:04	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 16:29:10	o-O-o	seriously. don't stick with default args and templates for your case. a simple overload function will do the trick
2014-11-24 16:29:37	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-24 16:29:38	o11c	Narfinger: template the function type also and use std::result_of
2014-11-24 16:29:59	Narfinger	but i have code duplication then because foo has a bunch of code in front and uses f only at the last to convert the return type
2014-11-24 16:30:02	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 16:30:21	Narfinger	o11c: sorry, i don't quite understand, can you modify the example perhaps?
2014-11-24 16:31:12	<--	timemage (~user@unaffiliated/timemage) has quit (Remote host closed the connection)
2014-11-24 16:31:22	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-24 16:31:23	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2014-11-24 16:31:31	o-O-o	Narfinger: haha! o11c sucks. you are screwed
2014-11-24 16:31:58	<--	Rammelbieber (~Rammelbie@dslb-094-217-082-235.094.217.pools.vodafone-ip.de) has quit (Quit: Rausgehen ist wie Fenster aufmachen, nur viel krasser!)
2014-11-24 16:32:11	o11c	working on it
2014-11-24 16:32:15	Narfinger	ok thanks
2014-11-24 16:32:29	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 16:32:54	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 16:33:41	-->	egoldsten (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has joined ##c++
2014-11-24 16:34:10	-->	DrBenway (~DrBenway@235-250-126-200.fibertel.com.ar) has joined ##c++
2014-11-24 16:34:10	<--	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-11-24 16:34:13	<--	Moleboy (470e930b@gateway/web/freenode/ip.71.14.147.11) has quit (Quit: Page closed)
2014-11-24 16:34:20	o11c	Narfinger: http://ideone.com/6hs7rb
2014-11-24 16:34:34	<--	zackzack (527179e9@gateway/web/freenode/ip.82.113.121.233) has quit (Quit: Page closed)
2014-11-24 16:34:39	Narfinger	thanks!
2014-11-24 16:34:55	o11c	note that the & in the decltype is important because of a limitation of result_of; if you used a decltype on a trailing return type or declval it would not be needed I think
2014-11-24 16:35:00	o11c	decay is weird
2014-11-24 16:35:09	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-24 16:35:09	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-24 16:35:21	Narfinger	well first i have to read up what everything means :D
2014-11-24 16:35:37	o11c	in C++14 you can just omit the entire return type and write 'auto' without a trailing return type
2014-11-24 16:37:23	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-24 16:38:25	egoldsten	hello
2014-11-24 16:38:32	egoldsten	it works!
2014-11-24 16:38:38	egoldsten	:-)
2014-11-24 16:38:52	<--	gigabytes (~gigabytes@adsl-ull-224-206.49-151.net24.it) has quit
2014-11-24 16:39:37	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-24 16:39:39	-->	realloc1 (~realloc1@aftr-185-17-204-224.dynamic.mnet-online.de) has joined ##c++
2014-11-24 16:40:02	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-24 16:40:46	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 16:40:48	egoldsten	auto is nice
2014-11-24 16:41:11	<--	TheBigDeal (~antar@unaffiliated/innocent99) has quit (Quit: Leaving)
2014-11-24 16:41:19	egoldsten	I use it to avoid to specify the template name
2014-11-24 16:41:34	<--	paul424 (~chatzilla@91.207.69.224) has quit (Ping timeout: 256 seconds)
2014-11-24 16:41:50	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 16:42:07	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 264 seconds)
2014-11-24 16:42:08	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-24 16:42:43	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-24 16:43:43	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-11-24 16:44:24	<--	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has quit (Changing host)
2014-11-24 16:44:24	-->	ilhami (~IlhamiD@unaffiliated/ilhami) has joined ##c++
2014-11-24 16:45:01	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-24 16:45:11	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-24 16:46:25	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-11-24 16:46:47	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 245 seconds)
2014-11-24 16:47:26	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Quit: leaving)
2014-11-24 16:47:29	-->	Unscrup44 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-24 16:47:53	-->	snakener1 (~Thunderbi@177.19.61.118) has joined ##c++
2014-11-24 16:48:30	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-24 16:49:48	-->	brainard52 (~stuffgoes@172.56.38.30) has joined ##c++
2014-11-24 16:49:50	<--	Unscrupulous (~unscrupt@172.56.32.129) has quit (Ping timeout: 255 seconds)
2014-11-24 16:50:00	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-24 16:50:03	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 256 seconds)
2014-11-24 16:50:11	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-24 16:51:23	-->	7YUAAFKEE (~SiGe@usc-secure-wireless-054-035.usc.edu) has joined ##c++
2014-11-24 16:51:27	egoldsten	I don't know if I'm really "registered" do you see me please?
2014-11-24 16:51:27	-->	Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-24 16:51:28	<--	snakener1 (~Thunderbi@177.19.61.118) has quit (Client Quit)
2014-11-24 16:51:51	-->	Olipro_ (~Olipro@95.147.72.64) has joined ##c++
2014-11-24 16:52:12	hs_	egoldsten, hi
2014-11-24 16:52:26	egoldsten	hi hs_ !
2014-11-24 16:52:31	egoldsten	thank you :-)
2014-11-24 16:53:22	o-O-o	Narfinger: o11c's example is not exactly what you want. note you have to have a function there to make it work
2014-11-24 16:54:01	egoldsten	I'm writing a template library especially for emscripten
2014-11-24 16:54:06	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-24 16:54:12	<--	aaelony (~aaelony@12.127.61.42) has quit
2014-11-24 16:54:17	-->	immibis_ (~ChatZill1@122-59-116-166.jetstream.xtra.co.nz) has joined ##c++
2014-11-24 16:54:26	o-O-o	!give egoldsten news
2014-11-24 16:54:27	<--	7YUAAFKEE (~SiGe@usc-secure-wireless-054-035.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-24 16:54:28	nolyc	egoldsten: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-24 16:54:30	-->	paul424 (~chatzilla@91.207.69.143) has joined ##c++
2014-11-24 16:54:45	AbleBacon	he's new here; be nice
2014-11-24 16:54:53	egoldsten	ok
2014-11-24 16:55:00	o-O-o	AbleBacon: oh, you haven't seen my bad side yet ;)
2014-11-24 16:55:14	egoldsten	I say that just to talk... don't be rude
2014-11-24 16:55:16	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Quit: Bye!)
2014-11-24 16:55:34	o-O-o	!general
2014-11-24 16:55:35	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-24 16:55:38	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 16:55:51	-->	SiGe (~SiGe@usc-secure-wireless-054-035.usc.edu) has joined ##c++
2014-11-24 16:55:53	<--	immibis (~ChatZill1@122-59-116-97.jetstream.xtra.co.nz) has quit (Ping timeout: 264 seconds)
2014-11-24 16:56:01	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 16:56:08	egoldsten	The guy from emscripten did a talk a the last cppcon and the audience was a little bit aggressive with him
2014-11-24 16:56:21	<--	Olipro_ (~Olipro@95.147.72.64) has quit (Ping timeout: 258 seconds)
2014-11-24 16:56:30	egoldsten	ok thank you nolyc
2014-11-24 16:56:31	o-O-o	cppcon was awesome
2014-11-24 16:56:34	<--	heedypo (~heedypo3@host-89-241-246-157.as13285.net) has quit (Ping timeout: 255 seconds)
2014-11-24 16:56:51	o11c	egoldsten: politeness is frowned on in this channel
2014-11-24 16:56:51	<--	SiGe (~SiGe@usc-secure-wireless-054-035.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-24 16:56:59	egoldsten	Have you been there o-O-o ?
2014-11-24 16:57:07	AbleBacon	i bet cppcon is just one big party; i mean seriously who comes for the talks, right?
2014-11-24 16:57:13	o-O-o	and we, as a good audience, did not like non-cpp things there ;)
2014-11-24 16:57:22	o-O-o	AbleBacon: wrong. that was a pretty serious conf
2014-11-24 16:57:31	o11c	we're trying to change the rules - there is some popular opinion - but it's not clear what the mods need
2014-11-24 16:57:31	o-O-o	you lost your bet
2014-11-24 16:57:35	AbleBacon	haha i figured. i was being sarcastic
2014-11-24 16:57:57	-->	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 16:58:06	o-O-o	AbleBacon: I really got impressed. it was organized with pretty few resources and it has attracted lots of good speakers
2014-11-24 16:58:32	egoldsten	I'm not native english o11c I might not understand everything
2014-11-24 16:58:47	o-O-o	use the videos as a good training :-)
2014-11-24 16:59:10	o11c	egoldsten: tl;dr this channel is the 4chan of programming help channels
2014-11-24 16:59:17	-->	immibis (~ChatZill1@122-59-116-166.jetstream.xtra.co.nz) has joined ##c++
2014-11-24 16:59:18	<--	Xitano (~contato@r73-pw-pantano.ibys.com.br) has quit
2014-11-24 16:59:18	AbleBacon	it's not that bad
2014-11-24 16:59:24	o-O-o	o11c: because you
2014-11-24 16:59:27	<--	BearishMushroom_ (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2014-11-24 16:59:32	egoldsten	ok lol o11c thank you
2014-11-24 16:59:35	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-24 16:59:49	 *	o-O-o sticks a 4chan into o11c's ass
2014-11-24 17:00:07	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 17:00:23	<--	immibis_ (~ChatZill1@122-59-116-166.jetstream.xtra.co.nz) has quit (Ping timeout: 265 seconds)
2014-11-24 17:00:30	<--	rendar (~I@host187-119-dynamic.53-82-r.retail.telecomitalia.it) has quit
2014-11-24 17:00:51	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-24 17:01:00	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 17:01:06	egoldsten	I like this Alexandre the guy from facebook I think he is the best speaker not technically but the talks
2014-11-24 17:01:37	o-O-o	alexandrescu? he is awesome
2014-11-24 17:01:48	o-O-o	he did contribute a lot for C++
2014-11-24 17:02:04	egoldsten	He is funny
2014-11-24 17:02:06	AbleBacon	public speaking ability goes a long way
2014-11-24 17:02:14	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 17:02:20	egoldsten	stroustrup is not fun at all
2014-11-24 17:02:33	Smirnov	does he have video tech talks?
2014-11-24 17:02:35	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-24 17:02:37	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 17:02:38	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-24 17:02:47	egoldsten	Yes on channel9 from msdn
2014-11-24 17:02:49	-->	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-11-24 17:03:23	o-O-o	the old man is a humble guy, though. at the first presentation I was sitting at his side and he was doing a pretty low profile
2014-11-24 17:03:57	Smirnov	ah, channel9, does that work in firefox now ? :)
2014-11-24 17:04:14	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-24 17:04:14	o-O-o	I noticed that and I decided to not annoy him, but it was just a matter of time before people realized he was there and asked for hand shakes or hugs :(
2014-11-24 17:04:17	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 17:04:39	egoldsten	He is a good guy
2014-11-24 17:04:50	AbleBacon	yeah i've only met a few celebrities and i've made a point not to nag them about shit
2014-11-24 17:04:50	egoldsten	I do D now
2014-11-24 17:04:50	o-O-o	yup. but these fanboys are really annoying
2014-11-24 17:04:58	o-O-o	egoldsten: /j #D
2014-11-24 17:05:07	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 17:05:11	egoldsten	:-) o-O-o
2014-11-24 17:05:26	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-24 17:05:32	o-O-o	egoldsten: is facebook paying you well, at least?
2014-11-24 17:05:35	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-24 17:06:25	egoldsten	I'm reusing the idea of D pointers in my library. An address and a legnth. It's a better paradigm than simple smart pointers like in the STL.
2014-11-24 17:06:39	<--	SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 265 seconds)
2014-11-24 17:07:09	egoldsten	I'm not working for FB I was talking about Alexandrei
2014-11-24 17:07:14	AbleBacon	them's fightin' words there, egoldsten
2014-11-24 17:07:39	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2014-11-24 17:07:52	MrFlibble	I tend to find that now that I am using lambdas all over the shop I am also using std::function all over the shop.
2014-11-24 17:07:54	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-24 17:08:30	<--	skeuomor1 (~skeuomorf@197.32.249.185) has quit (Quit: leaving)
2014-11-24 17:09:13	<--	Tazmain (~Tazmainia@197.82.203.122) has left ##c++ ("Leaving")
2014-11-24 17:09:20	egoldsten	What about the "this" pointer in lambda MrFlibble ? Is it available?
2014-11-24 17:09:27	MrFlibble	yes
2014-11-24 17:09:36	egoldsten	Can I dou delegates with lambdas?
2014-11-24 17:09:39	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-24 17:09:41	egoldsten	ok
2014-11-24 17:10:06	egoldsten	the lambda see the vars on the stack of the caller like in lisp?
2014-11-24 17:10:18	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2014-11-24 17:10:23	MrFlibble	lambdas are not full closures
2014-11-24 17:10:45	MrFlibble	but you can capture local variables by value or by reference
2014-11-24 17:10:53	--	dts is now known as dts|airhocky
2014-11-24 17:10:54	AbleBacon	what does it mean for it to be a "full closure"?
2014-11-24 17:10:55	MrFlibble	by reference suffers from the fact that they go out of scope
2014-11-24 17:11:36	MrFlibble	AbleBacon: http://en.wikipedia.org/wiki/Closure_%28computer_programming%29
2014-11-24 17:11:40	-->	sohail (~user@184.175.8.252) has joined ##c++
2014-11-24 17:11:57	AbleBacon	so it means that it takes its variables with it?
2014-11-24 17:12:56	<--	Narfinger (~nobodynot@srbk-4d0b9faa.pool.mediaways.net) has quit (Quit: Konversation terminated!)
2014-11-24 17:13:17	MrFlibble	"A language implementation cannot easily support full closures if its run-time memory model allocates all local variables on a linear stack."
2014-11-24 17:13:38	<--	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Remote host closed the connection)
2014-11-24 17:13:39	egoldsten	yes I've found a post about that MrFlibble they are not easy to "mov"
2014-11-24 17:13:43	AbleBacon	god damn it i knew i should have majored in comp. sci. lol
2014-11-24 17:13:48	-->	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 17:13:58	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-24 17:14:02	-->	Life-Blood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 17:14:16	-->	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has joined ##c++
2014-11-24 17:14:20	<--	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has quit (Changing host)
2014-11-24 17:14:20	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-24 17:14:28	o-O-o	MrFlibble: C++11 is pretty good, huh? :) :) :)
2014-11-24 17:14:40	MrFlibble	o-O-o: I never said it wasn't.
2014-11-24 17:15:12	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 244 seconds)
2014-11-24 17:15:24	MrFlibble	lambdas whilst being syntactic sugar do actually speed up coding considerably.
2014-11-24 17:15:25	o-O-o	MrFlibble: you were resistant to it
2014-11-24 17:15:37	o-O-o	now you finally realized it was a good thing
2014-11-24 17:15:38	o-O-o	:)
2014-11-24 17:15:42	<--	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-24 17:15:49	<--	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has quit (Ping timeout: 264 seconds)
2014-11-24 17:16:08	AbleBacon	do you guys think that C++ will ever get simplified? do you think they'll just keep adding more and more features (some of which duplicate aspects of other features) until it's just too complicated to use or becomes a higher-level language like java?
2014-11-24 17:16:17	egoldsten	I'm writing a state machine I've thought use lambda but I don't know about "moving lambdas"
2014-11-24 17:16:17	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-24 17:16:33	egoldsten	No AbleBacon
2014-11-24 17:16:45	MrFlibble	C++17 is simplified C++ somewhat: it will remove auto_ptr, bind1st etc.
2014-11-24 17:16:48	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-24 17:16:56	<--	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:7572:773:470b:2a6c) has quit (Ping timeout: 272 seconds)
2014-11-24 17:16:56	egoldsten	the guy of the commette are crazy
2014-11-24 17:17:06	immibis	AbleBacon: i don't think it will never be simplified enough to make a significant impact
2014-11-24 17:17:08	egoldsten	commeette
2014-11-24 17:17:15	MrFlibble	removing auto_ptr is quite brave: a lot of code will break.
2014-11-24 17:17:16	egoldsten	sorry for the mistakes
2014-11-24 17:17:19	pi-	AbleBacon: I don't think it's possible to simplify without breaking backwards compatibility, and that seems to be the Prime Directive of the committee
2014-11-24 17:17:22	immibis	some relatively small things might be removed (like gets and auto_ptr).
2014-11-24 17:17:29	MrFlibble	pi-: read what I just said
2014-11-24 17:17:46	<--	SiGe_ (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Remote host closed the connection)
2014-11-24 17:17:51	det	MrFlibble, "full closures" sounds like marketing speak, coincidence that its something that D "solved" according to wikipedia ?
2014-11-24 17:17:53	-->	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has joined ##c++
2014-11-24 17:17:56	o-O-o	I won't miss auto_ptr for sure :D
2014-11-24 17:17:56	AbleBacon	as someone without much development experience, i'd say screw backwards compatibility...
2014-11-24 17:18:07	-->	SiGe (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 17:18:23	AbleBacon	there are just too many ways to do a given thing in C++ in my opinion
2014-11-24 17:18:29	immibis	AbleBacon: so what happens after you've written some huge system, and then they say screw backwards compatibility and break it?
2014-11-24 17:18:35	MrFlibble	but I have always said that as far as code breaking language features are concerned: "fix and recompile".
2014-11-24 17:18:38	<--	vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 264 seconds)
2014-11-24 17:18:53	Sculptor	immibis, start from square one
2014-11-24 17:18:53	Chris	That's why usually you deprecate stuff before removing them
2014-11-24 17:19:17	<--	BlaXpirit (~blaxpirit@37-107-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-24 17:20:00	AbleBacon	if they (i know it's not the committee's responsibility in this case) made it so that libraries compiled with different versions of C++ could be compatible, then i'd embrace the compatibility issue a bit more
2014-11-24 17:20:17	egoldsten	the main lack of c++ is the mixin stuff of D or hygienic macros like in Lisp with that we could do a lot of things without modifying the language
2014-11-24 17:20:59	MrFlibble	det: I imagine that before "full closures" there were "closures" (which were implicitly full); "full" qualifier was added due to non-full closures appearing.
2014-11-24 17:20:59	<--	ilhami (~IlhamiD@unaffiliated/ilhami) has quit (Quit: Bye!!!)
2014-11-24 17:20:59	det	MrFlibble, memory safety is orthogonal to closures IMO
2014-11-24 17:22:00	o-O-o	oh no. the D zealot has started to preach :(
2014-11-24 17:22:00	pi-	Can anyone give an example of a glaring Legacy issue? Something that should really be a different way, but cannot be changed because of breaking old code...
2014-11-24 17:22:00	o-O-o	I knew it was a trap!
2014-11-24 17:22:00	egoldsten	the languages which "breaks" fall down often like perl of python
2014-11-24 17:22:00	MrFlibble	!rq zogatribe
2014-11-24 17:22:00	nolyc	[11421]<zogatribe> don't be a retard tomalak
2014-11-24 17:22:00	dts|airhocky	!rq
2014-11-24 17:22:00	nolyc	[1803]<scutato|work> Buggaboo: isn't orbitz a chick?
2014-11-24 17:22:00	dts|airhocky	!rq
2014-11-24 17:22:00	nolyc	[9887]<Nola> I think I learned most of C++ from the bots on this channel
2014-11-24 17:22:00	dts|airhocky	!rq
2014-11-24 17:22:00	nolyc	[7437]<triplie> spion: as one of the more famous cases was they executed an 11 year old for raping 4 girls when he, heh
2014-11-24 17:22:04	-->	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has joined ##c++
2014-11-24 17:22:21	AbleBacon	whyyyyy?
2014-11-24 17:22:44	egoldsten	I won't switch to D the support for platforms is better in C++
2014-11-24 17:22:57	egoldsten	do you know Nimrod?
2014-11-24 17:23:03	<--	SiGe (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Remote host closed the connection)
2014-11-24 17:23:32	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-24 17:23:45	AbleBacon	won't C++, at some point, become feature-complete? like where it has everything? and then they could simplify it and you wouldn't have to worry about backwards compatibility because you'd be perfectly content sticking with the old version, it being feature-complete and all
2014-11-24 17:23:55	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-24 17:24:01	-->	cbot` (~FS@150.108.238.42) has joined ##c++
2014-11-24 17:24:27	belz	AbleBacon: like year 3000 or what?
2014-11-24 17:24:45	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-24 17:24:46	egoldsten	We won't have "channels" like in Go for example
2014-11-24 17:24:52	-->	nutron (~nutron@unaffiliated/nutron) has joined ##c++
2014-11-24 17:24:59	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 244 seconds)
2014-11-24 17:25:10	egoldsten	It's like Javascript It's here for a long time
2014-11-24 17:25:35	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 17:25:38	AbleBacon	i feel like there should be some reasonable point where you say, "we've added everything that needs to be added"
2014-11-24 17:26:07	-->	bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-24 17:26:07	immibis	i think most software projects, including languages, die before they reach that point
2014-11-24 17:26:26	o-O-o	please stop smoking whatever you are
2014-11-24 17:26:26	egoldsten	I think the path is in the kind of software like doing softwares for robots and drones and web will be less important
2014-11-24 17:26:26	belz	AbleBacon: if there is, i cannot see it.
2014-11-24 17:26:37	-->	Meness (~Meness@n023h149.pguest.mun.ca) has joined ##c++
2014-11-24 17:26:44	o-O-o	!fact
2014-11-24 17:32:01	nolyc	A range is a pair of iterators that designate the beginning and end of the computation.
2014-11-24 17:32:01	belz	computation.. ehm :)
2014-11-24 17:32:01	egoldsten	I have a "counter<>" class It's "under" an iterator for exemple "while(counter.next()){if(counter.last()) ..."
2014-11-24 17:32:01	o-O-o	yuck
2014-11-24 17:32:01	o-O-o	that is so java...
2014-11-24 17:32:01	egoldsten	for me a range is on operation on a pointer I reduce the length of the pointer
2014-11-24 17:32:01	o-O-o	zzzz
2014-11-24 17:32:01	-->	SiGe__ (~SiGe@usc-secure-wireless-206-075.usc.edu) has joined ##c++
2014-11-24 17:32:01	Meness	What is a common cause for getting a 'no matching function for call to' class:class() when I have that class as a parameter to another class's constructor
2014-11-24 17:32:01	o-O-o	egoldsten: learn how to decouple your class from the iterator pattern
2014-11-24 17:33:52	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-24 17:33:52	-->	SiGe____ (~SiGe@usc-secure-wireless-054-035.usc.edu) has joined ##c++
2014-11-24 17:37:40	egoldsten	I use template to do that Meness create a template base class and pass it the derived as a template argument
2014-11-24 17:37:40	<--	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has quit (Ping timeout: 272 seconds)
2014-11-24 17:37:40	egoldsten	It is better to mimic the objects as they are I think o-O-o For the counter, it is provided by a pointer<> so you can do "auto counter=p.counter(1,10);"
2014-11-24 17:37:40	<--	licnep (uid4387@gateway/web/irccloud.com/x-hkvcimlkhqbqmqmk) has quit (Quit: Connection closed for inactivity)
2014-11-24 17:37:40	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 17:37:40	egoldsten	Injection of dependancies is controversial like MCV
2014-11-24 17:37:40	egoldsten	MVC sorry
2014-11-24 17:37:40	<--	SiGe__ (~SiGe@usc-secure-wireless-206-075.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-24 17:37:40	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 17:37:40	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-24 17:37:40	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit
2014-11-24 17:37:40	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-24 17:37:40	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-11-24 17:37:40	-->	jafar (~jafar@41.205.22.13) has joined ##c++
2014-11-24 17:37:40	<--	lamefun (~lamefun2@5.166.225.171) has quit (Quit: Leaving)
2014-11-24 17:37:40	<--	newguise1234 (~tc@unaffiliated/newguise1234) has quit (Ping timeout: 272 seconds)
2014-11-24 17:37:40	--	irc: disconnected from server
2014-11-24 17:38:03	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 17:38:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 17:38:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 17:38:03	--	Nicks ##c++: [_5kg _unreal_ _war10ck_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas Backinside badone Banandana barfod basic6_ batmoz bb010g Belgarion0 belz beowuff Betal Bigcheese blackbit bladerunner BlastHardcheese Bleakwise blinky42 blo Bloodust bloony blueness bmf1 boblehest bollullera BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps brainard52 Brando753 BrandonB btrace bumbar_ Burgundy bzf CARAM_ caveat- cbot` cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon_ clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 cryptoca cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dostoyevsky doug64k dowgiallo DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evilissimo EvilPenguin Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold Forbidden404 fOrceez forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd Furai gabriel9 Galik Gama11 garFF Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haswell Haxxa Heartbroken heiner heinrich5991 hell_razer Hello71 hellschreiber herocoder HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire illerucis Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 it0a italys ivan\ ivan` ix007 j_wright jack_rabbit jafar jagob jakemp JamesNZ jarrod_ Jaxan jayne jeaye jesyspa jhj jiffe jimvideo Jinxit jitta jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth KarolisK Kasreyn kbtr Kelsie|2 Kevin-_- kevr kexmex Kicer86 KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero latexi95 leeN Left_Turn Legiion LetoThe2nd liberal Life-Blood Lilian linagee LittleJoe lllshamanlll lmat Logan54 Lokomotiv lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim ppf pragma- Praise prime primepie proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rav3n Raziel realloc1 refp Refresh Renderwahn rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan roxlu rpag rriemann ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy seishun senseibaka Seppoz Serus Shayanjm shintah shintahW SHODAN Shr3ddy66 Shuba SiGe____ sigtrm Silex Sjors skarn ski Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum srjek StableEvan stdvector stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen tk` TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ xnavor xrlk xsdg xulef xyz yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 17:38:03	--	Channel ##c++: 692 nicks (0 ops, 0 halfops, 0 voices, 692 normals)
2014-11-24 17:38:10	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 17:38:10	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 17:38:10	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-24 17:39:30	egoldsten	You know in C++ or C when you have a pointer somwhere it often point to an array. Pointing to a single cell is a special case in fact. A singleton.
2014-11-24 17:39:51	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-24 17:40:22	egoldsten	If you put the length in the pointer object you can define safe operations on it like "range" "subset" "odd" "even" It is useful in the loops
2014-11-24 17:40:25	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 245 seconds)
2014-11-24 17:40:46	kailoAtWork	fail troll is fail.
2014-11-24 17:40:53	egoldsten	We can have more safety in C++ with that
2014-11-24 17:40:57	<--	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-24 17:41:01	det	I still see no relation to smart pointers
2014-11-24 17:41:08	egoldsten	We don't need Rust
2014-11-24 17:41:22	o11c	egoldsten: IMO dedicated 'ptr to array element' and 'ptr to entire allocation' classes are better
2014-11-24 17:41:40	o11c	egoldsten: Rust doesn't exist becauase C++ *can't* change, it exists because C++ *won't* change
2014-11-24 17:41:55	det	"ptr to array element" is an iterator, not a smart pointer
2014-11-24 17:42:04	o11c	okay
2014-11-24 17:42:13	egoldsten	That what I thought before I've changed my mind later after watch Alexendre taks
2014-11-24 17:42:13	o11c	doesn't exist now though
2014-11-24 17:43:06	egoldsten	It seems inefficient at the first look
2014-11-24 17:43:06	det	egoldsten, I doubt you even know what problems Rust is attempting to solve
2014-11-24 17:43:06	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Quit: Konversation terminated!)
2014-11-24 17:43:06	<--	nido (~nido@wardenscat.foxserver.be) has quit (Ping timeout: 245 seconds)
2014-11-24 17:43:06	egoldsten	An iterator is an instance of a pointer with a length one (a singleton)
2014-11-24 17:43:20	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-24 17:43:24	egoldsten	a counter is a pointer with an index
2014-11-24 17:43:48	<--	soulcake (~soulcake@unaffiliated/soulcake) has quit (Quit: Quack.)
2014-11-24 17:43:56	egoldsten	they want a better language to rewrite firefox det
2014-11-24 17:44:11	det	egoldsten, not specific enough
2014-11-24 17:44:33	<--	SiGe____ (~SiGe@usc-secure-wireless-054-035.usc.edu) has quit (Remote host closed the connection)
2014-11-24 17:44:52	-->	nido (~nido@wardenscat.foxserver.be) has joined ##c++
2014-11-24 17:45:14	-->	HerzogDeXtEr (~flex@i59F6D149.versanet.de) has joined ##c++
2014-11-24 17:45:14	-->	soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-24 17:45:34	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-24 17:45:34	egoldsten	there is a team at mozilla doing "servo" their next browser det
2014-11-24 17:45:51	-->	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has joined ##c++
2014-11-24 17:45:51	det	Im aware
2014-11-24 17:46:02	egoldsten	what do you think about rust?
2014-11-24 17:46:40	det	Its an interesting research language
2014-11-24 17:46:40	-->	snakener1 (~Thunderbi@177.19.61.118) has joined ##c++
2014-11-24 17:52:11	--	irc: disconnected from server
2014-11-24 17:58:06	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 17:58:06	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 17:58:06	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 17:58:06	--	Nicks ##c++: [_5kg _unreal_ _war10ck_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas Backinside badone Banandana barfod basic6_ batmoz bb010g Belgarion0 belz beowuff Betal Bigcheese blackbit bladerunner BlastHardcheese Bleakwise blinky42 blo Bloodust bloony blueness bmf1 boblehest bollullera BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy bzf CARAM_ caveat- cbot` cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 cryptoca cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dj_pi dostoyevsky doug64k dowgiallo DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evilissimo Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold Forbidden404 fOrceez forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd Furai gabriel9 Galik garFF Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner heinrich5991 Hello71 hellschreiber herocoder HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire illerucis Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 italys ivan\ ivan` ix007 j_wright jack_rabbit jafar jagob jakemp JamesNZ jarrod_ Jaxan jayne jeaye jesyspa jhj jiffe jimvideo Jinxit jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth Kasreyn kbtr Kelsie|2 kevr kexmex Kicer86 KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero latexi95 leeN Left_Turn Legiion LetoThe2nd liberal Life-Blood Lilian linagee linuxuz3r LittleJoe lllshamanlll lmat Logan54 Lokomotiv lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim ppf pragma- Praise prime primepie proteusguy proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rav3n Raziel realloc1 refp Refresh Renderwahn rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan roxlu rpag rriemann ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy senseibaka Seppoz Serus Shayanjm shintah shintahW SHODAN Shr3ddy66 Shuba SiGe sigtrm Silex Sjors skarn ski Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum srjek StableEvan stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen tk` TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ xnavor xrlk xsdg xulef xyz yan_ yano yayachiken yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 17:58:06	--	Channel ##c++: 685 nicks (0 ops, 0 halfops, 0 voices, 685 normals)
2014-11-24 17:58:06	--	Notice(leguin.freenode.net): [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
2014-11-24 17:58:08	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Ping timeout: 264 seconds)
2014-11-24 17:58:13	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 17:58:13	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 17:58:18	egoldsten	an iterator is a pointer limited to one element o-O-o it is an instance of counter the result of "iterator::next()" is a pointer (or a smart pointer) I do not talk about the stl implementation
2014-11-24 17:58:47	det	!give egoldsten topic
2014-11-24 17:58:52	nolyc	egoldsten: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-24 17:59:05	<--	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has quit (Ping timeout: 256 seconds)
2014-11-24 17:59:09	egoldsten	stroustrup is for "p==0" not "p==null" ou NULL or nullptr
2014-11-24 18:00:19	egoldsten	what does it means det I do not know
2014-11-24 18:00:19	egoldsten	ok
2014-11-24 18:00:19	Eelis	MrFlibble: perfect, then it will probably last me to the end of my career
2014-11-24 18:02:05	<--	_war10ck_ (~sayantan@106.51.136.14) has left ##c++ ("system battery dying")
2014-11-24 18:02:05	egoldsten	STL is just a part of C++. It exits since 1986, before the STL
2014-11-24 18:02:05	egoldsten	It's like C and stdio.h
2014-11-24 18:02:05	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Remote host closed the connection)
2014-11-24 18:02:05	o-O-o	egoldsten: C++ likes decoupled iterators. it fits a well OO coding too. there is no apparent reason to bloat a class with multiple responsibilities
2014-11-24 18:02:05	o-O-o	*OO coding model*
2014-11-24 18:02:05	<--	SiGe (~SiGe@usc-secure-wireless-054-035.usc.edu) has quit (Remote host closed the connection)
2014-11-24 18:02:53	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-24 18:02:53	belz	egoldsten: sorry, i am busy with something else, so you just have to keep arguing with these guys :p
2014-11-24 18:02:59	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-24 18:03:13	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-24 18:07:53	egoldsten	lol
2014-11-24 18:07:53	egoldsten	I don't want to convince anybody of anything everyboxy is free
2014-11-24 18:07:53	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-24 18:07:53	-->	ilhami (~IlhamiD@188-178-119-46-static.dk.customer.tdc.net) has joined ##c++
2014-11-24 18:07:53	egoldsten	You know I begun C++ arount 1989 I'm not saying that for glory but just because when I begun there were no STL so I did STL-like class libraries many times
2014-11-24 18:07:53	-->	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-24 18:07:53	egoldsten	are talking about class hierarchy o-O-o ? my point of view is "d pointers"
2014-11-24 18:07:53	<--	newbie07 (~Areks@rs.gridnine.com) has quit (Read error: Connection reset by peer)
2014-11-24 18:07:53	-->	newbie07 (~Areks@rs.gridnine.com) has joined ##c++
2014-11-24 18:07:53	<--	newguise1234 (~tc@unaffiliated/newguise1234) has quit (Ping timeout: 265 seconds)
2014-11-24 18:07:54	--	irc: disconnected from server
2014-11-24 18:18:15	--	irc: disconnected from server
2014-11-24 18:22:50	--	irc: disconnected from server
2014-11-24 18:26:11	-->	tc1 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 18:26:11	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 18:26:11	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 18:26:14	--	Nicks ##c++: [_5kg _unreal_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas badone Banandana barfod basic6_ batchm batmoz Belgarion0 belz beowuff Betal Bigcheese BinaryAddicted blackbit bladerunner BlastHardcheese Bleakwise blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy bzf CARAM_ caveat- cbot` cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 crewshin cryptoca CustosL1men cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dj_pi dostoyevsky doug64k dowgiallo DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evilissimo Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FLHerne FlorianJW-terra Fogger fold Forbidden404 fOrceez forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd ftsf Furai gabriel9 Galik Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner heinrich5991 Hello71 hellschreiber herocoder HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 italys ivan\ ivan` ix007 j_wright jack_rabbit jafar jagob jakemp JamesNZ jarrod_ Jaxan jayne jeaye jhj jiffe jimvideo Jinxit jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth Kasreyn kbtr Kelsie|2 kevr kexmex KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero latexi95 leeN Left_Turn Legiion LetoThe2nd liberal Lilian linagee linuxuz3r LittleJoe lllshamanlll lmat Logan54 Lokomotiv lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ natas_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim pragma- Praise prime primepie proteusguy proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rav3n Raziel realloc1 refp Refresh Renderwahn rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy senseibaka Seppoz Serus Shayanjm shintahW SHODAN Shr3ddy66 Shuba sigtrm Silex Sjors skarn ski Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum srjek StableEvan stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle tc1 Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen tk` TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ xnavor xpro256 xrlk xsdg xulef xyz yan_ yano yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 18:26:14	--	Channel ##c++: 678 nicks (0 ops, 0 halfops, 0 voices, 678 normals)
2014-11-24 18:26:23	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 18:26:23	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 18:27:43	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-24 18:29:29	-->	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-24 18:29:47	<--	jafar (~jafar@41.205.22.13) has quit (Remote host closed the connection)
2014-11-24 18:30:04	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Ping timeout: 265 seconds)
2014-11-24 18:30:38	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-24 18:31:05	-->	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has joined ##c++
2014-11-24 18:31:27	<--	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has quit (Quit: Konversation terminated!)
2014-11-24 18:31:40	<--	Bleakwise (~Bleakwise@2602:30a:c0d9:a259:c89e:e08a:1b10:b697) has quit (Read error: Connection reset by peer)
2014-11-24 18:31:49	Meness	Hey guys
2014-11-24 18:32:00	Meness	I am having some trouble with pointers and references
2014-11-24 18:32:04	<--	tc1 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has left ##c++
2014-11-24 18:32:49	-->	newguise1234 (~tc@unaffiliated/newguise1234) has joined ##c++
2014-11-24 18:32:49	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 18:32:49	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 18:32:49	--	Nicks ##c++: [_5kg _unreal_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile aicasn aidecoe alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b1rkh0ff b_jonas badone Banandana barfod basic6_ batchm batmoz Belgarion0 belz beowuff Betal Bigcheese BillyPilgrim blackbit bladerunner BlastHardcheese blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy BZEU bzf CARAM_ caveat- cbot` cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 crewshin cryptoca CustosL1men cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dj_pi dostoyevsky doug64k dowgiallo DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evilissimo Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FlorianJW-terra Fogger fold Forbidden404 fOrceez forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd ftsf Furai Galik Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner heinrich5991 Hello71 hellschreiber herocoder HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan huseyinkozan hypera1r hyperboreean icedev ido iFire Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 italys ivan\ ivan` ix007 j_wright jack_rabbit jakemp JamesNZ jarrod_ Jaxan jayne jeaye jhj jiffe jimvideo Jinxit jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth Kasreyn kbtr Kelsie|2 kevr kexmex KindOne King_Hual KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero latexi95 leeN Left_Turn Legiion LetoThe2nd liberal Lilian linagee linuxuz3r LittleJoe lllshamanlll lmat Logan54 Lokomotiv lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ natas_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 nfk Nickeeh nido Niedar Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ paul424 pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate plamen plash PlasmaHH Plasmastar plitter PotatoGim pragma- Praise prime primepie proteusguy proycon PSG_Luna ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rav3n Raziel realloc1 refp Refresh Renderwahn rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan rpag ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy senseibaka Seppoz Serus Shayanjm shintahW SHODAN Shr3ddy66 Shuba SiGe_ sigtrm Silex Sjors skarn ski Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb Spec-Chum srjek StableEvan stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen tk` TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey tworkin txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ xnavor xpro256 xrlk xsdg xulef xyz yan_ yano yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer zwf z|Andy]
2014-11-24 18:32:49	--	Channel ##c++: 675 nicks (0 ops, 0 halfops, 0 voices, 675 normals)
2014-11-24 18:32:54	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 18:32:54	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 18:33:01	Meness	as you can see from the cpp file, I did this->grid().SamplePowerUsage();
2014-11-24 18:33:09	Meness	and that worked properly
2014-11-24 18:33:22	Meness	But when I do it in the main file
2014-11-24 18:33:28	Meness	it gets a segmentation fault
2014-11-24 18:34:25	<--	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-24 18:34:34	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-24 18:34:36	Meness	I am thinking it has to do with the heap and stack
2014-11-24 18:34:45	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-24 18:34:52	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-24 18:34:54	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 265 seconds)
2014-11-24 18:35:19	-->	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-24 18:35:38	o-O-o	ok
2014-11-24 18:35:42	Meness	but I thought i dealt with that when I did this Grid* tempGrid = new Grid(tempHouses);
2014-11-24 18:35:52	o-O-o	1) don't use raw pointers :-)
2014-11-24 18:36:40	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 255 seconds)
2014-11-24 18:36:50	o-O-o	2) choose the appropriate C++ tools to properly control ownership of your resources (objects, references, smart pointers)
2014-11-24 18:36:58	o-O-o	!next
2014-11-24 18:37:00	nolyc	Another satisfied customer, next!
2014-11-24 18:37:07	<--	b1rkh0ff (~b1rkh0ff@109.163.148.72) has quit (Ping timeout: 250 seconds)
2014-11-24 18:39:06	Meness	I should be using smart pointers then?
2014-11-24 18:39:39	o-O-o	you should learn how to control ownership
2014-11-24 18:39:51	o-O-o	and you need to do it in the most automated way possible
2014-11-24 18:39:52	egoldsten	RAII Meness
2014-11-24 18:40:01	o-O-o	so raw pointers are the worst option for it
2014-11-24 18:40:12	egoldsten	the descructor call ::frer() for exemple
2014-11-24 18:40:27	egoldsten	sometines you can't avoid it
2014-11-24 18:40:29	o-O-o	let's verify it
2014-11-24 18:40:36	o-O-o	Meness: WHY are you using pointers, in the first place?
2014-11-24 18:40:47	o-O-o	(the question arises, because raw pointers don't communicate intent)
2014-11-24 18:41:01	o-O-o	tic tac tic tac
2014-11-24 18:41:14	egoldsten	free() sorry
2014-11-24 18:41:22	<--	realloc1 (~realloc1@aftr-185-17-204-224.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-24 18:41:40	egoldsten	that's why some people hate C++ and choose C
2014-11-24 18:41:41	<--	paul424 (~chatzilla@91.207.69.143) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-24 18:42:25	<--	LittleJoe (411faa61@gateway/web/freenode/ip.65.31.170.97) has quit (Ping timeout: 246 seconds)
2014-11-24 18:42:54	Meness	o-0-o, because that is what I am familiar with
2014-11-24 18:43:16	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 18:43:36	egoldsten	the problem is with exceptions for exemple free is called without smart pointers
2014-11-24 18:43:41	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-24 18:44:24	Meness	Are you able to explain to me why there is a segmentation fault? I am trying to understand why it doesn't work, not trying to just complete this
2014-11-24 18:44:46	<--	tworkin (~Adium@97.77.193.138) has quit (Quit: Leaving.)
2014-11-24 18:44:50	<--	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-24 18:44:54	o-O-o	Meness: try to remove all pointers and to use only objects, instead
2014-11-24 18:45:19	o-O-o	Meness: you are having segfaults, because you don't know how to work with pointers
2014-11-24 18:45:26	o-O-o	you are just trying to 'use' them
2014-11-24 18:45:49	o-O-o	hencem you fail to manually control ownership (which is risky and error prone, as you are seeing now)
2014-11-24 18:45:51	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-24 18:45:56	o-O-o	you should be thankful you are getting a segfault
2014-11-24 18:45:58	o11c	Meness: free() on code that has ctors/dtors is a really bad idea
2014-11-24 18:46:12	o-O-o	usually the ownership bugs are much worse and harder to detect
2014-11-24 18:46:18	o11c	Meness: and once you hit your first UB ...
2014-11-24 18:47:20	o11c	Meness: first, change 'Grid* grid_;' to 'std::unique_ptr<Grid> grid_;'
2014-11-24 18:48:36	o11c	Meness: then remove *all* calls to 'delete' and replace all calls to 'new Grid(args...)' with 'make_unique<Grid>(args...)'
2014-11-24 18:49:09	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-dkdwmzvsfoqwkoxd) has quit (Quit: Connection closed for inactivity)
2014-11-24 18:50:05	batchm	don't let these idiots persuade you from not learning lower parts of the language as well
2014-11-24 18:50:26	egoldsten	I agree with you batchm pointer are not bad
2014-11-24 18:50:31	batchm	find the bug, fix it, learn from it
2014-11-24 18:50:38	egoldsten	pointers are fast
2014-11-24 18:50:56	o11c	so are smart pointers
2014-11-24 18:50:56	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-24 18:51:10	o11c	batchm: don't tell people to do things in a bad manner just because it's possible
2014-11-24 18:51:21	egoldsten	smart pointers are smart and useful when you know what a pointer is
2014-11-24 18:51:36	o11c	there are cases for raw pointers, but this is most definitely NOT one of them
2014-11-24 18:51:42	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-24 18:51:42	batchm	be quiet C++ weenie, or I will cast you to void
2014-11-24 18:51:57	egoldsten	to learn something you must try and fail
2014-11-24 18:52:28	batchm	(and I will use C casts to do it, too)
2014-11-24 18:53:04	egoldsten	it will do nothing batchm I have template function "T& nothing(){T*result=0;return *result;}
2014-11-24 18:53:11	egoldsten	it is useful
2014-11-24 18:55:09	<--	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-24 18:55:09	<--	cbot` (~FS@150.108.238.42) has quit (Ping timeout: 255 seconds)
2014-11-24 18:56:36	Meness	I have done so and nothing has changed
2014-11-24 18:56:39	-->	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has joined ##c++
2014-11-24 18:56:54	Meness	I chose shared pointers, as I felt it was more appropriate for my implementation
2014-11-24 18:58:39	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 18:58:39	egoldsten	listen batchm Meness try to understand what a pointer is an after you will understand easily the smart things
2014-11-24 18:58:39	-->	realloc1 (~realloc1@aftr-185-17-204-224.dynamic.mnet-online.de) has joined ##c++
2014-11-24 18:58:39	egoldsten	it is abot the pointer
2014-11-24 18:58:39	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Quit: Leaving)
2014-11-24 18:58:39	xico	is it correct to write something like "Cls&& func(Cls&& c) { foo(c); return std::move(c); }" with "Cls& foo(Cls&)" ?
2014-11-24 18:59:14	egoldsten	I've hear stroustrup saying "&& is just for constructors"
2014-11-24 18:59:56	egoldsten	it is broque elsewhere
2014-11-24 18:59:56	hs_	xico, within that context c is an lvalue, so foo(Cls&) is fine
2014-11-24 18:59:56	-->	Ahkbar (~Ahkbar@190.162.235.216) has joined ##c++
2014-11-24 19:04:21	egoldsten	you declas a Cls(&&) constructor and to Cls foo() returning Cls it won't be copied
2014-11-24 19:04:21	xico	hs_, egoldsten: thanks
2014-11-24 19:04:21	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 19:04:21	<--	newguise1234 (~tc@unaffiliated/newguise1234) has quit (Ping timeout: 250 seconds)
2014-11-24 19:04:21	--	irc: disconnected from server
2014-11-24 19:06:31	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 19:06:31	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 19:06:31	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 19:10:15	--	Nicks ##c++: [_5kg _unreal_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile Ahkbar aicasn aidecoe alamages alamar Albori alcedine Alina-malina alnkpa alvaro_o alza An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen antons_ anunnaki Ardonik armyriad Artpicre asakura1 ashkan aslant Aster atod Auv B-Knock b0lt b_jonas badone Banandana barfod basic6_ batchm batmoz Belgarion0 belz beowuff Betal Bigcheese BillyPilgrim blackbit bladerunner BlastHardcheese blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ Burgundy BZEU bzf CARAM_ caveat- cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon clincher Clinteger clynamen cnap cnj cnu- codebrainz comand confusaest contempt coolcat crafty1 crewshin cryptoca CustosL1men cvtsx cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype DEElekgolo Defaultti Dentych deSilva desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dj_pi dostoyevsky doug64k dowgiallo DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma envi_un ericP erikj ERROH esperegu eurythmia evilissimo Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FlorianJW-terra Fogger fold Forbidden404 fOrceez forrestv fr33domlover freanux FreezingCold FriskyKat froggey fstd ftsf Furai Galik Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol govg graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner heinrich5991 Hello71 hellschreiber herocoder HerzogDeXtEr HeTo hexagoxel HiggsPossum himikof hiptobearcub hs_ hstefan hypera1r hyperboreean icedev ido iFire Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 italys ivan\ ivan` ix007 j_wright jack_rabbit jakemp JamesNZ jarrod_ Jaxan jayne jeaye jhj jiffe jimvideo Jinxit jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth Kasreyn kbtr Kelsie|2 Kevin-_- kevr kexmex KindOne KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan kurahaupo kurti kyoshero latexi95 leeN Left_Turn Legiion LetoThe2nd liberal Lilian linagee linuxuz3r lllshamanlll lmat Logan54 Lokomotiv lord4163 LordAkkarin Lowl3v3l lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC MrFlibble mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ natas_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 nfk Nickeeh nido Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ pcfreak30 peterhu peterR`` pfo_ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum piotr pippijn pixelate PJBoy plamen plash Plasmastar PotatoGim pragma- Praise prime primepie proteusguy proycon ptx pyon qdii qknight Quackmatic quaz0r quizzi Rafaelfsilva RageD rainforest Rav3n RazielZ realloc1 refp Refresh Renderwahn rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis_ RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan rpag rriemann ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy senseibaka Seppoz Serus Shayanjm shintahW SHODAN Shr3ddy66 Shuba SiGe_ sigtrm Silex Sjors skarn ski Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb srjek StableEvan stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle tcsc Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen tk` TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber V-ille ValicekB Vbitz ville Vinnie_win Vir VladolfPutler vocodork Vohveli vokimon vol4ko w41 w41_ w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xico xiphiasx_ xnavor xpro256 xrlk xsdg xulef xyz yan_ yano yeltzooo Yepoleb yeticry yobber yorick Ysgard z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq Zupoman zwer z|Andy]
2014-11-24 19:10:15	--	Channel ##c++: 667 nicks (0 ops, 0 halfops, 0 voices, 667 normals)
2014-11-24 19:10:15	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-24 19:10:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 19:10:15	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-24 19:10:15	<--	realloc1 (~realloc1@aftr-185-17-204-224.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-24 19:10:15	-->	hexagoxel_ (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has joined ##c++
2014-11-24 19:10:15	<--	hexagoxel_ (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has quit (Remote host closed the connection)
2014-11-24 19:10:15	-->	hexagoxel_ (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has joined ##c++
2014-11-24 19:10:15	-->	APerson_ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-24 19:10:15	<--	K-ballo (~sonoio@181.228.59.173) has quit (Read error: Connection reset by peer)
2014-11-24 19:10:15	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 19:10:15	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 19:10:38	<--	hexagoxel (~hexagoxel@kiel-4d0672ff.pool.mediaWays.net) has quit (Disconnected by services)
2014-11-24 19:10:46	<--	hexagoxel_ (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has quit (Read error: Connection reset by peer)
2014-11-24 19:10:58	-->	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has joined ##c++
2014-11-24 19:11:14	-->	oleo__ (~oleo@xdsl-78-35-149-13.netcologne.de) has joined ##c++
2014-11-24 19:11:19	<--	leeN (~leeN@g228050116.adsl.alicedsl.de) has quit (Quit: The morning breaks us up inside?)
2014-11-24 19:11:36	--	oleo is now known as Guest6434
2014-11-24 19:12:27	<--	Guest6434 (~oleo@xdsl-78-35-188-212.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-11-24 19:12:53	-->	pingupingu (~pinguping@unaffiliated/pingupingu) has joined ##c++
2014-11-24 19:13:29	-->	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has joined ##c++
2014-11-24 19:14:47	pEYEd	is there a way to update an index 'title' to reflect a ++counter value?  https://bpaste.net/show/c6df41e37221
2014-11-24 19:17:02	immibis	i don't think you know what you're trying to do
2014-11-24 19:17:07	immibis	what are you trying to do?
2014-11-24 19:17:26	immibis	print v[0], v[1], ..., v[6]?
2014-11-24 19:17:38	<--	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-11-24 19:17:58	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-24 19:18:14	-->	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-11-24 19:18:57	egoldsten	you can do counter=what you need
2014-11-24 19:19:12	PJBoy	so my friend pointed out to me that this works in some compilers: int f(int a){ int b[a]; return b[a-1]; }
2014-11-24 19:19:19	immibis	pEYEd: just change v[3] to v[b] and it will do what I think you're trying to do
2014-11-24 19:19:23	PJBoy	for how long has that been possible?
2014-11-24 19:19:39	immibis	since C99
2014-11-24 19:19:55	PJBoy	dynamically allocating local arrays...
2014-11-24 19:19:58	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Quit: Konversation terminated!)
2014-11-24 19:20:01	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-24 19:20:01	MrFlibble	you can't do that in C++
2014-11-24 19:20:20	immibis	whoops, this is ##c++, right
2014-11-24 19:20:23	PJBoy	geordi: int f(int a){ int b[a]; return b[a-1]; }
2014-11-24 19:20:23	geordi	Success
2014-11-24 19:20:31	MrFlibble	PJBoy: non-standard
2014-11-24 19:20:32	pEYEd	immibis that gives me 16 - 10
2014-11-24 19:20:36	belz	gcc extension...
2014-11-24 19:20:44	PJBoy	it works with gcc, icc, clang...
2014-11-24 19:20:51	MrFlibble	non-standard.
2014-11-24 19:21:03	immibis	pEYEd: what are you trying to do?
2014-11-24 19:21:25	PJBoy	how can you be so sure? can I give gcc or geodi a disable non-standards flag?
2014-11-24 19:21:36	pEYEd	immibis count in groups of 7 and then hardcode the index with the value
2014-11-24 19:21:39	-->	licnep (uid4387@gateway/web/irccloud.com/x-aqmgiirqjkisxvte) has joined ##c++
2014-11-24 19:21:52	immibis	i still don't understand what you just said
2014-11-24 19:22:07	<--	netj (~netj@128.12.163.109) has quit (Ping timeout: 264 seconds)
2014-11-24 19:22:09	pEYEd	immibis grab the 4th item in a group of 7 [0-6]
2014-11-24 19:22:12	<--	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-11-24 19:22:15	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-24 19:22:17	-->	netj (~netj@naru.stanford.edu) has joined ##c++
2014-11-24 19:22:29	PJBoy	it makes sense that the code should work
2014-11-24 19:22:41	egoldsten	do another shell script and replace "gcc" by "clang" it should work
2014-11-24 19:22:44	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Quit: Leaving)
2014-11-24 19:22:44	immibis	so you want to output the 4th and 11th items? (and 18th and 25th and 32nd and so on, if the array was that long)?
2014-11-24 19:22:50	-->	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-11-24 19:22:57	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-24 19:23:28	egoldsten	it s a "fizz buzz" test
2014-11-24 19:23:31	PJBoy	clang doesn't even complain with -Wall
2014-11-24 19:23:34	pEYEd	immibis yes!
2014-11-24 19:23:47	pEYEd	bingo  :)
2014-11-24 19:24:00	egoldsten	I run both PJBoy to check this kind of stuff
2014-11-24 19:24:05	MrFlibble	PJBoy: it is not C++.
2014-11-24 19:24:07	pEYEd	really long. but always in 7s
2014-11-24 19:24:18	PJBoy	MrFlibble, yes I've gathered that now
2014-11-24 19:24:29	immibis	pEYEd: why not this? for(int b = 3; b < v.size(); b+=7) cout << v[b] << endl;
2014-11-24 19:24:31	PJBoy	still, a method of knowing what's standard and what's not would be nice
2014-11-24 19:24:37	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-24 19:24:43	immibis	you're just counting from 3, and increasing by 7 each time
2014-11-24 19:24:57	PJBoy	because again, it makes sense that such an operation would be allowed
2014-11-24 19:25:08	MrFlibble	why does it?
2014-11-24 19:25:18	egoldsten	the standard is made of things that works everywhere so try clang and gcc altogether
2014-11-24 19:25:27	PJBoy	the stack is easily capable of growing in size to fit the dynamically allocated array
2014-11-24 19:25:47	MrFlibble	so? that is no reason to enable the feature.
2014-11-24 19:25:49	PJBoy	stack limits notwithstanding
2014-11-24 19:25:56	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-24 19:26:06	egoldsten	vector<> are not on the stack
2014-11-24 19:26:09	pEYEd	immibis thank you so much!
2014-11-24 19:26:23	BZEU	Will ask the same question as I asked before. I'm not new to programming but I have done some before. Now that doesn't mean my code was clean or I did it the right way. I have never learned C++ correctly tho so I wonder, should I pick up Bjarnes book on Programming, Principles and Practice using C++ or C++ Primer 5th Edition?
2014-11-24 19:26:36	-->	pmenso57 (c730c6e4@gateway/web/freenode/ip.199.48.198.228) has joined ##c++
2014-11-24 19:26:56	PJBoy	one of the things about C++ is having very few restrictions
2014-11-24 19:27:12	egoldsten	If you want help him yes but internet is sufficient
2014-11-24 19:27:18	PJBoy	why would you arbitrarily add a restriction that says you can't dynamically allocate onto the stack
2014-11-24 19:27:25	MrFlibble	personally I dislike that feature and would prefer for it to stay out of C++.
2014-11-24 19:27:55	<--	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-24 19:27:58	<--	batchm (~cgiirc@fantasy.ircgate.it) has quit (Quit: quit)
2014-11-24 19:28:02	Betal	is sure that short type will use 2 bytes? like char use 1 byte
2014-11-24 19:28:16	PJBoy	char isn't guaranteed to use one byte
2014-11-24 19:28:17	egoldsten	you can try "-pedantic"
2014-11-24 19:28:33	egoldsten	no Betal
2014-11-24 19:28:36	PJBoy	egoldsten, thanks!
2014-11-24 19:28:40	MrFlibble	char is guaranteed to be a byte
2014-11-24 19:28:42	<--	w41_ (~w41@unaffiliated/w41) has quit (Ping timeout: 264 seconds)
2014-11-24 19:28:50	egoldsten	jus char is ensured to be 1 byte long others can change
2014-11-24 19:29:09	egoldsten	you're welcome PJBoy
2014-11-24 19:29:46	PJBoy	oh sorry, yes, a char is always a byte
2014-11-24 19:29:54	egoldsten	static_assert(sizeof(ushort_t)==2","bad integer"):"
2014-11-24 19:29:56	PJBoy	but a byte may be more than 8 bits
2014-11-24 19:30:05	egoldsten	never PJBoy
2014-11-24 19:30:17	egoldsten	8 bit always and everywhere
2014-11-24 19:30:29	PJBoy	quoting C++ reference 'Note: this allows the extreme case in which bytes are sized 64 bits, all types (including char) are 64 bits wide, and sizeof returns 1 for every type.'
2014-11-24 19:30:37	egoldsten	int is often 4 byte or 8 bytes
2014-11-24 19:30:55	MrFlibble	PJBoy: we know this already; you just discovered it.
2014-11-24 19:31:19	PJBoy	MrFlibble, but I felt the need to justify that a byte may be more than 8 bits
2014-11-24 19:31:25	egoldsten	It's not like that PJBoy it is theorical
2014-11-24 19:31:26	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-24 19:31:35	MrFlibble	we already know that a byte can be more than 8-bits
2014-11-24 19:31:47	MrFlibble	and if you do mean 8-bits then the correct term is octet not byte.
2014-11-24 19:31:57	egoldsten	it can't anything would work with that
2014-11-24 19:31:59	zwer	it is not just theoretical.. there are DSPs with 32 bit chars
2014-11-24 19:32:11	PJBoy	I was going to say
2014-11-24 19:32:15	<--	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-11-24 19:32:34	PJBoy	the SNES VRAM handler uses 16 bit bytes
2014-11-24 19:32:54	PJBoy	cool tip on the term octet though
2014-11-24 19:33:07	MrFlibble	sizeof == no. of bytes, sizeof(char) == 1 ergo char is 1 byte.
2014-11-24 19:33:30	PJBoy	indeed
2014-11-24 19:33:52	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 19:33:59	<--	antons_ (~antons@199.48.120.2) has quit (Read error: Connection reset by peer)
2014-11-24 19:34:14	<--	MrFlibble (LunarJetma@2.124.188.136) has quit (Quit: MrFlibble)
2014-11-24 19:34:18	<--	_unreal_ (~laptop@99-60-102-25.lightspeed.wepbfl.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2014-11-24 19:34:43	egoldsten	there is also "green array" from the inventor of the forth i thing the registers are like 13 bits long
2014-11-24 19:34:55	xico	oes it seem ok to use namespaces to enable/disable certain parts, possibly incompatible, of an api?
2014-11-24 19:34:59	BZEU	!books
2014-11-24 19:35:00	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-24 19:35:15	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-24 19:36:29	BZEU	Thinking in C++, is it a good intro book for C++?
2014-11-24 19:36:58	egoldsten	I do that xico and I do also include twice in different namespace to tune template classes
2014-11-24 19:37:33	egoldsten	Alexendre di a book also
2014-11-24 19:37:36	egoldsten	did
2014-11-24 19:38:20	xico	egoldsten: great, nice. i never saw it. do you remember the book's title by any chance?
2014-11-24 19:38:32	egoldsten	https://channel9.msdn.com/posts/C-and-Beyond-2012-Panel-Convincing-your-Colleagues
2014-11-24 19:39:31	<--	Lowl3v3l (~Lowl3v3l@95.91.248.179) has quit (Ping timeout: 255 seconds)
2014-11-24 19:40:08	egoldsten	I do read books anymore sorry  xico but I hear him talking about his book I don't know if his book is good but he is interesting
2014-11-24 19:40:12	-->	rkreis (~robin@pD9EF1199.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 19:40:22	xico	thanks.
2014-11-24 19:41:10	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-24 19:41:54	egoldsten	I have a namespace "safe" and another on "unsafe" for the same classes
2014-11-24 19:42:09	-->	cyberik (~cyberik@145-118-119-112.fttx.bbned.nl) has joined ##c++
2014-11-24 19:43:27	<--	rkreis_ (~robin@pD9EF13EA.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-24 19:43:41	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-24 19:44:32	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has left ##c++
2014-11-24 19:46:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 19:47:38	-->	_unreal_ (~laptop@99-60-102-25.lightspeed.wepbfl.sbcglobal.net) has joined ##c++
2014-11-24 19:49:50	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-24 19:49:53	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 19:50:10	-->	Frisky-Ka (SomeWhere@90.213.100.90) has joined ##c++
2014-11-24 19:51:14	-->	r3g3x (~r3g3x@unaffiliated/r3g3x) has joined ##c++
2014-11-24 19:53:00	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2014-11-24 19:53:01	<--	FriskyKat (SomeWhere@90.217.161.214) has quit (Ping timeout: 265 seconds)
2014-11-24 19:53:39	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-24 19:53:47	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-24 19:53:52	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 19:54:17	-->	SiGe___ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-24 19:54:23	<--	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-24 19:54:32	-->	SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-24 19:54:43	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-24 19:56:17	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-24 19:56:50	<--	rpag (~rg4@unaffiliated/rg4) has quit (Ping timeout: 264 seconds)
2014-11-24 19:57:06	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-24 19:57:16	-->	snakenerd (~Thunderbi@177.19.61.118) has joined ##c++
2014-11-24 19:58:08	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-24 19:58:30	<--	snakenerd (~Thunderbi@177.19.61.118) has quit (Client Quit)
2014-11-24 19:59:03	-->	seizo (~seizo@107-207-47-8.lightspeed.okcbok.sbcglobal.net) has joined ##c++
2014-11-24 20:01:00	--	Frisky-Ka is now known as FriskyKat
2014-11-24 20:01:54	-->	Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-11-24 20:02:53	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-24 20:05:26	-->	komarov (~komarov@92.47.253.173) has joined ##c++
2014-11-24 20:05:47	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-24 20:06:08	<--	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-11-24 20:07:02	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-24 20:07:14	-->	TheAncientGoat (~quassel@210.195.220.183) has joined ##c++
2014-11-24 20:09:14	<--	hiptobearcub (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-24 20:10:15	<--	Burgundy (~burgundy@188.26.170.33) has quit (Remote host closed the connection)
2014-11-24 20:11:19	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-24 20:11:40	<--	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-11-24 20:12:56	-->	maazu (~maazu@120.141.21.172) has joined ##c++
2014-11-24 20:13:14	<--	maazu (~maazu@120.141.21.172) has left ##c++
2014-11-24 20:13:59	-->	maazu (~maazu@120.141.21.172) has joined ##c++
2014-11-24 20:14:07	<--	lmat (~lmat@c-50-155-136-28.hsd1.co.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-24 20:14:54	maazu	hello
2014-11-24 20:15:30	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-24 20:16:48	o-O-o	!love
2014-11-24 20:16:50	nolyc	I only love myself.
2014-11-24 20:17:10	maazu	robot
2014-11-24 20:18:30	belz	oh my
2014-11-24 20:19:25	<--	komarov (~komarov@92.47.253.173) has quit (Ping timeout: 258 seconds)
2014-11-24 20:19:51	<--	Ysgard (~Ysgard@69.196.72.54) has quit
2014-11-24 20:20:57	egoldsten	and c++...
2014-11-24 20:21:17	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-24 20:21:19	maazu	hello all
2014-11-24 20:21:20	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-24 20:39:39	--	irc: disconnected from server
2014-11-24 20:40:03	-->	newguise1234 (~tc@c-68-61-153-16.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 20:40:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-24 20:40:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 10:01:38
2014-11-24 20:40:04	--	Nicks ##c++: [_5kg _unreal_ `Winslow a_le AbleBacon aboudreault acidfrost adamm adendum_ Adrinael Affliction` agile Ahkbar aicasn aidecoe alamages alamar alcedine Alina-malina alnkpa alvaro_o alza Amaranth An_Ony_Moose anders0 andres andreyv angryzor Anoniem4l ansiwen anunnaki APerson_ Ardonik arescorpio armyriad Artpicre asakura1 aschmack ashkan aslant Aster atod Auv B-Knock b0lt b_jonas badone Banandana barfod basic6_ batmoz Belgarion0 belz beowuff Betal Bigcheese BillyPilgrim BinaryAddicted blackbit bladerunner BlastHardcheese blinky42 blo Bloodust bloony blueness bmf1 boblehest BombStrike bone BoomerBile BoredHamster boris`` bOSKE bps Brando753 BrandonB btrace bumbar_ BZEU bzf CARAM_ Carbonflux caveat- cbot` cbreak Cecen CEnnis91 chainedchaos Chestal chewyDelicious ChoiKyuSang chouquette Chris ciaranm CJKay Cl-Martin clang ClarusCogitatio cleamoon clincher Clinteger clynamen cnap cnj cnu- codebrainz confusaest contempt coolcat crafty1 crewshin cryptoca CustosL1men cvtsx cyberik cyberspace- cyndis Cyp__ cysm d3Vito d_s dahlia dantarion dardevelin DarkGhost dataangel davek_ David de-vri-es DeadSix27 decltype Defaultti Dentych desophos Dessimat0r det devbug dexter0 DexterLB DexxeD dfletcher dh dindinx dirtydawg dj_pi dk0r dostoyevsky doug64k dowgiallo drale2k DrBenway dts|airhocky dualbus ducklobster Dumle29_ dunpeal eagleflo easior_ eckesicle edk edran Eelis efreet egoldsten ejnahc elnn elsewho emma endomancer envi_un ericP erikj ERROH esperegu eurythmia evilissimo Extreme f00dMonsta_ f0ster_ f10 FabTG_ fahren filcab_ Flannel flebron FlorianJW-terra fluve Fogger fold Forbidden404 forrestv fr33domlover freanux FreezingCold FriskyKat froggey ftsf Furai Galik Garner geidi genpaku Gentle geordi ggherdov` GGMethos gnoirzox GoGi googol govg graphitemaster Gravitron GrecKo gregj Guest49103 guibou_ guitarman0831 h_enke hackkitten hagabaka HaltingState HandheldPenguin harrow Haxxa Heartbroken heiner heinrich5991 Hello71 hellschreiber HerzogDeXtEr HeTo HiggsPossum himikof hs_ hstefan hypera1r hyperboreean icedev ido iFire Iloiny immibis imMute impulse150 ineb int0x27h Internet13 introom iptable ircnode0 iron_houzi Irrelium irrenhaus3 italys ivan\ ivan` ix007 j_wright jack_rabbit jakemp JamesNZ jarrod_ Jaxan jayne jeaye Jesin jhj jiffe jimvideo Jinxit jophish jorj jpnurmi jrgill jrnas jrolland-ubuntu JSharpe Jubb jumbers Jupelius jweinberg jzl K-ballo k0nichiwa k4r1m Kabal619 kadoban KAHR-Alpha kailoAtWork Kaini kaleid0 kalven kalzz Karethoth Kasreyn kbtr Kelsie|2 Kevin-_- kevr KindOne KiNgMaR Kirrahe klarrt kloeri KnownSyntax Kostenko_ kriskropd Kristina KrzaQ kStolen kszatan KTB kurahaupo kurti kyoshero latexi95 Left_Turn Legiion LetoThe2nd lh_mouse liberal LickPlusPlus licnep LifeBlood Lilian linagee linuxuz3r lllshamanlll Logan54 Lokomotiv Longlius lord4163 LordAkkarin lucasjones ludkiller Luker luny Lynxium M-ou-se m0shbear m477_ mads- manny- marchelzo_ markand martiert marvimias mavam maw Maxel Meeh megaTherion melter Meness metallisto mf_ mgaunard_ mikroflops MINIMAN10000 Mio-chan MissionCritical mist misterme mitch0 Mjark Mjjs MKCoin Moleboy Motig mountaingoat MouseTheLuckyDog MrC mrueg mukunda_ MulleDK19 mulvane murrekatt_ muscle-man muteki mxiia nacitar nacon Naive naraku_9333 nardev_ natas_ Natch Navid nda__ necrogami nefarious negerns netj neunon newbie07 newguise1234 Nickeeh nido Nik05 nikb Nilium NinjaPenguin nitrix nivyaj nkvorn noj nolyc NoNMaDDeN notker notpara npaperbot npcomp nurupo nutron o-0-o o-O-o o11c oberstein Obfuscate obiwahn oleo__ olly_c only_the_bear opalraava OpusMioda Orbitrix orbitz Orion] ormaaj Orphis Oxyd pa pandaant paracyst patson patteh_ pcfreak30 peterhu peterR`` pEYEd pfo__ phantom__ phantomcircuit phillips1012 Phlow PhlowWork pi- Pilum pingupingu piotr pippijn pixelate plamen plash Plasmastar plitter pmenso57 PotatoGim pragma- Praise prime primepie proteusguy proycon ptx pyon qdii qknight Quackmatic quaz0r quizzi r3g3x Rafaelfsilva RageD rainforest Rav3n RazielZ refp Refresh Renderwahn Repelex rethnor rfreeman_w richardwhiuk Rickmasta riotz rkreis RlyDontKnow robbyoconnor robert_|disconne robertknight robink roentgen roflin RokerHRO roxfan ruediger Rutix rvchangue rvncerr Rylee rylinaux s00pcan s1dev Saiban sailerboy salamanderrake saml_ Sausage sazzer sblack1 scdarius scharan scrote Sculptor segy seizo senseibaka Seppoz seronis Serus Shayanjm shintahW SHODAN Shr3ddy66 Shuba SiGe___ sigtrm Silex Sjors skarn ski SlashLife SleekoNiko Slide-O-Mix Smirnov smokex soa2ii sohail Soliton soulcake soulz SoylentYellow sparetire sparetire_ Spark spb srjek StableEvan stefandxm stfn stk944 Stryyker SubCreative Sumason supay Supicioso suppahsrv synapt Synchunk syncrow sze tachoknight talisein Talisman tamaroth tapout tazle tcsc Tee_Pee teklol tellur teotwaki termos Th0mas The_Coolest TheAncientGoat thecha TheGhostinator theglass themagician TheSausageMaster thesquib thomas tibl timj1 TinoDidriksen TMM TobiasFar_ tobleronegordon tomalak tomaw TommyC torei toresbe TrafficMan Tribeam Trieste trigen Trondby tsimpson TViernion Twey Twinklebear txomon|home tz TzilTzal Ulrike_Rayne Unearthly unreal Unscrup44 urlgrabber usrJayRay_mbp V-ille ValicekB Vbitz ville vinleod Vinnie_win Vir vocodork Vohveli vokimon vol4ko w41 w66 wakd WalrusPony wchun webshinra Weethus wickedmic widmo wilornel_ wilx WizBright woggle woozly wto xace Xark xenoph XgF xiphiasx_ xnavor xrlk xsdg xulef xyz yan_ yano yeltzooo Yepoleb yeticry yobber yorick z16 zackthehuman zacts zagabar Zarthus ZDisorder zen|merge_ Zephyrus zer0def zhangxaochen_ Zharf zima zq zwer zwf z|Andy]
2014-11-24 20:40:04	--	Channel ##c++: 673 nicks (0 ops, 0 halfops, 0 voices, 673 normals)
2014-11-24 20:40:11	--	Mode ##c++ [+CPcnptlf 850 #overflow]
2014-11-24 20:40:12	--	Channel created on Sat, 15 Sep 2001 03:15:35
2014-11-24 20:40:26	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 258 seconds)
2014-11-24 20:42:14	-->	fOrceez (~f0rceez@134.148.64.48) has joined ##c++
2014-11-24 20:42:49	<--	endomancer (~endomance@2001:8003:2e3b:e301:1979:a33b:a6b4:e059) has quit (Quit: endomancer)
2014-11-24 20:43:31	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Read error: Connection reset by peer)
2014-11-24 20:46:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 20:46:22	<--	Moleboy (470e930b@gateway/web/freenode/ip.71.14.147.11) has quit (Ping timeout: 246 seconds)
2014-11-24 20:49:14	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Ping timeout: 272 seconds)
2014-11-24 20:49:14	JamesNZ	geordi: cout << true;
2014-11-24 20:49:14	geordi	error: 'cout' does not name a type
2014-11-24 20:49:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 20:49:22	JamesNZ	geordi: std::cout << true;
2014-11-24 20:49:22	geordi	error: 'cout' in namespace 'std' does not name a type
2014-11-24 20:49:43	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-24 20:51:02	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-24 20:51:50	<--	k0nichiwa (~jdoe@wsip-174-77-237-196.ga.at.cox.net) has quit (Ping timeout: 265 seconds)
2014-11-24 20:52:19	seronis	{ bool True = true; cout << True; }
2014-11-24 20:52:19	geordi	true
2014-11-24 20:52:24	 *	seronis cheats
2014-11-24 20:53:56	-->	YarnFive8 (~YarnFive8@unaffiliated/yarnfive8) has joined ##c++
2014-11-24 20:54:14	-->	jfeltz (~beefcube@65-128-59-27.hlrn.qwest.net) has joined ##c++
2014-11-24 20:55:55	<--	notpara (~para@213.187.75.26) has quit (Ping timeout: 264 seconds)
2014-11-24 20:56:31	<--	negerns (negerns@49.144.150.177) has quit
2014-11-24 20:56:48	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-24 20:57:21	hs_	JamesNZ, that is "std::cout << true;" in global namespace
2014-11-24 20:58:08	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit (Read error: Connection reset by peer)
2014-11-24 20:58:20	JamesNZ	hs_: But not in n the std namespace?
2014-11-24 20:58:48	-->	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has joined ##c++
2014-11-24 20:58:59	hs_	{ cout << true; }
2014-11-24 20:58:59	geordi	true
2014-11-24 20:59:08	hs_	what you have is like "cout << true; int main() { }"
2014-11-24 20:59:26	hs_	it is not about what namespace cout is in.. it is about where that statement appears
2014-11-24 20:59:27	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (Read error: Connection reset by peer)
2014-11-24 20:59:32	JamesNZ	Ahhh, I see.
2014-11-24 20:59:40	hs_	you want
2014-11-24 20:59:42	hs_	<< true;
2014-11-24 20:59:42	geordi	true
2014-11-24 20:59:44	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-24 20:59:47	hs_	that is the bot magic
2014-11-24 21:00:02	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2014-11-24 21:00:09	JamesNZ	Ah.
2014-11-24 21:01:13	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2014-11-24 21:02:20	-->	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has joined ##c++
2014-11-24 21:02:51	<--	KTB (~KTB@cpe-74-79-123-138.twcny.res.rr.com) has quit (Quit: gtg)
2014-11-24 21:02:53	-->	Leftas_ (~leftas@91.228.84.180) has joined ##c++
2014-11-24 21:05:06	Meness	What is the syntax for initializing an empty vector with new?
2014-11-24 21:05:35	hs_	for what?
2014-11-24 21:05:48	aschmack	std::vector<T> vec = new std::vector<T>();
2014-11-24 21:05:55	<--	jfeltz (~beefcube@65-128-59-27.hlrn.qwest.net) has quit (Quit: Leaving)
2014-11-24 21:05:59	hs_	noooo
2014-11-24 21:06:07	aschmack	what?
2014-11-24 21:06:17	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-24 21:06:18	hs_	vec is not a pointer
2014-11-24 21:06:25	aschmack	ah, right
2014-11-24 21:06:29	immibis	Meness: vectors are created empty
2014-11-24 21:06:31	aschmack	std::vector<T>* vec = new std::vector<T>();
2014-11-24 21:06:31	<--	Repelex (~textual@189.59.36.231.dynamic.adsl.gvt.net.br) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-24 21:06:39	hs_	don't do that
2014-11-24 21:07:01	hs_	a dynamically allocated vector is almost guaranteed to be a mistake
2014-11-24 21:07:59	hs_	vector manages its own allocation internally
2014-11-24 21:08:07	hs_	or at least the allocation for its data
2014-11-24 21:08:25	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-24 21:10:52	<--	eurythmia (uid24485@gateway/web/irccloud.com/x-xhtkmreksojhzsan) has quit (Quit: Connection closed for inactivity)
2014-11-24 21:11:28	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2014-11-24 21:11:56	Meness	is anyone bored enough to look through my code lol?
2014-11-24 21:12:15	egoldsten	it is strange aschmack
2014-11-24 21:12:17	hs_	ideone.com
2014-11-24 21:12:26	aschmack	eh egoldsten?
2014-11-24 21:12:30	SlashLife	Meness: You'll never know if you don't paste it.
2014-11-24 21:12:37	egoldsten	unique_prtr<vector> ...
2014-11-24 21:13:03	egoldsten	the probleme with new is to call delete
2014-11-24 21:13:12	SlashLife	aschmack: Let me guess: You have experience coding Java?
2014-11-24 21:13:14	aschmack	oh, i don't use c++11
2014-11-24 21:13:21	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 255 seconds)
2014-11-24 21:13:32	<--	vinleod (~vinleod@c-76-105-158-189.hsd1.or.comcast.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-24 21:13:32	aschmack	no, I mainly code C/C++
2014-11-24 21:13:45	hs_	it is 2014
2014-11-24 21:14:08	SlashLife	Ah, ok; I just read on to your version using vector*; saw the vector = new vector variant first. :)
2014-11-24 21:14:08	aschmack	and i work on a codebase from the 90s.
2014-11-24 21:14:27	SlashLife	As hs_ said: You usually don't want to allocate a vector dynamically.
2014-11-24 21:14:36	Meness	header http://pastebin.com/ZdFxJYnk cpp http://pastebin.com/21V6q7RG
2014-11-24 21:14:46	Meness	in the struct in header
2014-11-24 21:15:02	SlashLife	Allocate it "somewhere" and share it by reference instead.
2014-11-24 21:15:32	hs_	Meness, a "singleton" design is almost always a mistake too
2014-11-24 21:15:49	SlashLife	Unless you have a specific reason to do otherwise - but if you have, then you're more knowledgable about the actual situation than we are, so we're still no help to you.
2014-11-24 21:15:58	StableEvan	Why doesn't this sort correctly? http://ideone.com/EjEXwx
2014-11-24 21:16:06	SlashLife	Singleton.
2014-11-24 21:16:18	SlashLife	The first design pattern I mention in every job interview.
2014-11-24 21:16:53	SlashLife	If they don't continue to ask about it, I know: This is not a job for me.
2014-11-24 21:16:54	Meness	I have test code that has 5, 12, 9 devices respective to the order in the struct
2014-11-24 21:17:11	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-24 21:17:56	Meness	incandescent uses 60W, fluorescent uses 14W, and the baseboard uses length*225
2014-11-24 21:18:00	Meness	Doing some math
2014-11-24 21:18:20	-->	darkarcher (~archer@137.63.72.22) has joined ##c++
2014-11-24 21:18:21	Meness	if I turned on everything, I should be using 2493W
2014-11-24 21:18:28	SlashLife	Meness: There is one HUGE stomach ache I have with your code.
2014-11-24 21:18:39	SlashLife	You create stuff in pointers to dynamically allocated memory.
2014-11-24 21:18:52	SlashLife	... and then you pass that dynamically allocated memory by reference.
2014-11-24 21:18:58	mukunda_	is there an easy way to have a static integer in a header only class?
2014-11-24 21:19:06	SlashLife	WHAT THE HELL are you doing there?
2014-11-24 21:19:50	hs_	StableEvan, "s[2]" is a pointer, not a "Media"
2014-11-24 21:20:09	SlashLife	Oh, actually looking at it:
2014-11-24 21:20:22	SlashLife	Meness: At which point do you "delete" the data?
2014-11-24 21:20:44	-->	Trondbu (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-24 21:21:24	<--	cleamoon (~Thunderbi@c213-89-98-137.bredband.comhem.se) has quit (Remote host closed the connection)
2014-11-24 21:22:05	<--	APerson_ (~quassel@wikipedia/APerson) has quit (Remote host closed the connection)
2014-11-24 21:22:43	-->	cleamoon (~Thunderbi@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-24 21:22:44	-->	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has joined ##c++
2014-11-24 21:22:52	-->	dw (~dmw@unaffiliated/dw) has joined ##c++
2014-11-24 21:23:26	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Disconnected by services)
2014-11-24 21:23:26	--	Trondbu is now known as Trondby
2014-11-24 21:23:27	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-24 21:23:30	SlashLife	StableEvan: Explain this to me, please: // always returns false for some reason
2014-11-24 21:23:37	SlashLife	StableEvan: Your function returns void ...
2014-11-24 21:24:01	StableEvan	Sorry, I meant it never is true and thus never executes the sorting code
2014-11-24 21:24:11	<--	Ahkbar (~Ahkbar@190.162.235.216) has quit (Quit: asdf)
2014-11-24 21:24:14	dw	ahoy. is there a typical pattern or library used to represent closures as plain c functions? i have done this before, but by generating a table of stub functions that looked up their closure data in an array, then providing an allocator function to setup the state and return one of the stubs
2014-11-24 21:24:21	darkswordchris	Hello. I am building an updater program, and I would like to use a "standard" versioning system (0.0.1, 0.0.2, etc). The version number of the client will be sent to the server, which will check it against the newest version. However, integers can't have two decimals. What would be the best way to do this?
2014-11-24 21:24:27	dw	but it seems like something there must be a generic approach to
2014-11-24 21:24:31	StableEvan	even if a .name is less than the other .name
2014-11-24 21:25:17	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-24 21:25:29	dw	("closure" here referring to anything equivalent to "method + self value", "function with void * context", etc)
2014-11-24 21:25:33	SlashLife	Ah, ok; that makes sense.
2014-11-24 21:25:50	Meness	StableEvan, if I delete the data, how can I maintain access to it? I'm sorry, I think I'm missing something now. To be honest this is an optional assignment for a course I'm doing
2014-11-24 21:25:55	SlashLife	Btw.: You might want to use std::swap rather than what you're doing.
2014-11-24 21:25:56	Meness	And from the moment I saw it
2014-11-24 21:26:03	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-24 21:26:05	Meness	I got confused at why we needed a static create
2014-11-24 21:26:28	SlashLife	It might do exactly the same thing you're doing, but you'd document your *intentions* in a clearer way.
2014-11-24 21:26:37	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 264 seconds)
2014-11-24 21:26:40	StableEvan	SlashLife: what do you mean?
2014-11-24 21:27:17	SlashLife	I mean: You have that pattern: "C = A; A = B; B = C;" which most people with some experience will recognize as a swapping pattern.
2014-11-24 21:27:48	SlashLife	Calling std::swap(A, B) instead would make your intention to swap A and B *completely* obvious, though.
2014-11-24 21:28:06	SlashLife	Even though it would probably result in exactly the same code after compilation.
2014-11-24 21:28:17	egoldsten	you can separate each part in a class or struct darkswordchris or use an "int version[3];"
2014-11-24 21:28:22	-->	j0z (~j0z@unaffiliated/j0z) has joined ##c++
2014-11-24 21:28:26	<--	K-ballo (~sonoio@181.228.126.42) has quit (Quit: Bye)
2014-11-24 21:28:30	-->	APerson_ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-24 21:28:32	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-24 21:28:51	darkswordchris	egoldsten: ok, thanks
2014-11-24 21:29:05	SlashLife	In your case: if (s[2] < s[1]) { std::swap(s[2], s[1]); } if (s[1] < s[0]) { std::swap(s[1], s[0]); }
2014-11-24 21:29:13	egoldsten	I have a "void swap(T& left,T& right);"
2014-11-24 21:29:38	StableEvan	SlashLife: ah, ok. Can you help me understand why the if test is never seen as true?
2014-11-24 21:30:03	-->	shahanm (~shahanm@180.234.216.200) has joined ##c++
2014-11-24 21:30:07	aschmack	what is the type of name
2014-11-24 21:30:09	SlashLife	I'm not sure whether you're aware of the case that s[0] is the largest element of these three and whether you've checked that what you're doing is exactly what you are intending to do in that case ...
2014-11-24 21:30:41	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-24 21:30:41	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 240 seconds)
2014-11-24 21:30:43	SlashLife	StableEvan: Mhh ... comparing pointers using "less than" is a strange beast.
2014-11-24 21:30:47	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-24 21:31:00	StableEvan	What do you mean? Sorry,  I'm new at C++
2014-11-24 21:31:03	SlashLife	Basically you're only allowed to "less than" compare pointers to the same array (or to "one after").
2014-11-24 21:31:21	SlashLife	Everything else is, if I remember correctly, unspecified behaviour.
2014-11-24 21:31:31	SlashLife	Sorry, implementation defined behaviour.
2014-11-24 21:31:42	StableEvan	Ah, ok.
2014-11-24 21:31:42	SlashLife	Ok.
2014-11-24 21:31:44	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-24 21:31:46	<--	licnep (uid4387@gateway/web/irccloud.com/x-aqmgiirqjkisxvte) has quit (Quit: Connection closed for inactivity)
2014-11-24 21:31:48	Oxyd	I think it's unspecified actually.
2014-11-24 21:31:53	SlashLife	Let
2014-11-24 21:31:58	Oxyd	But you can std::less any pair of pointers and it'll work fine.
2014-11-24 21:32:00	StableEvan	So what would be the best way to check with the overloaded operator
2014-11-24 21:32:25	SlashLife	You're allowed to take a=&arr[14] and b=&arr[22] and compare them as a<b.
2014-11-24 21:32:30	SlashLife	And a<b will be true.
2014-11-24 21:33:01	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 240 seconds)
2014-11-24 21:33:23	SlashLife	However, if you take arr[25] and brr[25], and take a=&arr[14] and b=&brr[22], you are not allowed to compare a and b.
2014-11-24 21:33:24	Oxyd	What you really seem to want is to compare what the pointers point to, not the pointers themselves, though.
2014-11-24 21:33:37	SlashLife	In the best case the result will be implementation defined.
2014-11-24 21:33:45	SlashLife	In the worst case it will be unspecified.
2014-11-24 21:34:00	SlashLife	Because a and b are pointing to different arrays.
2014-11-24 21:34:05	-->	bb010g (uid21050@gateway/web/irccloud.com/x-wflegfdcrjeuiivs) has joined ##c++
2014-11-24 21:34:20	StableEvan	I can post my whole relevant code if it would explain it a bit more
2014-11-24 21:34:31	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-24 21:34:36	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 21:34:37	SlashLife	Curiously: std::less is guaranteed to give you an implementation defined, but deterministic, result for them.
2014-11-24 21:34:58	SlashLife	std::less can order pointers beyond their less-than comparability.
2014-11-24 21:35:09	SlashLife	s/order/sort/
2014-11-24 21:35:12	Meness	whoops
2014-11-24 21:35:14	Meness	SlashLife,
2014-11-24 21:35:29	Meness	my previous message was meant for you but I directed it to StableEvan
2014-11-24 21:35:42	SlashLife	Meness: You mean the "whoops"? :P
2014-11-24 21:36:10	<--	z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has quit
2014-11-24 21:36:13	SlashLife	Meness: The moment you delete the data, it is gone.
2014-11-24 21:36:16	StableEvan	http://ideone.com/W32gZC
2014-11-24 21:36:26	StableEvan	Full code for relevan classes
2014-11-24 21:36:35	SlashLife	Meness: YOUR problem is: You HAVE to delete the data at some point, otherwise it will continue wasting your memory.
2014-11-24 21:36:49	Oxyd	StableEvan: Once again: Why are you trying to compare pointers instead of the pointed-to objects?
2014-11-24 21:37:04	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 21:37:22	StableEvan	I'm not sure :(
2014-11-24 21:37:30	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-24 21:37:43	SlashLife	Modern OSes are capable of tidying up your bound memory when you exit your process - but they aren't guaranteed to do that (actually in some fluke situataion they're unable to do so) ... and even of they were, leavin unused data n memory is a very bad habit.
2014-11-24 21:38:08	SlashLife	StableEvan: The easiest thing you could do would be to simply copy the data you need between instances.
2014-11-24 21:38:37	SlashLife	StableEvan: And that's actually what you *should* do until you get a good reason *not* to do so.
2014-11-24 21:39:01	aschmack	StableEvan, do you mean to order them alphabetically?
2014-11-24 21:39:03	egoldsten	a pointer is like an address of someone, the number in the street
2014-11-24 21:39:10	StableEvan	aschmack: correct
2014-11-24 21:39:23	SlashLife	StableEvan: Wait, sorry. The last mesasges were directed to Meness. >_<
2014-11-24 21:39:29	StableEvan	lol
2014-11-24 21:39:33	SlashLife	Meness: The easiest thing you could do would be to simply copy the data you need between instances.
2014-11-24 21:39:34	StableEvan	haha
2014-11-24 21:39:39	SlashLife	Meness: And that's actually what you *should* do until you get a good reason *not* to do so.
2014-11-24 21:39:45	SlashLife	Sorry; I'm drunk.
2014-11-24 21:39:46	SlashLife	x)
2014-11-24 21:39:56	aschmack	StableEvan, there are string comparison/modification functions for char strings provided in string.h
2014-11-24 21:40:06	aschmack	s/string.h/cstring
2014-11-24 21:40:16	SlashLife	aschmack: This is ##c++... good. You noticed. :D
2014-11-24 21:40:21	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-24 21:41:02	<--	cyberik (~cyberik@145-118-119-112.fttx.bbned.nl) has quit (Ping timeout: 272 seconds)
2014-11-24 21:41:12	aschmack	in fact, you use the function in your main, to check the media type :p
2014-11-24 21:41:33	aschmack	though it is case insensitive
2014-11-24 21:42:50	<--	a_le (~a_le@157.sub-70-197-16.myvzw.com) has quit (Remote host closed the connection)
2014-11-24 21:44:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 21:45:23	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-24 21:45:43	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-24 21:46:05	<--	hypera1r (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 240 seconds)
2014-11-24 21:46:31	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 21:46:37	<--	fluve (~fluve@203-217-68-46.dyn.iinet.net.au) has quit
2014-11-24 21:47:06	StableEvan	hmm
2014-11-24 21:47:47	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-11-24 21:47:50	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-24 21:48:08	Meness	SlashLife, this is how I'm copying right now Grid grid(*tempGrid);
2014-11-24 21:48:11	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 21:48:27	Meness	my test code runs through some numbers and then crashes
2014-11-24 21:48:42	SlashLife	Meness: Wait - where are you copying that?
2014-11-24 21:49:02	Meness	At the end of the static create
2014-11-24 21:49:08	-->	SiGe_ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has joined ##c++
2014-11-24 21:49:38	Meness	before returning
2014-11-24 21:49:41	SlashLife	Ok ... so it's not in any code you pasted?
2014-11-24 21:49:52	Meness	no sorry
2014-11-24 21:50:00	SlashLife	Ah, ok.
2014-11-24 21:50:03	SlashLife	So ...
2014-11-24 21:50:05	Meness	i just added two lines above the return
2014-11-24 21:50:12	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Client Quit)
2014-11-24 21:50:12	SlashLife	... that *tempGrid is too much already.
2014-11-24 21:50:40	Meness	too much?
2014-11-24 21:50:55	Meness	sorry if i'm responding dumbly
2014-11-24 21:51:02	Meness	i'm way too tired at this point
2014-11-24 21:51:05	SlashLife	Unless you can prove this to be a bottleneck, you should have *real* vectors in your function - instead of pointers to vectors.
2014-11-24 21:51:14	Meness	i've given up submitting this and just want to understand how it works lol
2014-11-24 21:51:25	SlashLife	And you should pass these vectors by const-ref to your constructor.
2014-11-24 21:51:41	SlashLife	And your object should contain real vectors, not pointers to vectors.
2014-11-24 21:51:58	-->	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-11-24 21:52:03	Meness	so basically
2014-11-24 21:52:08	SlashLife	And it should copy the vectors given to the constructor into its members.
2014-11-24 21:52:10	Meness	don't make tempGrid a pointer?
2014-11-24 21:52:14	SlashLife	Exactly.
2014-11-24 21:52:30	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-24 21:52:39	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-24 21:52:55	SlashLife	Until you find your whole program to be too slow **AND** you can prove that copying the vector is the exact cause for being too slow ...
2014-11-24 21:53:03	<--	SiGe___ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Ping timeout: 272 seconds)
2014-11-24 21:53:10	SlashLife	... just merrily copy it around.
2014-11-24 21:54:03	SlashLife	And to be honest: As you're saying you're new to C++ ... just copy it around anyway.
2014-11-24 21:56:46	<--	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has quit (Remote host closed the connection)
2014-11-24 21:56:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 21:57:00	Meness	getting segmentation faults
2014-11-24 21:57:22	SlashLife	That's a good indication that you're still messing around with "new"s in your code.
2014-11-24 21:58:18	<--	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has quit (Quit: Page closed)
2014-11-24 21:58:27	-->	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has joined ##c++
2014-11-24 21:59:12	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 244 seconds)
2014-11-24 22:00:06	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 22:00:07	<--	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-24 22:00:07	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 22:00:23	-->	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has joined ##c++
2014-11-24 22:00:52	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-24 22:01:15	-->	pullphinger (~Pullxinge@73.44.212.38) has joined ##c++
2014-11-24 22:01:25	<--	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has quit (Remote host closed the connection)
2014-11-24 22:01:33	Meness	new cpp file http://pastebin.com/2DzcQzDG
2014-11-24 22:01:44	-->	aschmack (~quassel@cpe-74-69-53-26.rochester.res.rr.com) has joined ##c++
2014-11-24 22:02:28	Meness	DevicePtr is defined as typedef std::shared_ptr<ElectricDevice> DevicePtr;
2014-11-24 22:03:04	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 22:03:09	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-24 22:04:06	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-24 22:04:16	<--	egoldsten (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141113113219])
2014-11-24 22:04:58	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-24 22:05:40	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined ##c++
2014-11-24 22:05:43	SlashLife	Meness: In that case you should rather use emplace_back.
2014-11-24 22:06:09	fengshaun	should I use std::ifstream if I want to read from a fifo/named pipe?
2014-11-24 22:06:11	-->	Lobster` (~Lobster@S010620aa4b89619f.ok.shawcable.net) has joined ##c++
2014-11-24 22:06:56	SlashLife	fengshaun: If it fits your needs: Sure.
2014-11-24 22:07:36	SlashLife	If the fopen/fread/fwrite/fclose interface leads to simpler code; choose that instead.
2014-11-24 22:07:54	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-24 22:08:03	SlashLife	(Wrap it into some RAII object to automagically close the file handle when unrolling the stack.)
2014-11-24 22:08:04	Meness	SlashLife, use it where?
2014-11-24 22:08:19	SlashLife	Meness: Instead of push_back.
2014-11-24 22:08:54	fengshaun	SlashLife: thanks!
2014-11-24 22:08:58	SlashLife	Anyway; I think I'll go to bed.
2014-11-24 22:09:35	Meness	Yeah
2014-11-24 22:09:41	Meness	Thanks a lot for trying to help
2014-11-24 22:09:45	Meness	I can't get it working
2014-11-24 22:09:55	Meness	I am getting upset from working so long and getting no results
2014-11-24 22:10:08	Meness	But I am honestly thankful that you were here to explain somethings
2014-11-24 22:10:22	Meness	Goodnight
2014-11-24 22:10:32	SlashLife	Meness: In my opinion you're using too many pointers.
2014-11-24 22:10:48	SlashLife	Try to get away from them unless you find out that you need them.
2014-11-24 22:11:22	SlashLife	shared_ptr is a great thing - except you usually don't need shared ownership.
2014-11-24 22:11:39	-->	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-24 22:11:54	SlashLife	In most cases you will have ONE entity which will live for longer than any use of another entity.
2014-11-24 22:12:08	Meness	Ah I see. Can't do much about that though, that's something that the professor defined and asked us to use.
2014-11-24 22:12:12	SlashLife	And that's the entity that can take ownership of the other entities.
2014-11-24 22:12:24	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-24 22:12:27	SlashLife	ok, I can't argue with that.
2014-11-24 22:12:38	Meness	yeah
2014-11-24 22:12:47	Meness	I've been doing well on all the previous assignments
2014-11-24 22:12:55	Meness	perfect on all of em except the first
2014-11-24 22:12:57	-->	Life-Blood (~unixunite@74.194.165.220) has joined ##c++
2014-11-24 22:13:01	SlashLife	Actually I can and I did. But I can't decide for you to go and argue with your professor about the boundaries of your scenario.
2014-11-24 22:13:13	Meness	and then this one came along
2014-11-24 22:13:15	Meness	optional
2014-11-24 22:13:19	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 265 seconds)
2014-11-24 22:13:27	Meness	but I don't like to not do programming assignments
2014-11-24 22:13:31	Meness	I like programming a lot
2014-11-24 22:13:35	Meness	but uhh
2014-11-24 22:13:38	Meness	this is hurting my head
2014-11-24 22:13:45	SlashLife	That's a good start - if you want to be a programmer. :)
2014-11-24 22:13:46	Meness	maybe I shouldn't have worked 6 hours straight
2014-11-24 22:13:58	Meness	In any case
2014-11-24 22:14:02	SlashLife	Anyway - off to bed.
2014-11-24 22:14:03	Meness	thanks a lot for your patient help
2014-11-24 22:14:06	SlashLife	Good luck to you.
2014-11-24 22:14:10	Meness	Good night!
2014-11-24 22:14:18	SlashLife	Not really.
2014-11-24 22:14:21	SlashLife	It's 4:30 am.
2014-11-24 22:14:25	SlashLife	Night is almost over. x)
2014-11-24 22:14:36	Meness	haha good dawn then
2014-11-24 22:14:48	SlashLife	Good dawn to you, too! :D
2014-11-24 22:15:10	<--	Meness (~Meness@n023h149.pguest.mun.ca) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <-)
2014-11-24 22:15:45	<--	nda__ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 255 seconds)
2014-11-24 22:16:48	<--	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has quit (Read error: Connection reset by peer)
2014-11-24 22:18:06	-->	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-24 22:18:18	<--	det (~chris@unaffiliated/det) has quit (Read error: Connection reset by peer)
2014-11-24 22:18:49	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-24 22:19:02	-->	Xitano (~contato@r73-pw-jundiai.ibys.com.br) has joined ##c++
2014-11-24 22:19:42	<--	SiGe_ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has quit (Remote host closed the connection)
2014-11-24 22:20:09	-->	SiGe_ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has joined ##c++
2014-11-24 22:24:19	<--	SiGe_ (~SiGe@guest-wireless-nup-nat-206-117-89-004.usc.edu) has quit (Ping timeout: 245 seconds)
2014-11-24 22:24:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 22:24:42	<--	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has quit (Quit: WeeChat 1.0.1)
2014-11-24 22:27:13	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-24 22:27:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 22:27:57	<--	kaleid0 (~kaleid0@2600:1014:b018:9080:c345:a48e:e12d:287) has quit (Quit: Leaving)
2014-11-24 22:28:35	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-24 22:30:38	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-24 22:33:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 22:35:07	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-24 22:35:16	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-24 22:35:57	-->	notpara (~para@213.187.75.26) has joined ##c++
2014-11-24 22:36:03	-->	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-24 22:36:56	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 22:37:16	marvimias	So I'm writing a function, that reads out a file, and writes the contents in another. http://pastebin.com/BQZz6gXA how should I continue? I want to take all lines from X. put all lines into Y. x old test file. y new text file
2014-11-24 22:37:22	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-24 22:37:25	marvimias	I explicitly need to use <<
2014-11-24 22:37:54	marvimias	Anyone have any idea?
2014-11-24 22:40:58	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 22:41:47	<--	kurahaupo (~kurahaupo@118.148.175.37) has quit (Ping timeout: 255 seconds)
2014-11-24 22:42:25	-->	licnep (uid4387@gateway/web/irccloud.com/x-hmtycgolpgaohezp) has joined ##c++
2014-11-24 22:44:14	-->	SiN_Bizkit (~SiN_Bizki@host-94-251-111-51.bbcustomer.zsttk.net) has joined ##c++
2014-11-24 22:44:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 22:44:21	<--	darkarcher (~archer@137.63.72.22) has quit (Read error: Connection reset by peer)
2014-11-24 22:45:06	<--	f00dMonsta_ (~f00dMonst@198.58.138.101) has quit (Quit: Leaving)
2014-11-24 22:45:32	Oxyd	file_out << file.rdbuf();
2014-11-24 22:46:25	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-24 22:46:34	-->	darkarcher (~archer@137.63.72.22) has joined ##c++
2014-11-24 22:46:43	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-24 22:46:48	-->	kapil_ (uid36151@gateway/web/irccloud.com/x-btactvustsnbkubu) has joined ##c++
2014-11-24 22:49:48	<--	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-24 22:49:56	-->	basic6 (~basic6@p3E9EE1DC.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 22:50:55	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-24 22:51:01	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Ping timeout: 264 seconds)
2014-11-24 22:52:55	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-24 22:54:20	<--	basic6_ (~basic6@p4FCB7FBE.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-24 22:54:45	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Remote host closed the connection)
2014-11-24 22:55:11	-->	moonchild (~loon@73.13.118.191) has joined ##c++
2014-11-24 22:56:54	-->	Affliction (affliction@argon.rfc1337.net) has joined ##c++
2014-11-24 22:58:07	<--	Affliction` (affliction@2600:3c01::13:ffff) has quit (Ping timeout: 272 seconds)
2014-11-24 22:58:09	<--	Lilian (~Lilian@gateway/tor-sasl/lilian) has quit (Ping timeout: 250 seconds)
2014-11-24 22:59:49	-->	Lilian (~Lilian@gateway/tor-sasl/lilian) has joined ##c++
2014-11-24 23:02:04	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 23:02:31	marvimias	Oxyd, WOuld that work?
2014-11-24 23:05:20	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 23:05:44	Oxyd	Yes.
2014-11-24 23:09:15	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-24 23:10:10	immibis	is there a common pattern that allows for defining "things" (perhaps object types in a game) in different source files, and then being able to iterate over them from one place, without having a single initialization function that has to be updated whenever a new thing is added to the program?
2014-11-24 23:10:34	moonchild	yes
2014-11-24 23:10:35	Cecen	I think you're looking for a component system
2014-11-24 23:11:23	Clinteger	hi guys
2014-11-24 23:11:31	moonchild	what you want is a class that, in its constructor does something like a push_back() onto a global storage object
2014-11-24 23:11:42	pEYEd	I am running into a little issue with my algorithm.  line 31 is my issue  https://bpaste.net/show/776e0b3a3c63
2014-11-24 23:11:45	Cecen	Everything is an Object and it contains components (i.e. RenderComponent, PositionComponent, HealthComponent) that define it's behavior
2014-11-24 23:11:46	moonchild	then you declare globals of that class type
2014-11-24 23:11:51	Clinteger	i'm wondering in which situations it's likely/possible that std::istream::unget() fails
2014-11-24 23:11:55	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-24 23:12:00	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-24 23:12:08	moonchild	cppunit and several other unit test frameworks use that patter
2014-11-24 23:12:10	moonchild	+n
2014-11-24 23:12:23	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-24 23:12:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-24 23:12:56	immibis	Cecen: i don't think so
2014-11-24 23:13:01	moonchild	Clinteger: it can really fail any time you use it
2014-11-24 23:13:16	Clinteger	because i'm trying to read an integer, then a string, and it's possible I want to capture just the input "+" (which will set failbit on an istream when reading an int), so I first have to "back up" so I can re-read this + into the string
2014-11-24 23:13:30	moonchild	but more specifically, when you're istream is bound to a socket or a pipe
2014-11-24 23:13:56	moonchild	...which you can't guard against
2014-11-24 23:14:29	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-24 23:14:46	moonchild	the moral of the story is that if you need to backtrack in input, manage the buffers yourself
2014-11-24 23:14:49	Clinteger	well i am reading from cin specifically moonchild
2014-11-24 23:14:57	immibis	what i mean is something like (using functions as the "things") http://pastebin.com/W1MdX7FL instead of http://pastebin.com/83KLcTwH
2014-11-24 23:14:59	-->	zebra5000 (~zebra@120.29.5.222) has joined ##c++
2014-11-24 23:15:30	moonchild	curl http://somewebsite | myapp # oops, stdin is a pipe
2014-11-24 23:16:40	immibis	moonchild: are global constructors the preferred solution?
2014-11-24 23:17:07	moonchild	immibis: that's sorta the only sane pattern i've come across for doing what you want
2014-11-24 23:17:11	Clinteger	moonchild well I don't really know a better way to read an int from cin without using something like a stringstream to then later parse it to an int
2014-11-24 23:17:37	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-24 23:18:22	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-11-24 23:18:25	--	tobleronegordon is now known as toblergordon[a]
2014-11-24 23:18:35	moonchild	perhaps someone else can give you better advice, but i consider using istreams for input to be a bug, with the exception of getline(istream&, string&)
2014-11-24 23:19:02	immibis	moonchild: there actually is another way that requires a linker script, which is hardly portable. you can put all the registration data together in memory, with known variables before and after it, and use some implementation-defined pointer arithmetic
2014-11-24 23:19:07	immibis	and imo that's slightly cleaner, but completely non-portable
2014-11-24 23:19:16	moonchild	(using istreams for output is also a bug, but i don't think you'd get very far) :P
2014-11-24 23:19:45	Clinteger	haha
2014-11-24 23:19:55	<--	zebra5000 (~zebra@120.29.5.222) has quit (Remote host closed the connection)
2014-11-24 23:20:31	moonchild	immibis: i prefer the approach that cppunit and friends take, it tends to be pretty clean, and cppunit, at least, buries it in a few macros
2014-11-24 23:20:49	<--	schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-24 23:21:24	<--	APerson_ (~quassel@wikipedia/APerson) has quit (Read error: Connection reset by peer)
2014-11-24 23:21:33	Clinteger	anyway moonchild this is the context of a school project, and i'm just trying to figure out if the way i'm doing it is robust enough. so far, it has happened to work every time, so I think I'll keep it until I think of a better way :)
2014-11-24 23:21:36	Clinteger	thanks though !
2014-11-24 23:22:23	-->	F404 (~francisco@189-70-174-78.user.veloxzone.com.br) has joined ##c++
2014-11-24 23:22:25	moonchild	Clinteger: the robust way is to suck in a line at a time, using getline() and parse it
2014-11-24 23:22:42	-->	APerson_ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-24 23:23:05	<--	StableEvan (~Thunderbi@dsl-64-246-157-30.bbr0.cxscny.statetel.com) has left ##c++
2014-11-24 23:23:20	<--	Forbidden404 (~francisco@189-70-170-77.user.veloxzone.com.br) has quit (Ping timeout: 264 seconds)
2014-11-24 23:24:00	moonchild	either that or build a state machine to tokenize your input
2014-11-24 23:24:27	Clinteger	out of the scope of this project ;-)
2014-11-24 23:24:29	moonchild	the former is probably quicker for small input grammars
2014-11-24 23:24:49	 *	moonchild sighs
2014-11-24 23:25:11	moonchild	programming classes need to stop allowing istreams to be used for input
2014-11-24 23:25:31	Clinteger	oh they don't allow it, they encourage it :)
2014-11-24 23:25:40	moonchild	yeah
2014-11-24 23:25:50	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-24 23:26:29	moonchild	i'm not a fan :)
2014-11-24 23:27:51	moonchild	my experience is that college profs do a bigger disservice to c++ than any other group of people, besides maybe the qt guys
2014-11-24 23:28:27	<--	tz (~tz@zero.tzarc.ninja) has quit (Ping timeout: 272 seconds)
2014-11-24 23:28:35	-->	tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-11-24 23:29:36	<--	Cl-Martin (uid36038@gateway/web/irccloud.com/x-paxtrhclwpniycsp) has quit (Quit: Connection closed for inactivity)
2014-11-24 23:29:48	<--	nivyaj (uid41702@gateway/web/irccloud.com/x-aegxseupexazpilr) has quit (Quit: Connection closed for inactivity)
2014-11-24 23:30:03	jeaye	moonchild: I'm coming in late. What're you saying is better than istreams?
2014-11-24 23:30:19	jeaye	For, say, deserializing a UDT.
2014-11-24 23:31:20	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-24 23:31:44	moonchild	oh, i was more ranting about programming classes specifying the use of istreams for user input
2014-11-24 23:32:09	jeaye	Right. As opposed to?
2014-11-24 23:32:20	moonchild	but my basic suggestion for doing so was to use getline to grab lines then parse the lines
2014-11-24 23:32:40	moonchild	that way you can do *some* validation and give meaningful errors
2014-11-24 23:32:59	jeaye	So, you're not saying that streams are bad for generic deserialization.
2014-11-24 23:33:22	moonchild	it depends on the scope of the project, for sure
2014-11-24 23:34:21	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-24 23:34:27	jeaye	Given, say, a generic function: template <typename T> enable_if_t<is_deserializable<T>(), T> read(istream &is){ T t; is >> t; return t; }
2014-11-24 23:34:42	moonchild	what i really object to with using them for input is it is very difficult to deal with error conditions and kick meaningful errors back to  the user
2014-11-24 23:35:27	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: WeeChat 1.0.1)
2014-11-24 23:35:52	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-24 23:35:57	moonchild	that's *very* different, in that you're calling a single extraction operator on the stream, and you can test the failure situation before and after the call
2014-11-24 23:36:05	<--	toblergordon[a] (~vegetaria@unaffiliated/ninegordon) has quit (Quit: ZzZzZzzz)
2014-11-24 23:36:14	moonchild	(i actually have such a function in my util library)
2014-11-24 23:36:31	jeaye	moonchild: mmk. Just making sure we're on the same page.
2014-11-24 23:36:47	jeaye	'cause shit like that is very convenient.
2014-11-24 23:37:11	moonchild	yeah, but its also wrong to use for user input
2014-11-24 23:37:19	<--	pingupingu (~pinguping@unaffiliated/pingupingu) has quit (Ping timeout: 240 seconds)
2014-11-24 23:37:26	jeaye	Admittedly, and I don't yet know if it's good, I've been using regex more and more for handling inputs.
2014-11-24 23:37:35	-->	Kulrak (kulrak@C-59-101-147-151.mel.connect.net.au) has joined ##c++
2014-11-24 23:37:35	<--	Kulrak (kulrak@C-59-101-147-151.mel.connect.net.au) has quit (Changing host)
2014-11-24 23:37:36	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-24 23:37:39	<--	sohail (~user@184.175.8.252) has quit (Ping timeout: 244 seconds)
2014-11-24 23:37:44	moonchild	i think you'll agree that you *need* to guard against bad input
2014-11-24 23:38:02	jeaye	Yes, this isn't C.
2014-11-24 23:38:18	moonchild	even in c you need to
2014-11-24 23:38:37	moonchild	c'mon, they deleted gets() !
2014-11-24 23:38:39	jeaye	char buf[BUF_SIZE] herpderp(buf, somethingdangerous);
2014-11-24 23:38:43	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-24 23:38:58	jeaye	A semicolon in there somewhere.
2014-11-24 23:39:33	<--	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has quit (Ping timeout: 245 seconds)
2014-11-24 23:39:49	jeaye	"Oh, we're getting overflow errors with input?" #define BUF_SIZE2 BUF_SIZE * 2
2014-11-24 23:39:57	jeaye	char buf[BU_SIZE2];
2014-11-24 23:40:28	moonchild	better yet:
2014-11-24 23:40:44	-->	Forbidden404 (~francisco@189-70-164-18.user.veloxzone.com.br) has joined ##c++
2014-11-24 23:40:55	moonchild	char buf[sz]; char pad[sz]; // guard against overflow!
2014-11-24 23:41:11	jeaye	haha
2014-11-24 23:41:18	<--	F404 (~francisco@189-70-174-78.user.veloxzone.com.br) has quit (Ping timeout: 264 seconds)
2014-11-24 23:41:23	<--	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2014-11-24 23:41:30	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Read error: Connection reset by peer)
2014-11-24 23:41:37	moonchild	see my l337 h4x0r pwnage!
2014-11-24 23:41:43	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-24 23:41:57	jeaye	!grab moonchild
2014-11-24 23:41:58	nolyc	By your command.
2014-11-24 23:42:27	moonchild	every time i see shit like that, it sends me into a rage
2014-11-24 23:42:38	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Max SendQ exceeded)
2014-11-24 23:42:49	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-24 23:43:14	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-24 23:43:15	moonchild	or there's the more subtle variation: buf[sz + 1];
2014-11-24 23:43:29	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Ping timeout: 265 seconds)
2014-11-24 23:43:40	jeaye	for the null terminator!
2014-11-24 23:43:42	<--	PotatoGim (~PotatoGim@220.90.135.162) has left ##c++
2014-11-24 23:43:42	moonchild	which *can* be valid
2014-11-24 23:43:50	moonchild	...for the null terminator
2014-11-24 23:44:01	jeaye	:)
2014-11-24 23:44:09	<--	proteusguy (~proteusgu@ppp-110-168-229-22.revip5.asianet.co.th) has quit (Remote host closed the connection)
2014-11-24 23:44:12	moonchild	but it always makes me look at code suspiciously
2014-11-24 23:44:44	jeaye	Agreed. It generally means goblins are near.
2014-11-24 23:45:35	moonchild	there've been a few times that i've been like: 'alright, you really don't care what the size of your buffer was so you just punted'
2014-11-24 23:45:47	jeaye	Eh, 512 should be good.
2014-11-24 23:46:03	moonchild	that's usually when i just rewrite rather than reasoning it out
2014-11-24 23:46:06	marchelzo_	moonchild: does that actually work? the second array to catch overflow?
2014-11-24 23:46:24	moonchild	i'll let jeaye answer :)
2014-11-24 23:46:31	-->	CaffeineShot (~cafeina@189.110.76.111) has joined ##c++
2014-11-24 23:46:48	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-24 23:46:53	jeaye	Depends what the overflow is trying to do.
2014-11-24 23:47:13	marchelzo_	I mean I know it's disgusting and a bad idea, but is the second array even guaranteed to be directly after the first one in memory?
2014-11-24 23:47:15	moonchild	sometimes overflow grows in the opposite direction
2014-11-24 23:47:15	jeaye	The extra padding can be _bad_, since it can leave space for some nasty code to be put in.
2014-11-24 23:47:21	<--	CaffeineShot (~cafeina@189.110.76.111) has quit (Client Quit)
2014-11-24 23:47:29	-->	CaffeineShot (~cafeina@189.110.76.111) has joined ##c++
2014-11-24 23:47:37	<--	CaffeineShot (~cafeina@189.110.76.111) has quit (Read error: Connection reset by peer)
2014-11-24 23:47:48	jeaye	It's a silly solution all around.
2014-11-24 23:47:55	-->	CaffeineShot (~cafeina@189.110.76.111) has joined ##c++
2014-11-24 23:47:57	marchelzo_	Of course
2014-11-24 23:48:03	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-24 23:48:13	-->	basic6_ (~basic6@p4FCB6296.dip0.t-ipconnect.de) has joined ##c++
2014-11-24 23:48:16	moonchild	if you're doing some hardcore defensive programming, you pad the begin and end of the array w/ sentinel values & assert like hell that they're what you set them to
2014-11-24 23:48:29	<--	CaffeineShot (~cafeina@189.110.76.111) has quit (Client Quit)
2014-11-24 23:48:42	-->	CaffeineShot (~cafeina@189.110.76.111) has joined ##c++
2014-11-24 23:48:51	Cecen	We have application verifier for that
2014-11-24 23:48:53	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-24 23:49:02	moonchild	yeah, its called valgrind
2014-11-24 23:49:38	marchelzo_	"I'm doing something wrong here, but let's just hope that doubling the buffer size will make all the problems go away and ignore it." I can't imagine having that thought process while writing code like that.
2014-11-24 23:49:50	moonchild	...and alternatively the code sanatizers in gcc & clang
2014-11-24 23:50:26	moonchild	marchelzo_: i can name people that i work with that think *exactly* that way
2014-11-24 23:50:51	-->	z8z (~x@103.5.142.48) has joined ##c++
2014-11-24 23:51:03	<--	basic6 (~basic6@p3E9EE1DC.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-24 23:51:29	moonchild	apparently they never grew beyond the 4am hack for the school assignment :)
2014-11-24 23:51:52	<--	z8z (~x@103.5.142.48) has quit (Read error: Connection reset by peer)
2014-11-24 23:52:01	--	Anoniem4l is now known as Anoniem4l`afk
2014-11-24 23:52:30	-->	cafeina__ (~CafeinaSP@189.110.76.111) has joined ##c++
2014-11-24 23:52:40	<--	CaffeineShot (~cafeina@189.110.76.111) has quit (Client Quit)
2014-11-24 23:52:44	-->	z8z (~x@103.5.142.48) has joined ##c++
2014-11-24 23:52:44	moonchild	show of hands... how many people periodically run their code through something like valgrind or purify, fixing issues as they find them?
2014-11-24 23:52:48	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-24 23:52:51	<--	cafeina__ (~CafeinaSP@189.110.76.111) has quit (Read error: Connection reset by peer)
2014-11-24 23:52:59	-->	CaffeineShot (~CafeinaSP@189.110.76.111) has joined ##c++
2014-11-24 23:53:37	-->	Rafaelfsilva (~Rafaelfsi@201.162.68.6) has joined ##c++
2014-11-24 23:54:14	 *	immibis lowers hand
2014-11-24 23:54:15	<--	CaffeineShot (~CafeinaSP@189.110.76.111) has quit (Client Quit)
2014-11-24 23:54:22	-->	CaffeineShot (~CafeinaSP@189.110.76.111) has joined ##c++
2014-11-24 23:54:42	-->	Katie22 (Katie22@71-211-132-139.hlrn.qwest.net) has joined ##c++
2014-11-24 23:54:44	immibis	it's one of those things that seems like a good idea, but you would never remember to actually do
2014-11-24 23:54:51	<--	z8z (~x@103.5.142.48) has quit (Read error: Connection reset by peer)
2014-11-24 23:54:58	immibis	app verifier too, on windows
2014-11-24 23:55:29	moonchild	i'll do it when i'm nearing completion on features in code that i can verify that way
2014-11-24 23:55:50	-->	z8z (~x@103.5.142.48) has joined ##c++
2014-11-24 23:55:55	moonchild	its really hard to do and not get lost in the weeds with for large codebases
2014-11-24 23:56:10	<--	ludkiller (lud@gateway/shell/elitebnc/x-ktncqrbhdjzcntya) has quit (Excess Flood)
2014-11-24 23:56:19	<--	CaffeineShot (~CafeinaSP@189.110.76.111) has quit (Client Quit)
2014-11-24 23:56:20	moonchild	esp if it wasn't written by people following that practice
2014-11-24 23:56:55	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-24 23:57:07	-->	ludkille- (lud@gateway/shell/elitebnc/x-fjuyddcxibkyretg) has joined ##c++
2014-11-24 23:57:52	<--	z8z (~x@103.5.142.48) has quit (Read error: Connection reset by peer)
2014-11-24 23:58:34	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-24 23:58:39	<--	MINIMAN10000 (~MINIMAN10@73.19.114.42) has quit (Ping timeout: 264 seconds)
2014-11-24 23:59:08	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-24 23:59:28	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-24 23:59:50	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 00:00:15	<--	Life-Blood (~unixunite@74.194.165.220) has quit (Ping timeout: 256 seconds)
2014-11-25 00:00:32	-->	King_Hual` (~Hual@94.26.28.68) has joined ##c++
2014-11-25 00:00:35	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-25 00:00:49	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 256 seconds)
2014-11-25 00:02:31	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-25 00:03:32	-->	F404 (~francisco@189-70-128-36.user.veloxzone.com.br) has joined ##c++
2014-11-25 00:03:39	-->	proteusguy (~proteusgu@180.183.139.197) has joined ##c++
2014-11-25 00:03:52	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 264 seconds)
2014-11-25 00:05:17	<--	Forbidden404 (~francisco@189-70-164-18.user.veloxzone.com.br) has quit (Ping timeout: 255 seconds)
2014-11-25 00:06:36	<--	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-25 00:06:37	-->	zebra5000 (~zebra@120.29.5.222) has joined ##c++
2014-11-25 00:06:58	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-25 00:07:36	<--	King_Hual` (~Hual@94.26.28.68) has quit (Ping timeout: 255 seconds)
2014-11-25 00:07:58	-->	seishun (~Kakera@87.110.133.214) has joined ##c++
2014-11-25 00:09:09	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit (Quit: My iMac has gone to sleep. ZZZzzz?)
2014-11-25 00:09:12	<--	zebra5000 (~zebra@120.29.5.222) has quit (Remote host closed the connection)
2014-11-25 00:09:44	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 00:10:45	-->	huseyinkozan (~huseyinko@88.229.225.11) has joined ##c++
2014-11-25 00:10:45	<--	huseyinkozan (~huseyinko@88.229.225.11) has quit (Changing host)
2014-11-25 00:10:45	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-25 00:11:08	-->	JoshSyn (~swoorup@d122-109-112-119.per801.wa.optusnet.com.au) has joined ##c++
2014-11-25 00:12:39	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2014-11-25 00:13:09	-->	ridicola (~ridicola@71.196.164.23) has joined ##c++
2014-11-25 00:15:03	o11c	moonchild: periodically?
2014-11-25 00:15:16	o11c	does that include 'every time I run it?'
2014-11-25 00:15:17	<--	Rafaelfsilva (~Rafaelfsi@201.162.68.6) has quit (Ping timeout: 240 seconds)
2014-11-25 00:15:30	moonchild	yeah
2014-11-25 00:15:38	o11c	now that asan is a thing, I just leave it on
2014-11-25 00:15:57	o11c	and travis uses valgrind (since it tests older compilers)
2014-11-25 00:16:06	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: Leaving)
2014-11-25 00:16:09	moonchild	i've not played with asan much
2014-11-25 00:16:13	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-25 00:16:21	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Quit: ???????)
2014-11-25 00:16:28	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 00:17:13	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 256 seconds)
2014-11-25 00:18:42	<--	seizo (~seizo@107-207-47-8.lightspeed.okcbok.sbcglobal.net) has quit
2014-11-25 00:19:02	-->	matt90 (~matt90@149-169-138-60.nat.asu.edu) has joined ##c++
2014-11-25 00:19:55	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2014-11-25 00:19:58	<--	matt90 (~matt90@149-169-138-60.nat.asu.edu) has quit (Client Quit)
2014-11-25 00:20:22	-->	BlaXpirit (~blaxpirit@130-57-132-95.pool.ukrtel.net) has joined ##c++
2014-11-25 00:23:14	o11c	it's like valgrind but more accurate and 10x faster
2014-11-25 00:23:21	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-25 00:23:31	o11c	the disadvantage is that all errors are fatal, so long cycle times if there are multiple errors
2014-11-25 00:23:34	moonchild	o11c: just the clang impl or gcc's as well?
2014-11-25 00:23:39	o11c	it's the same thing
2014-11-25 00:23:44	o11c	asan is a library
2014-11-25 00:23:57	o11c	clang and gcc just use the library
2014-11-25 00:24:22	moonchild	didn't realize that, i thought gcc's was an adaptation of clangs, but not the same
2014-11-25 00:24:36	<--	shahanm (~shahanm@180.234.216.200) has quit (Ping timeout: 240 seconds)
2014-11-25 00:24:45	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-25 00:26:01	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-11-25 00:26:05	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 00:27:29	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Quit: WeeChat 1.0)
2014-11-25 00:27:29	<--	Katie22 (Katie22@71-211-132-139.hlrn.qwest.net) has quit
2014-11-25 00:27:58	o11c	obviously the generated calls to the libs is different
2014-11-25 00:28:03	o11c	but all the runtime is the same
2014-11-25 00:28:33	 *	moonchild nods
2014-11-25 00:29:32	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-25 00:29:47	-->	stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-25 00:30:15	moonchild	grrr... 6TB hd's are still too expensive
2014-11-25 00:30:53	stryyker2	make the super magical compression work
2014-11-25 00:31:01	moonchild	hehe
2014-11-25 00:31:18	stryyker2	Call it TARDIS Zip
2014-11-25 00:32:06	moonchild	i'm right now compressing a raw dump of a partition off of my laptop... using xz for the 150 gb image, it says its going to take another 16 hrs!
2014-11-25 00:32:46	stryyker2	TARDIS Zip also solves the time issue. It is brilliant.
2014-11-25 00:33:10	moonchild	yeah, well
2014-11-25 00:33:11	o11c	gzip -1
2014-11-25 00:33:30	moonchild	xz blows gzip away on ratios
2014-11-25 00:34:23	<--	neunon (znc@unaffiliated/neunon) has quit (Quit: ZNC - http://znc.in)
2014-11-25 00:34:24	o11c	so?
2014-11-25 00:34:32	o11c	gzip blows everyone away on compression speed
2014-11-25 00:34:36	 *	moonchild shrugs
2014-11-25 00:34:57	moonchild	*cough* lzo *cough*
2014-11-25 00:35:32	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-25 00:35:58	moonchild	lzo is oft times faster than writing something raw
2014-11-25 00:36:03	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-25 00:36:33	-->	Bleakwise (~Bleakwise@2602:30a:c0d9:a259:9ded:e1f4:5da9:a16) has joined ##c++
2014-11-25 00:37:37	moonchild	oh, and btw, lzma2/xz decompresses faster than gzip
2014-11-25 00:37:58	mukunda_	a static const regex in a function should build only once shouldnt it?
2014-11-25 00:38:04	Obfuscate	... or lz4, if you're really in a hurry.
2014-11-25 00:38:39	moonchild	or memory constrained
2014-11-25 00:38:44	moonchild	xz is a hog
2014-11-25 00:39:56	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-25 00:40:44	moonchild	ooo, an 8TB drive
2014-11-25 00:40:52	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-25 00:41:00	moonchild	for 900 dollars :P
2014-11-25 00:41:24	-->	neunon (znc@unaffiliated/neunon) has joined ##c++
2014-11-25 00:41:38	-->	shahanm (~shahanm@180.234.216.200) has joined ##c++
2014-11-25 00:42:01	Bleakwise	anyone know any free distributed complialtoin plugins for visual studio? besides incredibuild?
2014-11-25 00:42:38	Bleakwise	maybe electric cloud will work with UE4 too? i know incredibuild is supported but electric cloud is much cheaper
2014-11-25 00:43:17	moonchild	distcc + cygwin + mingw?
2014-11-25 00:44:39	Bleakwise	ue4 won't build on distcc without some major work
2014-11-25 00:44:56	moonchild	also, check out icecream
2014-11-25 00:45:27	ridicola	i'm having a slight problem, I'm working with pointers and some pointers that /SHOULD/ be NULL aren't
2014-11-25 00:46:13	moonchild	ridicola: unititialized veriables?
2014-11-25 00:46:39	ridicola	so these are uninitialized pointer variables, and not only do they point to addresses, but I can also access members of those undefined pointers
2014-11-25 00:46:44	ridicola	uninitialized*
2014-11-25 00:46:54	Bleakwise	i'm not interested in maintaining an alternative to unrealbuildtool, but i guess incredibuild is my only option since that's what epic supports
2014-11-25 00:47:03	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-25 00:47:28	moonchild	Bleakwise: yeah, when in rome...
2014-11-25 00:47:33	mukunda_	i guess std regex in vs2013 is just 10x slower than other compilers... ok
2014-11-25 00:47:43	seronis	ridicola, a pointer is gonna THINK any value its assigned to (even the random value if you forget to initialize it) is a valid address
2014-11-25 00:47:59	seronis	ridicola, this will cause your program to do Bad Things(tm).  never leave a pointer uninitialized
2014-11-25 00:48:03	moonchild	mukunda_: std::regex in gcc 4.9 is ungodly slow
2014-11-25 00:48:23	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-11-25 00:48:31	Bleakwise	it would be nice if they supported distcc/clang on all platforms though, might have to put in a request for that
2014-11-25 00:48:45	ridicola	good to know. I would've expected them to start as NULL but that's what I get for assuming.
2014-11-25 00:48:47	mukunda_	i get 17ms with gcc 4.9.0
2014-11-25 00:48:49	ridicola	thanks!
2014-11-25 00:48:52	mukunda_	130ms in vs2013
2014-11-25 00:49:08	Bleakwise	apple uses a fork of distcc themselves so it shouldn't be too different for them either
2014-11-25 00:49:09	moonchild	boost::regex is slightly faster, as is spirit and xpressive
2014-11-25 00:49:18	thecha	i cant get gtkmm to work in ide codeblocks, "gtkmm.h no such file or direct to me"  what coudl be there error? i know cdompiler flags i know about environment variable and so forth
2014-11-25 00:49:36	-->	PotatoGim_ (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 00:49:40	moonchild	thecha: wrong room for such questions
2014-11-25 00:49:56	mukunda_	im just surprised how slow it is, it shouldnt be compiling during the test and it should fail fast in like the first couple of characters
2014-11-25 00:50:25	Bleakwise	i have to admit, i setup a linux env just to test out "pump make UE4Client-Linux-Debug -j16" and was sad when my network switch didn't light up like a christmass tree.
2014-11-25 00:50:44	Bleakwise	oh and CC="distcc clang"
2014-11-25 00:50:55	moonchild	typically though, thecha, you need do do something like $(gtkmm-config -includes) on your compliation lines, dunno if codeblocks is smart enough to figure that out
2014-11-25 00:51:53	<--	PotatoGim_ (~PotatoGim@220.90.135.162) has quit (Client Quit)
2014-11-25 00:52:01	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: Leaving)
2014-11-25 00:52:26	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 00:52:56	seronis	thecha,  linux?   sudo apt-get install libgtkmm-2.0-dev
2014-11-25 00:53:01	seronis	err   3.0
2014-11-25 00:53:23	moonchild	seronis: he's having problems w/ his ide finding the includes
2014-11-25 00:53:41	seronis	and i gave the solution.  apt-get  will put the includes into the path during install
2014-11-25 00:53:47	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 00:53:47	seronis	if its not locatable then its not installed
2014-11-25 00:53:56	Bleakwise	tho, pump making the kernel worked fine that way. i just didn't have the time to learn/background to really dig into unreal-build-tool and header-tool to get it to work
2014-11-25 00:54:17	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-25 00:54:17	Bleakwise	it wasn't going to be simple
2014-11-25 00:54:22	<--	APerson_ (~quassel@wikipedia/APerson) has quit (Remote host closed the connection)
2014-11-25 00:54:35	Bleakwise	i've tried incredibuild on windows and it was "magic"
2014-11-25 00:54:37	moonchild	Bleakwise: such things are always labors to set up
2014-11-25 00:55:23	Bleakwise	right, but re-writing unreal-build-tool/header-tool on every release, changing every single macro and function to be distcc compatable isn't realistic
2014-11-25 00:55:48	mukunda_	wtf.. changing this regex to non static makes it faster
2014-11-25 00:56:08	moonchild	heh
2014-11-25 00:56:22	moonchild	maybe there's some locking voodoo going on
2014-11-25 00:56:42	-->	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-128-108.revip2.asianet.co.th) has joined ##c++
2014-11-25 00:57:32	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 244 seconds)
2014-11-25 00:58:21	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2014-11-25 00:58:36	Bleakwise	best deal for a build computer imo would be a quad core opteron system with the opteron versions of vishera
2014-11-25 00:58:43	Bleakwise	quad socket*
2014-11-25 00:58:43	<--	srjek (~srjek@46dhcp67.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-25 00:59:07	moonchild	hehe
2014-11-25 00:59:15	-->	Life-Blood (~unixunite@74.194.165.220) has joined ##c++
2014-11-25 00:59:20	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 258 seconds)
2014-11-25 00:59:24	moonchild	the 20 core xeons we have at work are pretty choice too
2014-11-25 00:59:57	Bleakwise	single chip?
2014-11-25 01:00:07	moonchild	2 packages
2014-11-25 01:00:27	moonchild	10 per chip or 20 ht's
2014-11-25 01:00:33	V-ille	!focus
2014-11-25 01:00:35	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-11-25 01:00:37	Bleakwise	can we compile on xeon phis yet?
2014-11-25 01:00:37	moonchild	yeah
2014-11-25 01:00:49	Bleakwise	going to #unreal-chat
2014-11-25 01:00:50	-->	srjek (~srjek@46dhcp67.ece.uic.edu) has joined ##c++
2014-11-25 01:01:26	Bleakwise	#unrealengine-chat
2014-11-25 01:01:33	Bleakwise	thought i was in #unrealengine o.0
2014-11-25 01:01:39	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-25 01:01:44	moonchild	nope
2014-11-25 01:01:53	Bleakwise	i guess not
2014-11-25 01:02:05	<--	F404 (~francisco@189-70-128-36.user.veloxzone.com.br) has quit
2014-11-25 01:03:05	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-25 01:05:36	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-11-25 01:06:25	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 255 seconds)
2014-11-25 01:06:48	-->	DexxeD (~DexxeD@67.162.134.162) has joined ##c++
2014-11-25 01:07:20	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-25 01:11:21	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 01:12:47	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-25 01:14:19	<--	Lobster` (~Lobster@S010620aa4b89619f.ok.shawcable.net) has quit (Read error: Connection reset by peer)
2014-11-25 01:14:33	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 01:15:29	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-25 01:16:25	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-25 01:16:34	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit (Ping timeout: 240 seconds)
2014-11-25 01:18:22	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-25 01:18:29	-->	akatsukibay2 (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-25 01:18:34	<--	seishun (~Kakera@87.110.133.214) has quit (Ping timeout: 240 seconds)
2014-11-25 01:18:59	immibis	if typeid(a) == typeid(b), is it guaranteed that &typeid(a) == &typeid(b)?
2014-11-25 01:20:33	<--	oleo__ (~oleo@xdsl-78-35-149-13.netcologne.de) has quit (Quit: Verlassend)
2014-11-25 01:20:39	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-25 01:20:43	-->	HerzogDeXtEr1 (~flex@88.130.168.79) has joined ##c++
2014-11-25 01:21:41	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: Leaving)
2014-11-25 01:22:01	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 01:22:13	<--	dowgiallo (~dowgiallo@192.210.214.197) has quit (Remote host closed the connection)
2014-11-25 01:22:16	<--	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-128-108.revip2.asianet.co.th) has quit (Remote host closed the connection)
2014-11-25 01:22:23	<--	KnownSyntax (uid7983@gateway/web/irccloud.com/x-ynqravokthjocbld) has quit (Quit: Connection closed for inactivity)
2014-11-25 01:22:34	Cecen	immibis: Yes, I believe so
2014-11-25 01:22:38	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 245 seconds)
2014-11-25 01:22:58	kadoban	immibis: ...why would you rely on that, or even care?
2014-11-25 01:23:06	immibis	kadoban: just curiosity
2014-11-25 01:23:12	kadoban	Ah
2014-11-25 01:23:26	<--	HerzogDeXtEr (~flex@i59F6D149.versanet.de) has quit (Ping timeout: 258 seconds)
2014-11-25 01:23:34	Cecen	It has to return a reference to a type_info with static storage duration
2014-11-25 01:23:48	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 01:23:52	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-25 01:24:20	V-ille	that doesn't guarantee that the object is the same, though
2014-11-25 01:24:23	Cecen	Actually, there might be cases where it's not the same object
2014-11-25 01:24:23	Cecen	Yeah
2014-11-25 01:24:37	V-ille	so no, [expr.typeid] at least doesn't seem to guarantee that
2014-11-25 01:25:21	-->	steimle (~steimle@192.210.214.197) has joined ##c++
2014-11-25 01:26:20	-->	brainard52 (~brainard5@2601:7:7e80:dc0:e82e:d432:563c:8c48) has joined ##c++
2014-11-25 01:26:48	o11c	immibis: IAUI it's the same without a shared library, but not between them
2014-11-25 01:27:05	o11c	but to preserve my madness I didn't gaze deeply into that
2014-11-25 01:29:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 01:30:07	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-25 01:30:38	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-25 01:31:02	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-11-25 01:31:26	-->	Gorroth (~pi@unaffiliated/gorroth) has joined ##c++
2014-11-25 01:31:32	Gorroth	legit way to find whether a number is even:
2014-11-25 01:31:36	Gorroth	std::stringstream ss(input); std::string number = ss.str();  if (number.empty() || number[number.size()-1] == '2' || number[number.size()-1] == '4' || number[number.size()-1] == '6' || number[number.size()-1] == '8' || number[number.size()-1] == '0') return true; else reutrn false;
2014-11-25 01:31:40	Gorroth	BOOM!  done
2014-11-25 01:33:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 01:33:33	<--	Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 272 seconds)
2014-11-25 01:34:49	<--	PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: Leaving)
2014-11-25 01:35:05	-->	PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-11-25 01:36:35	<--	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-25 01:36:43	immibis	TIL 3.5 is even
2014-11-25 01:36:43	-->	Kulrak (kulrak@C-59-101-24-82.hay.connect.net.au) has joined ##c++
2014-11-25 01:36:43	<--	Kulrak (kulrak@C-59-101-24-82.hay.connect.net.au) has quit (Changing host)
2014-11-25 01:36:43	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-25 01:36:47	immibis	er, 3.4
2014-11-25 01:36:57	immibis	... how did i screw that up
2014-11-25 01:37:20	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Max SendQ exceeded)
2014-11-25 01:37:56	-->	Kulrak (kulrak@C-59-101-24-82.hay.connect.net.au) has joined ##c++
2014-11-25 01:37:57	Gorroth	do not show me your subordinate non-integer numbers!
2014-11-25 01:37:58	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 258 seconds)
2014-11-25 01:38:07	<--	Kulrak (kulrak@C-59-101-24-82.hay.connect.net.au) has quit (Changing host)
2014-11-25 01:38:07	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-25 01:38:42	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:945d:735c:3075:c55d) has quit (Quit: Leaving)
2014-11-25 01:39:50	Gorroth	alright, i shall implement a bug fix
2014-11-25 01:40:17	Gorroth	if (std::string::npos != input.find(".")) return false;
2014-11-25 01:40:20	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-25 01:40:21	Gorroth	lol
2014-11-25 01:40:28	-->	KnownSyntax (uid7983@gateway/web/irccloud.com/x-llqbchqxkcmqgbif) has joined ##c++
2014-11-25 01:40:39	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-25 01:41:10	<--	licnep (uid4387@gateway/web/irccloud.com/x-hmtycgolpgaohezp) has quit (Quit: Connection closed for inactivity)
2014-11-25 01:43:37	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Remote host closed the connection)
2014-11-25 01:46:22	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 01:49:29	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 01:49:43	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 01:49:47	<--	o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has quit (Ping timeout: 246 seconds)
2014-11-25 01:50:26	-->	Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-25 01:52:35	<--	ridicola (~ridicola@71.196.164.23) has quit (Ping timeout: 255 seconds)
2014-11-25 01:52:56	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-25 01:53:08	<--	pmenso57 (c730c6e4@gateway/web/freenode/ip.199.48.198.228) has left ##c++
2014-11-25 01:53:09	-->	Galik (~galik@cpc2-pool13-2-0-cust799.15-1.cable.virginm.net) has joined ##c++
2014-11-25 01:53:09	<--	Galik (~galik@cpc2-pool13-2-0-cust799.15-1.cable.virginm.net) has quit (Changing host)
2014-11-25 01:53:10	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2014-11-25 01:54:21	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-25 01:54:52	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-25 01:55:10	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-25 01:57:27	-->	Burga (~andrewm@124-150-99-226.dyn.iinet.net.au) has joined ##c++
2014-11-25 01:58:08	-->	SiGe___ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 01:58:09	<--	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 01:58:22	<--	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-11-25 01:58:30	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 250 seconds)
2014-11-25 01:58:47	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-25 02:00:13	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-11-25 02:00:26	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-25 02:00:40	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-11-25 02:00:58	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-25 02:02:50	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-25 02:03:44	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-25 02:04:54	-->	rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-25 02:05:33	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Ping timeout: 264 seconds)
2014-11-25 02:05:35	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-25 02:05:51	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-25 02:06:50	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-25 02:07:52	-->	Errorical (~Errorical@213.128.190.150) has joined ##c++
2014-11-25 02:10:37	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-usafiydolklkcorv) has quit (Quit: Connection closed for inactivity)
2014-11-25 02:10:54	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-25 02:12:05	-->	Kulrak (kulrak@C-59-101-147-233.mel.connect.net.au) has joined ##c++
2014-11-25 02:12:05	<--	Kulrak (kulrak@C-59-101-147-233.mel.connect.net.au) has quit (Changing host)
2014-11-25 02:12:05	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-25 02:12:18	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-25 02:12:54	-->	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 02:12:56	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 240 seconds)
2014-11-25 02:13:58	<--	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has quit (Client Quit)
2014-11-25 02:15:22	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 256 seconds)
2014-11-25 02:15:55	<--	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has quit (Quit: :q!)
2014-11-25 02:18:13	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-25 02:18:56	<--	Galik (~galik@unaffiliated/galik) has quit (Quit: Leaving)
2014-11-25 02:19:21	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-25 02:19:27	<--	SiGe___ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 02:19:41	-->	7GHAAQJZE (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 02:19:43	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-25 02:19:58	-->	jagob (~jacob@h145.natout.aau.dk) has joined ##c++
2014-11-25 02:19:59	--	stryyker2 is now known as Stryyker
2014-11-25 02:22:17	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 02:24:46	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-25 02:25:17	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-25 02:25:35	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 02:26:02	-->	nostoi (~nostoi@68.Red-213-98-209.dynamicIP.rima-tde.net) has joined ##c++
2014-11-25 02:26:55	-->	Gvidon (~gvidon@unaffiliated/gvidon) has joined ##c++
2014-11-25 02:27:16	-->	timj (~timj@p5DDB37A8.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 02:27:16	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-25 02:27:50	-->	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 02:28:31	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-25 02:29:18	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-25 02:30:19	<--	timj1 (~timj@p5DDB30FA.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-25 02:31:21	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 244 seconds)
2014-11-25 02:31:54	<--	CustosL1men (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 240 seconds)
2014-11-25 02:32:15	<--	zhangxaochen_ (~zhangxaoc@218.108.29.108) has quit (Ping timeout: 265 seconds)
2014-11-25 02:32:39	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-25 02:32:45	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-25 02:33:01	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-25 02:33:02	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 258 seconds)
2014-11-25 02:35:04	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 02:35:48	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Max SendQ exceeded)
2014-11-25 02:36:25	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-25 02:36:42	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 02:38:01	-->	ilhami (~IlhamiD@194.182.245.60) has joined ##c++
2014-11-25 02:38:23	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-11-25 02:38:32	<--	proteusguy (~proteusgu@180.183.139.197) has quit (Ping timeout: 256 seconds)
2014-11-25 02:40:35	<--	rainforest (~alexandri@gateway/tor-sasl/alexandrite) has quit (Quit: Leaving)
2014-11-25 02:41:47	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 272 seconds)
2014-11-25 02:41:47	-->	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-128-108.revip2.asianet.co.th) has joined ##c++
2014-11-25 02:41:57	-->	V-ille (~ville@59ec6584.symbio.com) has joined ##c++
2014-11-25 02:42:11	-->	hmax (~nah@static.98.18.47.78.clients.your-server.de) has joined ##c++
2014-11-25 02:43:20	hmax	Hi. Can someone give me any hints on what to read about low-level performance optimization, for CPU? Blogs, books, e.t.c. I know about Agner Fog's site and I've read Intel Software Optimization Manual, but now i'm looking for something else to look at
2014-11-25 02:43:23	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4d4f:8413:fa9d:402) has joined ##c++
2014-11-25 02:44:08	--	murrekatt_ is now known as murrekatt
2014-11-25 02:46:09	<--	ilhami (~IlhamiD@194.182.245.60) has quit (Changing host)
2014-11-25 02:46:09	-->	ilhami (~IlhamiD@unaffiliated/ilhami) has joined ##c++
2014-11-25 02:46:46	<--	Errorical (~Errorical@213.128.190.150) has quit (Read error: Connection reset by peer)
2014-11-25 02:48:29	<--	Gorroth (~pi@unaffiliated/gorroth) has left ##c++
2014-11-25 02:49:11	--	dts|airhocky is now known as dts
2014-11-25 02:49:52	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-25 02:50:34	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-25 02:50:46	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-25 02:51:47	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-25 02:52:32	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Client Quit)
2014-11-25 02:52:58	<--	Banandana (~Banandana@c-67-174-45-82.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-25 02:54:02	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-25 02:55:55	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (Remote host closed the connection)
2014-11-25 02:57:07	-->	Bleakwiser (~Bleakwise@adsl-172-13-154-37.dsl.hrlntx.sbcglobal.net) has joined ##c++
2014-11-25 02:57:09	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-25 02:57:26	<--	Life-Blood (~unixunite@74.194.165.220) has quit (Quit: Leaving)
2014-11-25 02:57:40	<--	nardev_ (~nardev@77.238.221.157) has quit (Quit: Ex-Chat)
2014-11-25 02:58:13	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-25 02:59:48	<--	Bleakwise (~Bleakwise@2602:30a:c0d9:a259:9ded:e1f4:5da9:a16) has quit (Ping timeout: 258 seconds)
2014-11-25 03:00:12	<--	Bleakwiser (~Bleakwise@adsl-172-13-154-37.dsl.hrlntx.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-25 03:00:26	Gvidon	Hi. Why can't I do something like this: http://ideone.com/8WeJGE ?
2014-11-25 03:00:55	-->	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has joined ##c++
2014-11-25 03:01:46	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-25 03:02:48	cbreak	eew
2014-11-25 03:02:59	cbreak	Gvidon: unique_ptr constructor is explicit
2014-11-25 03:03:11	cbreak	Gvidon: and that's extremely dangerous
2014-11-25 03:03:13	-->	proteusguy (~proteusgu@180.183.139.197) has joined ##c++
2014-11-25 03:03:15	cbreak	use make_unique
2014-11-25 03:03:30	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-25 03:03:45	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-25 03:04:23	<--	darkarcher (~archer@137.63.72.22) has quit (Remote host closed the connection)
2014-11-25 03:04:45	Gvidon	o.O Why is it explicit?
2014-11-25 03:04:46	-->	immibis_ (~ChatZill1@122-59-112-18.jetstream.xtra.co.nz) has joined ##c++
2014-11-25 03:05:12	cbreak	because it takes ownership of the pointer
2014-11-25 03:05:23	cbreak	this shouldn't be done implicitly, way too dangerous
2014-11-25 03:05:53	<--	immibis (~ChatZill1@122-60-98-9.jetstream.xtra.co.nz) has quit (Ping timeout: 240 seconds)
2014-11-25 03:06:08	--	immibis_ is now known as immibis
2014-11-25 03:06:12	Gvidon	Well, ok
2014-11-25 03:06:16	Gvidon	Thanks
2014-11-25 03:08:21	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-25 03:08:28	-->	zwer_w (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-25 03:08:38	--	SubCreative is now known as Sub|zzz
2014-11-25 03:09:21	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Quit: Colloquy for iPad - http://colloquy.mobi)
2014-11-25 03:10:41	-->	sohail (~user@184.175.8.252) has joined ##c++
2014-11-25 03:10:41	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-11-25 03:12:48	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 258 seconds)
2014-11-25 03:14:49	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 03:15:24	<--	sohail (~user@184.175.8.252) has quit (Ping timeout: 264 seconds)
2014-11-25 03:16:16	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-25 03:16:57	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving)
2014-11-25 03:16:59	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 256 seconds)
2014-11-25 03:17:33	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Read error: Connection reset by peer)
2014-11-25 03:17:45	-->	Errorical (~Errorical@213.128.190.150) has joined ##c++
2014-11-25 03:17:57	-->	darkarcher (~archer@96.63.224.177) has joined ##c++
2014-11-25 03:18:06	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-25 03:18:11	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 03:18:21	<--	crafty1 (~crafty1@24.229.140.232.res-cmts.sm.ptd.net) has quit (Read error: Connection reset by peer)
2014-11-25 03:18:22	-->	NoNMaDDe_ (~NoNMaDDeN@ppp-27-55-12-153.revip3.asianet.co.th) has joined ##c++
2014-11-25 03:19:43	-->	crafty1 (~crafty1@24.229.140.232.res-cmts.sm.ptd.net) has joined ##c++
2014-11-25 03:20:18	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 03:20:47	<--	NoNMaDDeN (~NoNMaDDeN@ppp-58-11-128-108.revip2.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-25 03:21:33	V-ille	also, you can't move from an initializer_list
2014-11-25 03:21:55	<--	steimle (~steimle@192.210.214.197) has quit (Remote host closed the connection)
2014-11-25 03:22:04	-->	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has joined ##c++
2014-11-25 03:22:06	V-ille	so just replacing those news with make_uniques will not work
2014-11-25 03:24:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 03:25:03	-->	walkers (~walkers@192.210.214.197) has joined ##c++
2014-11-25 03:25:25	<--	pcfreak30 (~mint@cpe-075-177-123-218.triad.res.rr.com) has quit (Remote host closed the connection)
2014-11-25 03:26:52	cbreak	true.
2014-11-25 03:27:02	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-25 03:27:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 03:28:24	V-ille	so, should some funny person force my hand to write such an initialization right-then-and-there, I will reach into the bag of dirty tricks and write http://melpon.org/wandbox/permlink/uZfXSrOyHFl7bVOf
2014-11-25 03:28:48	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-25 03:28:54	V-ille	it's still RAII enough :P
2014-11-25 03:29:35	<--	nostoi (~nostoi@68.Red-213-98-209.dynamicIP.rima-tde.net) has quit (Quit: Verlassend)
2014-11-25 03:30:12	<--	shahanm (~shahanm@180.234.216.200) has quit (Quit: Leaving)
2014-11-25 03:30:29	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-25 03:30:39	cbreak	that's quite convoluted
2014-11-25 03:30:49	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-25 03:30:54	cbreak	and it doesn't use initializer lists :D
2014-11-25 03:30:57	V-ille	I welcome terser ways to write it.
2014-11-25 03:31:18	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-25 03:32:16	cbreak	remove the outer vector, the {} and the lambda? :)
2014-11-25 03:32:48	V-ille	if you can, sure
2014-11-25 03:33:02	<--	fOrceez (~f0rceez@134.148.64.48) has quit (Ping timeout: 272 seconds)
2014-11-25 03:33:10	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 250 seconds)
2014-11-25 03:33:23	V-ille	hence the "should some funny person force my hand" - if you want to initialize a member in a ctor-initializer and you absolutely have to get 5 unique_ptrs into the member, lambda's your ticket.
2014-11-25 03:34:21	-->	CrizMobius (~CrizMobiu@c83-251-182-69.bredband.comhem.se) has joined ##c++
2014-11-25 03:36:49	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 03:37:15	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-25 03:37:42	<--	det (~chris@unaffiliated/det) has quit (Ping timeout: 255 seconds)
2014-11-25 03:38:33	-->	snyp (~Snyp@150.129.132.64) has joined ##c++
2014-11-25 03:38:43	<--	zwer_w (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 250 seconds)
2014-11-25 03:39:01	-->	zwer_w (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-25 03:39:57	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 03:40:00	-->	Anodl (~Anodl@213.157.2.74) has joined ##c++
2014-11-25 03:40:40	-->	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-25 03:40:52	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-25 03:43:22	-->	Oliprof (~Olipro@95.147.72.64) has joined ##c++
2014-11-25 03:44:29	<--	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has quit (Read error: Connection reset by peer)
2014-11-25 03:45:00	<--	Oliprof (~Olipro@95.147.72.64) has left ##c++
2014-11-25 03:45:16	-->	Olipro_ (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined ##c++
2014-11-25 03:45:20	Olipro_	if I have a std::tuple<...> containing a bunch of values, is there a nice way to pull out references to them using std::tie() rather than std::get() ?
2014-11-25 03:46:12	-->	NoNMaDDeN (~NoNMaDDeN@ppp-171-96-38-164.revip8.asianet.co.th) has joined ##c++
2014-11-25 03:46:17	-->	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-25 03:46:23	Adrinael	Do you know the types?
2014-11-25 03:47:03	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-25 03:47:11	-->	leeN (~leeN@f051231040.adsl.alicedsl.de) has joined ##c++
2014-11-25 03:47:54	Adrinael	int x; float y; std::tie(x, y) = mytuple;  ?
2014-11-25 03:48:28	cbreak	http://en.cppreference.com/w/cpp/utility/tuple/get should return a reference
2014-11-25 03:48:38	<--	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has quit (Ping timeout: 256 seconds)
2014-11-25 03:48:42	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-25 03:48:46	-->	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has joined ##c++
2014-11-25 03:48:46	Adrinael	What's the real question?
2014-11-25 03:48:52	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 03:48:54	Olipro_	they're all strings
2014-11-25 03:49:02	-->	noob_ (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has joined ##c++
2014-11-25 03:49:10	Olipro_	but I don't want to use tie as-is because that will make a copy of the values
2014-11-25 03:49:27	-->	KarolisK (~karolis@193.219.83.152) has joined ##c++
2014-11-25 03:49:29	Adrinael	std::tie(a, b) = std::move(mytuple)
2014-11-25 03:49:45	<--	NoNMaDDe_ (~NoNMaDDeN@ppp-27-55-12-153.revip3.asianet.co.th) has quit (Ping timeout: 255 seconds)
2014-11-25 03:50:00	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-25 03:50:13	Adrinael	swap(std::tie(a, b), mytuple)
2014-11-25 03:51:08	<--	Yepoleb (~quassel@188-22-160-77.adsl.highway.telekom.at) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-25 03:51:52	Olipro_	is there a way to avoid gutting the values out of the tuple if I accept them into const variables?
2014-11-25 03:52:20	Adrinael	what
2014-11-25 03:52:21	Olipro_	otherwise I'll just be doing a move, read, and move back
2014-11-25 03:52:22	-->	Yepoleb (~quassel@188-23-118-173.adsl.highway.telekom.at) has joined ##c++
2014-11-25 03:52:48	Adrinael	!testcase
2014-11-25 03:52:49	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-25 03:53:03	<--	noob_ (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has quit (Ping timeout: 246 seconds)
2014-11-25 03:53:19	-->	noob_ (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has joined ##c++
2014-11-25 03:53:56	<--	noob_ (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has left ##c++
2014-11-25 03:54:28	Olipro_	ok, i have tuple<string,string,string,string> and I want to map the strings into separate variables for the purposes of reading them, no writing. I don't want to make a copy of them for performance and the tuple must be essentially unmodified when I return
2014-11-25 03:54:33	-->	somenickname (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has joined ##c++
2014-11-25 03:55:18	cbreak	Olipro_: considered pointers?
2014-11-25 03:55:24	Olipro_	obviously your example with swap/move is usable providing I swap/move the values back, but that seems a bit sub-optimal
2014-11-25 03:55:39	<--	somenickname (5ed117c9@gateway/web/freenode/ip.94.209.23.201) has quit (Client Quit)
2014-11-25 03:55:40	Adrinael	Okay, now we know what you're really after and we can begin solving it
2014-11-25 03:56:21	cbreak	Olipro_: and why do you not want to use tie?
2014-11-25 03:56:25	-->	matt90 (~matt90@149-169-138-60.nat.asu.edu) has joined ##c++
2014-11-25 03:56:55	Adrinael	He doesn't want to copy or move from the tuple, just form references for ease of writing
2014-11-25 03:56:57	snyp	How does remove_pointer<T> work?
2014-11-25 03:57:07	cbreak	snyp: matching
2014-11-25 03:57:13	cbreak	Adrinael: tie doesn't copy
2014-11-25 03:57:15	snyp	matching?
2014-11-25 03:57:29	snyp	like ..specializing?
2014-11-25 03:57:31	cbreak	tie(get<0>(thing), get<1>(thing), ...)
2014-11-25 03:57:31	Olipro_	cbreak: I do want to use tie, it'd be nicer than using std::get() but it will make a copy
2014-11-25 03:57:33	cbreak	snyp: sure
2014-11-25 03:57:34	Adrinael	cbreak, tie() = ... does
2014-11-25 03:57:37	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 03:57:38	snyp	oh
2014-11-25 03:57:40	snyp	ah
2014-11-25 03:57:48	cbreak	Olipro_: use both
2014-11-25 03:57:53	matt90	does a basic_ostream change the ios_base::in pointer in streambuf?
2014-11-25 03:58:27	matt90	or rather, if I seek the the underlying buffer with openmode = ios_base::in will it disrupt the ostreaM?
2014-11-25 03:58:42	cbreak	Adrinael: there's no need to assign if he doesn't want to
2014-11-25 03:58:54	Adrinael	cbreak, I don't understand your solution
2014-11-25 03:58:59	Adrinael	Care to flesh it out
2014-11-25 03:59:13	cbreak	Adrinael: for some weird reason he wants to have a tuple of references instead of one of values.
2014-11-25 03:59:16	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-25 03:59:23	Olipro_	cbreak: this is an issue of brevity, I'd much rather have a one-liner that maps all the tuple members into vars than several lines of std::get() operations
2014-11-25 03:59:27	Adrinael	cbreak, no, he wants individual variables that refer to the tuple elements
2014-11-25 03:59:45	Olipro_	but obviously, going for the source-brevity of tie() is a no-go because it'll make a copy
2014-11-25 03:59:45	cbreak	but he wanted to use tie
2014-11-25 03:59:51	cbreak	tie doesn't do that
2014-11-25 04:00:05	Adrinael	No, he wanted to have individual variables and had a case of xy
2014-11-25 04:00:12	Adrinael	Listen to me for once!
2014-11-25 04:00:18	Olipro_	yes it does
2014-11-25 04:00:19	Olipro_	http://ideone.com/k6n9cn
2014-11-25 04:00:40	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-25 04:01:37	Adrinael	Olipro_, just for nitpicking's sake, tie() doesn't copy there, the assignment into tie() does
2014-11-25 04:02:01	Adrinael	I can't come up with good syntax that allows you to grab individual references without a metric ton of get()
2014-11-25 04:02:28	Olipro_	yeah, that's what I have right now
2014-11-25 04:02:40	Olipro_	works, but I find it ugly
2014-11-25 04:02:49	cbreak	Olipro_: you're not making any sense
2014-11-25 04:02:49	Adrinael	With Common Lisp, it would be just a matter of making a macro
2014-11-25 04:03:10	Olipro_	and it'll just get more unwieldly as the tuple expands
2014-11-25 04:03:17	<--	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has quit (Ping timeout: 272 seconds)
2014-11-25 04:03:26	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-25 04:03:27	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-25 04:03:34	Adrinael	cbreak, he is, would you like me to explain in detail?
2014-11-25 04:03:39	Adrinael	I'll do it anyway
2014-11-25 04:03:47	<--	Lilian (~Lilian@gateway/tor-sasl/lilian) has quit (Ping timeout: 250 seconds)
2014-11-25 04:03:47	cbreak	Olipro_: you seem to want to use a tuple
2014-11-25 04:03:51	Olipro_	cbreak: ok, if I've been passed a const tuple<string,string,string> - how do I map that into 3 variables without making a copy using tie?
2014-11-25 04:03:59	cbreak	Olipro_: and you seem to want to use variables with names
2014-11-25 04:04:08	cbreak	Olipro_: tie doesn't do that
2014-11-25 04:04:12	Olipro_	I've been given a tuple
2014-11-25 04:04:16	-->	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-25 04:04:19	Olipro_	I want to use variables with names
2014-11-25 04:04:23	snyp	cbreak: How does C++14 do remove_reference_t<T> through aliasing?
2014-11-25 04:04:34	Adrinael	He has std::tuple<four std::strings here> foo; He wants std::string &a = get<1>(foo), and std::string &b = get<2>(foo)  etc.
2014-11-25 04:04:35	cbreak	Olipro_: tie binds objects into a tuple of references
2014-11-25 04:04:41	cbreak	Olipro_: the references are inside the tuple
2014-11-25 04:04:45	-->	Lilian (~Lilian@gateway/tor-sasl/lilian) has joined ##c++
2014-11-25 04:04:52	cbreak	Olipro_: apparently you want that, and you don't want that
2014-11-25 04:04:54	Adrinael	cbreak, ^
2014-11-25 04:04:56	cbreak	I think you don't want it
2014-11-25 04:04:58	snyp	when i try to do that it says partial specialization of alias templates not permitted.
2014-11-25 04:05:01	cbreak	so tie is useless to you
2014-11-25 04:05:18	Adrinael	which part of "he had a case of xy" was ignored
2014-11-25 04:05:21	cbreak	Olipro_: write your own object with proper named members and bind the tuple to that.
2014-11-25 04:05:40	cbreak	you'll get to get in the constructor, but after that you can use proper names
2014-11-25 04:06:05	-->	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has joined ##c++
2014-11-25 04:06:32	cbreak	I can't think of any way to bind multiple references that aren't part of an object to objects in one statement.
2014-11-25 04:06:45	-->	reiser_ (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-25 04:06:48	cbreak	so making an object for this sounds like the most reasonable.
2014-11-25 04:07:51	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2014-11-25 04:08:10	-->	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has joined ##c++
2014-11-25 04:09:10	<--	kapil_ (uid36151@gateway/web/irccloud.com/x-btactvustsnbkubu) has quit (Quit: Connection closed for inactivity)
2014-11-25 04:09:16	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Quit: night)
2014-11-25 04:09:44	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4d4f:8413:fa9d:402) has quit (Read error: Connection reset by peer)
2014-11-25 04:10:07	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-25 04:11:07	<--	FlorianJW-terra (~florian@madways.de) has quit (Quit: Leaving.)
2014-11-25 04:11:23	<--	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Ping timeout: 240 seconds)
2014-11-25 04:13:53	-->	hauron (c0c6972c@gateway/web/freenode/ip.192.198.151.44) has joined ##c++
2014-11-25 04:14:41	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 04:15:43	hauron	hi, question about constexpr - as far as I understand, constexpr variables and functions if is possible for the compiler (e.g. literals, constexpr chaining, etc.) should compile them during compile time, while the same functions will remain callable during runtime
2014-11-25 04:16:00	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit
2014-11-25 04:16:08	o11c	hauron: *may* be evaluated at compile-time
2014-11-25 04:16:10	hauron	what about variables only ever used in compile-time functions? will those get optimized out of the final binary?
2014-11-25 04:16:14	o11c	it's only forced if you use it in certain ways
2014-11-25 04:16:21	hauron	o11c, so there's no guarantee at all?
2014-11-25 04:16:21	o11c	probably not
2014-11-25 04:16:47	o11c	'constexpr int foo = ce_function(); int x[foo];'
2014-11-25 04:16:56	hauron	o11c, so if I cared about the binary size (embedded..), constexpr isn't necessarily the answer :(
2014-11-25 04:17:01	o11c	that forces foo to be evaluated at compile-time
2014-11-25 04:17:16	o11c	of course, in practice, compilers will do it even if not forced
2014-11-25 04:17:24	o11c	if you care about *anything* you have to be implementation-specific
2014-11-25 04:17:28	Adrinael	If you care about the binary size, -Os
2014-11-25 04:17:29	Adrinael	Or -Oz
2014-11-25 04:17:37	hauron	o11c, in the example, any compiler would optimize the foo out?
2014-11-25 04:17:41	hauron	the 'foo' variable
2014-11-25 04:18:11	-->	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has joined ##c++
2014-11-25 04:18:15	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-25 04:18:18	hauron	this might be out of scope of this channel I suppose
2014-11-25 04:18:18	hauron	thank you both for the answers
2014-11-25 04:18:19	-->	drale2k (~drale2k@178.115.130.109.wireless.dyn.drei.com) has joined ##c++
2014-11-25 04:18:22	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2014-11-25 04:18:36	Adrinael	!general
2014-11-25 04:18:37	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-25 04:18:42	Adrinael	In scope there
2014-11-25 04:19:01	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-25 04:19:21	-->	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has joined ##c++
2014-11-25 04:19:43	<--	ilhami (~IlhamiD@unaffiliated/ilhami) has quit (Ping timeout: 272 seconds)
2014-11-25 04:20:25	-->	skfax (c147b472@gateway/web/freenode/ip.193.71.180.114) has joined ##c++
2014-11-25 04:21:16	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-25 04:21:22	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-25 04:23:34	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-25 04:23:42	<--	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has quit (Remote host closed the connection)
2014-11-25 04:23:52	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 245 seconds)
2014-11-25 04:24:30	-->	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-25 04:25:52	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-25 04:26:18	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Remote host closed the connection)
2014-11-25 04:26:59	-->	AgentElrond (~ELROND@50-89-233-100.res.bhn.net) has joined ##c++
2014-11-25 04:27:07	<--	B-Knock (~bushdio@pool-100-40-112-200.prvdri.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-25 04:27:48	AgentElrond	Behold I have a standards question:  Is it legal (and if so what section etc.) to write this code?  "typedef void (*SignalHandler)(int signum);"
2014-11-25 04:28:17	AgentElrond	This is example code I am reading about, but I did not ever realize you could include a parameter name ("signum") in a function pointer, and/or in a typedef like that.
2014-11-25 04:28:40	-->	tsimpson_ (b903a4c7@ubuntu/member/stdin) has joined ##c++
2014-11-25 04:28:59	<--	TheAncientGoat (~quassel@210.195.220.183) has quit (Remote host closed the connection)
2014-11-25 04:29:12	-->	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-25 04:29:53	Chris	The fact that you can include it in a regular function declaration suggests no reason why you can't do it in a function pointer declaration or a typedef of one. I'm not inclined to wade through the standard though.
2014-11-25 04:30:19	AgentElrond	I have limited expertise with function pointers in particular
2014-11-25 04:30:34	AgentElrond	So I wasn't sure if there was some sort of catch, where they aren't supposed to have parameter names.
2014-11-25 04:31:53	Chris	I don't see why.
2014-11-25 04:32:08	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-25 04:32:23	Chris	But sure, it would be good to check the standard for peace of mind :)
2014-11-25 04:32:47	AgentElrond	Thank you :)  I doubt anyone is awake but perhaps I can ask again another time if someone knows the arcane rules about it.
2014-11-25 04:33:13	<--	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-25 04:33:26	Chris	It's one of those things that I imagine is difficult to find in the standard.
2014-11-25 04:34:15	-->	endomancer (~endomance@2001:8003:2e3b:e301:1979:a33b:a6b4:e059) has joined ##c++
2014-11-25 04:34:20	AgentElrond	Perhaps so
2014-11-25 04:34:24	-->	Quackmatic (~quackm@phroa.lost.the.game.rikairchy.net) has joined ##c++
2014-11-25 04:35:05	Chris	But it does just logically follow, to me, that if it's allowed for void f(int foo); then void (*f)(int foo); shouldn't be a special exception
2014-11-25 04:36:56	AgentElrond	I hadn't even realized until tonight that the (*) was optional anyway
2014-11-25 04:37:01	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-25 04:37:16	AgentElrond	Allowing syntax like "void bigfunc(int littlefunc(int a, int b));"
2014-11-25 04:37:31	Chris	right
2014-11-25 04:37:46	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-25 04:38:59	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-25 04:39:41	AgentElrond	Wow
2014-11-25 04:39:45	AgentElrond	which leads to the exceptionally confusing syntax
2014-11-25 04:39:47	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:a1b3:73ff:e3b1:cfb6) has joined ##c++
2014-11-25 04:39:52	AgentElrond	"typedef int littlefunc(int a, int b);"
2014-11-25 04:40:01	AgentElrond	Which is actually declaring a function pointer type
2014-11-25 04:40:07	Chris	Is it?
2014-11-25 04:40:23	AgentElrond	It would seem that way
2014-11-25 04:40:34	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-25 04:41:28	Chris	That seems unlikely.
2014-11-25 04:41:39	PlasmaHH	it isnt, its a  function type, not function pointer
2014-11-25 04:41:46	PlasmaHH	{ typedef int littlefunc(int a, int b); cout << TYPE_DESC<littlefunc>; }
2014-11-25 04:41:47	geordi	function taking 2 integers and returning an integer
2014-11-25 04:41:56	AgentElrond	Ah, but it was compiling because a function type gets automatically converted to a function pointer
2014-11-25 04:42:02	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-25 04:42:16	Chris	AgentElrond: in some contexts, not all
2014-11-25 04:42:22	AgentElrond	"typedef int (*littlefunc)(int a, int b);" would correctly be defining a function pointer, then?
2014-11-25 04:42:33	PlasmaHH	{ typedef int (*littlefunc)(int a, int b); cout << TYPE_DESC<littlefunc>; }
2014-11-25 04:42:34	geordi	pointer to a function taking 2 integers and returning an integer
2014-11-25 04:42:56	Chris	Anyway, C++ wants you to use using instead of typedef.
2014-11-25 04:43:49	AgentElrond	Thanks
2014-11-25 04:45:14	-->	losh (~losh@staff-fr.corp.dailymotion.com) has joined ##c++
2014-11-25 04:45:21	<--	AgentElrond (~ELROND@50-89-233-100.res.bhn.net) has quit (Quit: Leaving.)
2014-11-25 04:45:46	-->	it_2 (~it_@212.243.190.164) has joined ##c++
2014-11-25 04:46:07	-->	ablepharus (~user@46.115.177.110) has joined ##c++
2014-11-25 04:46:09	it_2	Heya
2014-11-25 04:46:14	it_2	Is there a C-channel?
2014-11-25 04:46:28	it_2	Or can I ask something about C code here :c
2014-11-25 04:46:28	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-25 04:46:35	-->	luke_penn (~luke_penn@147.162.183.190) has joined ##c++
2014-11-25 04:46:37	Chris	try removing the ++ from the channel name
2014-11-25 04:46:52	it_2	not working
2014-11-25 04:47:00	PlasmaHH	it must really be hard to find the c channel
2014-11-25 04:47:10	Chris	Strange, because I'm in ##c now
2014-11-25 04:47:16	it_2	yes that's what I thought
2014-11-25 04:47:38	Chris	"not working" isn't very informative. What happens instead of "working" when you type /join ##c++
2014-11-25 04:47:42	PlasmaHH	lets see... "where is the c++ channel? lets try ##c++ ... where is the c channel? lets try, uhm, I dont know, its too hard to figure out"
2014-11-25 04:47:54	Chris	er.. ##c
2014-11-25 04:48:08	<--	proteusguy (~proteusgu@180.183.139.197) has quit (Remote host closed the connection)
2014-11-25 04:48:11	<--	kexmex (~kexmex@178.136.234.6) has quit (Ping timeout: 264 seconds)
2014-11-25 04:48:23	<--	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2014-11-25 04:48:38	<--	hmax (~nah@static.98.18.47.78.clients.your-server.de) has left ##c++ ("Leaving")
2014-11-25 04:48:58	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-11-25 04:49:08	<--	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has quit (Ping timeout: 256 seconds)
2014-11-25 04:49:10	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 258 seconds)
2014-11-25 04:49:26	it_2	nothing happening when trying to join c-channel
2014-11-25 04:49:33	it_2	also doesn't say anything .:
2014-11-25 04:50:01	Chris	Well, you could try #freenode for basic help with your IRC client
2014-11-25 04:50:18	it_2	gonna try fix it myself, but thanks. I'll check it out if it doesn't work
2014-11-25 04:50:32	<--	it_2 (~it_@212.243.190.164) has quit (Client Quit)
2014-11-25 04:50:45	-->	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has joined ##c++
2014-11-25 04:50:51	-->	it_2 (~it_@212.243.190.164) has joined ##c++
2014-11-25 04:50:59	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 250 seconds)
2014-11-25 04:51:05	Chris	"c-channel" is a weird way to spell ##c
2014-11-25 04:51:18	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-25 04:51:22	-->	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has joined ##c++
2014-11-25 04:51:59	Chris	341 Inviting it_2 to channel ##c
2014-11-25 04:52:02	Chris	Well, it was worth a try.
2014-11-25 04:52:20	PlasmaHH	chances are that with that much skill of structured debugging he will get very far with programming...
2014-11-25 04:52:30	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-25 04:52:32	-->	rriemann (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has joined ##c++
2014-11-25 04:52:40	Chris	Hurrah
2014-11-25 04:53:09	<--	NoNMaDDeN (~NoNMaDDeN@ppp-171-96-38-164.revip8.asianet.co.th) has quit (Remote host closed the connection)
2014-11-25 04:53:58	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 04:54:35	-->	kapil_ (uid36151@gateway/web/irccloud.com/x-nsribvdnejrljgtk) has joined ##c++
2014-11-25 04:58:04	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 04:58:20	Chris	You made it!
2014-11-25 04:58:39	-->	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 04:58:58	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-25 04:59:18	-->	sohail (~user@184.175.8.252) has joined ##c++
2014-11-25 05:00:14	-->	b1rkh0ff (~b1rkh0ff@109.163.148.72) has joined ##c++
2014-11-25 05:01:12	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:01:17	-->	NoNMaDDeN (~NoNMaDDeN@ppp-171-96-38-164.revip8.asianet.co.th) has joined ##c++
2014-11-25 05:01:29	-->	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has joined ##c++
2014-11-25 05:01:37	-->	komarov (~komarov@37.150.160.222) has joined ##c++
2014-11-25 05:03:54	<--	sohail (~user@184.175.8.252) has quit (Ping timeout: 255 seconds)
2014-11-25 05:07:29	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 05:08:16	-->	hexagoxel (~hexagoxel@195.244.237.55) has joined ##c++
2014-11-25 05:08:27	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-25 05:09:06	-->	raj___ (~xar@182.65.92.234) has joined ##c++
2014-11-25 05:09:45	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-25 05:10:15	-->	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has joined ##c++
2014-11-25 05:10:20	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-25 05:10:31	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 240 seconds)
2014-11-25 05:10:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:11:38	-->	karab44 (~karab44@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-25 05:14:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 05:16:14	<--	komarov (~komarov@37.150.160.222) has quit (Ping timeout: 240 seconds)
2014-11-25 05:17:10	<--	KarolisK (~karolis@193.219.83.152) has quit (Quit: Konversation terminated!)
2014-11-25 05:17:50	-->	kurahaupo (~kurahaupo@118.148.146.243) has joined ##c++
2014-11-25 05:17:51	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:17:59	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-25 05:18:07	-->	cyberik (~cyberik@145-118-119-112.fttx.bbned.nl) has joined ##c++
2014-11-25 05:18:08	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 265 seconds)
2014-11-25 05:21:43	-->	xilanma (3ddc6170@gateway/web/freenode/ip.61.220.97.112) has joined ##c++
2014-11-25 05:24:06	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 05:27:06	-->	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:e82f:7d6f:6f2c:d17) has joined ##c++
2014-11-25 05:27:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:28:22	<--	NoNMaDDeN (~NoNMaDDeN@ppp-171-96-38-164.revip8.asianet.co.th) has quit (Read error: Connection reset by peer)
2014-11-25 05:28:28	-->	komarov (~komarov@92.46.10.108) has joined ##c++
2014-11-25 05:29:10	-->	jafar (~jafar@41.205.22.13) has joined ##c++
2014-11-25 05:30:41	<--	zwer_w (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-25 05:30:49	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-25 05:30:54	-->	zwer_w (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-25 05:31:06	<--	darkarcher (~archer@96.63.224.177) has quit (Remote host closed the connection)
2014-11-25 05:31:22	<--	thecha (tehcha@unaffiliated/thecha) has quit (Quit: my absence if the biggest gift i can bestow upon anybody)
2014-11-25 05:31:36	-->	Kulrak (kulrak@C-59-101-38-214.hay.connect.net.au) has joined ##c++
2014-11-25 05:31:36	<--	Kulrak (kulrak@C-59-101-38-214.hay.connect.net.au) has quit (Changing host)
2014-11-25 05:31:36	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-25 05:32:39	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Ping timeout: 256 seconds)
2014-11-25 05:33:17	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-25 05:33:44	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-25 05:35:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 05:36:00	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-25 05:39:07	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:41:08	<--	drale2k (~drale2k@178.115.130.109.wireless.dyn.drei.com) has quit (Ping timeout: 250 seconds)
2014-11-25 05:42:03	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 255 seconds)
2014-11-25 05:42:18	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-25 05:42:34	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Ping timeout: 244 seconds)
2014-11-25 05:44:22	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-25 05:44:31	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-25 05:44:34	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-ozwbmfcnkpbzsaqf) has joined ##c++
2014-11-25 05:46:06	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 05:47:13	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 244 seconds)
2014-11-25 05:47:38	-->	ravior (~ravior@89.121.200.106) has joined ##c++
2014-11-25 05:47:59	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-25 05:48:19	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-25 05:52:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 05:54:38	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-25 05:55:32	<--	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has quit (Ping timeout: 255 seconds)
2014-11-25 05:55:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 05:57:15	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-25 05:58:21	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2014-11-25 05:58:45	<--	xilanma (3ddc6170@gateway/web/freenode/ip.61.220.97.112) has quit (Ping timeout: 246 seconds)
2014-11-25 05:58:45	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-25 06:00:00	-->	Olipro__ (~Olipro@95.147.72.64) has joined ##c++
2014-11-25 06:01:06	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-25 06:01:11	<--	skfax (c147b472@gateway/web/freenode/ip.193.71.180.114) has quit (Ping timeout: 246 seconds)
2014-11-25 06:02:17	<--	DexxeD (~DexxeD@67.162.134.162) has quit (Read error: Connection reset by peer)
2014-11-25 06:02:36	-->	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has joined ##c++
2014-11-25 06:03:02	-->	paul424 (~chatzilla@91.207.69.143) has joined ##c++
2014-11-25 06:03:20	<--	Olipro_ (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Ping timeout: 272 seconds)
2014-11-25 06:03:34	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-25 06:04:20	-->	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has joined ##c++
2014-11-25 06:06:51	<--	f10 (~flo@ip5b4034d8.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-11-25 06:07:20	-->	blut (864c2693@gateway/web/freenode/ip.134.76.38.147) has joined ##c++
2014-11-25 06:07:54	<--	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-11-25 06:08:30	<--	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-25 06:09:39	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-25 06:11:36	<--	7GHAAQJZE (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Remote host closed the connection)
2014-11-25 06:12:08	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 265 seconds)
2014-11-25 06:13:47	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-25 06:13:47	-->	pHane (~pHane@104.156.240.134) has joined ##c++
2014-11-25 06:13:52	<--	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has quit
2014-11-25 06:14:23	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 264 seconds)
2014-11-25 06:17:31	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 06:18:26	-->	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 06:18:44	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Ping timeout: 250 seconds)
2014-11-25 06:18:57	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-25 06:20:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 06:21:12	Jinxit	what's the modern way to have a (private) constant in a C++ class?
2014-11-25 06:21:30	<--	b1rkh0ff (~b1rkh0ff@109.163.148.72) has quit (Ping timeout: 245 seconds)
2014-11-25 06:21:33	<--	endomancer (~endomance@2001:8003:2e3b:e301:1979:a33b:a6b4:e059) has quit (Quit: endomancer)
2014-11-25 06:21:39	Gvidon	What's wrong with the old way?
2014-11-25 06:21:50	-->	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 06:21:57	Jinxit	#define?
2014-11-25 06:22:21	Gvidon	No, a private static const member
2014-11-25 06:22:33	Jinxit	then that's what I'm looking for
2014-11-25 06:22:38	Jinxit	is that replaced at compile time?
2014-11-25 06:23:13	Gvidon	Depends on your compiler, I guess. Usually, yes
2014-11-25 06:24:44	<--	pHane (~pHane@104.156.240.134) has quit (Ping timeout: 240 seconds)
2014-11-25 06:24:57	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-25 06:25:34	-->	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 06:26:19	-->	endomancer (~endomance@2001:8003:2e3b:e301:b823:3797:e720:54aa) has joined ##c++
2014-11-25 06:26:42	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-25 06:27:57	-->	tarruda (~tarruda@200.17.134.134) has joined ##c++
2014-11-25 06:30:32	-->	pHane (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 06:30:43	-->	feliwir (~Feliwir@HSI-KBW-46-223-23-127.hsi.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-25 06:31:29	-->	m_e (b21bb635@gateway/web/freenode/ip.178.27.182.53) has joined ##c++
2014-11-25 06:32:34	feliwir	hello, can someone tell me the actual type of SetROM and SetVROM: http://pastebin.com/z3LNnb0k
2014-11-25 06:33:01	feliwir	my compiler is not able to use auto in this case (msvc2013) -.-
2014-11-25 06:33:04	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 06:33:19	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 06:33:42	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-25 06:33:50	<--	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 265 seconds)
2014-11-25 06:35:08	Adrinael	feliwir, here's a trick: do      int SetROM = &SetPages<ROM_Pages etc>;
2014-11-25 06:35:14	Adrinael	Then copypaste the type from the compiler error
2014-11-25 06:37:13	<--	jrnas (~jrnas@unaffiliated/xedasx) has quit (Ping timeout: 244 seconds)
2014-11-25 06:37:19	feliwir	okay, but it seems like msvc doesn't support these kind of templates :-/
2014-11-25 06:38:00	-->	Atque_ (~Atque@unaffiliated/atque) has joined ##c++
2014-11-25 06:38:22	<--	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has quit (Ping timeout: 240 seconds)
2014-11-25 06:39:16	<--	Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-11-25 06:39:17	<--	Atque (~Atque@unaffiliated/atque) has quit (Disconnected by services)
2014-11-25 06:39:19	--	Atque_ is now known as Atque
2014-11-25 06:40:18	-->	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 06:41:27	<--	karab44 (~karab44@host-91-192-90-101.elomza.pl) has quit (Quit: Bye)
2014-11-25 06:41:56	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-25 06:42:58	feliwir	Adrinael: it does complain about the m_x already ^^
2014-11-25 06:43:24	<--	pHane (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 244 seconds)
2014-11-25 06:43:25	-->	jrnas (~jrnas@unaffiliated/xedasx) has joined ##c++
2014-11-25 06:43:32	Adrinael	What m_x
2014-11-25 06:43:42	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 240 seconds)
2014-11-25 06:43:54	feliwir	sorry i forgot the link: http://pastebin.com/ZADXk097
2014-11-25 06:44:24	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 06:44:53	Adrinael	Member variable...
2014-11-25 06:45:00	Adrinael	Template parameters must be compile-time constants
2014-11-25 06:45:19	aschmack	Adrinael, the type of SetROM and SetVROM are both void
2014-11-25 06:45:20	feliwir	if you look at the code i wrote you earlier
2014-11-25 06:45:25	feliwir	this isn't the case either ^^
2014-11-25 06:45:28	aschmack	no
2014-11-25 06:45:36	aschmack	i'm wrong
2014-11-25 06:46:03	aschmack	they should be function pointers, not
2014-11-25 06:46:07	aschmack	no?*
2014-11-25 06:46:18	feliwir	yes , they are uses like functions
2014-11-25 06:46:22	-->	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has joined ##c++
2014-11-25 06:46:24	<--	leeN (~leeN@f051231040.adsl.alicedsl.de) has quit (Quit: The morning breaks us up inside?)
2014-11-25 06:46:41	feliwir	you can look at the full code here: http://bisqwit.iki.fi/jutut/kuvat/programming_examples/nesemu1/nesemu1.cc (namespace GamePak)
2014-11-25 06:46:42	Adrinael	aschmack, what he's after is how to type up the horror of a function pointer type
2014-11-25 06:47:04	Adrinael	Actually the pointer type isn't that horror
2014-11-25 06:47:07	aschmack	oh,i don't know that off the top of my head
2014-11-25 06:47:07	Adrinael	Silly me
2014-11-25 06:47:38	Adrinael	void (*SetRom)(unsigned, unsigned, unsigned) = &SetPages<blah, bleh, bl?h>;
2014-11-25 06:47:41	Adrinael	feliwir, ^
2014-11-25 06:47:53	-->	sohail (~user@184.175.8.252) has joined ##c++
2014-11-25 06:48:05	feliwir	okay i'll try that with my zeropage :D
2014-11-25 06:48:10	--	Atque is now known as DrSailorR
2014-11-25 06:48:17	--	DrSailorR is now known as Atque
2014-11-25 06:48:45	feliwir	but i am wondering why he didn't need to use the & operator in front of SetPages
2014-11-25 06:48:59	-->	Balzy (~Balzy@adsl-ull-19-166.48-151.net24.it) has joined ##c++
2014-11-25 06:49:36	Adrinael	Functions implicitly convert to pointers
2014-11-25 06:49:58	blut	It makes sense to declare a pure virtual destructor, correct?
2014-11-25 06:50:34	feliwir	well, still not working if a user a member variable as template parameter
2014-11-25 06:51:00	feliwir	and he isn't using only constants :-/
2014-11-25 06:51:10	m_e	blut: http://stackoverflow.com/questions/1219607/why-do-we-need-a-pure-virtual-destructor-in-c
2014-11-25 06:51:41	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-25 06:52:32	<--	sohail (~user@184.175.8.252) has quit (Ping timeout: 255 seconds)
2014-11-25 06:52:46	-->	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has joined ##c++
2014-11-25 06:52:54	rendar	unbeliveable! My global object declared on a .cpp file got its CTOR called AFTER a member function is called from another global object on another .cpp file -- is that normal? shouldn't the compiler check those dependencies?!
2014-11-25 06:53:21	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-25 06:54:17	Adrinael	rendar, construction order of global objects in different TUs is undefined
2014-11-25 06:54:26	rendar	ok
2014-11-25 06:54:30	Adrinael	What dependencies? How could the compiler know?
2014-11-25 06:54:33	-->	fahadash (~fahadash@unaffiliated/fahadash) has joined ##c++
2014-11-25 06:54:56	<--	mgaunard_ (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-25 06:55:11	<--	Balzy (~Balzy@adsl-ull-19-166.48-151.net24.it) has quit (Ping timeout: 245 seconds)
2014-11-25 06:55:12	fahadash	Can I discuss algorithm and logic building here or this is purely a language-semantic discussion channel ?
2014-11-25 06:55:20	-->	TheAncientGoat (~quassel@210.195.220.183) has joined ##c++
2014-11-25 06:55:22	Adrinael	!general
2014-11-25 06:55:23	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-25 06:55:28	fahadash	Thanks
2014-11-25 06:55:32	-->	doev (~doev@p4FE10968.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 06:56:01	<--	jrnas (~jrnas@unaffiliated/xedasx) has quit (Read error: Connection reset by peer)
2014-11-25 06:56:10	feliwir	Adrinael: here it's shown how he uses this kind of templates: http://youtu.be/y71lli8MS8s?t=9m32s .It just won't work for me like this :(
2014-11-25 06:56:45	Adrinael	Tell him to bugger off with the wrong code
2014-11-25 06:57:29	feliwir	well the code does work and he shows that
2014-11-25 06:59:07	Adrinael	Use the same compiler then
2014-11-25 06:59:32	feliwir	ye, because g++ on windows is that much fun :D
2014-11-25 06:59:55	Adrinael	What's wrong with it?
2014-11-25 07:00:44	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-25 07:00:50	Gvidon	Does it support SEHs?
2014-11-25 07:00:52	feliwir	the windows commandline does suck and using mingw etc. isn't that handy aswell
2014-11-25 07:01:06	Adrinael	Then use bash
2014-11-25 07:02:42	feliwir	msvc so disappointing -.-
2014-11-25 07:03:16	feliwir	can someone tell me how templates with references are technically called so i can google for it? :D
2014-11-25 07:03:16	o11c	just do all your windows builds cross-compiled from linux
2014-11-25 07:03:51	feliwir	i actually have a linux makefile for this project, but i wanted other people to rebuild my project without much effort
2014-11-25 07:04:39	-->	mihipte (~mihipte@67.210.148.49) has joined ##c++
2014-11-25 07:05:10	NinjaPenguin	You need more effort to get valid code to compile on MSVC than they need to set up a VM.
2014-11-25 07:05:45	Gvidon	I'm really interested, can you use gcc (mingw, whatever) with seh-based exceptions?
2014-11-25 07:05:46	feliwir	well, i have this effort once and they'll have it everytime they build it :D
2014-11-25 07:06:19	NinjaPenguin	Also, they're called template parameters.
2014-11-25 07:06:20	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-25 07:07:16	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-25 07:09:20	<--	pullphinger (~Pullxinge@73.44.212.38) has quit
2014-11-25 07:09:25	feliwir	wow this is working for classes, but not for function: http://msdn.microsoft.com/en-us/library/x5w1yety.aspx gz m$
2014-11-25 07:09:29	-->	z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has joined ##c++
2014-11-25 07:09:31	rendar	Adrinael: so how i can tell the compiler "initialize objects in this TU before all others" ?
2014-11-25 07:10:19	<--	z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has quit (Client Quit)
2014-11-25 07:10:21	<--	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has quit (Quit: A little boy who had a big hallucination)
2014-11-25 07:10:45	-->	Balzy (~Balzy@host111-166-dynamic.8-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 07:10:46	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-25 07:11:20	Adrinael	rendar, define them both in the same TU. Then the order is the order of definition.
2014-11-25 07:12:31	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-25 07:13:09	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-25 07:13:24	-->	gigabytes (~gigabytes@adsl-ull-184-185.49-151.net24.it) has joined ##c++
2014-11-25 07:13:40	<--	it_2 (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-11-25 07:14:35	Gvidon	rendar: I saw an interesting solution of this problem once: all classes were PODs with custom Create() and Destruct() members and a system that called those functions in the specified order (with dependencies and everything). Not fun to use but it worked
2014-11-25 07:15:08	<--	Balzy (~Balzy@host111-166-dynamic.8-87-r.retail.telecomitalia.it) has quit (Ping timeout: 245 seconds)
2014-11-25 07:15:34	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Quit: leaving)
2014-11-25 07:16:04	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-25 07:16:26	coolcat	Is operator< well defined on pointers and iterators?
2014-11-25 07:16:49	Adrinael	Define "well defined"
2014-11-25 07:17:40	Adrinael	You can't compare pointers that point to different objects with <. (Arrays count as objects here) That's UB.
2014-11-25 07:17:50	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 07:18:01	Adrinael	But there's std::less that is defined for different objects
2014-11-25 07:18:32	Adrinael	With iterators, you can't compare iterators in different containers with <. std::less does not help.
2014-11-25 07:19:54	-->	zebra5000 (~zebra@58-6-217-155.dyn.iinet.net.au) has joined ##c++
2014-11-25 07:20:24	<--	heedypo (~heedypo3@host-89-242-208-168.as13285.net) has quit (Ping timeout: 264 seconds)
2014-11-25 07:21:07	coolcat	Adrinael, I want to compare on the same container.
2014-11-25 07:21:12	hauron	hi, basic question - consider a .cpp file with several classes defined in a namespace, destined to be used locally in this file only, does it make any sense to make their definition 'static'? (as is in C)
2014-11-25 07:21:19	hauron	s/classes/functions
2014-11-25 07:21:27	<--	zebra5000 (~zebra@58-6-217-155.dyn.iinet.net.au) has quit (Remote host closed the connection)
2014-11-25 07:22:05	<--	jrolland-ubuntu (~jrolland@72.131.125.94) has quit (Ping timeout: 255 seconds)
2014-11-25 07:23:24	<--	pandaant (~batman@149.201.240.93) has quit (Quit: Lost terminal)
2014-11-25 07:23:45	<--	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Remote host closed the connection)
2014-11-25 07:23:46	coolcat	hauron, for functions it does.
2014-11-25 07:24:14	hauron	coolcat, the same reasoning as in C I guess, thanks you
2014-11-25 07:24:26	<--	feliwir (~Feliwir@HSI-KBW-46-223-23-127.hsi.kabel-badenwuerttemberg.de) has quit (Ping timeout: 258 seconds)
2014-11-25 07:24:38	<--	netj (~netj@naru.stanford.edu) has quit (Ping timeout: 244 seconds)
2014-11-25 07:24:46	-->	netj (~netj@naru.stanford.edu) has joined ##c++
2014-11-25 07:25:45	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 250 seconds)
2014-11-25 07:25:49	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-25 07:26:09	coolcat	hauron, yes, it is not exposed to other translation units.
2014-11-25 07:26:27	Adrinael	coolcat, then op< is fine. As long as the iterator is random access.
2014-11-25 07:28:04	-->	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 07:28:27	<--	immibis (~ChatZill1@122-59-112-18.jetstream.xtra.co.nz) has quit (Ping timeout: 255 seconds)
2014-11-25 07:29:47	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 258 seconds)
2014-11-25 07:31:55	coolcat	Adrinael, Thanks
2014-11-25 07:31:55	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 07:32:10	--	murrekatt is now known as murrekatt_
2014-11-25 07:34:17	<--	Burga (~andrewm@124-150-99-226.dyn.iinet.net.au) has quit (Ping timeout: 255 seconds)
2014-11-25 07:35:10	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-25 07:35:12	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 07:35:54	<--	mihipte (~mihipte@67.210.148.49) has quit (Ping timeout: 256 seconds)
2014-11-25 07:37:07	-->	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-25 07:38:02	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 244 seconds)
2014-11-25 07:38:19	-->	dapz (~textual@216.239.45.130) has joined ##c++
2014-11-25 07:39:30	<--	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has quit (Quit: Leaving)
2014-11-25 07:41:44	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 07:41:45	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2014-11-25 07:43:12	--	akatsukibay2 is now known as mangekyo
2014-11-25 07:43:33	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-25 07:44:37	<--	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has quit (Ping timeout: 255 seconds)
2014-11-25 07:47:33	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-25 07:47:36	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-25 07:48:44	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Client Quit)
2014-11-25 07:49:08	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 240 seconds)
2014-11-25 07:49:31	<--	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 250 seconds)
2014-11-25 07:51:05	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-25 07:51:18	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 245 seconds)
2014-11-25 07:51:18	--	fstd_ is now known as fstd
2014-11-25 07:51:59	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-25 07:53:09	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Max SendQ exceeded)
2014-11-25 07:53:34	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-25 07:54:10	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 07:55:26	<--	raj___ (~xar@182.65.92.234) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-25 07:55:32	<--	jafar (~jafar@41.205.22.13) has quit (Ping timeout: 264 seconds)
2014-11-25 07:57:11	<--	cleamoon (~Thunderbi@c213-89-98-137.bredband.comhem.se) has quit (Quit: cleamoon)
2014-11-25 07:58:05	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-25 07:58:06	-->	pHane__ (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 07:58:45	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-25 07:59:35	<--	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Excess Flood)
2014-11-25 07:59:37	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 240 seconds)
2014-11-25 08:00:10	-->	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has joined ##c++
2014-11-25 08:01:13	<--	kurahaupo (~kurahaupo@118.148.146.243) has quit (Ping timeout: 244 seconds)
2014-11-25 08:01:14	<--	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 255 seconds)
2014-11-25 08:01:52	-->	Lowl3v3l_ (~Lowl3v3l@2a02:810a:8380:92c:a1b3:73ff:e3b1:cfb6) has joined ##c++
2014-11-25 08:02:21	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-25 08:03:34	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-25 08:04:58	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:a1b3:73ff:e3b1:cfb6) has quit (Ping timeout: 258 seconds)
2014-11-25 08:05:24	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-25 08:05:25	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 08:06:12	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Read error: Connection reset by peer)
2014-11-25 08:06:23	<--	DLSteve (~textual@50.248.248.108) has quit (Read error: Connection reset by peer)
2014-11-25 08:07:01	-->	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has joined ##c++
2014-11-25 08:08:28	hauron	hi, the code: http://ideone.com/L5uTNT compiles, is related to C arrays of size known only during run-time (supposedly), is this a new feature of C++11?
2014-11-25 08:08:53	TinoDidriksen	That doesn't compile in standards mode.
2014-11-25 08:09:15	TinoDidriksen	It is not valid code.
2014-11-25 08:09:29	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-25 08:09:32	hauron	TinoDidriksen: thanks, I thought I had missed something :)
2014-11-25 08:12:53	-->	only_the_bear_ (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-25 08:12:54	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 08:13:20	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-japftcdyplmteqiq) has joined ##c++
2014-11-25 08:13:39	<--	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 250 seconds)
2014-11-25 08:15:08	<--	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has quit (Ping timeout: 244 seconds)
2014-11-25 08:16:03	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 08:16:27	Gvidon	Are there proposals to add VLAs to C++? I hope not
2014-11-25 08:16:42	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 08:16:48	V-ille	there are many proposals in that area
2014-11-25 08:16:54	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (Remote host closed the connection)
2014-11-25 08:16:55	V-ille	none have been accepted
2014-11-25 08:17:44	Gvidon	Thank god. What the C guys were thinking when they created that feature?
2014-11-25 08:18:50	-->	nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-25 08:19:19	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-25 08:20:26	-->	feliwir (~Feliwir@HSI-KBW-46-223-23-127.hsi.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-25 08:20:56	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-25 08:21:30	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-25 08:21:38	<--	Draecos (~Draecos@106-69-27-44.dyn.iinet.net.au) has quit (Quit: Leaving)
2014-11-25 08:21:48	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-25 08:22:05	V-ille	performance?
2014-11-25 08:22:52	<--	dapz (~textual@216.239.45.130) has quit (Quit: My MacBook has gone to sleep. ZZZzzz?)
2014-11-25 08:23:03	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-25 08:23:29	-->	pHane (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 08:23:39	-->	Tazmain (~Tazmainia@197.82.203.122) has joined ##c++
2014-11-25 08:23:59	-->	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 08:24:58	Gvidon	V-ille: There is no performance gain over the usual static arrays. And if you really have no idea what the size of the array might be, then allocating it on stack is just plain stupid
2014-11-25 08:25:12	<--	pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-25 08:26:10	<--	pHane__ (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 265 seconds)
2014-11-25 08:26:56	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-25 08:27:53	-->	Banandana (~Banandana@c-67-174-45-82.hsd1.ca.comcast.net) has joined ##c++
2014-11-25 08:27:54	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-25 08:28:08	-->	z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has joined ##c++
2014-11-25 08:28:26	<--	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Ping timeout: 250 seconds)
2014-11-25 08:28:55	-->	lamefun (~lamefun2@5.166.225.171) has joined ##c++
2014-11-25 08:29:21	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-25 08:29:56	-->	pfo_ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-25 08:30:25	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-25 08:31:13	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-25 08:31:14	--	shintahW2 is now known as shintahW
2014-11-25 08:32:45	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-11-25 08:33:35	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 08:35:48	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 08:36:18	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-25 08:36:57	<--	only_the_bear_ (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Remote host closed the connection)
2014-11-25 08:37:05	<--	komarov (~komarov@92.46.10.108) has quit (Ping timeout: 250 seconds)
2014-11-25 08:37:05	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 08:37:08	-->	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 08:37:12	<--	snyp (~Snyp@150.129.132.64) has quit (Quit: WeeChat 1.0.1)
2014-11-25 08:37:22	-->	only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-25 08:38:05	<--	feliwir (~Feliwir@HSI-KBW-46-223-23-127.hsi.kabel-badenwuerttemberg.de) has quit (Ping timeout: 240 seconds)
2014-11-25 08:38:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 08:39:12	<--	SiGe_ (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Remote host closed the connection)
2014-11-25 08:40:19	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-11-25 08:40:21	-->	borkdox (~borkdox@c-71-235-215-26.hsd1.ct.comcast.net) has joined ##c++
2014-11-25 08:40:45	<--	bumbar_ (~username@unaffiliated/bumbar) has quit (Ping timeout: 240 seconds)
2014-11-25 08:42:17	-->	Priam (~Priam@221.11.20.102) has joined ##c++
2014-11-25 08:43:02	-->	xpinguin (~null@81.5.108.108.dhcp.mipt-telecom.ru) has joined ##c++
2014-11-25 08:43:44	Nickeeh	I never thought about it that way..
2014-11-25 08:44:19	V-ille	Gvidon: there is a performance gain over free-store-allocated dynamic arrays
2014-11-25 08:44:44	-->	bumbar_ (~username@unaffiliated/bumbar) has joined ##c++
2014-11-25 08:45:09	-->	sacio (~odin@ti0053a400-3264.bb.online.no) has joined ##c++
2014-11-25 08:46:02	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-25 08:46:03	Gvidon	V-ille: Sure, I'm not talking about them
2014-11-25 08:46:29	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-25 08:46:34	-->	fender0107401 (~fender010@114.244.71.203) has joined ##c++
2014-11-25 08:49:35	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-25 08:49:35	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 08:50:28	-->	sohail (~user@69-196-187-44.dsl.teksavvy.com) has joined ##c++
2014-11-25 08:50:42	Gvidon	The way I see it: if you know for sure that the number of elements in your array won't exceed some constant N (and it isn't too big), just declare "type name[N];". If you don't, then you really shouldn't allocate it on stack. Performance penalty is still better than a stack overflow
2014-11-25 08:51:07	<--	luny (~luny@unaffiliated/luny) has quit (Read error: Connection reset by peer)
2014-11-25 08:51:43	<--	Rav3n (~Rav3n@unaffiliated/rav3nsw0rd) has quit (Read error: Connection reset by peer)
2014-11-25 08:52:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 08:54:18	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-25 08:55:16	V-ille	for you it might be. For others it's not.
2014-11-25 08:55:16	-->	mihipte (~mihipte@67.210.148.49) has joined ##c++
2014-11-25 08:55:30	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-25 08:55:32	-->	prosper_ (~prosper@142.150.23.90) has joined ##c++
2014-11-25 08:56:56	Gvidon	For those rare cases there are things like alloca
2014-11-25 08:57:12	V-ille	yeah, well, a vla is a cross-platform alloca
2014-11-25 08:58:04	<--	reiser_ (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Quit: Leaving)
2014-11-25 08:58:29	-->	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has joined ##c++
2014-11-25 09:00:29	<--	Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-11-25 09:00:30	<--	pHane (~pHane@114.81-166-203.customer.lyse.net) has quit (Ping timeout: 244 seconds)
2014-11-25 09:01:12	-->	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has joined ##c++
2014-11-25 09:02:10	-->	Rickmasta (~Rick@137.125.143.163) has joined ##c++
2014-11-25 09:02:22	-->	Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-25 09:02:33	-->	forgottenone (~forgotten@176.42.244.7) has joined ##c++
2014-11-25 09:03:10	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 264 seconds)
2014-11-25 09:04:05	<--	forgottenone (~forgotten@176.42.244.7) has quit (Client Quit)
2014-11-25 09:05:17	-->	fender0117401 (~fender010@114.244.71.203) has joined ##c++
2014-11-25 09:05:22	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-25 09:05:25	-->	Ysports (~sdf@128-72-141-126.broadband.corbina.ru) has joined ##c++
2014-11-25 09:07:24	<--	Albori (~Albori@64-251-150-248.fidnet.com) has quit
2014-11-25 09:08:30	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2014-11-25 09:08:43	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Leaving)
2014-11-25 09:08:45	<--	fender0107401 (~fender010@114.244.71.203) has quit (Ping timeout: 264 seconds)
2014-11-25 09:08:45	<--	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 264 seconds)
2014-11-25 09:11:18	<--	Ysports (~sdf@128-72-141-126.broadband.corbina.ru) has quit
2014-11-25 09:12:54	-->	balance (c3b06e5c@gateway/web/freenode/ip.195.176.110.92) has joined ##c++
2014-11-25 09:13:08	balance	hi
2014-11-25 09:13:24	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-25 09:13:29	<--	JoshSyn (~swoorup@d122-109-112-119.per801.wa.optusnet.com.au) has quit (Read error: Connection reset by peer)
2014-11-25 09:14:13	-->	lh_mouse_ (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-25 09:14:40	-->	Mission-Critical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2014-11-25 09:15:15	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-25 09:15:35	balance	getting test1 must be initialized by constructor not by {} ... for https://gist.github.com/anonymous/bd17ca37bdcb3c2637d6 so you can't init a vector like that? this code was given to me like that and actually is supposed to work. So I don't think the code is actually wrong but I'm messing it up somwhow. (just did the comments)
2014-11-25 09:15:47	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-25 09:16:03	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 272 seconds)
2014-11-25 09:16:08	<--	misterme (~misterme@2601:8:8000:102f:d9ef:afb9:3509:fae6) has quit (Quit: leaving)
2014-11-25 09:19:04	-->	oleo (~oleo@xdsl-78-35-161-57.netcologne.de) has joined ##c++
2014-11-25 09:19:05	-->	nivyaj (uid41702@gateway/web/irccloud.com/x-xpqalrlhzswrxfpm) has joined ##c++
2014-11-25 09:19:15	--	lh_mouse_ is now known as lh_mouse
2014-11-25 09:19:30	-->	Longlius (~longlius@141.225.243.254) has joined ##c++
2014-11-25 09:21:35	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 09:21:50	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-25 09:22:51	<--	m_e (b21bb635@gateway/web/freenode/ip.178.27.182.53) has quit (Quit: Page closed)
2014-11-25 09:23:36	tsimpson_	balance: make sure your compiler supports C++11 and is compiling in C++11 mode
2014-11-25 09:23:59	balance	tsimpson okay thanks
2014-11-25 09:24:32	-->	huhze (~quassel@dslb-188-103-025-199.188.103.pools.vodafone-ip.de) has joined ##c++
2014-11-25 09:24:53	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 09:25:24	<--	SiN_Bizkit (~SiN_Bizki@host-94-251-111-51.bbcustomer.zsttk.net) has quit (Quit: SiN_Bizkit)
2014-11-25 09:25:30	<--	Mission-Critical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 264 seconds)
2014-11-25 09:26:26	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-25 09:26:58	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 255 seconds)
2014-11-25 09:26:59	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Remote host closed the connection)
2014-11-25 09:27:19	<--	mihipte (~mihipte@67.210.148.49) has quit (Ping timeout: 245 seconds)
2014-11-25 09:27:46	-->	Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-25 09:27:55	-->	kkh (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-11-25 09:27:56	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-25 09:29:06	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-25 09:29:23	-->	sam__ (~sam@p2003004F2D461696D821166A89F6657C.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 09:31:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 09:31:37	-->	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 09:33:10	<--	crafty1 (~crafty1@24.229.140.232.res-cmts.sm.ptd.net) has quit (Ping timeout: 255 seconds)
2014-11-25 09:33:38	<--	lamefun (~lamefun2@5.166.225.171) has quit (Quit: Leaving)
2014-11-25 09:34:50	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 09:36:32	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Disconnected by services)
2014-11-25 09:36:37	-->	Zcvzyvw_ (~nooblet@101.98.214.38) has joined ##c++
2014-11-25 09:38:09	<--	Tr0p1caL (~Tr0p1caL@2a02:1205:5038:5d90:e82f:7d6f:6f2c:d17) has quit (Ping timeout: 272 seconds)
2014-11-25 09:38:12	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-25 09:39:59	-->	Superlokkus (~Superlokk@wh0784.dip.tu-dresden.de) has joined ##c++
2014-11-25 09:40:46	<--	Zcvzyvw_ (~nooblet@101.98.214.38) has quit (Client Quit)
2014-11-25 09:41:04	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-25 09:42:06	Superlokkus	Is the way to test a std::string for alphabetic characters really using std::isalpha() on it's c_str() represenatation or did I missed something in the std::string library?
2014-11-25 09:43:12	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-25 09:43:22	-->	Malsasa (~Malsasa@180.251.92.163) has joined ##c++
2014-11-25 09:43:41	cbreak	Superlokkus: std:: algorithms could help. like find_if
2014-11-25 09:44:29	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-25 09:44:47	-->	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-25 09:45:44	Superlokkus	That would look like using std::string find_first_of()!? Isn't there a standard string or c_str list, of alphabetic characters in the library?
2014-11-25 09:46:01	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-25 09:46:13	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 09:46:54	<--	sam__ (~sam@p2003004F2D461696D821166A89F6657C.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-11-25 09:47:02	-->	mihipte (~mihipte@74.194.233.238) has joined ##c++
2014-11-25 09:48:24	Superlokkus	I was just a bit sceptic that all you guys are either using isalpha() or are declaring a const string alphas = {"abc...zABC...Z"};.
2014-11-25 09:52:02	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Remote host closed the connection)
2014-11-25 09:52:38	<--	Errorical (~Errorical@213.128.190.150) has quit (Remote host closed the connection)
2014-11-25 09:53:24	theglass	is there a way to deduce a type from a pointer type?
2014-11-25 09:54:16	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 255 seconds)
2014-11-25 09:54:40	Gvidon	"decltype(*ptr)"?
2014-11-25 09:55:52	cbreak	Superlokkus: you'd use something like std::find_if(str.begin(), str.end(), std::isalpha) == str.end()
2014-11-25 09:56:12	<--	gigabytes (~gigabytes@adsl-ull-184-185.49-151.net24.it) has quit
2014-11-25 09:56:22	cbreak	theglass: there's also a meta programming way :)
2014-11-25 09:56:33	cbreak	theglass: http://en.cppreference.com/w/cpp/types/remove_pointer
2014-11-25 09:57:26	Superlokkus	ok thanks cbreak
2014-11-25 09:58:48	theglass	that's exactly what I mean
2014-11-25 09:59:01	theglass	via template/typename definition
2014-11-25 09:59:05	theglass	thanks cbreak
2014-11-25 09:59:26	<--	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has quit (Ping timeout: 264 seconds)
2014-11-25 09:59:30	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-25 10:00:36	<--	mihipte (~mihipte@74.194.233.238) has left ##c++
2014-11-25 10:02:44	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 10:02:45	<--	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has quit (Ping timeout: 258 seconds)
2014-11-25 10:03:28	<--	fender0117401 (~fender010@114.244.71.203) has quit (Quit: leaving)
2014-11-25 10:04:20	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-25 10:05:51	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 10:06:17	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-25 10:06:57	<--	TheAncientGoat (~quassel@210.195.220.183) has quit (Remote host closed the connection)
2014-11-25 10:06:57	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-25 10:07:46	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Client Quit)
2014-11-25 10:08:11	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-25 10:08:25	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-25 10:08:47	-->	elveni (~JM@37.187.216.202) has joined ##c++
2014-11-25 10:09:05	-->	jhns (~johannes@5.9.234.86) has joined ##c++
2014-11-25 10:09:10	jhns	hello
2014-11-25 10:09:37	<--	elveni (~JM@37.187.216.202) has left ##c++
2014-11-25 10:09:46	-->	magicthing (~merlin@135.ip-92-222-24.eu) has joined ##c++
2014-11-25 10:10:17	<--	tarruda (~tarruda@200.17.134.134) has quit (Quit: WeeChat 0.4.2)
2014-11-25 10:11:14	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-25 10:11:39	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 272 seconds)
2014-11-25 10:11:39	--	shintahW2 is now known as shintahW
2014-11-25 10:12:26	<--	Gvidon (~gvidon@unaffiliated/gvidon) has quit (Quit: Leaving.)
2014-11-25 10:12:31	-->	elveni (~JM@37.187.216.202) has joined ##c++
2014-11-25 10:12:37	<--	prosper_ (~prosper@142.150.23.90) has quit (Ping timeout: 245 seconds)
2014-11-25 10:12:44	elveni	hiya, should i use --this->memberint or --(this->memberint) ?
2014-11-25 10:13:03	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 10:14:08	<--	huhze (~quassel@dslb-188-103-025-199.188.103.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-25 10:14:09	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-25 10:14:17	wilx	elveni: Whatever is correct and accepted by your company's style/guidelines? I think the () are redundant.
2014-11-25 10:15:03	-->	Palando (~palando@f052075039.adsl.alicedsl.de) has joined ##c++
2014-11-25 10:15:23	-->	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 10:15:31	-->	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2014-11-25 10:15:31	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-25 10:15:39	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-25 10:15:55	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-25 10:16:41	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-25 10:16:54	elveni	wilx: hmm, I'll go without the clauses, hopefully no compiler tries to optimize that into incrementing the this pointer :D
2014-11-25 10:17:09	<--	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has quit (Quit: Ex-Chat)
2014-11-25 10:17:16	elveni	I've seen some shit .... lol
2014-11-25 10:17:22	kadoban	Compilers aren't allowed to change precedence as an optimization...
2014-11-25 10:17:57	<--	Priam (~Priam@221.11.20.102) has quit
2014-11-25 10:19:43	elveni	From my experience, it seems to depend on the maker of the compiler whats allowed and whats not, even thought it shouldn't. Simple cases are clear, but the moment you start to do something that syntactically even remotely resembles other than a + b b++ ++b etc. magical things can happen.
2014-11-25 10:20:09	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-25 10:21:07	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 10:21:45	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 272 seconds)
2014-11-25 10:22:06	elsewho	hello, i want to store the value of std::chrono::high_res_clock::now() as a class member, would one use the type std::chrono::time_point<std::chrono::high_resolution_clock>? or is there a better practice like using a duration or something like this?
2014-11-25 10:23:06	<--	Atque (~Atque@unaffiliated/atque) has quit (Remote host closed the connection)
2014-11-25 10:23:07	b_jonas	elsewho: I think there's a shorter typedef for that, something like std::chrono::high_resolution_clock::somethingoranother
2014-11-25 10:23:32	elsewho	b_jonas, ahh ok, got it! thanks.
2014-11-25 10:23:36	-->	Ahmadi (02b34042@gateway/web/freenode/ip.2.179.64.66) has joined ##c++
2014-11-25 10:23:39	<--	LickPlusPlus (~LickPytho@58.166.109.179) has quit (Ping timeout: 272 seconds)
2014-11-25 10:24:15	Ahmadi	Hi
2014-11-25 10:24:39	Ahmadi	I'm trying to save/load a vector in C++
2014-11-25 10:24:40	Ahmadi	http://ideone.com/75PlTx
2014-11-25 10:24:45	Ahmadi	But don't work correcly.
2014-11-25 10:24:57	Ahmadi	Is that wrong!?
2014-11-25 10:25:39	-->	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has joined ##c++
2014-11-25 10:27:02	<--	Rickmasta (~Rick@137.125.143.163) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 10:27:04	Ahmadi	Note : In the link source , mData is std::vector<Ogre::Vector3>.
2014-11-25 10:27:23	Ahmadi	Ogre::Vector3 is a class with float x,y,z members.
2014-11-25 10:27:35	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-25 10:27:52	Ahmadi	When i save a vector and then load it, half of the loaded vector is damaged.
2014-11-25 10:28:08	Ahmadi	Seems that it just read half of the saved vector.
2014-11-25 10:28:38	Palando	const char* is only 1 byte, so it saves only 3 byte
2014-11-25 10:29:06	Palando	a float is 4 byte
2014-11-25 10:29:31	lh_mouse	!give Ahmadi stdref ios::binary
2014-11-25 10:29:33	nolyc	Ahmadi: http://en.cppreference.com/w/cpp/io/ios_base/openmode
2014-11-25 10:29:42	Palando	oh, may be I'm wrong
2014-11-25 10:29:59	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-25 10:29:59	Ahmadi	Palando , where?! i multiply it by count and sizeof(Vector3)
2014-11-25 10:30:34	Ahmadi	lh_mouse, I must used binary open mode ?
2014-11-25 10:31:41	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-25 10:32:03	-->	Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-25 10:32:09	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-25 10:33:15	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-25 10:33:27	Ahmadi	lh_mouse, Thanks, std::ios_base::binary Worked.
2014-11-25 10:33:52	<--	jagob (~jacob@h145.natout.aau.dk) has quit (Ping timeout: 255 seconds)
2014-11-25 10:34:44	-->	Mateus (~Mateus@187-109-9-138.sfox.com.br) has joined ##c++
2014-11-25 10:35:03	Ahmadi	lh_mouse , Why without std::ios_base::binary just half of my vector was loaded !? If i use text mode why not all of output wrong!?
2014-11-25 10:35:26	<--	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-11-25 10:35:47	cbreak	the only difference between binary and text mode is on systems where text mode needs conversion, such as windows
2014-11-25 10:35:48	lh_mouse	No one guarantees all of them should be wrong. Period.
2014-11-25 10:35:50	-->	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-11-25 10:36:16	cbreak	on Mac OS X for example it is ignored.
2014-11-25 10:36:41	<--	balance (c3b06e5c@gateway/web/freenode/ip.195.176.110.92) has quit (Ping timeout: 246 seconds)
2014-11-25 10:36:55	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 272 seconds)
2014-11-25 10:37:25	cbreak	Ahmadi: use a debugger and find out. You're playing with shitty code that tries to abuse undefined behavior, so no one here knows what your compiler and platform does with it
2014-11-25 10:37:36	<--	Betal (~Beta@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2014-11-25 10:38:14	<--	kapil_ (uid36151@gateway/web/irccloud.com/x-nsribvdnejrljgtk) has quit (Quit: Connection closed for inactivity)
2014-11-25 10:38:28	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-25 10:38:43	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-25 10:39:42	-->	luxigo (~luxigo@185.31.100.229) has joined ##c++
2014-11-25 10:41:51	<--	HerzogDeXtEr1 (~flex@88.130.168.79) has quit (Quit: Leaving.)
2014-11-25 10:41:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 10:43:16	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-25 10:44:35	<--	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz?)
2014-11-25 10:44:52	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-25 10:45:10	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 10:45:28	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-25 10:46:27	<--	doev (~doev@p4FE10968.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-25 10:46:48	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 255 seconds)
2014-11-25 10:47:47	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 240 seconds)
2014-11-25 10:47:47	-->	daNRG (~danny@e181230215.adsl.alicedsl.de) has joined ##c++
2014-11-25 10:48:16	<--	patteh_ (~patteh@unaffiliated/patteh) has quit (Quit: leaving)
2014-11-25 10:48:29	-->	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2014-11-25 10:49:57	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-25 10:50:29	<--	hs366 (~ace@h-208-99.a163.corp.bahnhof.se) has quit (Quit: Leaving)
2014-11-25 10:51:39	-->	Malsasa_ (~Malsasa@36.73.221.147) has joined ##c++
2014-11-25 10:52:07	<--	Malsasa (~Malsasa@180.251.92.163) has quit (Ping timeout: 245 seconds)
2014-11-25 10:52:34	-->	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-11-25 10:53:20	<--	DLSteve (~textual@50.248.248.108) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-25 10:53:45	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 256 seconds)
2014-11-25 10:53:52	-->	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has joined ##c++
2014-11-25 10:54:02	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-11-25 10:55:49	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-25 10:55:51	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Ping timeout: 245 seconds)
2014-11-25 10:56:38	-->	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-11-25 10:56:43	-->	Burgundy (~burgundy@188.26.254.244) has joined ##c++
2014-11-25 10:56:51	<--	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Client Quit)
2014-11-25 10:57:39	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-25 10:57:49	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-25 10:59:48	-->	proteusguy (~proteusgu@ppp-110-168-229-244.revip5.asianet.co.th) has joined ##c++
2014-11-25 11:00:25	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Client Quit)
2014-11-25 11:00:44	matt90	is the preferred idiom for insert-or-update find-and-emplace or emplace-and-if-fail-update?
2014-11-25 11:00:53	-->	scai (~scai@p4FF0E024.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 11:01:35	matt90	the value type is cheap to construct so I guess emplace-or-update would save one traversal?
2014-11-25 11:01:48	matt90	at the cost of potentially constructing a useless value
2014-11-25 11:01:56	<--	r3g3x (~r3g3x@unaffiliated/r3g3x) has quit (Quit: Leaving)
2014-11-25 11:02:14	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-25 11:02:16	-->	r3g3x (~r3g3x@unaffiliated/r3g3x) has joined ##c++
2014-11-25 11:04:40	-->	simius (~simius@h-88-117.a230.priv.bahnhof.se) has joined ##c++
2014-11-25 11:04:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 11:05:47	-->	Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has joined ##c++
2014-11-25 11:06:24	-->	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 11:07:54	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 11:11:43	<--	netj (~netj@naru.stanford.edu) has quit (Ping timeout: 240 seconds)
2014-11-25 11:11:56	<--	sohail (~user@69-196-187-44.dsl.teksavvy.com) has quit (Ping timeout: 255 seconds)
2014-11-25 11:12:06	-->	netj (~netj@128.12.163.109) has joined ##c++
2014-11-25 11:12:35	--	Anoniem4l`afk is now known as Anoniem4l
2014-11-25 11:16:30	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 11:17:46	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-25 11:18:40	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-25 11:19:28	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-25 11:19:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 11:21:04	-->	sjeijk (~SJ@52D94738.cm-11-1b.dynamic.ziggo.nl) has joined ##c++
2014-11-25 11:21:25	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 11:21:52	-->	Christian87 (Administra@185.66.140.51) has joined ##c++
2014-11-25 11:22:34	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-25 11:23:05	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-25 11:25:09	-->	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-11-25 11:25:09	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-25 11:25:16	-->	antons_ (~antons@199.48.120.2) has joined ##c++
2014-11-25 11:25:40	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-25 11:26:29	<--	xulef (~phuc@hpproliant.cse.unt.edu) has quit (Quit: leaving)
2014-11-25 11:27:00	-->	kurahaupo (~kurahaupo@118.148.222.161) has joined ##c++
2014-11-25 11:27:07	-->	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-11-25 11:27:17	Christian87	hello, i have a lib which gets an input audio stream and writes a wav file. At the moment I write the wav file to hdd and then convert this file to mp3 using ffmpeg. I would like to convert the file directly without saving it on hdd. I know that ffmpeg can work with pipes as input (pipe:0 stdin e.g) but i dont now how I can do this in c++ using to processe
2014-11-25 11:28:02	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-25 11:28:10	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-25 11:29:05	V-ille	!give Christian87 general
2014-11-25 11:29:07	nolyc	Christian87: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-25 11:29:25	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Ping timeout: 264 seconds)
2014-11-25 11:29:25	-->	aslant_ (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-25 11:29:28	Christian87	ok sorry
2014-11-25 11:30:27	<--	blut (864c2693@gateway/web/freenode/ip.134.76.38.147) has quit (Ping timeout: 246 seconds)
2014-11-25 11:30:48	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-25 11:31:07	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-25 11:31:08	<--	brainard52 (~brainard5@2601:7:7e80:dc0:e82e:d432:563c:8c48) has quit (Quit: Leaving)
2014-11-25 11:31:54	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 11:32:09	-->	Gama11 (~quassel@p579673D0.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 11:32:40	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-25 11:33:35	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-11-25 11:33:42	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Client Quit)
2014-11-25 11:33:45	-->	redjack1964 (~quassel@39.237.151.77.rev.sfr.net) has joined ##c++
2014-11-25 11:34:06	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-25 11:34:30	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 245 seconds)
2014-11-25 11:35:42	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-25 11:37:16	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-25 11:37:59	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-25 11:39:48	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Remote host closed the connection)
2014-11-25 11:40:13	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-25 11:40:19	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-25 11:40:29	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-25 11:43:20	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-25 11:43:25	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Quit: SiN_Bizkit)
2014-11-25 11:44:17	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-25 11:46:04	-->	Simplar (05e47fbd@gateway/web/freenode/ip.5.228.127.189) has joined ##c++
2014-11-25 11:46:08	<--	aslant_ (~aslant@5751a00f.skybroadband.com) has quit (Quit: Leaving...)
2014-11-25 11:46:15	Simplar	Hello. I have a question. Please advise me a system which will support all on Asus X550CV notebook. Currently I have Debian 7.7 where wi-fi driver always disconnects and camera don't work. I'm testing it for a month and akready got tired of these problems.
2014-11-25 11:47:51	<--	tsimpson_ (b903a4c7@ubuntu/member/stdin) has quit (Quit: quitting time)
2014-11-25 11:47:59	TinoDidriksen	Simplar, that is entirely off topic. Try #debian
2014-11-25 11:49:24	-->	LQDHelium_ (sid39476@gateway/web/irccloud.com/x-jbeclgarloljrzcq) has joined ##c++
2014-11-25 11:49:44	<--	sjeijk (~SJ@52D94738.cm-11-1b.dynamic.ziggo.nl) has quit (Ping timeout: 255 seconds)
2014-11-25 11:50:00	<--	hauron (c0c6972c@gateway/web/freenode/ip.192.198.151.44) has quit (Ping timeout: 246 seconds)
2014-11-25 11:51:19	-->	doev (~doev@p4FE10968.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 11:51:30	<--	rriemann (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2014-11-25 11:52:15	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-25 11:52:35	-->	illerucis (~illerucis@199.201.65.135) has joined ##c++
2014-11-25 11:53:50	-->	kaffeetrauma (~Thunderbi@5.147.4.15) has joined ##c++
2014-11-25 11:54:02	<--	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has quit (Remote host closed the connection)
2014-11-25 11:54:09	-->	komarov (~komarov@37.150.162.102) has joined ##c++
2014-11-25 11:54:42	<--	Superlokkus (~Superlokk@wh0784.dip.tu-dresden.de) has quit (Quit: Leaving...)
2014-11-25 11:55:40	<--	Palando (~palando@f052075039.adsl.alicedsl.de) has quit (Quit: Konversation terminated!)
2014-11-25 11:55:45	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-25 11:57:09	<--	j0z (~j0z@unaffiliated/j0z) has quit (Ping timeout: 272 seconds)
2014-11-25 11:57:34	negerns	so when will c++ have a decimal data type? is there a decimal library?
2014-11-25 11:57:43	-->	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has joined ##c++
2014-11-25 11:58:12	-->	jcelerier (~doom@AToulouse-657-1-1057-117.w83-193.abo.wanadoo.fr) has joined ##c++
2014-11-25 11:58:44	jcelerier	Hello, is there a channel more suitable for questions about design patterns in c++ ?
2014-11-25 11:58:46	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 11:58:49	jcelerier	or is this one right ?
2014-11-25 11:58:54	-->	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has joined ##c++
2014-11-25 11:58:56	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-25 11:59:15	hs_	probably ##C++-general
2014-11-25 11:59:19	<--	The_Coolest (~Arthur_Li@109.64.71.201) has quit (Quit: FOLD For The Cause!!!)
2014-11-25 11:59:38	jcelerier	okay, thank you very much :)
2014-11-25 11:59:54	<--	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has quit (Ping timeout: 256 seconds)
2014-11-25 12:01:03	<--	Anodl (~Anodl@213.157.2.74) has quit (Read error: Connection reset by peer)
2014-11-25 12:01:13	-->	sjeijk (~SJ@s529d26aa.adsl.online.nl) has joined ##c++
2014-11-25 12:01:15	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-25 12:01:30	-->	The_Coolest (~Arthur_Li@109.64.71.201) has joined ##c++
2014-11-25 12:02:57	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-25 12:03:38	<--	prism (~paul@cpc9-linc12-2-0-cust293.12-1.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-25 12:03:55	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 12:03:59	-->	lamefun (~lamefun2@5.166.225.171) has joined ##c++
2014-11-25 12:05:17	<--	lamefun (~lamefun2@5.166.225.171) has quit (Client Quit)
2014-11-25 12:06:12	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-25 12:06:28	<--	Ahmadi (02b34042@gateway/web/freenode/ip.2.179.64.66) has quit (Quit: Page closed)
2014-11-25 12:06:34	<--	Simplar (05e47fbd@gateway/web/freenode/ip.5.228.127.189) has left ##c++
2014-11-25 12:07:00	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-25 12:07:06	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-25 12:08:18	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-25 12:08:38	<--	CrizMobius (~CrizMobiu@c83-251-182-69.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-11-25 12:08:38	<--	Olipro__ (~Olipro@95.147.72.64) has left ##c++
2014-11-25 12:08:48	-->	Olipro_ (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined ##c++
2014-11-25 12:08:59	Olipro_	negerns: you mean something with greater precision than a double?
2014-11-25 12:09:09	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Client Quit)
2014-11-25 12:09:30	tworkin	could also be fixed point?
2014-11-25 12:10:00	Olipro_	boost has wrappers around libgmp if you need arbitrary precision
2014-11-25 12:10:02	-->	j0z (~j0z@unaffiliated/j0z) has joined ##c++
2014-11-25 12:10:17	Eelis	which boost lib is that?
2014-11-25 12:10:25	negerns	Olipro_, something I could use for money matters
2014-11-25 12:10:53	Olipro_	a float/double primitive should suffice then
2014-11-25 12:10:56	Eelis	then decimal may not be appropriate at all. maybe you just want   int cents;  or something
2014-11-25 12:11:13	negerns	something like that
2014-11-25 12:11:26	kadoban	Olipro_: Decimal libraries are usually about different things than arbitrary precision. No matter how many binary digits you have, you can't represent 0.2 exactly.
2014-11-25 12:11:33	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-25 12:11:42	negerns	Olipro_, isn't there a problem using floats because they are not fixed?
2014-11-25 12:12:19	<--	sjeijk (~SJ@s529d26aa.adsl.online.nl) has quit (Quit: sjeijk)
2014-11-25 12:12:25	negerns	kadoban, that's exactly what troubles me
2014-11-25 12:12:30	-->	bayoubengal (~bayoubeng@host-64-47-180-143.masergy.com) has joined ##c++
2014-11-25 12:12:54	Eelis	start by looking at your input data, output data, and the required operations on the values. then choose a data type
2014-11-25 12:12:57	Eelis	not the other way around
2014-11-25 12:12:58	bayoubengal	morning
2014-11-25 12:12:59	mukunda_	no matter how many digits you use, you cant represent an irrational number either
2014-11-25 12:13:01	M-ou-se	just use whole numbers (int, long, ...) and count in cents or whatever your smallest unit is.
2014-11-25 12:13:16	Olipro_	kadoban: you can represent 0.2 just fine, the trick is everything between say 0.2 and 0.21
2014-11-25 12:13:20	tworkin	which is a boring way to say use fixed point :)
2014-11-25 12:13:38	tworkin	the key is to send the rounded off cents into my banking account
2014-11-25 12:13:38	bayoubengal	Why wasn't the constructor on the shared_ptr set up so that the deleter object is moved into the shared_ptr rather than copied?
2014-11-25 12:13:44	<--	losh (~losh@staff-fr.corp.dailymotion.com) has quit (Quit: Leaving)
2014-11-25 12:13:45	<--	bb010g (uid21050@gateway/web/irccloud.com/x-wflegfdcrjeuiivs) has quit (Quit: Connection closed for inactivity)
2014-11-25 12:14:01	kadoban	Olipro_: In normal floating point, 0.2 is not exactly representable. Fixed point either.
2014-11-25 12:14:15	bayoubengal	I tried to give it a lambda with a non-copyable capture in it
2014-11-25 12:14:22	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-25 12:14:27	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-25 12:14:30	bayoubengal	the compiler is no liking it
2014-11-25 12:14:40	M-ou-se	<< setprecision(20) << 0.2;
2014-11-25 12:14:41	geordi	0.2000000000000000111
2014-11-25 12:15:07	kadoban	Olipro_: This is in binary of course. It's the same concept where you can't represent 1/3 exactly as a decimal number.  0.333333333  This is because 3 is not a divisor of 10 (base-10). The same way, 5 is not a divisor of 2 (base-2), so 1/5 is not exactly representable as a binary number.
2014-11-25 12:15:34	Olipro_	well, 1/3 isn't quite the same as 0.2
2014-11-25 12:15:43	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 256 seconds)
2014-11-25 12:15:51	M-ou-se	why is 1/5 noth the same as 1/3?
2014-11-25 12:16:00	M-ou-se	*same kind of thing
2014-11-25 12:16:20	Olipro_	1/3 goes in infinitely
2014-11-25 12:16:22	adamm	What about PI or e? Why can't I represent that exactly? :)
2014-11-25 12:16:25	kadoban	Olipro_: ? Read more carefully. I didn't say they were. It's an example for base-10 which you're probably more familiar with. The concept is exactly the same, just the base is different.
2014-11-25 12:16:35	kadoban	Olipro_: Yes, and so does 0.2 in binary.
2014-11-25 12:16:44	Olipro_	uh
2014-11-25 12:16:53	Olipro_	that would depend on how you chose to represent it in binary
2014-11-25 12:17:03	hs_	"how you choose to represent it in binary"
2014-11-25 12:17:21	Olipro_	as in, the machine conversion
2014-11-25 12:17:34	-->	a_le (~a_le@172.56.39.237) has joined ##c++
2014-11-25 12:17:35	kurahaupo	adamm: because you can store only a finite number of digits
2014-11-25 12:17:38	Olipro_	such as an IEEE float
2014-11-25 12:17:41	kadoban	Olipro_: Binary is base-2. It's just numbers. If you want to be that pedantic, I already specified floating point or fixed point.
2014-11-25 12:17:53	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-25 12:17:59	<--	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-11-25 12:17:59	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-25 12:18:05	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-25 12:18:36	mukunda_	just use double for currency and round the result if you want to display it
2014-11-25 12:18:36	negerns	thanks for your advice Eelis
2014-11-25 12:19:21	<--	doev (~doev@p4FE10968.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-25 12:19:28	kurahaupo	adamm: moreover, pi & e are trascendental numbers - the digits have no repeating pattern
2014-11-25 12:20:02	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Client Quit)
2014-11-25 12:20:04	kadoban	adamm: Well, you can in base-pi and base-e :)
2014-11-25 12:20:11	negerns	is there a decimal class that i can use?
2014-11-25 12:20:23	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-25 12:20:26	-->	SiGe (~SiGe@usc-secure-wireless-206-028.usc.edu) has joined ##c++
2014-11-25 12:20:28	kadoban	negerns: Not in the C++ standard library.
2014-11-25 12:20:30	negerns	that's great mukunda_
2014-11-25 12:20:34	M-ou-se	Olipro_: 1/3 doesn't go on indefinitely in base 6
2014-11-25 12:20:39	--	nda_ is now known as nda__
2014-11-25 12:20:45	negerns	kadoban, the closest reliable library
2014-11-25 12:21:22	negerns	i was hoping it would be just a small class
2014-11-25 12:22:16	negerns	i found this written 2003! http://www.codeproject.com/Articles/3667/A-Decimal-Class-Implementation?fid=14580&df=90&mpp=50&noise=5&prof=True&sort=Position&view=Topic&spc=Compact&fr=38
2014-11-25 12:22:18	kadoban	I'm sure there is one, but I don't know one offhand. I'd follow Eelis's advice first though.
2014-11-25 12:22:19	nolyc	<http://tinyurl.com/mpuh6ke> (at www.codeproject.com)
2014-11-25 12:22:44	Olipro_	M-ou-se:but conversely, 1/5 does
2014-11-25 12:22:54	negerns	yep, i should use tinyurl next time :P
2014-11-25 12:22:54	M-ou-se	yes
2014-11-25 12:23:14	M-ou-se	Olipro_: but you were saying that 1/3 was more special than 1/5 somehow. it isn't.
2014-11-25 12:23:24	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-25 12:25:50	-->	LickPlusPlus (~LickPytho@58.166.109.179) has joined ##c++
2014-11-25 12:26:17	hs_	why wouldn't you just use an integer type with small units?
2014-11-25 12:26:34	hs_	or a ratio type
2014-11-25 12:26:57	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-25 12:27:16	Eelis	the choice of data type depends on the input data encoding, the output data encoding, and the operations that need to be performed in between
2014-11-25 12:27:26	kadoban	hs_: It depends what you're doing. The units may need to go arbitrarily small for instance, and you might not know how small in advance. Right, that ^
2014-11-25 12:27:27	Eelis	without knowing those, it is not possible to give sound advice.
2014-11-25 12:27:46	hs_	but currency doesn't go arbitrarily small...?
2014-11-25 12:28:39	kadoban	hs_: You still might need to keep track of amounts less than cents, instead of just ignoring roundoff when you calculate fractions of amounts.
2014-11-25 12:29:40	-->	leeN (~leeN@f051231040.adsl.alicedsl.de) has joined ##c++
2014-11-25 12:29:56	BZEU	What's the difference between char name[] = "Name"; and char *name = "Name";  I know the second one is a pointer but which one to prefer and what's the difference?
2014-11-25 12:30:04	negerns	found this one on github https://github.com/vpiotr/decimal_for_cpp
2014-11-25 12:30:07	<--	SiGe (~SiGe@usc-secure-wireless-206-028.usc.edu) has quit (Remote host closed the connection)
2014-11-25 12:30:39	Eelis	BZEU: std::string name = "Name"; easier and safer
2014-11-25 12:30:55	kadoban	negerns: You still seem to be bypassing Eelis's advice, which is the best so far. You need to figure out if that will even help, first.
2014-11-25 12:30:58	<--	Malsasa_ (~Malsasa@36.73.221.147) has quit (Remote host closed the connection)
2014-11-25 12:31:22	negerns	kadoban, bypassing? what do you mean?
2014-11-25 12:31:34	BZEU	Eelis: Sure but I still want to learn the difference.
2014-11-25 12:31:55	kadoban	negerns: Well, it doesn't seem like you took it to heart, you're still asking for just a decimal library and didn't respond or acknowledge what he said as far as I saw.
2014-11-25 12:32:27	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-25 12:32:42	negerns	I'm not sure what he meant by input/output data encoding
2014-11-25 12:33:13	kadoban	negerns: Just what it sounds like. How are you getting input, and how are you expected to output? What format should it be in for both?
2014-11-25 12:33:36	Eelis	BZEU: char name[] = "Name";  introduces a (non-const) array of 5 chars with the specified values. sizeof(name) will be 5.   char const*name="Name";  introduces a (nonconst) pointer pointing to 5 constant chars that hang out in memory somewhere for the duration of your program
2014-11-25 12:33:53	Eelis	sizeof(name) will be the size of a pointer (e.g. 8) for the pointer version
2014-11-25 12:34:20	Eelis	you can later point the pointer to another char (or array thereof) if you want:   name = "AnotherName";
2014-11-25 12:34:25	BZEU	Eelis: Why did you do char const?
2014-11-25 12:34:33	Eelis	but you can't do that with the array version, because it's not a pointer
2014-11-25 12:34:35	negerns	The data will be coming from databases and displayed on screen, minor manipulations i guess may be done at the front end but because of the lack of a decimal class/library, I'm thinking of doing the calculations at the database backend.
2014-11-25 12:34:40	Eelis	geordi -c char * bla = "bla";
2014-11-25 12:34:42	geordi	warning: deprecated conversion from string constant to 'char*'
2014-11-25 12:34:43	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 12:34:49	Eelis	BZEU: because of that ^
2014-11-25 12:35:04	BZEU	Eelis: hmm?
2014-11-25 12:35:05	Eelis	geordi, add const before *
2014-11-25 12:35:06	<--	Mateus (~Mateus@187-109-9-138.sfox.com.br) has quit (Read error: Connection reset by peer)
2014-11-25 12:35:07	geordi	Success
2014-11-25 12:35:12	Eelis	BZEU: the code you showed was fucked
2014-11-25 12:35:15	Eelis	i unfucked it
2014-11-25 12:35:30	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-25 12:35:32	Eelis	it relied on a deprecated feature of the language
2014-11-25 12:35:48	Eelis	namely the conversion of a string constant to (nonconst)char*
2014-11-25 12:36:31	Eelis	string literals are const. there used to be a C-leftover hole in the const system whereby you could get a char* to a string literal
2014-11-25 12:36:44	Eelis	attempting to write through that char* was UB
2014-11-25 12:36:58	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-25 12:37:03	Eelis	<< TYPE("bla")
2014-11-25 12:37:05	geordi	lvalue char const [4]
2014-11-25 12:37:11	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 240 seconds)
2014-11-25 12:37:15	Eelis	<< TYPE(+"bla")
2014-11-25 12:37:17	geordi	rvalue char const*
2014-11-25 12:37:20	<--	Atque (~Atque@unaffiliated/atque) has quit (Quit: ...)
2014-11-25 12:37:24	Eelis	+ triggers decay
2014-11-25 12:37:48	-->	emg (~emg@74.217.148.5) has joined ##c++
2014-11-25 12:38:03	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-25 12:38:04	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 12:38:06	Eelis	negerns: what data type do the databases use for the currency?
2014-11-25 12:38:52	negerns	Eelis, the database have a money data type
2014-11-25 12:39:08	Eelis	and how does that arrive in your code?
2014-11-25 12:39:10	Eelis	as what?
2014-11-25 12:39:28	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-25 12:39:32	negerns	i guess float
2014-11-25 12:39:39	Eelis	don't guess
2014-11-25 12:39:48	Eelis	look at the API you're using
2014-11-25 12:40:08	<--	illerucis (~illerucis@199.201.65.135) has quit (Remote host closed the connection)
2014-11-25 12:40:12	BZEU	Eelis: Can I change the value if it's a pointer?
2014-11-25 12:40:17	Eelis	BZEU: yes
2014-11-25 12:40:26	Eelis	{ char const * p = "x"; p = "y"; cout << p; }
2014-11-25 12:40:29	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-25 12:40:29	geordi	y
2014-11-25 12:40:55	BZEU	Eelis: Sorry if I ask again but didn't understand why const tho. You say that this will be read-only
2014-11-25 12:41:57	Eelis	BZEU: the type of "bla" is char const[4]. when something has this type it normally means you can convert it to char const* but not to char*. but for string literals there was an exception, due to the way things were in C
2014-11-25 12:42:06	-->	P1RATEZ (piratez@CPEbc1401e23523-CMbc1401e23520.cpe.net.cable.rogers.com) has joined ##c++
2014-11-25 12:42:09	Eelis	that exception is deprecated
2014-11-25 12:42:16	Eelis	(or maybe even removed altogether nowadays, i dunno)
2014-11-25 12:42:55	Eelis	{ char const not_a_literal[4] = {'b','l','a','\0'};  char * p = not_a_literal; }
2014-11-25 12:42:56	geordi	error: invalid conversion from 'const char*' to 'char*'
2014-11-25 12:43:05	Eelis	geordi, replace not_a_literal with "a literal"
2014-11-25 12:43:06	geordi	error: String `not_a_literal` occurs multiple times.
2014-11-25 12:43:10	Eelis	geordi, replace last not_a_literal with "a literal"
2014-11-25 12:43:12	geordi	warning: unused variable 'p'
2014-11-25 12:43:30	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 12:43:31	<--	LickPlusPlus (~LickPytho@58.166.109.179) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <-)
2014-11-25 12:43:32	Eelis	i should suppress that warning
2014-11-25 12:43:34	Eelis	it gets in the way
2014-11-25 12:44:25	Eelis	BZEU: it is read-only, yes
2014-11-25 12:44:28	Eelis	geordi -w { char * evil = "NOO!!!"; *evil = 'x'; cout << evil; }
2014-11-25 12:44:30	geordi	Undefined behavior detected.
2014-11-25 12:45:25	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-25 12:46:07	-->	safinaskar (~user@188.234.4.22) has joined ##c++
2014-11-25 12:48:06	-->	licnep (uid4387@gateway/web/irccloud.com/x-qnnyvzavenwylxbe) has joined ##c++
2014-11-25 12:51:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 12:51:28	V-ille	Eelis: I don't think the conversion from string literal to char* is deprecated. I think it was removed.
2014-11-25 12:51:33	<--	paul424 (~chatzilla@91.207.69.143) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-25 12:51:38	-->	govg (~govg@202.3.77.215) has joined ##c++
2014-11-25 12:51:43	-->	seishun (~Kakera@78.84.132.129) has joined ##c++
2014-11-25 12:51:43	Eelis	splendid
2014-11-25 12:52:01	--	govg is now known as Guest17962
2014-11-25 12:52:02	Eelis	V-ille: then fix the gcc warning ;)
2014-11-25 12:52:03	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-25 12:52:07	<--	Guest17962 (~govg@202.3.77.215) has quit (Client Quit)
2014-11-25 12:52:08	-->	kurahaupo_ (~kurahaupo@118.148.195.239) has joined ##c++
2014-11-25 12:52:16	Eelis	geordi: char * evil = "NOO!!!";
2014-11-25 12:52:18	geordi	warning: deprecated conversion from string constant to 'char*'
2014-11-25 12:52:28	<--	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has quit (Quit: omg gotta get going and do something today lol)
2014-11-25 12:52:34	<--	a_le (~a_le@172.56.39.237) has quit (Read error: Connection reset by peer)
2014-11-25 12:52:44	Eelis	could make it into the "ISO C++ forbids ..." form
2014-11-25 12:53:11	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-25 12:53:28	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-25 12:54:03	ville	to anyone following at home the conversion was completely removed not the deprecation of the conversion. the conversion is now completely illegal
2014-11-25 12:54:22	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 12:54:31	-->	7GHAAQQ6W (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 12:55:01	<--	kurahaupo (~kurahaupo@118.148.222.161) has quit (Read error: Connection reset by peer)
2014-11-25 12:55:02	<--	7GHAAQQ6W (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 12:55:58	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Remote host closed the connection)
2014-11-25 12:57:17	<--	Xitano (~contato@r73-pw-jundiai.ibys.com.br) has quit
2014-11-25 12:57:38	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-25 12:58:31	V-ille	Yawn. That should be turned into a pedwarn.
2014-11-25 12:59:50	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-25 12:59:51	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-25 13:00:07	Eelis	and it shouldn't lie
2014-11-25 13:00:36	-->	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has joined ##c++
2014-11-25 13:01:01	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-25 13:01:06	<--	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has quit (Ping timeout: 255 seconds)
2014-11-25 13:03:11	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-25 13:06:35	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-25 13:08:09	-->	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 13:09:37	-->	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2014-11-25 13:10:09	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 13:10:32	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-25 13:10:33	-->	dapz (~textual@198.170.185.222) has joined ##c++
2014-11-25 13:10:55	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-25 13:11:04	<--	dapz (~textual@198.170.185.222) has quit (Client Quit)
2014-11-25 13:11:30	micom	http://herbsutter.com/2014/11/24/updates-to-my-trip-report/
2014-11-25 13:11:38	micom	Adopted N4086, which removes trigraphs. Yes, we removed something from C++? and something that was inherited from C! But wait, there?s more?
2014-11-25 13:11:47	<--	endomancer (~endomance@2001:8003:2e3b:e301:b823:3797:e720:54aa) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-25 13:11:49	micom	    Adopted N4190, and actually removed (not just deprecated) several archaic things from the C++ standard library, including auto_ptr, bind1st/bind2nd, ptr_fun/mem_fun/mem_fun_ref, random_shuffle, and a few more. Those are now all removed from the draft C++17 standard library and will not be part of future portable C++.
2014-11-25 13:11:53	micom	haha :D
2014-11-25 13:12:21	-->	kez (~quassel@inet2.evalesco.com) has joined ##c++
2014-11-25 13:12:30	micom	removing trigraphs is like duke nuke 3d  or stable ms windows
2014-11-25 13:12:38	micom	almost impossible;)
2014-11-25 13:12:38	V-ille	Eelis: ok, as far as I can see, it was deprecated in c++03, and then removed in c++11
2014-11-25 13:13:18	Oxyd	[N4190]
2014-11-25 13:13:19	npaperbot	N4190: [Library] Removing auto_ptr, random_shuffle(), And Old <functional> Stuff <http://bit.ly/1A6lIXA> (by Stephan T. Lavavej)
2014-11-25 13:13:21	-->	endomancer (~endomance@2001:8003:2e3b:e301:d46a:20d7:a281:e0ce) has joined ##c++
2014-11-25 13:13:39	<--	endomancer (~endomance@2001:8003:2e3b:e301:d46a:20d7:a281:e0ce) has quit (Client Quit)
2014-11-25 13:14:00	-->	endomancer (~endomance@2001:8003:2e3b:e301:d46a:20d7:a281:e0ce) has joined ##c++
2014-11-25 13:14:29	Oxyd	Oh, strstream survived. Funky, I would've expected that one to go. Unlike auto_ptr, for instance, which I would've expected to live for backward compatibility.
2014-11-25 13:14:33	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-25 13:14:47	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-25 13:15:33	V-ille	strstreams have no replacement
2014-11-25 13:16:08	<--	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 13:16:45	Oxyd	I take it they're actually used by someone.
2014-11-25 13:17:04	V-ille	that's what the stories from the campfires say
2014-11-25 13:17:28	Eelis	stringstreams are to strstreams as push_back is to push_back_reserved
2014-11-25 13:18:02	-->	gelignite (~gelignite@i528C34C4.versanet.de) has joined ##c++
2014-11-25 13:18:15	Eelis	(i'm so annoyed by lack of push_back_reserved because i have push_backs right on my order entry hot paths)
2014-11-25 13:18:36	-->	altin (~altin@178.132.218.179) has joined ##c++
2014-11-25 13:18:36	<--	altin (~altin@178.132.218.179) has quit (Changing host)
2014-11-25 13:18:36	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-25 13:18:40	K-ballo	what's push_back_reserved ?
2014-11-25 13:18:44	V-ille	sounds like a paper would be a good idea, Eelis
2014-11-25 13:19:25	Eelis	hmm, i should talk to that other guy first. he made very good summaries of the reactions on the ml
2014-11-25 13:19:48	Eelis	(and then decided not to persue it :'( )
2014-11-25 13:20:03	Eelis	*pursue
2014-11-25 13:20:20	micom	you should always follow your dreams:(
2014-11-25 13:20:22	V-ille	reactions on the forum.. oh well.
2014-11-25 13:20:30	<--	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has quit (Quit: Konversation terminated!)
2014-11-25 13:20:52	Eelis	V-ille: only problem is that my bosses might get upset if i mention that example in a paper
2014-11-25 13:21:00	Eelis	secretive bunch
2014-11-25 13:21:06	--	Sub|zzz is now known as SubCreative
2014-11-25 13:21:09	-->	Kn|t3 (~agarwalvi@2401:fa00:a:0:29e0:aad6:fe2a:c8e2) has joined ##c++
2014-11-25 13:21:27	V-ille	well, perhaps your bosses would get less upset if that solves a performance problem for them
2014-11-25 13:21:47	Eelis	unlikely
2014-11-25 13:23:05	<--	timj (~timj@p5DDB37A8.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-25 13:23:09	Eelis	K-ballo: it's a push_back that's UB if size()==capacity(), so that the implementation can just be  *mEnd++ = arg;   which inlines and optimizes like a dream, compared to nasty push_back which has potential code paths for reallocation in it
2014-11-25 13:24:02	Eelis	which can't be inlined
2014-11-25 13:24:20	K-ballo	Eelis: I see, sounds like something I'd want now
2014-11-25 13:24:29	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-25 13:24:53	coolcat	Eelis, is there a proposal for that?
2014-11-25 13:24:57	Eelis	coolcat: nope
2014-11-25 13:25:11	Eelis	coolcat: someone brought it up on the proposals mailing list but it got shot down mercilessly and he didn't proceed
2014-11-25 13:25:26	Eelis	but those are random monkeys, is what V-ille tries to tell me i think
2014-11-25 13:25:39	Eelis	unlike the committee, who are semirandom monkeys
2014-11-25 13:25:48	coolcat	Eelis, what is the argument to refuse? Too dangerous?
2014-11-25 13:26:02	Eelis	coolcat: let me find the thread
2014-11-25 13:26:22	V-ille	Eelis: you are correct, I wouldn't put too much weight on opinions on those forums
2014-11-25 13:27:03	coolcat	If performance is so central to C++, I see no reason on why the committee would refuse it.
2014-11-25 13:27:09	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2014-11-25 13:27:15	<--	nilsi (~nilsi@183.101.241.130) has quit (Remote host closed the connection)
2014-11-25 13:27:39	V-ille	the thread is https://groups.google.com/a/isocpp.org/d/msg/std-proposals/5BnNHEr07QM/rFgbMSAibioJ
2014-11-25 13:27:58	Eelis	thanks
2014-11-25 13:28:14	-->	Douglas (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has joined ##c++
2014-11-25 13:28:50	<--	Leftas_ (~leftas@91.228.84.180) has quit (Quit: ...)
2014-11-25 13:29:06	-->	Leftas_ (~leftas@91.228.84.180) has joined ##c++
2014-11-25 13:29:18	Eelis	the guy uses the name push_back_ but that's of course terrible
2014-11-25 13:29:31	Eelis	push_back_reserved is natural, because you first do reserve() and then you push_back_reserved()
2014-11-25 13:30:08	V-ille	you might notice that a certain someone gives cautious encouragement to the proposal in that thread
2014-11-25 13:30:09	Eelis	and it's a long ugly name so you don't call it accidentally
2014-11-25 13:30:17	Eelis	yeah
2014-11-25 13:30:53	<--	Douglas (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has quit (Client Quit)
2014-11-25 13:31:46	Eelis	reserved_back_inserter
2014-11-25 13:31:53	<--	seronis (~seronis@unaffiliated/seronis) has quit (Quit: Leaving)
2014-11-25 13:32:48	o-O-o	!stdref push_back_reserved
2014-11-25 13:32:49	nolyc	Google found nothing.
2014-11-25 13:32:55	o-O-o	:)
2014-11-25 13:33:40	-->	Rickmasta (~Rick@137.125.143.163) has joined ##c++
2014-11-25 13:33:48	<--	Rickmasta (~Rick@137.125.143.163) has quit (Max SendQ exceeded)
2014-11-25 13:34:28	-->	Rickmasta (~Rick@137.125.143.163) has joined ##c++
2014-11-25 13:34:47	--	dts is now known as dTS
2014-11-25 13:35:05	V-ille	Eelis: I should point out that not all contributors to that forum are useless, Howard Hinnant is certainly no joker.
2014-11-25 13:35:27	Eelis	noted
2014-11-25 13:35:40	V-ille	of course, Howard doesn't easily see how that boiler-plate of the generator_widget is horrible.
2014-11-25 13:35:53	-->	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 13:36:08	o-O-o	[10:33] <micom> you should always follow your dreams:(
2014-11-25 13:36:09	o-O-o	lol
2014-11-25 13:36:25	-->	govg_ (~govg@202.3.77.215) has joined ##c++
2014-11-25 13:36:29	coolcat	The argument "benchmark and see" is used far too often too excuse people from given a try to a problem.
2014-11-25 13:36:35	-->	Nando_k (~Nando_k@dslb-188-108-168-080.188.108.pools.vodafone-ip.de) has joined ##c++
2014-11-25 13:36:44	V-ille	hmm, Jonathan Wakely and Nevin Liber doesn't seem to like it much either
2014-11-25 13:37:15	<--	patteh (~patteh@unaffiliated/patteh) has quit (Quit: Lost terminal)
2014-11-25 13:37:56	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-25 13:39:16	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 13:39:58	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-25 13:39:59	<--	nilsi (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 13:40:07	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-25 13:40:24	V-ille	Eelis: oh well, that proposal is certainly going to be fighting uphill
2014-11-25 13:41:19	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 13:41:37	<--	heiner (~heiner@p5DC4E446.dip0.t-ipconnect.de) has quit (Disconnected by services)
2014-11-25 13:41:40	-->	heiner_ (~heiner@p5B3FFBC8.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 13:42:29	Eelis	maybe i should pretend i'm a naive 11 year old and write stroustrup personally
2014-11-25 13:43:04	K-ballo	why? only naive people can write him an email? he answers to pretty much anyone
2014-11-25 13:43:27	Eelis	K-ballo: it's naive because stroustrup isn't a dictator
2014-11-25 13:43:34	Eelis	his powers are limited
2014-11-25 13:43:38	Eelis	but his blessing would be super important though
2014-11-25 13:43:47	-->	l_r (~no@adsl-ull-188-92.42-151.net24.it) has joined ##c++
2014-11-25 13:44:21	Eelis	nah, i should reach out to him as someone in his field, since he's at goldman sachs now
2014-11-25 13:44:25	<--	Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2014-11-25 13:44:35	Eelis	then he can feel all warm and fussy about representing industry's interests
2014-11-25 13:44:38	Eelis	*fuzzy
2014-11-25 13:44:55	o-O-o	!news
2014-11-25 13:44:56	nolyc	I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-25 13:45:06	coolcat	Eelis, Stroustrup is at Goldman Sachs? wow
2014-11-25 13:45:19	Eelis	oh no, morgan stanley
2014-11-25 13:45:53	Hannibal_Smith	Goldman Sachs got Ulrich Drepper!
2014-11-25 13:46:15	coolcat	I wish I knew what kind of problem he is working on, that must be nice.
2014-11-25 13:46:27	o-O-o	coolcat: you should apply for proper jobs
2014-11-25 13:46:38	o-O-o	C++ is awesome for these things
2014-11-25 13:46:54	coolcat	o-0-o, I reserve that for you.
2014-11-25 13:47:04	o-O-o	oh, so you aren't wishing so hard :)
2014-11-25 13:47:23	o-O-o	you know, wishes are worthless if they aren't backed up by actions
2014-11-25 13:47:26	<--	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 13:47:40	micom	i wonder if bjarne  has got enough skills to do  serious  metaprogramming in c++
2014-11-25 13:48:29	micom	( please continue your discussion)
2014-11-25 13:48:37	o-O-o	no, pls
2014-11-25 13:48:45	l_r	micom, of course he knows metaprogramming
2014-11-25 13:48:46	Eelis	serious metaprogramming? what's that?
2014-11-25 13:48:47	Eelis	constexpr?
2014-11-25 13:48:54	o-O-o	template wankery
2014-11-25 13:49:01	Eelis	that's not serious
2014-11-25 13:49:03	l_r	he is one of the authors of concept...so
2014-11-25 13:49:09	o-O-o	concepts are a lie :)
2014-11-25 13:49:13	 *	o-O-o ducks
2014-11-25 13:49:26	l_r	he knows all the tricky things that you can do know
2014-11-25 13:49:36	l_r	*now
2014-11-25 13:49:38	-->	nilsi_ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 13:49:39	o-O-o	he wants a simpler and nicer language
2014-11-25 13:49:57	o-O-o	but concepts aren't the solution. concepts are just a pretty sfinae
2014-11-25 13:50:18	<--	nilsi_ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 13:50:23	l_r	elegance first of all
2014-11-25 13:50:29	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 264 seconds)
2014-11-25 13:50:38	-->	Visios (~sekhmet@83.141.245.213) has joined ##c++
2014-11-25 13:50:56	<--	jcelerier (~doom@AToulouse-657-1-1057-117.w83-193.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-11-25 13:51:54	l_r	"Elegance is not a dispensable luxury but a factor that decides between success and failure." Edsger Dijkstra
2014-11-25 13:52:52	micom	 'Simplicity is prerequisite for reliability.' Edsger W. Dijkstra
2014-11-25 13:52:53	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 264 seconds)
2014-11-25 13:53:35	coolcat	micom, what do you consider serious metaprogramming?
2014-11-25 13:53:56	<--	Visios (~sekhmet@83.141.245.213) has quit (Read error: Connection reset by peer)
2014-11-25 13:54:21	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 13:54:49	o-O-o	micom: yeah! I am interested too
2014-11-25 13:54:54	<--	nilsi (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 13:55:10	o-O-o	also dijkstra is the best
2014-11-25 13:55:42	-->	FlorianJW-terra (~florian@madways.de) has joined ##c++
2014-11-25 13:55:51	micom	coolcat, from my experience it is something involved with mpl, maybe fusion day ago... and have a extended knowledge about tricks like   sizeof in shared_ptr  etc.   Using metaprogramming to solve everyday problems in real production code.
2014-11-25 13:55:54	l_r	serious metaprogramming happens whenever you can do part of the calculations at compile time
2014-11-25 13:55:57	micom	o-O-o, ^
2014-11-25 13:56:12	l_r	it's not always is
2014-11-25 13:56:16	l_r	it's not always easy
2014-11-25 13:56:28	<--	hexagoxel (~hexagoxel@195.244.237.55) has quit (Ping timeout: 264 seconds)
2014-11-25 13:56:46	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-25 13:56:58	o-O-o	mpl? fusion? this is not serious metaprogramming. this is wankery at its limits :)
2014-11-25 13:57:01	matt90	it's not too bad for someone coming from functional languages
2014-11-25 13:57:22	matt90	mostly just managing the complexity that comes from the limitations
2014-11-25 13:57:27	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-25 13:57:46	<--	negerns (negerns@49.144.150.177) has quit
2014-11-25 13:58:00	l_r	c++ is not fully ready for functional programming
2014-11-25 13:58:08	 *	micom is still waiting for boost.hana
2014-11-25 13:58:11	coolcat	Is Eigen, boost.ublas, boost.spirit serious metaprogramming?
2014-11-25 13:58:16	l_r	it still needs support for resumable functions
2014-11-25 13:58:24	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Ping timeout: 265 seconds)
2014-11-25 13:58:25	micom	spirit is for masochists
2014-11-25 13:58:29	<--	srjek (~srjek@46dhcp67.ece.uic.edu) has quit (Ping timeout: 255 seconds)
2014-11-25 13:58:52	<--	kaffeetrauma (~Thunderbi@5.147.4.15) has quit (Quit: kaffeetrauma)
2014-11-25 13:58:57	l_r	i d like to see boost actor in the boost suite officially
2014-11-25 13:59:07	coolcat	We have written a parser with spirit and we are considering moving back to bison /
2014-11-25 13:59:07	-->	nilsi_ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 13:59:14	l_r	?
2014-11-25 13:59:19	l_r	you must be kidding
2014-11-25 13:59:44	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Ping timeout: 272 seconds)
2014-11-25 13:59:44	<--	nilsi_ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 13:59:44	o-O-o	lol
2014-11-25 13:59:44	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2014-11-25 13:59:49	micom	what kind of parser?
2014-11-25 14:00:02	o-O-o	boost is for masochists :)
2014-11-25 14:00:03	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-25 14:00:41	-->	srjek (~srjek@46dhcp63.ece.uic.edu) has joined ##c++
2014-11-25 14:00:42	coolcat	visual studio 2008 is amazingly slow with spirit parser.
2014-11-25 14:00:55	l_r	?
2014-11-25 14:01:28	l_r	what do you mean? did you implement a visual studio parser with boost spirit?
2014-11-25 14:01:49	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-25 14:02:06	NinjaPenguin	Visual studio parser?????????????????????????????????????????????????????????????????????????????
2014-11-25 14:02:21	matt90	duh
2014-11-25 14:02:24	matt90	it parses visual studios
2014-11-25 14:02:35	matt90	and prints suttersuttersuttersuttersutter ...
2014-11-25 14:03:04	-->	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:03:29	NinjaPenguin	Probably prints "I'm sorry, VS doesn't support that C++03 feature." all the time.
2014-11-25 14:03:31	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-25 14:04:12	matt90	yeah but you'll never see it though the walls of template errors that, if you stare at them carefully enough, turn out to not actually contain any english
2014-11-25 14:05:13	micom	i have never worked with VS. luckyme:)
2014-11-25 14:05:35	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-25 14:05:48	matt90	it's nice for browsing big projects
2014-11-25 14:06:01	NinjaPenguin	It's okay for editing text.
2014-11-25 14:06:04	<--	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:06:09	matt90	the type inspection actually works across 400k lines
2014-11-25 14:06:23	-->	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:07:19	matt90	vs ctags that can't even read its tag files on medium projects
2014-11-25 14:07:36	-->	nilsi__ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 14:08:43	-->	arvut (~arvut@unaffiliated/arvut) has joined ##c++
2014-11-25 14:08:43	<--	nilsi__ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 14:08:43	<--	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:09:05	<--	alza (~alza@167.88.36.237) has quit (Ping timeout: 250 seconds)
2014-11-25 14:09:17	l_r	is it possible to run vs under linux?
2014-11-25 14:09:24	matt90	lol
2014-11-25 14:09:34	o-O-o	l_r:  yes! here is an example of that http://tiny/vu8xmpqx
2014-11-25 14:09:56	-->	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:10:06	l_r	well... with wine you can actually run lot of apps for windows
2014-11-25 14:10:14	<--	David (~David@unaffiliated/david) has quit (Ping timeout: 240 seconds)
2014-11-25 14:10:41	NinjaPenguin	o-O-o: Is that a fake link? :L
2014-11-25 14:10:53	matt90	hahaha
2014-11-25 14:11:03	<--	yeticry (~yeticry@114.96.138.107) has quit (Ping timeout: 256 seconds)
2014-11-25 14:11:08	<--	govg_ (~govg@202.3.77.215) has quit (Quit: leaving)
2014-11-25 14:11:22	-->	nilsi_ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 14:11:24	l_r	anyway the std committee has read my mind recently...
2014-11-25 14:11:29	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-25 14:11:36	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 14:11:39	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Quit: http://www.twitter.com/aleenamaleena)
2014-11-25 14:11:42	NinjaPenguin	Or your idea isn't original!
2014-11-25 14:11:59	<--	nilsi_ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 14:12:00	l_r	i thought "why the hell x is initialized from an init list : auto x{y}"
2014-11-25 14:12:21	l_r	they want to change that case
2014-11-25 14:12:21	matt90	what type is it
2014-11-25 14:12:38	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 14:12:42	l_r	x should derive the type from y
2014-11-25 14:12:51	-->	yeticry (~yeticry@60.168.89.165) has joined ##c++
2014-11-25 14:12:59	pringlescan	hello all, javascript/php/perl programmer here with a procedural and OO background? I'd like to learn C++ ? are there any course or book recommendations for someone who already knows C-style syntax and OO paradigms to jump into the intricacies of C++?
2014-11-25 14:13:13	NinjaPenguin	<< TYPE(x); int y= 5; auto x{y};
2014-11-25 14:13:14	geordi	lvalue initializer_list<int>
2014-11-25 14:13:17	Oxyd	!give pringlescan goodbooks
2014-11-25 14:13:18	nolyc	pringlescan: Good books are !ac++ or !primer or !pppuc++ for starters, and then !tc++pl once you have the basics down, with !josuttis and !langer for standard library references. See !book for further reading. Send these commands to nolyc via private message.
2014-11-25 14:13:31	Oxyd	Also:
2014-11-25 14:13:33	Oxyd	!books
2014-11-25 14:13:34	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-25 14:13:40	-->	RazielXYZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-25 14:14:15	-->	David (~David@unaffiliated/david) has joined ##c++
2014-11-25 14:14:28	pringlescan	I have a few projects that I'd like to contribute to, but they're Boost heavy, and I don't think that'd be a good way to learn C++ as it seems like crutches and a replacement for the standard library?
2014-11-25 14:14:49	l_r	never heard of langer
2014-11-25 14:15:04	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 14:15:06	rkreis	pringlescan, i had a similar impression of boost, but it's really not that
2014-11-25 14:15:06	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Disconnected by services)
2014-11-25 14:15:08	--	RazielXYZ is now known as Raziel
2014-11-25 14:15:17	<--	adek (~adek@199.201.64.134) has quit (Ping timeout: 240 seconds)
2014-11-25 14:15:23	l_r	pringlescan, you need the tc++pl
2014-11-25 14:15:24	Hannibal_Smith	pringlescan, as long you don't have to understand how these libraries works, it's ok
2014-11-25 14:15:39	<--	nilsi (~nilsi@183.101.241.130) has quit (Read error: No route to host)
2014-11-25 14:15:42	l_r	pringlescan, read the book,do the exercises... and you ll master c++ in 2 years
2014-11-25 14:15:51	pringlescan	eh, I kind of like to understand how things work before I use them, but since I'm not strong on math or CS, the odds of that happening are pretty low.
2014-11-25 14:15:51	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-25 14:16:06	Hannibal_Smith	Or maybe is better to say, how these boost libraries are implemented
2014-11-25 14:16:20	Oxyd	Well, then, start by learning CS and maths.
2014-11-25 14:16:26	pringlescan	I never had to write a sort algorithm I just read about them and understand which are right for a particular task? not sure if that makes me stupid/lazy, but it doesn't impact my productivity in a professional setting
2014-11-25 14:16:53	<--	SiGe (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:17:00	-->	SiGe__ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:17:24	l_r	pringlescan, then "From mathematics to computer programming" is the book for you
2014-11-25 14:17:27	pringlescan	Oxyd: I've been thinking about learning math a lot. I have difficulty learning and retraining things I have no use for on a daily basis :-( I learn best from doing. Math doesn't play very well with that because I have a bad foundation.
2014-11-25 14:17:55	Oxyd	pringlescan: Well, do something about it or be stuck with poor maths skill for the rest of your life.
2014-11-25 14:17:57	pringlescan	l_r:  don't I need the opposite ;-)? If someone could teach math with psuedo code that'd be great.
2014-11-25 14:18:24	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 14:18:30	rkreis	you might just forget about maths and sorting algorithms until you actually need them :)
2014-11-25 14:18:39	pringlescan	Oxyd: If I want to do embedded systems and tinker with hardware and electronics, where should I focus?
2014-11-25 14:19:03	pringlescan	rkreis: I like to do GIS and routing and that's the first time I wish I had math skills. some computer vision too. problem is the libraries are so good i'd be learning from a matter of principle.
2014-11-25 14:19:16	Hannibal_Smith	pringlescan, so much questions!
2014-11-25 14:19:26	Oxyd	pringlescan: Probably some electronics store to get your tinkering started.
2014-11-25 14:19:26	rkreis	GIS?
2014-11-25 14:19:28	pringlescan	Well, so many smart minds here, you wrangle C++, where better to ask
2014-11-25 14:19:53	-->	Timmy (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-25 14:20:06	-->	timj (~timj@91.102.9.98) has joined ##c++
2014-11-25 14:20:21	<--	walkers (~walkers@192.210.214.197) has quit (Remote host closed the connection)
2014-11-25 14:20:24	Hannibal_Smith	pringlescan, learning to code and knowing math, are IMHO not related
2014-11-25 14:20:28	pringlescan	Oxyd: I've dabbled with hardware, but it's too easy now, you don't even need to know the basics
2014-11-25 14:20:37	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-25 14:20:38	Hannibal_Smith	You can continue to learn C++ without problems
2014-11-25 14:20:40	<--	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-25 14:20:58	Hannibal_Smith	Even if you don't even know discrete math
2014-11-25 14:21:02	pringlescan	Hannibal_Smith: I've been coding since I was 9, 16 years now? but I suck at math. I want to broaden my horizons for when JavaScript isn't in demand anymore.
2014-11-25 14:21:10	<--	Timmy (~Timmy@unaffiliated/timmyt) has left ##c++
2014-11-25 14:21:30	l_r	heheh...is javascript going to disappear?
2014-11-25 14:21:42	pringlescan	rkreis: GIS = graphic information systems, just mapping, routing, geospatial bla bla bla
2014-11-25 14:21:52	Hannibal_Smith	pringlescan, take a look at the program of a good CS course and it will be ok
2014-11-25 14:21:53	pringlescan	l_r: never, https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript
2014-11-25 14:22:05	-->	Lectus (bd691a4f@gateway/web/freenode/ip.189.105.26.79) has joined ##c++
2014-11-25 14:22:13	Hannibal_Smith	Learning yourself, will be a little hard
2014-11-25 14:22:14	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 14:22:29	-->	Areks (~Areks@95-26-129-29.broadband.corbina.ru) has joined ##c++
2014-11-25 14:22:30	pringlescan	CS is boring :-( they teach me things I already know that I didn't know the name of? If you're forced to solve non-trivial problems I feel like you learn probably the first year or two of CS on your own, but I could be mistaken
2014-11-25 14:22:36	Hannibal_Smith	Math books are not really good for self learning, IMHO
2014-11-25 14:22:42	<--	timj (~timj@91.102.9.98) has quit (Client Quit)
2014-11-25 14:22:57	Oxyd	Go to a more difficult school if it's too boring for you.
2014-11-25 14:23:07	Oxyd	Or more challenging school, rather.
2014-11-25 14:23:09	-->	timj (~timj@91.102.9.98) has joined ##c++
2014-11-25 14:23:13	pringlescan	Oxyd: I dropped out, almost making 6 figures, I have 18 credits left, but I went for business
2014-11-25 14:23:34	-->	mays (~mays@192.210.214.197) has joined ##c++
2014-11-25 14:23:38	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-11-25 14:24:09	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-25 14:24:12	pringlescan	i just know that when i get older I need to finish the degree and expand my skillset, eventually i'll have a hard time getting work I would think
2014-11-25 14:24:41	l_r	you could try to learn assembly
2014-11-25 14:24:58	Oxyd	So, basically, you know everything but you want to do none of it?
2014-11-25 14:25:06	l_r	:D
2014-11-25 14:25:20	Hannibal_Smith	pringlescan, maybe the problems is that you didn't find a reason to study what a good CS course teach
2014-11-25 14:25:35	pringlescan	Oxyd: oh, i don't know shit, but life is so easy for developers right now, we all use a bunch of c-bindings for our languages and are happy googling solutions on stack overflow
2014-11-25 14:25:52	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-25 14:25:56	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-25 14:26:16	Oxyd	Well, you do know you want to learn something, but don't want to. But then you kinda do, but not really.
2014-11-25 14:26:21	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-25 14:26:52	kadoban	pringlescan: If you think stackoverflow makes things easy, you're not doing interesting enough problems...
2014-11-25 14:26:52	pringlescan	Oxyd: meh, i want to be as excited as when i first learned perl
2014-11-25 14:27:34	Oxyd	Excited, eh? I don't think the excitement will ever be the same.
2014-11-25 14:27:39	pringlescan	kadoban: I was kind of poking fun at people who stopped thinking
2014-11-25 14:27:44	-->	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has joined ##c++
2014-11-25 14:28:14	<--	Olipro_ (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Read error: Connection reset by peer)
2014-11-25 14:28:41	<--	SiGe__ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:28:49	-->	17SAA0NO2 (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:28:49	pringlescan	I want to be excited about math? I know I can get excited about C++, because I can port my JavaScript code to it and iteratively learn more and optimize it, that'll be fun? I'd love to learn Z80 Assembler and write a NES game, but that's not very useful
2014-11-25 14:29:11	-->	pullphinger (~Pullxinge@12.40.23.68) has joined ##c++
2014-11-25 14:29:33	Oxyd	Start learning maths, maybe you'll find excitement eventually. Same for everything else.
2014-11-25 14:29:35	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-11-25 14:30:20	Hannibal_Smith	pringlescan, personally, you have to try to join an open source project about things that interest you like computer vision, and than understand how much you don't know
2014-11-25 14:30:26	pringlescan	Oxyd: I'm not afraid to fail, but I took business calculus 3 times, it was the first time I needed to do homework to actually understand, and I couldn't find any practical use for it, does it get better? do they give you example problems with practical applications
2014-11-25 14:30:35	Hannibal_Smith	You will be *forced* to learn, something
2014-11-25 14:30:50	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 256 seconds)
2014-11-25 14:30:53	<--	17SAA0NO2 (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:30:59	-->	jcelerier (~doom@AToulouse-657-1-1052-172.w83-205.abo.wanadoo.fr) has joined ##c++
2014-11-25 14:31:07	-->	5EXABN34X (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:31:11	hs_	it looks as if you are pleading for others to stimulate you
2014-11-25 14:31:16	Oxyd	pringlescan: People who cry about "practical applications" aren't truly excited. ;)
2014-11-25 14:31:22	pringlescan	Hannibal_Smith: I don't know shit, I know how to program business logic that doesn't involve complicated statistics, I'm pretty low on the totem pole of knowledge, but I'm well suited to solve 75% of the problems businesses seem intent on solving over and over again
2014-11-25 14:31:34	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-25 14:31:45	hs_	if you don't find the topics interesting you probably should look elsewhere
2014-11-25 14:32:03	Hannibal_Smith	pringlescan, http://www.amazon.com/Manga-Guide-Statistics-Shin-Takahashi/dp/1593271891 !!!
2014-11-25 14:32:05	Oxyd	pringlescan: Also, calculus -- let alone business one, whatever that might be -- isn't the only maths there is.
2014-11-25 14:32:08	-->	elsewho_ (~elsewho@dslb-188-096-198-072.188.096.pools.vodafone-ip.de) has joined ##c++
2014-11-25 14:32:21	pringlescan	Oxyd: ? should I go back and get a better grip of algebra? I had a tumor in high school and had to do remedial bookwork by myself, which kind of sucked. I feel like I have a bad foundation. I can do long division with remainders but honestly, I suck at math on paper. Does that matter if I'm not taking classes?
2014-11-25 14:32:25	<--	endomancer (~endomance@2001:8003:2e3b:e301:d46a:20d7:a281:e0ce) has quit (Quit: endomancer)
2014-11-25 14:32:27	<--	elsewho (~elsewho@139.20.16.239) has quit (Disconnected by services)
2014-11-25 14:32:33	Hannibal_Smith	pringlescan, personally I also find anything related to calculus very annoying
2014-11-25 14:32:46	l_r	pringlescan, i have the solution for you: Artifical Intelligence by Norvig
2014-11-25 14:32:52	-->	elsewho (~elsewho@139.20.16.239) has joined ##c++
2014-11-25 14:32:53	<--	elsewho_ (~elsewho@dslb-188-096-198-072.188.096.pools.vodafone-ip.de) has left ##c++
2014-11-25 14:32:56	pringlescan	I think I use algebra for calculating the position of GUI elements fairly often...
2014-11-25 14:32:56	Oxyd	pringlescan: If by algebra you mean what Americans apparently call "abstract algebra", then yes. If you mean "solving equations", then you should know that already.
2014-11-25 14:32:59	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-25 14:32:59	<--	elsewho (~elsewho@139.20.16.239) has quit (Disconnected by services)
2014-11-25 14:33:03	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-25 14:33:23	-->	elsewho_ (~elsewho@139.20.16.239) has joined ##c++
2014-11-25 14:33:41	pringlescan	Oxyd: I think I do. it's hard to know. I told my algebra teacher that algebra was obsolete and that I could write code to brute force the answer faster than I could understand it. :-\ I know that's wrong now
2014-11-25 14:33:48	xico	Oxyd: what do americans call abstract algebra?
2014-11-25 14:33:53	Oxyd	xico: Algebra.
2014-11-25 14:33:55	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-25 14:34:04	xico	Oxyd: ok :)
2014-11-25 14:34:16	xico	Oxyd: just like standard rings and fields?
2014-11-25 14:34:20	Oxyd	xico: Yup
2014-11-25 14:34:26	-->	reiser_ (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-25 14:34:30	xico	Oxyd: whats concrete algebra then??
2014-11-25 14:34:32	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-25 14:34:35	pringlescan	what can I do after that? I don't even know what trig does
2014-11-25 14:34:36	<--	KindOne (kindone@colchester-lug/silly-fool/donut) has quit (Quit: Hiring PHP developers does not contribute to the quota of employees with disabilities.)
2014-11-25 14:34:42	Oxyd	Or at least I think they call it that. But every time I see them talk about just "algebra", they mean quadratic equations. :)
2014-11-25 14:34:43	l_r	abstract because they cannot understand it concretely
2014-11-25 14:34:47	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 14:34:49	l_r	:P
2014-11-25 14:34:51	xico	Oxyd: !
2014-11-25 14:34:54	Oxyd	Or factoring stuff.
2014-11-25 14:34:57	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Remote host closed the connection)
2014-11-25 14:35:34	pringlescan	ok? you just reminded me that I forget polynomials I think
2014-11-25 14:36:17	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-25 14:36:26	-->	alza (~alza@167.88.36.237) has joined ##c++
2014-11-25 14:36:28	pringlescan	I was out of school a lot, but it's still embarrassing to be intelligent and know almost no math and science because I was out half of high school.
2014-11-25 14:36:48	Oxyd	Then quit complaining and learn.
2014-11-25 14:36:59	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-25 14:37:17	Oxyd	I mean, you've got the entire Internet in front of you. Or at least the part of it in those languages you understand. Still, there's some video lectures online.
2014-11-25 14:37:22	matt90	can I trust that static void template functions with no body will be completely removed at the call site by any reasonable compiler?
2014-11-25 14:37:49	rkreis	i would
2014-11-25 14:38:33	hs_	matt90, any arguments?
2014-11-25 14:38:40	<--	5EXABN34X (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:38:41	matt90	arbitrary arguments
2014-11-25 14:38:58	hs_	I don't know what you mean by "remove at the call site" then
2014-11-25 14:39:12	-->	KindOne (kindone@colchester-lug/silly-fool/donut) has joined ##c++
2014-11-25 14:39:22	matt90	if the target is a nop I'd hope to see no code generated at the call site
2014-11-25 14:39:23	hs_	the arguments could be expressions with side-effects that should not be skipped
2014-11-25 14:39:31	matt90	let's say they are not
2014-11-25 14:39:35	-->	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:39:51	matt90	only trivial expressions
2014-11-25 14:39:52	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 14:40:37	pringlescan	Oxyd: Thanks for the pep talk. I think I need to take some kind of evaluation to see what I actually know and figure out how behind I am. I think stats might be the way to go for now since I took it in college, but again, never applied it. Just knowing the principles will allow me to correctly use libraries/algos.
2014-11-25 14:40:39	<--	safinaskar (~user@188.234.4.22) has quit (Read error: Connection reset by peer)
2014-11-25 14:41:29	Hannibal_Smith	pringlescan, I remember that Knuth published a book about that
2014-11-25 14:41:44	Hannibal_Smith	Knuth style is usually not easy to follow
2014-11-25 14:41:49	Hannibal_Smith	And I never read that book
2014-11-25 14:41:58	o-O-o	you should
2014-11-25 14:42:00	Hannibal_Smith	But if you get in a library, give it a try
2014-11-25 14:42:08	matt90	I have to build some heavy duty reporting/statistics stuff into some protocol implementations for the theory guys and I'd like to avoid ifdef debug
2014-11-25 14:42:21	Hannibal_Smith	Here http://www.amazon.com/Concrete-Mathematics-Foundation-Computer-Science/dp/0201142368
2014-11-25 14:42:36	o-O-o	fap fap fap
2014-11-25 14:42:57	-->	ferdna (~ferdna@69.23.141.88) has joined ##c++
2014-11-25 14:43:15	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-25 14:43:40	pringlescan	Hannibal_Smith: that seems perfect
2014-11-25 14:43:47	Hannibal_Smith	Seeems like that I remember not so well
2014-11-25 14:43:50	Hannibal_Smith	From a review,
2014-11-25 14:43:51	Hannibal_Smith	First, what kind of book is it? It is not an introductory-level math book with lots and lots of repetition. It is a book on hard math, done in a concise manner by brilliant teachers who assume students are very comfortable with calculus, probability, etc.  <-
2014-11-25 14:43:57	pringlescan	I kind of want the set of Knuth books and that be my pursuit of learning even to get through 10% of it
2014-11-25 14:44:24	pringlescan	I'm comfortable with getting the hard book I want to learn, and backtracking until I can get through it, that's how I usually solve problems.
2014-11-25 14:44:30	Hannibal_Smith	Ok
2014-11-25 14:44:33	pringlescan	If i can see the end goal, I don't think anything is trivial along the way
2014-11-25 14:44:37	pringlescan	so that seems like the way to go
2014-11-25 14:44:52	xico	pringlescan: you cannot backtrack really backtrack maths btw.
2014-11-25 14:45:04	o-O-o	!focus
2014-11-25 14:45:05	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-11-25 14:45:06	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-25 14:45:11	<--	Rickmasta (~Rick@137.125.143.163) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 14:45:42	pringlescan	thanks everyone for helping me with life issues unrelated to C++? on the up and up, I will not be asking for code reviews or how to do something in C++ for the foreseeable future
2014-11-25 14:45:44	o-O-o	why people think that IRC topical channels can be used as college support????
2014-11-25 14:45:50	o-O-o	!fact
2014-11-25 14:45:50	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-25 14:45:50	nolyc	Either or both of the condition and the expression can be omitted.
2014-11-25 14:45:54	pringlescan	o-O-o, not in college
2014-11-25 14:46:00	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 14:46:02	o-O-o	whatever. this is a topical channel
2014-11-25 14:46:18	matt90	o-O-o: why don't you respond to my topical question instead of pestering people about staying on topic
2014-11-25 14:46:28	matt90	if you aren't paying attention to topical stuff why are you paying attention to them?
2014-11-25 14:46:40	o-O-o	matt90: what is your topical question again? how to pay attention in the middle of all this nonsense flood?
2014-11-25 14:46:49	matt90	no worries
2014-11-25 14:46:53	o-O-o	!next
2014-11-25 14:46:55	nolyc	Another satisfied customer, next!
2014-11-25 14:47:39	<--	Tazmain (~Tazmainia@197.82.203.122) has quit (Quit: Leaving)
2014-11-25 14:48:07	xico	to write `a += b` where a and b are arrays, is std::transform the more concise way?
2014-11-25 14:48:16	xico	(std::array instances)
2014-11-25 14:48:46	-->	dapz (~textual@70-139-11-241.lightspeed.rsbgtx.sbcglobal.net) has joined ##c++
2014-11-25 14:49:04	pragma-	What a terrible fact.
2014-11-25 14:49:19	o-O-o	xico: can you do a += b for arrays?
2014-11-25 14:49:25	o-O-o	I think you really need to use transform
2014-11-25 14:49:38	xico	:(
2014-11-25 14:49:41	o-O-o	transform, for_each or even ranged for
2014-11-25 14:50:34	-->	SiGe___ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 14:50:34	Oxyd	With range-based for, I'd say just a for loop might be the most concise way.
2014-11-25 14:50:35	<--	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 14:50:42	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-25 14:50:45	Oxyd	Well, no.
2014-11-25 14:50:48	o-O-o	:D
2014-11-25 14:51:02	o-O-o	Oxyd: transform is oneliner
2014-11-25 14:51:04	Oxyd	That won't help for iterating over two arrays at once. :)
2014-11-25 14:51:31	xico	unless you zip them or something
2014-11-25 14:51:38	o-O-o	:) zip
2014-11-25 14:51:47	Oxyd	Welp, std::transform will work, sure.
2014-11-25 14:51:48	K-ballo	binary transform
2014-11-25 14:52:02	o-O-o	transform should support variadics
2014-11-25 14:52:11	o-O-o	then we could work with dozens of arrays
2014-11-25 14:52:16	o-O-o	w/o needing to zip them
2014-11-25 14:52:32	o-O-o	all these 'binary' algorithms should be n-ary
2014-11-25 14:52:36	<--	dapz (~textual@70-139-11-241.lightspeed.rsbgtx.sbcglobal.net) has quit (Client Quit)
2014-11-25 14:52:52	xico	that would be awesome
2014-11-25 14:53:08	o-O-o	not sure if we can do them in the current language level
2014-11-25 14:53:13	Oxyd	{ array<int, 3> a{1, 2, 3}, b{4, 5, 6}; transform(a.begin(), a.end(), b.begin(), a.begin(), [] (int x, int y) { return x + y; }); cout << a; }  // std::transform already has a binary variant.
2014-11-25 14:53:15	geordi	{5, 7, 9}
2014-11-25 14:53:36	o-O-o	n-ary, pls
2014-11-25 14:53:48	-->	nilsi__ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 14:54:00	o-O-o	but function arguments do not support variadics. pff
2014-11-25 14:54:39	xico	Oxyd: isn't it possible to use + directly as the binary operation? does it have to be wrapped in a lambda?
2014-11-25 14:54:40	<--	nilsi__ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 14:55:02	l_r	std::plus
2014-11-25 14:55:15	xico	nice
2014-11-25 14:55:32	xico	no double::operator+ or something like this then
2014-11-25 14:56:05	Oxyd	No.
2014-11-25 14:56:17	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Read error: Connection reset by peer)
2014-11-25 14:56:21	Oxyd	{ array<int, 3> a{1, 2, 3}, b{4, 5, 6}; transform(a.begin(), a.end(), b.begin(), a.begin(), plus<int>()); cout << a; }  // std::transform already has a binary variant.
2014-11-25 14:56:24	geordi	{5, 7, 9}
2014-11-25 14:56:45	Oxyd	plus<T>() works, of course. Not sure if it's necessarily more concise to you.
2014-11-25 14:56:53	<--	peterR`` (~pter@host81-155-159-117.range81-155.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-25 14:57:18	<--	Nando_k (~Nando_k@dslb-188-108-168-080.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 255 seconds)
2014-11-25 14:57:44	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-25 14:57:48	o-O-o	I think it is possible to make a n_transform algorithm that accepts variadics. I can see a version of plus<> that accepts variadics too
2014-11-25 14:58:14	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-25 14:58:36	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-25 14:59:34	<--	SiGe___ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 14:59:45	<--	Leftas_ (~leftas@91.228.84.180) has quit (Ping timeout: 244 seconds)
2014-11-25 14:59:57	xico	on another topic, what is the name of the <F(X,Y)> syntax for templates used in std::result_of or std::function?
2014-11-25 15:00:32	Oxyd	Template argument?
2014-11-25 15:00:51	Eelis	<< TYPE_DESC<int(int)>
2014-11-25 15:00:54	geordi	function taking an integer and returning an integer
2014-11-25 15:00:56	Oxyd	{ function<void()> f; }
2014-11-25 15:00:59	geordi	<no output>
2014-11-25 15:00:59	Oxyd	geordi: identify <void()>
2014-11-25 15:01:03	geordi	func-body ? compound-stmt ? stmt-seq ? stmt ? decl'ion-stmt ? block-decl'ion ? simple-decl'ion ? decl-spec-seq ? decl-spec ? type-spec ? trailing-type-spec ? simple-type-spec ? type-name ? class-name ? template-id ? simple-template-id ? template-args
2014-11-25 15:01:08	Oxyd	template-args, apparently.
2014-11-25 15:01:10	o-O-o	ugh
2014-11-25 15:01:28	o-O-o	now in english, please
2014-11-25 15:02:48	Eelis	a good way to make "identify" output a little shorter is by putting things in global scope
2014-11-25 15:03:32	xico	geordi: identify void()
2014-11-25 15:03:33	geordi	func-body ? compound-stmt ? stmt-seq ? stmt ? decl'ion-stmt ? block-decl'ion ? simple-decl'ion ? decl-spec-seq ? decl-spec ? type-spec ? trailing-type-spec ? simple-type-spec ? type-name ? class-name ? template-id ? simple-template-id ? template-args ? template-arg-list ? template-arg ? type-id
2014-11-25 15:03:44	xico	geordi: identify F(G)
2014-11-25 15:03:46	geordi	error: String `F(G)` does not occur.
2014-11-25 15:04:07	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 15:04:13	Oxyd	There could also be a geordi syntax like `identify <void()> in { function<void()> f; }` to allow this to be a one-liner.
2014-11-25 15:04:17	Oxyd	If there isn't one already.
2014-11-25 15:04:53	Eelis	very well, i will make it
2014-11-25 15:05:47	Eelis	wait, you /can/ already do it
2014-11-25 15:06:10	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-25 15:06:11	Eelis	geordi, replace everything with int x; and identify x
2014-11-25 15:06:12	geordi	decl'ion-seq ? decl'ion ? block-decl'ion ? simple-decl'ion ? init-decl'or-list ? init-decl'or ? decl'or ? ptr-decl'or ? noptr-decl'or ? decl'or-id ? ? ? unqual-id ? ident
2014-11-25 15:06:35	Oxyd	That's a little awkward, but it works.
2014-11-25 15:06:48	Eelis	i'm thinking about something better
2014-11-25 15:07:15	Eelis	what might be a good alias for "replace everything with"?
2014-11-25 15:07:29	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2014-11-25 15:07:32	Eelis	behold
2014-11-25 15:07:42	o-O-o	dun du ndun
2014-11-25 15:07:46	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-25 15:07:48	Eelis	"geordi, behold int x; and identify x"
2014-11-25 15:08:55	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 15:08:56	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 15:09:04	<--	komarov (~komarov@37.150.162.102) has quit (Ping timeout: 258 seconds)
2014-11-25 15:09:24	-->	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has joined ##c++
2014-11-25 15:10:00	-->	komarov (~komarov@37.150.162.102) has joined ##c++
2014-11-25 15:10:45	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-25 15:10:47	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 15:11:13	Eelis	oh no, wait, i forgot geordi output was supposed to make sense
2014-11-25 15:12:19	Eelis	there actually already is an "in" clause, but it's used for referring to parts of the code, not for giving the actual code verbatim
2014-11-25 15:12:32	Eelis	geordi, identify x in blabla
2014-11-25 15:12:32	geordi	error: Could not find body of blabla.
2014-11-25 15:12:34	<--	matt90 (~matt90@149-169-138-60.nat.asu.edu) has quit (Quit: Leaving)
2014-11-25 15:12:36	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-25 15:12:54	Eelis	geordi, identify x in ding dong
2014-11-25 15:12:55	geordi	error: Unexpected `dong` after `in ding `. Expected "::", template-arguments, "around", "before", "after", "between", "in", "and ", or end of request.
2014-11-25 15:13:08	Oxyd	Unexpected dong. Perfect.
2014-11-25 15:13:10	<--	DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has quit (Quit: leaving)
2014-11-25 15:13:17	<--	mxiia (~mxiia@unaffiliated/mxiia) has quit (Ping timeout: 258 seconds)
2014-11-25 15:13:29	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-25 15:13:31	-->	PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-11-25 15:13:36	Oxyd	Maybe "identify x given int x;" ?
2014-11-25 15:13:58	-->	mxiia (~mxiia@unaffiliated/mxiia) has joined ##c++
2014-11-25 15:15:10	-->	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 15:15:51	Eelis	nah, the basic structure of "<do something to make the snippet what you want> and identify x" is sound. i just need a good alias for "replace everything with"
2014-11-25 15:16:04	Eelis	but maybe "given" can work
2014-11-25 15:16:16	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 15:16:23	Eelis	short for "given this new code, as opposed to the old code"
2014-11-25 15:17:27	Eelis	so it's both correct in isolation and in its edit command semantics
2014-11-25 15:17:27	-->	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has joined ##c++
2014-11-25 15:17:44	Eelis	that is, the "replace everything with" interpretation
2014-11-25 15:17:46	-->	Marcus_aurelius (~Douglas@129.137.165.250) has joined ##c++
2014-11-25 15:17:47	Ploppz	What is the difference between a const pointer and a reference?
2014-11-25 15:17:51	Eelis	because then you can also do "given yada append bla"
2014-11-25 15:18:02	Ploppz	And a const pointer pointing to a const variabe, and a const reference?
2014-11-25 15:18:06	TinoDidriksen	A const pointer can still be null.
2014-11-25 15:18:17	Oxyd	One is a pointer and the other is a reference.
2014-11-25 15:19:01	-->	Nando_k (~Nando_k@dslb-188-108-168-080.188.108.pools.vodafone-ip.de) has joined ##c++
2014-11-25 15:19:04	Ploppz	Oxyd: And my question is what the difference between those two are.
2014-11-25 15:19:20	Oxyd	They are different types.
2014-11-25 15:19:38	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 15:19:49	Eelis	pointers are objects, references are not
2014-11-25 15:19:59	Eelis	pointers have values, references do not
2014-11-25 15:20:41	Oxyd	You can have an array of pointers, but not an array of references.
2014-11-25 15:20:58	Ploppz	Hm, is it like references are more pre-compile time?
2014-11-25 15:21:08	japro	man... reference are boring
2014-11-25 15:21:17	Ploppz	Almost like some kind of sustitution?
2014-11-25 15:21:24	kadoban	Ploppz: Not really, no.
2014-11-25 15:22:09	Eelis	Ploppz: a reference /can/ end up having a runtime representation (as a pointer, typically), but that's hidden from the programmer
2014-11-25 15:22:21	Ploppz	Hm, ok
2014-11-25 15:22:45	disappointment	http://stackoverflow.com/questions/1179937/how-does-a-c-reference-look-memory-wise
2014-11-25 15:23:43	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-25 15:24:03	Ploppz	Thanks
2014-11-25 15:24:15	Eelis	at runtime, references are the ghostly non-objects that occupy the bytes in your objects that you're not supposed to look at
2014-11-25 15:25:38	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-25 15:25:44	<--	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-25 15:26:22	-->	ablephar` (~user@46.115.177.110) has joined ##c++
2014-11-25 15:27:48	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-25 15:27:59	-->	Nando_k- (~Nando_k@dslc-082-083-016-148.pools.arcor-ip.net) has joined ##c++
2014-11-25 15:28:12	<--	Nando_k (~Nando_k@dslb-188-108-168-080.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 258 seconds)
2014-11-25 15:28:27	<--	ablepharus (~user@46.115.177.110) has quit (Remote host closed the connection)
2014-11-25 15:30:26	<--	arvut (~arvut@unaffiliated/arvut) has quit (Ping timeout: 240 seconds)
2014-11-25 15:30:58	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-25 15:30:59	--	shintahW2 is now known as shintahW
2014-11-25 15:31:22	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 15:32:14	<--	Nando_k- (~Nando_k@dslc-082-083-016-148.pools.arcor-ip.net) has left ##c++
2014-11-25 15:32:17	-->	Nando_k (~Nando_k@dslc-082-083-016-148.pools.arcor-ip.net) has joined ##c++
2014-11-25 15:35:07	-->	RoestVrijStaal (~RoestVrij@54181E5D.cm-5-1a.dynamic.ziggo.nl) has joined ##c++
2014-11-25 15:35:38	RoestVrijStaal	!othercppchannels
2014-11-25 15:37:24	RoestVrijStaal	Hello, what's going wrong with this random generator? It keeps giving 0 http://dpaste.com/2Z1E90D
2014-11-25 15:38:15	-->	Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2014-11-25 15:38:17	Smirnov	saw the range and container algorithm stuff from the new draft. looks pretty sweet
2014-11-25 15:38:31	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-25 15:39:10	<--	timj (~timj@91.102.9.98) has quit (Quit: Leaving.)
2014-11-25 15:40:59	-->	SiGe_ (~SiGe@usc-secure-wireless-055-004.usc.edu) has joined ##c++
2014-11-25 15:41:04	<--	borkdox (~borkdox@c-71-235-215-26.hsd1.ct.comcast.net) has quit (Quit: Textual IRC Client: http://www.textualapp.com/)
2014-11-25 15:41:22	PlasmaHH	writing your own random number generator is always wrong
2014-11-25 15:41:28	<--	scai (~scai@p4FF0E024.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-25 15:41:37	hs_	RoestVrijStaal, try default_random_engine randomEngine{std::random_device{}()};
2014-11-25 15:43:21	<--	komarov (~komarov@37.150.162.102) has quit (Ping timeout: 272 seconds)
2014-11-25 15:43:45	-->	nilsi__ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 15:44:12	-->	komarov (~komarov@37.150.162.102) has joined ##c++
2014-11-25 15:44:14	<--	nilsi__ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 15:45:09	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-25 15:45:41	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 15:45:53	-->	SiGe___ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-25 15:46:30	-->	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has joined ##c++
2014-11-25 15:47:11	<--	SiGe_ (~SiGe@usc-secure-wireless-055-004.usc.edu) has quit (Ping timeout: 244 seconds)
2014-11-25 15:47:15	Eelis	V-ille: excellent, i'll be coauthoring with Victor, who says he also has new ideas about selling this stuff
2014-11-25 15:47:35	RoestVrijStaal	hs_: adding std::random_device{}() as parameter didn't work unfortunately
2014-11-25 15:47:42	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-25 15:47:59	<--	Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has quit (Quit: Darth_Ginger)
2014-11-25 15:48:00	-->	josh (~josh@66.60.115.195) has joined ##c++
2014-11-25 15:48:16	RoestVrijStaal	PlasmaHH: this is "how generating a random number" ? la C++11 stule
2014-11-25 15:48:18	RoestVrijStaal	*style
2014-11-25 15:48:27	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 15:48:52	PlasmaHH	hmk. I am always using std::random_device anyways
2014-11-25 15:51:15	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 15:51:58	hs_	RoestVrijStaal, show a testcase then
2014-11-25 15:52:04	hs_	{ default_random_engine re{ random_device{}() }; uniform_int_distribution<int> ud{0,5}; for (int i = 0; i < 20; ++i) cout << ud(re),""; } // seems ok
2014-11-25 15:52:06	geordi	3, 0, 2, 5, 5, 1, 1, 5, 4, 0, 0, 5, 1, 0, 1, 4, 3, 1, 3, 2,
2014-11-25 15:52:14	<--	reiser_ (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Quit: Leaving)
2014-11-25 15:53:03	<--	fahadash (~fahadash@unaffiliated/fahadash) has quit (Ping timeout: 258 seconds)
2014-11-25 15:53:14	hs_	RoestVrijStaal, I see you are in ##C++-general so I will speak there
2014-11-25 15:53:43	Kirrahe	... and in ##c++-basic, and wherever else
2014-11-25 15:54:22	hs_	hehe
2014-11-25 15:54:24	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 15:54:38	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-25 15:54:43	hs_	is it a question or a multi-front onslaught?
2014-11-25 15:55:06	<--	astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-25 15:55:31	<--	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has quit (Read error: Connection reset by peer)
2014-11-25 15:55:44	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-25 15:55:51	PlasmaHH	if its emberassing mention it everywhere for best impact
2014-11-25 15:57:27	-->	raj___ (~xar@182.65.92.234) has joined ##c++
2014-11-25 15:58:01	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-25 15:58:09	<--	SiGe___ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-25 15:58:16	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-25 15:58:35	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Read error: No route to host)
2014-11-25 15:59:35	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-11-25 16:00:11	-->	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has joined ##c++
2014-11-25 16:01:22	-->	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-25 16:02:02	-->	SiGe_ (~SiGe@usc-secure-wireless-055-004.usc.edu) has joined ##c++
2014-11-25 16:02:57	-->	SiGe__ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-25 16:03:21	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-11-25 16:03:41	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-25 16:03:51	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-25 16:04:37	xico	wait, you can construct a default_random_egine with a random_device?
2014-11-25 16:04:48	xico	that is using directly random_device as a seedsequence?
2014-11-25 16:05:17	<--	o-0-o (~achubergs@97-113-31-93.tukw.qwest.net) has quit (Ping timeout: 258 seconds)
2014-11-25 16:05:24	-->	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has joined ##c++
2014-11-25 16:06:16	pi-	Has the idea of named arguments been mooted? e.g. f(start_offset:1, match_string:"flibble");? Sometimes not having it hurts readability; you have to jump to the function definition to figure out what it is doing, which creates a speedbump when trying to figure out unfamiliar code.
2014-11-25 16:06:22	<--	SiGe_ (~SiGe@usc-secure-wireless-055-004.usc.edu) has quit (Ping timeout: 256 seconds)
2014-11-25 16:07:34	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-25 16:07:37	<--	raj___ (~xar@182.65.92.234) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 16:07:39	hs_	xico, it is an operator() call to a temporary random_device
2014-11-25 16:07:43	hs_	xico, random_device{}()
2014-11-25 16:08:10	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-25 16:08:10	xico	hs_: ah, you are right. not a full seed then.
2014-11-25 16:08:13	xico	misread, my bad.
2014-11-25 16:08:27	-->	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has joined ##c++
2014-11-25 16:08:36	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-25 16:08:37	-->	m477 (~quassel@agrk43.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-25 16:09:05	<--	licnep (uid4387@gateway/web/irccloud.com/x-qnnyvzavenwylxbe) has quit (Quit: Connection closed for inactivity)
2014-11-25 16:09:33	<--	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has quit (Read error: Connection reset by peer)
2014-11-25 16:09:55	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-11-25 16:10:13	-->	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has joined ##c++
2014-11-25 16:11:25	<--	m477_ (~quassel@agrp131.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 250 seconds)
2014-11-25 16:11:36	<--	marvimias (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has quit (Remote host closed the connection)
2014-11-25 16:11:42	<--	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2014-11-25 16:11:47	-->	immibis (~ChatZill1@122-59-112-18.jetstream.xtra.co.nz) has joined ##c++
2014-11-25 16:12:31	<--	Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2014-11-25 16:13:01	hs_	pi-, how does knowing the name of the argument help with readability?
2014-11-25 16:13:03	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-25 16:13:41	hs_	seems better to just have a clear function name with semi-obvious parameters than "f(start_offset, match_string);"
2014-11-25 16:14:11	hs_	(ignoring all issues of how to implement out-of-order parameter passing)
2014-11-25 16:14:51	<--	lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-25 16:15:13	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-25 16:15:52	pi-	hs_: some situations it is obvious what the arguments represent. Others it really isn't. What if you're setting a bunch of flags?  f(true, false, NULL, -1);
2014-11-25 16:15:56	-->	badone_ (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-25 16:16:02	<--	Internet13 (chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-11-25 16:16:23	<--	SiGe__ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-25 16:17:02	hs_	why would you set flags in a function parameter? (I know it is done, but I think it is pretty ugly..)
2014-11-25 16:17:07	-->	jfcaron (~jfcaron@dhcp-128-189-207-158.ubcsecure.wireless.ubc.ca) has joined ##c++
2014-11-25 16:17:10	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 245 seconds)
2014-11-25 16:17:33	hs_	er in a series of function parameters
2014-11-25 16:18:19	--	badone_ is now known as badone
2014-11-25 16:18:47	tworkin	my favorite example is a rectangle constructor Rect(10, 10, 100, 100)
2014-11-25 16:18:50	tworkin	is the width 100 or 90?
2014-11-25 16:18:55	Smirnov	yeah I hate those
2014-11-25 16:19:05	-->	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 16:19:08	Smirnov	it drives me up the wall when people think x2,y2 is the correct way too :)
2014-11-25 16:19:15	<--	Areks (~Areks@95-26-129-29.broadband.corbina.ru) has quit (Ping timeout: 245 seconds)
2014-11-25 16:19:21	hs_	I sometimes wish function names could have parameters interspersed in them
2014-11-25 16:19:30	pi-	right, these sorts of situations crop up all the time
2014-11-25 16:19:32	<--	komarov (~komarov@37.150.162.102) has quit (Ping timeout: 255 seconds)
2014-11-25 16:19:38	Smirnov	that's why I overload with a point/size and point/point so you can use the unambiguous one
2014-11-25 16:20:11	tworkin	but a vector "extent" is perfectly valid too
2014-11-25 16:20:16	Smirnov	you only really need named arguments imho when passing literals or poorly named variables
2014-11-25 16:20:18	tworkin	Rectangle({10, 10}, {100, 100})
2014-11-25 16:20:21	tworkin	doesnt clear things up
2014-11-25 16:20:52	Smirnov	yeah but if the second initializer list could go either way (as a point or as a size) then the compiler will blow up
2014-11-25 16:20:53	rkreis	Rectangle().left(10).top(10)...
2014-11-25 16:20:59	hs_	like "find_(e)_in_(container)" (extremely ugly example)
2014-11-25 16:21:01	pi-	Objective-C has quite a nice way of dealing with it, where you can 'Rect rect = [Rect makeRect_WithX:10 Y:10, Width:100, Height:100]'
2014-11-25 16:21:16	<--	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 16:21:20	hs_	or "has_(x)_at_index_(y)"
2014-11-25 16:21:24	Smirnov	Rectangle r = RectangleBuilder.new().left(10).top(10).width(100).height(100).create();
2014-11-25 16:21:27	Smirnov	problem solved!
2014-11-25 16:21:31	tworkin	Smirnov: 	noooo
2014-11-25 16:21:48	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-25 16:21:50	hs_	makes multi-place predicates a bit more readable and lets you avoid ugly compound names
2014-11-25 16:21:52	pi-	What I'm saying is that it wouldn't hurt anyone to allow a 'f(foo:1, bar:NULL)' syntax. It wouldn't break any existing code.
2014-11-25 16:22:09	Smirnov	just kidding, this is C++ so you just need RectangleBuilder.left(10).top(10).width(100).height(100); and implicit operator conversion does the rest
2014-11-25 16:22:09	V-ille	Eelis: I have a patch for the string-conversion warning
2014-11-25 16:22:10	-->	Areks (~Areks@95-26-129-29.broadband.corbina.ru) has joined ##c++
2014-11-25 16:22:11	pi-	And it would give the option of improving readability in certain situations.
2014-11-25 16:22:31	Smirnov	except unless you use auto then you are screwed because it doesn't support expression templates (yet)
2014-11-25 16:22:36	-->	bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-25 16:22:38	hs_	pi-, it _could_ hurt if there is ugly magic to support out-of-order parameters
2014-11-25 16:22:42	V-ille	Eelis: it now says "warning: ISO C++ forbids converting a string constant to ?char*? [-Wpedantic]"
2014-11-25 16:22:43	-->	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has joined ##c++
2014-11-25 16:22:45	Eelis	V-ille: nice!
2014-11-25 16:23:03	xico	Rectangle(WIDTH, 100, HEIGHT, 100) with variadics, sfnia and enums
2014-11-25 16:23:11	hs_	pi-, or how do you call a function in a library? would it only support function calls with visible definitions?
2014-11-25 16:23:21	V-ille	some tests to do, then I'll send it to the mighty maintainer
2014-11-25 16:23:30	Smirnov	pi-: that works nice until you start seeing nonsense like [makeRect_WithX:X, Y:Y, Width:Width, Height:Height]
2014-11-25 16:23:36	pi-	hs_: how about if you can put anything in front of the :, and it is treated as a comment and discarded
2014-11-25 16:24:05	hs_	pi-, but you can already put a comment there..?
2014-11-25 16:24:14	aschmack	what happens when you're doing a ternary in a function call
2014-11-25 16:24:35	aschmack	guess it depends on the parsing order
2014-11-25 16:24:53	l_r	i wonder if a proper use of the actor model (message passing) can be as efficient as using traditional lock primitives in a multithread program
2014-11-25 16:25:01	pi-	Otherwise what options do we have? f( /* foo */ 1, /* bar */ 2 ); <-- for a start it is horribly ugly, and then you can't /* */ over the line.
2014-11-25 16:25:07	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-25 16:25:18	Smirnov	pi-: yeah that's what I end up doing and then people complain about how it hurts code readability
2014-11-25 16:25:33	pi-	You could put a comment on the previous line, but then that interrupts Reading the code as you have to reference between the comment line and the function line for each parameter
2014-11-25 16:25:35	Smirnov	I guess having to look at the man-page or the header every single time they see a foo(false,false,true,true,null) is more efficient right?
2014-11-25 16:25:42	pi-	i.e. You can't just read in a forwards direction
2014-11-25 16:25:46	aschmack	how about a comment above the call?
2014-11-25 16:25:56	Eelis	l_r: more, because you can use a lock-free queue, for example
2014-11-25 16:25:58	l_r	pi-, use enums
2014-11-25 16:26:03	pi-	or putting each parameter on separate lines, which means you don't get much on a page
2014-11-25 16:26:10	l_r	Eelis, yes,good point
2014-11-25 16:26:11	Smirnov	pi-: you can put each parameter on a new line, and use // at the end
2014-11-25 16:26:22	pi-	enums only work for certain types
2014-11-25 16:26:33	Smirnov	e.g. foo(1, // Width\n 2 // Height);
2014-11-25 16:26:33	pi-	There is no good solution.
2014-11-25 16:26:57	Smirnov	which increases vertical line #s but then you can use /* */ over the code. also you can just #if 0 over the code so the /* thing is irrelevant
2014-11-25 16:27:07	pi-	Smirnov, would that work inside a #define?
2014-11-25 16:27:21	pi-	Also it's ugly.
2014-11-25 16:27:24	<--	kurahaupo_ (~kurahaupo@118.148.195.239) has quit (Ping timeout: 240 seconds)
2014-11-25 16:27:28	Smirnov	no but just wrap it inside another macro that expands to nothing then
2014-11-25 16:27:40	Smirnov	#define COMMENT_OUT(anything)
2014-11-25 16:27:46	pi-	f(a:1, b:2) is pretty, and it allows IDEs to do something funky with the colour scheme
2014-11-25 16:28:24	<--	kyoshero (~kyoshero@112.198.79.178) has quit (Quit: Leaving)
2014-11-25 16:28:27	Smirnov	submit a C++ draft proposal to the committee then
2014-11-25 16:28:32	o-O-o	whee
2014-11-25 16:28:39	-->	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has joined ##c++
2014-11-25 16:28:48	pi-	Smirnov: Can do...
2014-11-25 16:28:56	hs_	I don't think f(a:1, b:2) is any prettier or informative than f(1,2)
2014-11-25 16:29:01	o-O-o	not gonna happen
2014-11-25 16:29:02	o-O-o	!next
2014-11-25 16:29:03	nolyc	Another satisfied customer, next!
2014-11-25 16:29:23	hs_	I realize you don't have this particular case in mind, but I have yet to see a genuinely good motivating example
2014-11-25 16:29:27	hs_	(from the "named parameter" people)
2014-11-25 16:29:35	Smirnov	it's easier to read, don't you do code reviews?
2014-11-25 16:29:36	Eelis	vector<int> v(size: 34, capacity: 64); // this would be awesome
2014-11-25 16:29:56	Smirnov	to be honest half the problems stem from all the damn implicit type conversion
2014-11-25 16:29:57	aschmack	are you allowed to do v(capacity:64, size:34) then?
2014-11-25 16:30:06	PlasmaHH	just look at the APIs that currently use boost named parameters...
2014-11-25 16:30:14	pi-	Also, and this is the kicker, it would disambiguate initialiser lists
2014-11-25 16:30:25	PlasmaHH	I have lots of cases where I have functions that have lots of optional strings for various informations...
2014-11-25 16:30:38	PlasmaHH	I would love to have something like those for templates
2014-11-25 16:30:58	PlasmaHH	but since it is unlikely that this feature comes without a special activation syntax, it will be near useless
2014-11-25 16:31:06	pi-	That string(50, 'x') versus string{50, 'x'} conundrum
2014-11-25 16:31:08	Smirnov	we just need struct initializer syntax without needing to explicitly say the struct name, problem solved
2014-11-25 16:31:35	PlasmaHH	you know there are more than ctors that can be called...
2014-11-25 16:32:03	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-25 16:32:22	-->	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2014-11-25 16:32:22	pi-	hs_: I can go away and construct motivating examples, but I kind of scratch my head that anyone would require them in order to see what I'm getting at.
2014-11-25 16:32:44	Eelis	i just gave one
2014-11-25 16:32:46	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-25 16:33:11	hs_	pi-, so you just want an "annotation" space before the parameter?
2014-11-25 16:33:12	Smirnov	they probably want examples of where it makes things better semantically, as opposed to just improving readability which you can enforce with a style guide (or lint)
2014-11-25 16:33:14	PlasmaHH	no "motivating example" is good enough because whoever demands it would never need to do it that way
2014-11-25 16:33:34	PlasmaHH	Smirnov: foo(1,5,8,3,5,6,3,9.0); can not be improved with a style guide
2014-11-25 16:33:39	pi-	hs_: why not, it would be a new kind of comment.
2014-11-25 16:34:07	pi-	It wouldn't clash with ternary, as there is no preceding ?
2014-11-25 16:34:07	Smirnov	PlasmaHH: sure like can't have more than X parameters or can't have more than X parameters of the same type, or literals always need a comment or...
2014-11-25 16:34:41	PlasmaHH	Smirnov: "sorry boss we can not have this api, we are not allowed to have more than 3 parameters, but for 4 dimensions we need more"
2014-11-25 16:35:03	PlasmaHH	these kinds of ideas are fine until they leave the ivory tower they were born in
2014-11-25 16:35:30	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Client Quit)
2014-11-25 16:35:35	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-25 16:35:37	Smirnov	ok, then goto "literals always need a comment"
2014-11-25 16:35:56	pi-	Could anyone rig the bot to kick o-O-o every time he does !next?
2014-11-25 16:36:10	PlasmaHH	that doesnt solve the problem of them being awful to use, especially in the case of lots of defaults
2014-11-25 16:36:20	PlasmaHH	pi-: no
2014-11-25 16:36:21	PlasmaHH	!next
2014-11-25 16:36:22	hs_	pi-, I am happy to see cases, but I don't see what it buys you over f(1, // detailx\n2, // detaily\n3, \\detailz\n); etc
2014-11-25 16:36:22	nolyc	Another satisfied customer, next!
2014-11-25 16:36:42	hs_	pi-, new syntax just to allow single line annotated function calls?
2014-11-25 16:36:51	PlasmaHH	hs_: imagine you have 5 parameters that have useful defaults and you only want to use a different value for one of them.
2014-11-25 16:37:17	pi-	hs_: that's a lot of bloat, especially if the parameter list isn't too pretty itself
2014-11-25 16:37:55	hs_	PlasmaHH, is this on a named-argument proposal? pi- has already backed off of that to an "annotation" proposal
2014-11-25 16:37:58	pi-	hs_: it is a struggle to read
2014-11-25 16:38:07	hs_	"struggle"?
2014-11-25 16:38:15	hs_	a multi-line function call?
2014-11-25 16:38:21	PlasmaHH	hs_: annotation? how is that going to help?
2014-11-25 16:38:23	<--	Areks (~Areks@95-26-129-29.broadband.corbina.ru) has quit (Ping timeout: 255 seconds)
2014-11-25 16:38:29	hs_	PlasmaHH, you tell me! (or tell pi- so he can tell me)
2014-11-25 16:38:42	PlasmaHH	hs_: I have not the slightest idea and never said that it would
2014-11-25 16:38:49	pi-	I am mooting both ideas.
2014-11-25 16:39:02	<--	SiGe_ (~SiGe@usc-secure-wireless-088-105.usc.edu) has quit (Remote host closed the connection)
2014-11-25 16:39:43	PlasmaHH	using the "I would not need it" argument?
2014-11-25 16:40:16	<--	Nando_k (~Nando_k@dslc-082-083-016-148.pools.arcor-ip.net) has quit (Ping timeout: 244 seconds)
2014-11-25 16:40:52	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 240 seconds)
2014-11-25 16:40:53	<--	seishun (~Kakera@78.84.132.129) has quit (Remote host closed the connection)
2014-11-25 16:41:30	-->	kurahaupo (~kurahaupo@118.148.221.136) has joined ##c++
2014-11-25 16:41:32	<--	kurahaupo (~kurahaupo@118.148.221.136) has quit (Excess Flood)
2014-11-25 16:41:37	<--	adek (~adek@199.201.64.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 16:41:54	Smirnov	PlasmaHH: are you suggesting being able to skip over defaults?
2014-11-25 16:42:00	pi-	Someone pointed out there is a problem with calling a function from a library, maybe in the header it is just declared as 'void f(int);' so no opportunity to use 'f(foo:5);'
2014-11-25 16:42:28	PlasmaHH	yeah thats a good argument to not allow this feature at all
2014-11-25 16:42:33	pi-	That's why I thought it may serve better as a comment.
2014-11-25 16:42:46	-->	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-25 16:42:50	Smirnov	if its just f(int), maybe f(_0:5) ?
2014-11-25 16:42:55	pi-	Why not allow it as a new style of comment?
2014-11-25 16:43:12	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2014-11-25 16:43:13	l_r	comments are comments
2014-11-25 16:43:16	l_r	by nature
2014-11-25 16:43:19	-->	kurahaupo (~kurahaupo@118.148.221.136) has joined ##c++
2014-11-25 16:43:22	PlasmaHH	exactly
2014-11-25 16:43:25	l_r	(my 2 cents)
2014-11-25 16:43:34	pi-	What does that even mean?
2014-11-25 16:43:39	xico	{signed int s = -2; unsigned int u = 1; cout << TYPE(u+s) << ' ' << TYPE(s+u) << endl; } // is that normal? always getting unsigned?
2014-11-25 16:43:39	geordi	rvalue unsigned int rvalue unsigned int
2014-11-25 16:43:40	pi-	Comments are there to make code easier to read
2014-11-25 16:43:42	PlasmaHH	and if the function was not decalred with a parameter name, then well, you can not use named parameters *shrug*
2014-11-25 16:43:59	PlasmaHH	pi-: comments are comments and whether they are present or not should make no difference on the code
2014-11-25 16:44:11	<--	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-25 16:44:19	pi-	If we can introduce a commenting style that improves readability further, surely this is a good thing!
2014-11-25 16:44:33	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-25 16:44:50	PlasmaHH	its not about readability, its about the compiler doing something for you
2014-11-25 16:45:17	pi-	PlasmaHH: do you think it would be possible for the compiler to enforce the match if possible, and simply regard it as a comment otherwise?
2014-11-25 16:45:21	--	filcab_ is now known as filcab
2014-11-25 16:45:21	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Ping timeout: 240 seconds)
2014-11-25 16:45:27	pi-	This gets the best of both worlds.
2014-11-25 16:45:31	PlasmaHH	foo( int a = 1, int b = 2, int c = 3, int d = 4, int e = 5, int f = 6, int g = 8 ); foo(g=42); // that is nothing you can ever do with a comment
2014-11-25 16:45:59	<--	melter (~Melter@2001:4930:116:0:2413:a82a:ad53:2d35) has quit (Quit: Client exiting)
2014-11-25 16:46:01	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-25 16:46:09	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-25 16:46:14	Smirnov	yeah I think that's the strongest case for having language support
2014-11-25 16:46:19	pi-	I can't see any argument against, other than "because it involves change"
2014-11-25 16:46:20	-->	Olipro (~Olipro@95.147.72.174) has joined ##c++
2014-11-25 16:46:43	--	Olipro is now known as Guest69968
2014-11-25 16:46:47	PlasmaHH	pi-: how would your comment help in the case I just showed?
2014-11-25 16:47:09	PlasmaHH	Smirnov: it gets even worse with templates. my hashtable template has 17 parameters, all but one with a default
2014-11-25 16:47:42	-->	tinti (~tinti@pdpc/supporter/student/tinti) has joined ##c++
2014-11-25 16:47:56	Smirnov	PlasmaHH: the template parameters right? not the function ones?
2014-11-25 16:48:04	PlasmaHH	yep, the template parameters
2014-11-25 16:48:20	Smirnov	but isn't that solvable by passing a type which encapsulates all the other types with typedefs?
2014-11-25 16:48:48	RoestVrijStaal	the C++11 random generators are crap
2014-11-25 16:48:49	PlasmaHH	sure, the same way named function parameters are solveable by encapsulating all the parameters in a struct... but thats not the point
2014-11-25 16:48:59	RoestVrijStaal	they just give hardcoded numbers back
2014-11-25 16:49:09	PlasmaHH	RoestVrijStaal: yeah, totally, mersenne twister is known to be totally rotten
2014-11-25 16:49:27	pi-	PlasmaHH: I don't get your example. "foo(int a=1);" isn't legal I don't think.
2014-11-25 16:49:32	<--	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-25 16:49:32	PlasmaHH	Smirnov: the point is that its easier to use *and* retains efficiency
2014-11-25 16:49:59	Smirnov	PlasmaHH: well.. is it easier to use though? if you don't define all your functions inline with the declaration, you have to copy+paste the template<typename typename typename> mumbo jumbo
2014-11-25 16:50:06	PlasmaHH	pi-: of course it isnt. we dont have named parameters yet. are you going to tell me that talking about them is moot because we dont have them=
2014-11-25 16:50:26	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 255 seconds)
2014-11-25 16:50:45	Smirnov	the style that I've seen recently is to declare the templated classes only, then immediately put a definition below them with the :: syntax but then it ends up copying and pasting the template <typename> prologue
2014-11-25 16:50:48	-->	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has joined ##c++
2014-11-25 16:50:50	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 240 seconds)
2014-11-25 16:51:10	PlasmaHH	Smirnov: I have a preprocssing script for named (template) parameters to check their usability ... I just do hashtable<T,whatever=foobab> ... thats as easy as it can get
2014-11-25 16:51:10	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-25 16:51:22	pi-	PlasmaHH: just trying to understand what you're saying. You're suggesting another possible solution? Instead of foo(x:1), foo(int x=1) ?
2014-11-25 16:51:35	Smirnov	yeah I definitely agree there, *using* it is much simpler when its just defaulted
2014-11-25 16:52:01	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-25 16:52:05	PlasmaHH	Smirnov: my current pure c++ solution is hashtable<T,whatever_p<foobab>> which is, well, usable but, meh
2014-11-25 16:52:06	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-25 16:52:55	-->	CobaltHex (~CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has joined ##c++
2014-11-25 16:53:01	PlasmaHH	pi-: foo(int x = 1); is already valid syntax for declaring a function. the point is at the *call* site, where foo(x=1); should be allowed
2014-11-25 16:53:05	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-25 16:53:11	<--	P1RATEZ (piratez@CPEbc1401e23523-CMbc1401e23520.cpe.net.cable.rogers.com) has quit
2014-11-25 16:53:14	CobaltHex	how can i declare a constexpr() in a header and define it in a cpp?
2014-11-25 16:53:35	PlasmaHH	Smirnov: having named template paramaeters would also remove a huge amount of code for my case, since doing what I do isnt exaclty easy
2014-11-25 16:53:45	Smirnov	CobaltHex: it has to be done in the same translation unit, so you can declare on line 1 but define it on line 2
2014-11-25 16:53:50	--	dTS is now known as dts
2014-11-25 16:53:58	PlasmaHH	Smirnov: plus, in my proposal it would work for already existing ones
2014-11-25 16:54:22	Smirnov	yeah that seems like a good idea, do you have a C++ draft proposal for it?
2014-11-25 16:54:29	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-25 16:54:30	-->	melter (~Melter@2001:4930:116:0:c9a7:2c72:58d3:e7d1) has joined ##c++
2014-11-25 16:54:35	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 0.3.8)
2014-11-25 16:54:42	hs_	CobaltHex, constexpr implies inline (I believe)
2014-11-25 16:55:14	PlasmaHH	Smirnov: no, I asked a bunch of committee people about some early draft idea, but result was purely negative. and since I dont have time to fight for proposals, there is none
2014-11-25 16:55:20	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 240 seconds)
2014-11-25 16:55:43	Smirnov	i dont think they are too big on syntactic sugar
2014-11-25 16:55:47	SlashLife	hs_: Recursive inline functions?
2014-11-25 16:55:58	Smirnov	inline is just a hint, its not enforced
2014-11-25 16:56:03	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 16:56:07	Smirnov	and you can recursively inline by transforming into a loop
2014-11-25 16:56:26	hs_	SlashLife, "inline" as in no external linkage, multiple definitions in different TUs allowed etc
2014-11-25 16:56:30	PlasmaHH	Smirnov: some thought this is quite nice, but they all were "if it gets in, then only with a syntax to enable it for some functions" and my main point is that it should be there for all existing ones where it *can* be used
2014-11-25 16:56:36	SlashLife	hs_: Ah, ok.
2014-11-25 16:56:47	CobaltHex	smirnov, im trying to make a compile time counter
2014-11-25 16:56:49	hs_	that is, the definition has to be visible where it is used
2014-11-25 16:56:51	CobaltHex	that is global to the program
2014-11-25 16:57:10	Smirnov	you can't have side effects in a constexpr sorry
2014-11-25 16:57:19	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 16:57:33	CobaltHex	:(
2014-11-25 16:57:37	CobaltHex	well do you know how i can do that
2014-11-25 16:57:50	CobaltHex	im using __COUNTER__ right now, but its specific to each tu
2014-11-25 16:57:53	Smirnov	there's __COUNTER__ in gcc
2014-11-25 16:58:02	CobaltHex	specific to each TU
2014-11-25 16:58:12	PlasmaHH	you can not get anything that is not specific to each TU
2014-11-25 16:58:18	Smirnov	that's all you get.. do it at runtime instead
2014-11-25 16:58:21	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-25 16:58:27	AbleBacon	TU = translation unit?
2014-11-25 16:58:27	Smirnov	what are you trying to achieve anyway, maybe you just need a uiud ?
2014-11-25 16:58:28	-->	CalimeroTeknik (~calimero@pradic.tonbnc.fr) has joined ##c++
2014-11-25 16:58:28	CobaltHex	well im trying to auto generate IDs for templates
2014-11-25 16:58:45	PlasmaHH	people tried before you
2014-11-25 16:58:48	SlashLife	CobaltHex: How about using typeid()?
2014-11-25 16:58:55	pi-	PlasmaHH: I see. So now I am steering towards "compiler implements f(foo:5) if foo is matchable, otherwise discards the foo:". And this would allow any combination of named arguments. So 'void foo(int a=1, int b, int c=42){...}; ... foo(b:-1)' would compile. foo(1,2) would also compile. foo(1) wouldn't. foo(c:5) wouldn't.
2014-11-25 16:58:55	CobaltHex	doesnt that require rtti
2014-11-25 16:58:57	<--	Marcus_aurelius (~Douglas@129.137.165.250) has quit (Ping timeout: 256 seconds)
2014-11-25 16:59:06	Smirnov	compile-time IDs?
2014-11-25 16:59:12	CobaltHex	ya
2014-11-25 16:59:12	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 16:59:16	CobaltHex	for each version of a template
2014-11-25 16:59:34	PlasmaHH	pi-: that will lead to just too much confusion. if there is no match, it should simply fail to compile. no harm done.
2014-11-25 16:59:34	-->	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-11-25 16:59:35	Smirnov	when you instantiate your template its already unique
2014-11-25 16:59:40	CobaltHex	yes
2014-11-25 16:59:42	SlashLife	So you want to implement your own RTTI without using the heavily optimized and tested RTTI facilities your compiler offers?
2014-11-25 16:59:46	Smirnov	foo<T1>::value will be the same for all T1
2014-11-25 16:59:55	CobaltHex	slash, i just wanted a quick way to store it in a map
2014-11-25 16:59:56	yates	are vector<> push_back()'s thread-safe?
2014-11-25 16:59:59	yates	i bet not.
2014-11-25 17:00:02	pi-	PlasmaHH: This would also allow directly specifying the order of argument evaluation. foo(b:1, a:2)
2014-11-25 17:00:08	SlashLife	CobaltHex: std::type_index.
2014-11-25 17:00:18	SlashLife	Before you ask: It requires RTTI.
2014-11-25 17:00:24	CobaltHex	yes
2014-11-25 17:00:24	-->	Internet13 (~chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has joined ##c++
2014-11-25 17:00:30	CobaltHex	i will use rtti if theres nothing else
2014-11-25 17:00:36	CalimeroTeknik	should I avoid 'using namespace std;' ?
2014-11-25 17:00:40	Smirnov	yates: of course not
2014-11-25 17:00:43	AbleBacon	yates, i don't think push_back() is threadsafe
2014-11-25 17:00:43	PlasmaHH	pi-: that would be something completely orthogonal that should not be tacked onto that feature (and that I have no stakes in)
2014-11-25 17:00:49	SlashLife	Why don't you rather use RTTI because it's exactly the tool to use for this job?
2014-11-25 17:00:51	PlasmaHH	!give CalimeroTeknik using namespace std
2014-11-25 17:00:52	nolyc	CalimeroTeknik: Importing the entire std namespace into the global scope brings in a lot more symbols than vector and list; it also brings in standard library implementational details. C++ headers are allowed to include other C++ headers, so there is no way of knowing just what symbols got pulled into global scope. It's best not to use 'using namespace std;'. See also (1 more message)
2014-11-25 17:01:02	hs_	CobaltHex, what are you going to do with a unique value for each type?
2014-11-25 17:01:07	SlashLife	!more
2014-11-25 17:01:12	SlashLife	:<
2014-11-25 17:01:12	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 17:01:13	CobaltHex	hs, store as a key in a map
2014-11-25 17:01:15	CalimeroTeknik	thanks
2014-11-25 17:01:22	SlashLife	!more PlasmaHH
2014-11-25 17:01:22	nolyc	http://stackoverflow.com/q/1452721/809387
2014-11-25 17:01:30	Smirnov	CobaltHex: then all you need to do is reify your templates
2014-11-25 17:01:35	CobaltHex	reify?
2014-11-25 17:02:38	<--	pHane_ (~pHane@114.81-166-203.customer.lyse.net) has quit (Quit: Leaving)
2014-11-25 17:02:39	Smirnov	make them partially available at runtime
2014-11-25 17:02:59	Smirnov	the last guy who had a similar question ended up using RTTI
2014-11-25 17:03:51	hs_	CobaltHex, couldn't you just have a hash function for types? overload operator() on types and return a const value
2014-11-25 17:04:16	Smirnov	I think he wants it to be done automatically
2014-11-25 17:04:32	PlasmaHH	Smirnov: I think once I used something like &sometemplate<T>::somestatic; as an ID
2014-11-25 17:04:36	Smirnov	if you put in the file name and the line # and the counter it might be good enough
2014-11-25 17:04:41	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 17:05:19	hs_	perhaps, but how can he generate an "order" from a template instantiation (unlike an object instantiation)
2014-11-25 17:05:23	Smirnov	PlasmaHH: yeah that seems like a good idea, is that well-defined?
2014-11-25 17:06:18	SlashLife	PlasmaHH: Wouldn't you still have to instantiate it explicitly outside of the template definition for each combination of template parameter you're using with it?
2014-11-25 17:06:25	PlasmaHH	Smirnov: it guarantees unique things...
2014-11-25 17:06:39	PlasmaHH	SlashLife: linker magic takes care of that
2014-11-25 17:07:13	SlashLife	Sounds fishy. :/
2014-11-25 17:07:16	-->	Marcus_aurelius (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has joined ##c++
2014-11-25 17:07:17	Smirnov	that's the "magic" part that's worrisome, is it required to do that by the standard?
2014-11-25 17:07:27	PlasmaHH	afaik yes
2014-11-25 17:07:35	Smirnov	I remember for a long time regular functions weren't deduped so people were complaining about template bloat
2014-11-25 17:07:56	Smirnov	presumably when they fixed that they also made the statics deduped as well
2014-11-25 17:08:03	SlashLife	How would the linker know that it's not a dependency from an external source?
2014-11-25 17:08:16	PlasmaHH	statics must be deduped, you are guaranteed that its shared among TUs
2014-11-25 17:08:25	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Quit: Bye!)
2014-11-25 17:08:54	<--	gelignite (~gelignite@i528C34C4.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-25 17:09:17	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Ping timeout: 272 seconds)
2014-11-25 17:09:20	<--	adek (~adek@199.201.64.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 17:09:26	pEYEd	my code counts to 7 and then grabs the 3rd item/[2] and does a pattern match for the a string. immediately following validation, I need to push_back() the values in [0] and [3]  into ->buydat[] . I can only get [3] a single time (the first occurrence), not item [3] in each series . How do I get the first and forth item [3] in a series, into a vector following validation on the 3rd item [2]?  https://bpaste.net/show/9f758b163fac
2014-11-25 17:10:27	-->	Isnogud (~Isnogud@37.120.22.197) has joined ##c++
2014-11-25 17:12:07	<--	Isnogud (~Isnogud@37.120.22.197) has quit (Client Quit)
2014-11-25 17:12:12	<--	pullphinger (~Pullxinge@12.40.23.68) has quit
2014-11-25 17:12:35	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-25 17:13:20	mukunda_	if i have a class declaration inside of a source file, should i still define the function bodies outside of the class?
2014-11-25 17:13:25	<--	Lowl3v3l_ (~Lowl3v3l@2a02:810a:8380:92c:a1b3:73ff:e3b1:cfb6) has quit (Read error: Connection reset by peer)
2014-11-25 17:13:31	Smirnov	hey do you know if there's anything in libraries or the drafts or the fundamentals TS that adds a better Error type? Like optional<T> except maybe result<T,Error> ?
2014-11-25 17:13:33	hs_	CobaltHex, what about something ugly like this:
2014-11-25 17:13:33	-->	Isnogud (~Isnogud@37.120.22.197) has joined ##c++
2014-11-25 17:13:36	hs_	-w { A a; a.updater<int>(); a.updater<float>(); a.updater<int>(); a.updater<float>(); a.updater<double>(); } struct A { static int count; template <typename T> int updater() { static const int value = ++A::count; cout << value << ":" << TYPE<T>,""; } }; int A::count = 0; // CobaltHex
2014-11-25 17:13:45	-->	SiGe_ (~SiGe@usc-secure-wireless-055-018.usc.edu) has joined ##c++
2014-11-25 17:13:50	hs_	geordi, -w { A a; a.updater<int>(); a.updater<float>(); a.updater<int>(); a.updater<float>(); a.updater<double>(); } struct A { static int count; template <typename T> int updater() { static const int value = ++A::count; cout << value << ":" << TYPE<T>,""; } }; int A::count = 0; // CobaltHex
2014-11-25 17:13:51	geordi	1:int, 2:float, 1:int, 2:float, 3:double,
2014-11-25 17:13:56	-->	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has joined ##c++
2014-11-25 17:13:59	<--	Gama11 (~quassel@p579673D0.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-25 17:16:15	hs_	each type gets a runtime constant
2014-11-25 17:17:19	egoldsten_	hello
2014-11-25 17:17:40	CalimeroTeknik	why can't I have an array of references? struct person { int id; std::vector<struct person&> children; };
2014-11-25 17:18:07	CalimeroTeknik	that breaks deep into the template instanciation
2014-11-25 17:18:32	PlasmaHH	because you can not assign references
2014-11-25 17:18:33	egoldsten_	because of the constructors
2014-11-25 17:18:51	<--	magicthing (~merlin@135.ip-92-222-24.eu) has quit (Remote host closed the connection)
2014-11-25 17:19:03	Eelis	because containers can only store objects and references are not objects
2014-11-25 17:19:03	CalimeroTeknik	is there a way I can have an array where I can only put immutable references?
2014-11-25 17:19:17	<--	elveni (~JM@37.187.216.202) has quit (Remote host closed the connection)
2014-11-25 17:19:29	PlasmaHH	!xy
2014-11-25 17:19:30	nolyc	You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is.
2014-11-25 17:19:32	egoldsten_	with a C array
2014-11-25 17:19:37	Smirnov	how come nobody ever knows the answer to my question about error types. are people just not aware of such a thing?
2014-11-25 17:19:45	egoldsten_	I think it works
2014-11-25 17:19:46	<--	NinjaPenguin (~NinjaPeng@unaffiliated/ninjapenguin) has quit (Quit: ZNC - http://znc.in)
2014-11-25 17:20:15	egoldsten_	what is your question Smirnov
2014-11-25 17:20:57	Eelis	Smirnov: yes such things have been proposed. read the recent meeting mailings
2014-11-25 17:21:03	PlasmaHH	Smirnov: I just like ignoring your quesitons to drive you mad. you get +1 lovecraft points.
2014-11-25 17:21:05	hs_	Smirnov, there is boost::optional<T>, I'm sure it will be in the stdlib soon; and you can roll your own monad..
2014-11-25 17:21:25	Smirnov	Eelis: oh can you point me to the right direction?
2014-11-25 17:21:37	PlasmaHH	left
2014-11-25 17:21:53	Eelis	npaperbot: search expected
2014-11-25 17:21:54	npaperbot	N4109: [Library] A proposal to add a utility class to represent expected monad - Revision 1 <http://bit.ly/1vCwU6q> (by V. Escriba, P. Talbot)
2014-11-25 17:21:54	npaperbot	Also: N4015
2014-11-25 17:21:55	Smirnov	speaking of lovecraft, I need to start watchnig the Gotham show
2014-11-25 17:22:26	-->	NinjaPenguin (~NinjaPeng@2001:41d0:52:a00::7bc) has joined ##c++
2014-11-25 17:22:26	<--	NinjaPenguin (~NinjaPeng@2001:41d0:52:a00::7bc) has quit (Changing host)
2014-11-25 17:22:26	-->	NinjaPenguin (~NinjaPeng@unaffiliated/ninjapenguin) has joined ##c++
2014-11-25 17:22:34	Smirnov	Eelis: omg yes. awesome. thank you
2014-11-25 17:23:00	-->	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has joined ##c++
2014-11-25 17:23:16	Smirnov	hopefully optional also adds a monadic interface then
2014-11-25 17:23:41	<--	Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 258 seconds)
2014-11-25 17:23:55	Smirnov	our code base is full of stuff like bool dostuff(param1,param2,...,string* error_message) and its just so poorly composable
2014-11-25 17:24:59	tworkin	Smirnov: ew. You should look at the Result<T> class, that can represent either a T or an Error
2014-11-25 17:25:21	ville	composable is fine until you have to read someone's infinetly composed chain of calls
2014-11-25 17:25:23	Smirnov	tworkin: where is that from?
2014-11-25 17:26:00	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-25 17:26:13	ville	(not that it's surprising that something taken to an extreme becomes a hazard)
2014-11-25 17:26:21	egoldsten_	It's ok in Lisp ville but yes in C++ with templates it's not fun at all
2014-11-25 17:26:37	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-25 17:27:02	ville	lisp is a non-starter to begin with
2014-11-25 17:27:11	tworkin	Smirnov: its basically a variant<T, Error>
2014-11-25 17:27:14	egoldsten_	you can match a regular function from the same function but "templatized"
2014-11-25 17:27:40	Smirnov	tworkin: ok but where is it from? the nice thing about having it be specialized for 2 values is that you can monadically go down left/right
2014-11-25 17:27:43	tworkin	Smirnov: or possibly { optional<T> t; Error e; } if you want to allow a non-error null
2014-11-25 17:28:01	egoldsten_	it's alway the brackets ville everywhere :-)
2014-11-25 17:28:08	tworkin	idk everyone has cooked up their own version. i forget where i heard about it first
2014-11-25 17:28:25	Smirnov	this isn't about "how to roll my own". I can do that just fine , rust has Result<T,E>, Scala has Either<Left,Right> etc
2014-11-25 17:29:08	Smirnov	what I want is to use some of the experimetnal/draft proposed code in our code base by pulling in small chunks of it. people who write the drafts understand C++ much better typically than the average library writer
2014-11-25 17:29:20	egoldsten_	same
2014-11-25 17:29:42	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-25 17:30:19	egoldsten_	I'm not sure Smirnov compiler guy yes but the iso team ...
2014-11-25 17:30:31	Smirnov	the other thing I'm really excited about is the container algorithms too, I hate the double iterator soup
2014-11-25 17:31:08	-->	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has joined ##c++
2014-11-25 17:31:17	darkswordchris	 Hello. When boost asio's read_some function is called, it appears that all the data read is still kept in the stream/socket. Is this true?
2014-11-25 17:31:28	egoldsten_	I'm using a counter<T> Smirnov to select a range, a tail, an head ...
2014-11-25 17:32:13	-->	bb010g (uid21050@gateway/web/irccloud.com/x-pfnakdljwjriakte) has joined ##c++
2014-11-25 17:33:37	-->	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-25 17:34:00	<--	netj (~netj@128.12.163.109) has quit (Ping timeout: 256 seconds)
2014-11-25 17:34:18	-->	netj (~netj@128.12.163.109) has joined ##c++
2014-11-25 17:34:23	-->	SiGe__ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-25 17:34:47	<--	BlaXpirit (~blaxpirit@130-57-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-25 17:34:49	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-25 17:34:54	-->	cbot` (~FS@150.108.238.42) has joined ##c++
2014-11-25 17:35:06	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Quit: Leaving)
2014-11-25 17:35:10	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Quit: WeeChat 1.0-dev)
2014-11-25 17:35:18	-->	matt90 (~matt90@149-169-138-60.nat.asu.edu) has joined ##c++
2014-11-25 17:36:23	-->	Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-25 17:36:41	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Ping timeout: 258 seconds)
2014-11-25 17:36:44	<--	SiGe_ (~SiGe@usc-secure-wireless-055-018.usc.edu) has quit (Ping timeout: 240 seconds)
2014-11-25 17:37:18	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 17:38:15	Smirnov	npaperbot: search not null
2014-11-25 17:38:16	npaperbot	Nothing found for: not, null
2014-11-25 17:38:32	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-25 17:38:33	<--	kurahaupo (~kurahaupo@118.148.221.136) has quit (Ping timeout: 255 seconds)
2014-11-25 17:38:42	<--	Marcus_aurelius (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has left ##c++
2014-11-25 17:39:49	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 255 seconds)
2014-11-25 17:40:02	<--	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-11-25 17:40:19	-->	unomystEz (~uno@unaffiliated/unomystez) has joined ##c++
2014-11-25 17:40:47	<--	adek (~adek@199.201.64.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 17:41:44	xace	does anyone know of something that prints math in the terminal like this screenshot? http://www.brain-dump.org/projects/dvtm/screenshot1.png
2014-11-25 17:41:49	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-25 17:42:20	dts	xace, wrong place to ask
2014-11-25 17:42:26	xace	sry wrong channel my bad
2014-11-25 17:43:19	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-25 17:45:50	-->	sohail (~user@69-196-187-44.dsl.teksavvy.com) has joined ##c++
2014-11-25 17:45:51	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-ozwbmfcnkpbzsaqf) has quit (Quit: Connection closed for inactivity)
2014-11-25 17:46:37	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 255 seconds)
2014-11-25 17:47:36	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Read error: Connection reset by peer)
2014-11-25 17:48:43	-->	mukunda (~mukunda@24.9.162.249) has joined ##c++
2014-11-25 17:49:19	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-25 17:49:50	<--	phantomcircuit (~phantomci@smartcontracts.us) has quit (Ping timeout: 256 seconds)
2014-11-25 17:50:37	-->	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has joined ##c++
2014-11-25 17:50:44	-->	Repelex (~textual@189.59.36.231.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-25 17:50:57	<--	bps (~bps@heghbat.us) has quit (Ping timeout: 256 seconds)
2014-11-25 17:51:43	-->	phantomcircuit (~phantomci@smartcontracts.us) has joined ##c++
2014-11-25 17:51:43	<--	zer0def (~zer0def@5.254.151.98) has quit (Ping timeout: 250 seconds)
2014-11-25 17:51:56	<--	mukunda_ (~mukunda@24.9.162.249) has quit (Ping timeout: 245 seconds)
2014-11-25 17:52:43	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 17:53:13	<--	HeTo (henkka@2002:5eed:4417:1::24) has quit (Ping timeout: 265 seconds)
2014-11-25 17:53:13	<--	de-vri-es (~de-vri-es@voyager.de-vri.es) has quit (Ping timeout: 265 seconds)
2014-11-25 17:53:13	-->	licnep (uid4387@gateway/web/irccloud.com/x-bxsgacpuydvpnkim) has joined ##c++
2014-11-25 17:53:31	-->	HeTo (henkka@2002:5eed:4417:1::24) has joined ##c++
2014-11-25 17:54:06	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Read error: No route to host)
2014-11-25 17:54:14	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 250 seconds)
2014-11-25 17:55:11	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-25 17:55:51	<--	jfcaron (~jfcaron@dhcp-128-189-207-158.ubcsecure.wireless.ubc.ca) has quit (Quit: Leaving)
2014-11-25 17:56:40	<--	Longlius (~longlius@141.225.243.254) has quit (Ping timeout: 272 seconds)
2014-11-25 17:58:42	-->	vinleod (~vinleod@c-50-186-19-91.hsd1.or.comcast.net) has joined ##c++
2014-11-25 17:58:46	-->	nardev (~nardev@77.238.221.157) has joined ##c++
2014-11-25 17:58:54	<--	unomystEz (~uno@unaffiliated/unomystez) has quit (Ping timeout: 264 seconds)
2014-11-25 18:00:18	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-25 18:00:26	<--	SiGe__ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-25 18:00:31	<--	zwer_w (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-25 18:00:34	CalimeroTeknik	how can I pass a struct to unordered_map.emplace()? here's an example of failing code: http://sprunge.us/Vcha
2014-11-25 18:00:39	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-25 18:00:53	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-25 18:01:05	CalimeroTeknik	I made it the shortest I could
2014-11-25 18:01:37	-->	SiGe (~SiGe@usc-secure-wireless-055-018.usc.edu) has joined ##c++
2014-11-25 18:01:38	egoldsten_	I will put an empty one and set it with back()
2014-11-25 18:01:40	<--	sacio (~odin@ti0053a400-3264.bb.online.no) has left ##c++
2014-11-25 18:02:25	-->	EvilPenguin (~EvilPengu@173.247.204.218) has joined ##c++
2014-11-25 18:02:48	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-25 18:03:06	CalimeroTeknik	unordered_map::back()? I can't find this
2014-11-25 18:03:23	ville	i seem to recall libstdc++ not implementing std::unoredered_map::emplace()
2014-11-25 18:03:43	-->	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has joined ##c++
2014-11-25 18:03:49	CalimeroTeknik	oh, it works if the struct is a bit different
2014-11-25 18:03:49	-->	SiGe__ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-25 18:04:34	CalimeroTeknik	this compiles http://sprunge.us/Bhee
2014-11-25 18:04:36	Ploppz	When passing an argument to a function, by value, if that object is an instance of some class, does it make a new instance and copy over the properties?
2014-11-25 18:04:53	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-25 18:05:02	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-25 18:05:11	-->	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-11-25 18:05:14	hs_	CalimeroTeknik, https://ideone.com/xB4cN6
2014-11-25 18:05:20	Eelis	Ploppz: sometimes, yes
2014-11-25 18:05:34	hs_	that will eventually work with your "unsigned int color=0;"
2014-11-25 18:06:18	<--	SiGe (~SiGe@usc-secure-wireless-055-018.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-25 18:06:26	Eelis	Ploppz: other times, when the caller doesn't need the argument anymore anyway, the properties can be /moved/ instead of copied, which is much cheaper
2014-11-25 18:06:33	Eelis	for many types
2014-11-25 18:06:37	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Quit: Hejd?!)
2014-11-25 18:06:38	CalimeroTeknik	ah, that's right, the initializer breaks everything, thanks hs_
2014-11-25 18:06:46	hs_	(as of right now the =0; renders your person class a non-aggregate)
2014-11-25 18:06:47	Ploppz	Oh, ok
2014-11-25 18:07:09	<--	kez (~quassel@inet2.evalesco.com) has quit (Remote host closed the connection)
2014-11-25 18:07:41	egoldsten_	but do move contructors works for structs?
2014-11-25 18:07:48	ville	!give egoldsten_ struct
2014-11-25 18:07:49	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-25 18:07:49	nolyc	egoldsten_: The only difference between classes and structs is that the former default to private members and bases, while the latter default to public members and bases.
2014-11-25 18:07:54	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-25 18:08:12	<--	rendar (~I@host185-177-dynamic.251-95-r.retail.telecomitalia.it) has quit
2014-11-25 18:08:35	<--	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has quit (Quit: Leaving.)
2014-11-25 18:08:58	CalimeroTeknik	what will happen to my vector<struct person*> in my struct?
2014-11-25 18:09:12	CalimeroTeknik	after running emplace()
2014-11-25 18:09:18	-->	yrter (~yrter@d68079.upc-d.chello.nl) has joined ##c++
2014-11-25 18:09:19	-->	cuppy (~litropy@unaffiliated/litropy) has joined ##c++
2014-11-25 18:09:24	<--	yrter (~yrter@d68079.upc-d.chello.nl) has quit (Client Quit)
2014-11-25 18:09:29	egoldsten_	ok thank you ville I'm not using structs a lot
2014-11-25 18:10:07	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-25 18:10:26	<--	Isnogud (~Isnogud@37.120.22.197) has quit (Quit: Leaving)
2014-11-25 18:10:34	-->	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-11-25 18:10:52	<--	vinleod (~vinleod@c-50-186-19-91.hsd1.or.comcast.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-25 18:11:15	<--	j0z (~j0z@unaffiliated/j0z) has left ##c++ ("Ex-Chat")
2014-11-25 18:11:29	CalimeroTeknik	ah, by the way, warning: compound literals are a C99-specific feature
2014-11-25 18:11:36	<--	luxigo (~luxigo@185.31.100.229) has quit (Ping timeout: 250 seconds)
2014-11-25 18:11:40	<--	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has quit (Quit: Page closed)
2014-11-25 18:11:42	o-O-o	!give pi- next
2014-11-25 18:11:43	nolyc	pi-: Another satisfied customer, next!
2014-11-25 18:11:46	CalimeroTeknik	it seems I will not be allowed to do it this way
2014-11-25 18:12:36	CalimeroTeknik	well, and even, error: ISO C++ forbids compound-literals
2014-11-25 18:13:51	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 264 seconds)
2014-11-25 18:13:57	<--	nda__ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 265 seconds)
2014-11-25 18:14:29	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-25 18:14:43	V-ille	Eelis: ooh la la https://gcc.gnu.org/ml/gcc-patches/2014-11/msg03197.html
2014-11-25 18:14:52	V-ille	coming soon to a front-end near you :)
2014-11-25 18:15:32	-->	thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-11-25 18:15:45	thecha	is there a c++ function that closes the current window?
2014-11-25 18:15:52	<--	SiGe__ (~SiGe@enlrtr.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 18:16:00	ville	!give thecha general
2014-11-25 18:16:02	nolyc	thecha: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-25 18:16:26	CalimeroTeknik	thecha, depending on what toolkit the window is from, refer to your library's documentation for that
2014-11-25 18:16:29	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-25 18:16:38	<--	thecha (~cha@unaffiliated/thecha) has left ##c++
2014-11-25 18:16:41	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Quit: Leaving)
2014-11-25 18:17:02	Eelis	V-ille: sweet! i love it when things we notice with geordi lead to improvements in things
2014-11-25 18:17:09	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-25 18:17:14	-->	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has joined ##c++
2014-11-25 18:17:34	-->	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has joined ##c++
2014-11-25 18:17:35	-->	bps (~bps@heghbat.us) has joined ##c++
2014-11-25 18:17:37	V-ille	this particular problem has been known to me for quite some time, but I never managed to follow up on it, until now
2014-11-25 18:17:49	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2014-11-25 18:18:06	<--	tworkin (~Adium@97.77.193.138) has quit (Quit: Leaving.)
2014-11-25 18:18:08	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-25 18:18:48	Eelis	what would be /really/ good for geordi regarding gcc diagnostics, is if there was a way to know whether follow-up error lines are still part of the same error or not
2014-11-25 18:18:57	Eelis	right now there's no reliable way to get "the first error"
2014-11-25 18:19:03	Eelis	which is silly
2014-11-25 18:19:17	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-25 18:19:26	-->	saint_ (~saint@209.188.5.218) has joined ##c++
2014-11-25 18:19:41	Ploppz	"Because a non-const reference can not be made to a literal or an expression, reference arguments must be normal variables." - I don't quite understand this. Does it mean it's illegal to call foo(5); when the declaration of foo is void foo(int &x);?
2014-11-25 18:19:58	egoldsten_	i run both clang and gcc for templates errors for example
2014-11-25 18:20:16	Eelis	Ploppz: yes
2014-11-25 18:20:21	Ploppz	Ok
2014-11-25 18:20:37	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-25 18:21:02	Ploppz	Is it also illegal to call foo(y + 5);?
2014-11-25 18:21:09	Eelis	yes
2014-11-25 18:21:18	Eelis	because that is an rvalue
2014-11-25 18:21:21	V-ille	the "normal variables" is a bit of an oversimplification
2014-11-25 18:22:01	Ploppz	Care to elaborate?
2014-11-25 18:22:09	Eelis	<< TYPE(y), TYPE(y + 5); int y;
2014-11-25 18:22:09	geordi	lvalue int, rvalue int
2014-11-25 18:22:22	Eelis	an int& can bind to an lvalue int but not an rvalue int
2014-11-25 18:23:25	-->	snakenerd (~Thunderbi@177.17.121.132) has joined ##c++
2014-11-25 18:23:27	<--	snakenerd (~Thunderbi@177.17.121.132) has quit (Client Quit)
2014-11-25 18:23:39	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-11-25 18:23:58	V-ille	geordi: int& f() {static int x = 5; return x;} void g(int&) {} int main() {g(f());} // 'normal variables'? ;)
2014-11-25 18:23:58	geordi	<no output>
2014-11-25 18:24:08	saint_	Can someone explain to me this code: http://ideone.com/Xs3NeN
2014-11-25 18:24:39	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-25 18:24:42	Eelis	lvalue roughly means: expression denoting an object whose address we care about, whereas rvalue generally means: expression denoting an object that only serves to carry a value for us from one place to another
2014-11-25 18:24:45	saint_	Basically, I have a strip of pixel LEDs. Each led takes a color under the R G B format
2014-11-25 18:24:45	egoldsten_	hsl?
2014-11-25 18:24:47	<--	Praise (~Fat@unaffiliated/praise) has quit (Ping timeout: 245 seconds)
2014-11-25 18:24:58	egoldsten_	a rainbow in hsl?
2014-11-25 18:25:06	saint_	egoldsten_ are you talking to me ?
2014-11-25 18:25:12	Sculptor	saint_, WS2812?
2014-11-25 18:25:14	-->	snakenerd (~Thunderbi@177.17.121.132) has joined ##c++
2014-11-25 18:25:15	-->	Praise (~Fat@unaffiliated/praise) has joined ##c++
2014-11-25 18:25:18	<--	EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-25 18:25:19	saint_	Sculptor yes i think
2014-11-25 18:25:23	egoldsten_	yes saint_
2014-11-25 18:25:23	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 18:25:30	saint_	Sculptor WS2801
2014-11-25 18:25:35	Sculptor	older version
2014-11-25 18:25:47	egoldsten_	you should go to HSL page of wikipedia to understand what it is
2014-11-25 18:25:52	-->	Marcus_aurelius (~Douglas@zimmerwireless-pat.uc.edu) has joined ##c++
2014-11-25 18:25:55	Sculptor	in #electronics @ efnet you'll find people who have written WS driver code
2014-11-25 18:25:58	saint_	egoldsten_ yes, rainbow. i would like to understand how they came up with this function. i m trying to do it my way, which works. this way is better, but i am trying to understand how it works
2014-11-25 18:26:01	egoldsten_	Hue saturation luminosity
2014-11-25 18:26:14	Eelis	Ploppz: temporaries are the canonical example of rvalues. integer addition creates a temporary, which is why y + 5 is an rvalue
2014-11-25 18:26:19	saint_	Sculptor well.. i m more trying to udnerstand a C(++) concept
2014-11-25 18:26:27	<--	snakenerd (~Thunderbi@177.17.121.132) has quit (Client Quit)
2014-11-25 18:26:28	Sculptor	there you are in the right place, i guess
2014-11-25 18:26:29	<--	Marcus_aurelius (~Douglas@zimmerwireless-pat.uc.edu) has left ##c++
2014-11-25 18:26:45	egoldsten_	It is another tou transform a color different from RGB there is HSL HSV...
2014-11-25 18:26:55	saint_	basically, you have RGB . you need to go through the whole spectrum of the colors. So you would go R from 0 to 255 , with G and B at 0
2014-11-25 18:27:14	saint_	then when R is at 255, you increase G from 0 to 255
2014-11-25 18:27:24	saint_	and when G is at 255, then you decrease R
2014-11-25 18:27:27	<--	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-25 18:27:45	saint_	that is how i understand it , looking at the color wheel here http://www.webriti.com/wp-content/uploads/2012/01/rgb-color-wheel-lg.jpg
2014-11-25 18:27:45	V-ille	what c++ concept is this related to?
2014-11-25 18:27:54	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-25 18:28:17	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-25 18:28:20	saint_	V-ille if you don t want use "for"s for each color (R, G, B)
2014-11-25 18:28:40	saint_	V-ille how can the "wheel" function work in this example . i don t understand how the calculation is made
2014-11-25 18:28:56	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-25 18:28:58	saint_	i see that 85 is 255 / 3
2014-11-25 18:29:05	<--	HeTo (henkka@2002:5eed:4417:1::24) has quit (Ping timeout: 258 seconds)
2014-11-25 18:29:07	egoldsten_	look at the algorithm in wikipedia to understand saint_ there is a wheel
2014-11-25 18:29:18	saint_	egoldsten_ oh.. what URL ?
2014-11-25 18:29:39	-->	HeTo (henkka@2002:5eed:4417:1::24) has joined ##c++
2014-11-25 18:29:46	egoldsten_	http://en.wikipedia.org/wiki/HSL_and_HSV
2014-11-25 18:29:54	V-ille	saint_: so, your question boils down to "what does (i + j) % 255 do?" ? :)
2014-11-25 18:30:51	saint_	V-ille well.. kind of .. i is the number of LED available  . 255 is the max num for R, G, and B.
2014-11-25 18:31:03	saint_	I know if I want to make sure everything fits in, i need to use modulo. i ve done that in the past .
2014-11-25 18:31:07	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-25 18:31:24	saint_	but how does the wheel function comes here, and what is the number returned ?
2014-11-25 18:31:35	saint_	egoldsten_ that would be explained in the wiki ?
2014-11-25 18:31:37	saint_	link that you gave me ?
2014-11-25 18:31:43	-->	fmardini (~fmardini@pptp-212-201-73-224.pptp.stw-bonn.de) has joined ##c++
2014-11-25 18:32:20	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-25 18:32:34	egoldsten_	If you want a Hue and keep the same luminosity it is useful
2014-11-25 18:33:28	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-25 18:34:44	fmardini	Hi, I'm having some trouble understanding a compiler error: http://pastie.org/9743651
2014-11-25 18:36:09	-->	Katie22 (Katie22@71-211-132-139.hlrn.qwest.net) has joined ##c++
2014-11-25 18:36:22	Katie22	why isnt this swapping http://pastebin.com/j3ezKJrZ
2014-11-25 18:36:29	-->	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has joined ##c++
2014-11-25 18:36:42	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Quit: Leaving)
2014-11-25 18:37:05	fmardini	I also created this to try and find a simpler case, but it's working  http://pastie.org/9743660
2014-11-25 18:40:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 18:40:22	fmardini	Katie22: try changing the condition for the second for loop to colFirst < colLast
2014-11-25 18:40:38	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-25 18:40:46	fmardini	Katie22: I mean get rid of this colFirst < grid[rowFirst].length
2014-11-25 18:41:16	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-25 18:41:31	-->	snyp (~Snyp@14.96.18.132) has joined ##c++
2014-11-25 18:43:06	saint_	egoldsten_  / V-ille just came back from the wiki. i still don t understand what does the (i + j) % 255 do ?
2014-11-25 18:43:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 18:43:19	Katie22	thx
2014-11-25 18:43:46	egoldsten_	me too saint_ I just use it :-)
2014-11-25 18:43:53	<--	Ascian (~quassel@cpe-65-185-69-205.neo.res.rr.com) has quit (Remote host closed the connection)
2014-11-25 18:44:37	-->	darkarcher (~archer@c-50-178-231-188.hsd1.in.comcast.net) has joined ##c++
2014-11-25 18:46:32	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Ping timeout: 250 seconds)
2014-11-25 18:46:39	<--	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has quit (Quit: WeeChat 1.0.1)
2014-11-25 18:46:41	-->	fahadash (~fahadash@unaffiliated/fahadash) has joined ##c++
2014-11-25 18:47:02	<--	gabriel9 (~gabriel9@182-206-23-217-bl.cable.dyn.broadband.blic.net) has quit (Quit: Konversation terminated!)
2014-11-25 18:47:02	egoldsten_	the "%" is for overflow I thing saint_ to make it a "byte"
2014-11-25 18:47:02	snyp	So, vector::push_back does not use std::forward, while emplace_back does?
2014-11-25 18:47:07	snyp	is that it?
2014-11-25 18:47:11	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-25 18:47:31	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-25 18:48:01	saint_	egoldsten_ if we go to the basics, without looking at what does Wheel (the code being setPixelColor(i, Wheel(i+J)%255)
2014-11-25 18:48:15	saint_	egoldsten_ so the first i is to select the LED (from 0 to 20)
2014-11-25 18:48:19	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-25 18:48:19	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-25 18:48:19	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-25 18:48:23	saint_	the second parts sends a color to set up.
2014-11-25 18:48:57	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-25 18:48:58	saint_	I saw in some code that some guys actually use a uint32 to represent RGB with 1 big nunmber
2014-11-25 18:49:19	saint_	they take the R value, then shift it left 8 bits , and add G , do the same, then B
2014-11-25 18:49:19	egoldsten_	if it is more than 255 it loops to 0 for example 256 is 1, 257 is 2  ... saint_
2014-11-25 18:49:34	saint_	egoldsten_ i understand this part.
2014-11-25 18:49:59	saint_	egoldsten_ what i don t understand is how it does represent the colors of the wheel with (i+j)%255
2014-11-25 18:50:07	saint_	because this is basically what it is
2014-11-25 18:50:16	-->	nilsi_ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 18:50:16	saint_	- if i understand correctly -
2014-11-25 18:50:43	yates	what's an alternate container to vector<> that allows elements in the "middle" to be deleted (easily)?
2014-11-25 18:50:45	<--	nilsi_ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 18:51:34	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2014-11-25 18:52:03	<--	proteusguy (~proteusgu@ppp-110-168-229-244.revip5.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-25 18:52:05	yates	map
2014-11-25 18:52:09	egoldsten_	it is more about physical science saint_
2014-11-25 18:52:10	yates	thanks. :)
2014-11-25 18:52:44	saint_	egoldsten_ you know what. i m going to take the function apart, and printf the result of it , that might help ... :D
2014-11-25 18:52:51	egoldsten_	I had problems with HSL saint_ with black and white colors
2014-11-25 18:53:11	Katie22	ok i got it to reverse with the first swap but how to i got it to flip?
2014-11-25 18:53:12	Katie22	http://pastebin.com/8adQ4LXd
2014-11-25 18:53:22	egoldsten_	yes! not bad saint_ what does your program?
2014-11-25 18:54:24	Katie22	i got the columns to reverse
2014-11-25 18:54:39	Katie22	what do i need to do to swap the rows so it flips
2014-11-25 18:55:15	<--	snyp (~Snyp@14.96.18.132) has quit (Quit: WeeChat 1.0.1)
2014-11-25 18:55:19	egoldsten_	there is the swap() function
2014-11-25 18:55:28	egoldsten_	git it two celles
2014-11-25 18:55:31	egoldsten_	cells
2014-11-25 18:55:46	<--	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-25 18:55:50	<--	bollullera (~ana@95.63.152.106) has quit (Quit: Leaving.)
2014-11-25 18:55:53	-->	pmenso57 (c730c6e4@gateway/web/freenode/ip.199.48.198.228) has joined ##c++
2014-11-25 18:56:02	<--	hexagoxel (~hexagoxel@kiel-5f7687ef.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-11-25 18:56:23	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-25 18:56:36	saint_	egoldsten_ i m trying to redo what this guy did: https://www.youtube.com/watch?v=IXbUM5VZqX8
2014-11-25 18:56:44	-->	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2014-11-25 18:57:00	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-25 18:57:33	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-25 18:57:47	<--	Guest69968 (~Olipro@95.147.72.174) has quit (Read error: Connection reset by peer)
2014-11-25 18:58:14	egoldsten_	I will put random values and see where it goes saint_ that's what they do in "living coding" do you that?
2014-11-25 18:58:16	-->	RoestVrijStaal_ (~RoestVrij@54181E5D.cm-5-1a.dynamic.ziggo.nl) has joined ##c++
2014-11-25 18:58:28	-->	unomystEz (~uno@cpe-72-229-190-111.nyc.res.rr.com) has joined ##c++
2014-11-25 18:59:32	egoldsten_	http://vimeo.com/53744095 an example saint_ it's musique
2014-11-25 18:59:36	<--	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has quit (Ping timeout: 240 seconds)
2014-11-25 18:59:44	egoldsten_	do you know "processing" saint_ ?
2014-11-25 18:59:54	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-25 19:00:18	saint_	egoldsten_i can t do random values , it s going to look like crap .
2014-11-25 19:00:57	saint_	egoldsten_ i ve done all the blinking, the colors, the patterns .. i m just trying to do a rainbow wheel now, but most of it , i m trying to understand the code. i hate picking up someone's else code and not understand what it does.
2014-11-25 19:02:12	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-25 19:02:17	-->	timj (~timj@2a00:1328:e100:cc42:2d3a:6859:674e:c610) has joined ##c++
2014-11-25 19:02:20	<--	RoestVrijStaal (~RoestVrij@54181E5D.cm-5-1a.dynamic.ziggo.nl) has quit (Ping timeout: 264 seconds)
2014-11-25 19:02:44	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-25 19:02:44	egoldsten_	choose a loop saint_ like 0-255 and set the vers valure (R ou G or B) see what it does after put another loop inside with different range saint_  do not try to be perfect a the first time
2014-11-25 19:02:53	egoldsten_	you discover things like that
2014-11-25 19:02:57	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-25 19:03:39	-->	snakenerd (~Thunderbi@177.17.121.132) has joined ##c++
2014-11-25 19:03:46	<--	leeN (~leeN@f051231040.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-25 19:07:26	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 19:09:39	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 19:09:43	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Quit: Leaving)
2014-11-25 19:10:14	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-25 19:10:14	<--	ablephar` (~user@46.115.177.110) has quit (Ping timeout: 240 seconds)
2014-11-25 19:10:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 19:10:57	<--	snakenerd (~Thunderbi@177.17.121.132) has quit (Quit: snakenerd)
2014-11-25 19:11:09	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 258 seconds)
2014-11-25 19:11:25	egoldsten_	can
2014-11-25 19:13:35	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-25 19:14:27	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Client Quit)
2014-11-25 19:16:02	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-25 19:16:22	-->	Mannn (~Mannn____@cpe-70-113-106-32.austin.res.rr.com) has joined ##c++
2014-11-25 19:16:43	saint_	egoldsten_ / V-ille  that s the result of the (i + j ) % 255  http://pastebin.com/kbD8D23T
2014-11-25 19:16:43	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-25 19:16:57	saint_	I have no clue how you can display colors with that. i don t understand.
2014-11-25 19:17:37	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-25 19:17:51	egoldsten_	optical things
2014-11-25 19:18:35	egoldsten_	the light is a wave you know me too i don't understand
2014-11-25 19:18:53	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 19:19:29	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 240 seconds)
2014-11-25 19:21:37	<--	tinti (~tinti@pdpc/supporter/student/tinti) has quit (Quit: Leaving)
2014-11-25 19:21:38	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 19:24:22	-->	dgiagio (~dgiagio@201.53.20.180) has joined ##c++
2014-11-25 19:24:32	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 240 seconds)
2014-11-25 19:24:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 19:25:45	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 255 seconds)
2014-11-25 19:28:27	egoldsten_	do you a "kit" with the arduino saint_ for the leds?
2014-11-25 19:28:29	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 19:28:45	-->	Sam_Hi (~Sam_Hi@99-48-159-122.lightspeed.cornca.sbcglobal.net) has joined ##c++
2014-11-25 19:28:55	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 272 seconds)
2014-11-25 19:30:14	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-25 19:33:14	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-25 19:33:14	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 19:34:24	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-25 19:34:28	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Ping timeout: 265 seconds)
2014-11-25 19:34:43	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-25 19:36:30	-->	rkreis_ (~robin@pD9EF133D.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 19:36:31	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-25 19:36:38	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 19:37:09	<--	ferdna (~ferdna@69.23.141.88) has quit (Quit: Leaving)
2014-11-25 19:37:29	saint_	egoldsten_ no , i bought the LEDs from adafruits
2014-11-25 19:38:14	-->	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has joined ##c++
2014-11-25 19:38:16	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-25 19:38:20	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-25 19:39:05	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: New version of HexChat out.)
2014-11-25 19:39:33	egoldsten_	it works with USB? saint_
2014-11-25 19:39:45	<--	Sam_Hi (~Sam_Hi@99-48-159-122.lightspeed.cornca.sbcglobal.net) has left ##c++ ("Leaving")
2014-11-25 19:39:50	-->	Sam_Hi (~Sam_Hi@99-48-159-122.lightspeed.cornca.sbcglobal.net) has joined ##c++
2014-11-25 19:40:01	egoldsten_	I'd like to do what you do with my son for chrismas saint_
2014-11-25 19:40:03	<--	rkreis (~robin@pD9EF1199.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-25 19:40:08	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-25 19:40:14	saint_	egoldsten_ where are you from ?
2014-11-25 19:40:47	saint_	egoldsten_ use Arduino (arduino.cc)
2014-11-25 19:41:35	egoldsten_	I'am from france saint_
2014-11-25 19:41:39	-->	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-25 19:41:55	saint_	d'ou ?
2014-11-25 19:42:09	egoldsten_	and the adafruits stuff I buy it on aduino.cc saint_ ?
2014-11-25 19:42:13	egoldsten_	paris
2014-11-25 19:42:23	egoldsten_	et toi?
2014-11-25 19:42:29	saint_	cool. j'habitais a Paris aussi. Oui, Arduino tu achetes sur http://arduino.cc ou Amazon
2014-11-25 19:42:30	<--	timj (~timj@2a00:1328:e100:cc42:2d3a:6859:674e:c610) has quit (Quit: Leaving.)
2014-11-25 19:42:30	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 19:42:42	saint_	et pour les LEDs, chez http://adafruits.com
2014-11-25 19:43:17	egoldsten_	thank you!
2014-11-25 19:44:34	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-25 19:44:59	-->	mihipte (~mihipte@67.210.148.49) has joined ##c++
2014-11-25 19:45:55	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-25 19:46:08	-->	MYNICK (~MYNICK@220-137-47-161.dynamic.hinet.net) has joined ##c++
2014-11-25 19:46:36	<--	MYNICK (~MYNICK@220-137-47-161.dynamic.hinet.net) has quit (Client Quit)
2014-11-25 19:47:41	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 19:47:44	pragma-	saint_: please stop speaking that made-up language and speak a real language.
2014-11-25 19:49:06	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-25 19:49:40	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Ping timeout: 256 seconds)
2014-11-25 19:49:53	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-25 19:50:05	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 255 seconds)
2014-11-25 19:50:05	--	fstd_ is now known as fstd
2014-11-25 19:50:28	<--	dgiagio (~dgiagio@201.53.20.180) has quit (Quit: leaving)
2014-11-25 19:50:41	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Remote host closed the connection)
2014-11-25 19:50:51	CobaltHex	hmm whats the easiest way to get the deepest type in a base constructor
2014-11-25 19:51:14	egoldsten_	you can't
2014-11-25 19:51:19	CobaltHex	:(
2014-11-25 19:51:26	egoldsten_	you mean the derived class?
2014-11-25 19:51:30	CobaltHex	yes
2014-11-25 19:51:46	egoldsten_	what do you want to do?
2014-11-25 19:51:57	egoldsten_	what do you want to "set"?
2014-11-25 19:52:06	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-25 19:52:28	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-25 19:52:35	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-25 19:53:08	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-25 19:53:18	-->	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has joined ##c++
2014-11-25 19:53:38	egoldsten_	there is typeid().name() you get its name
2014-11-25 19:54:10	mihipte	CobaltHex, my reaction to that issue is usually to make a static create method (usually calling an instance init method)
2014-11-25 19:54:20	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-25 19:54:42	CobaltHex	i just want to get a unique ID of the deepest typ
2014-11-25 19:54:44	CobaltHex	or the most derived
2014-11-25 19:54:53	CobaltHex	at creation time
2014-11-25 19:54:56	mihipte	CobaltHex, for testing or deployment?
2014-11-25 19:55:05	CobaltHex	?
2014-11-25 19:55:17	CobaltHex	i need the id for a map
2014-11-25 19:55:51	mihipte	CobaltHex, runtime type information like egoldsten_ mentioned works for testing, but for deployment you should use the Curiously Recurring Template Parameter
2014-11-25 19:55:52	egoldsten_	I understant I do that in a pool memory
2014-11-25 19:56:01	mihipte	let me find some code to show
2014-11-25 19:56:02	egoldsten_	with type() you can to that
2014-11-25 19:56:29	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-25 19:56:37	egoldsten_	It works in release mihipte I use it with templates
2014-11-25 19:56:58	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-25 19:56:59	mihipte	egoldsten_, everything I've read on rtti says it's not supposed to be depended on
2014-11-25 19:57:55	<--	pmenso57 (c730c6e4@gateway/web/freenode/ip.199.48.198.228) has left ##c++
2014-11-25 19:57:58	<--	fmardini (~fmardini@pptp-212-201-73-224.pptp.stw-bonn.de) has quit (Ping timeout: 272 seconds)
2014-11-25 19:58:01	egoldsten_	I works everywhere now mihipte It is alway "on" with -std=c++11
2014-11-25 19:58:02	mihipte	and that's Tempalte *Pattern*, sorry
2014-11-25 19:58:14	mihipte	my brain said Pa... I know what you mean
2014-11-25 19:58:43	egoldsten_	I've understod that it was about design pattern and not template
2014-11-25 19:59:41	<--	Seppoz (~Invincibl@unaffiliated/seppoz) has quit (Ping timeout: 250 seconds)
2014-11-25 20:00:02	mihipte	CobaltHex, https://bitbucket.org/Jesdisciple/ecsellent/src/baefc01ee8769d87d143bdb072bd9a84c1aa08fe/typed.h?at=default
2014-11-25 20:00:03	nolyc	<http://tinyurl.com/lg6ozzv> (at bitbucket.org)
2014-11-25 20:00:51	mihipte	CobaltHex, that's your alternative to rtti, and apparently might not be necessary
2014-11-25 20:01:07	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-11-25 20:01:18	<--	BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has quit (Ping timeout: 255 seconds)
2014-11-25 20:01:54	egoldsten_	it is a "class instance"
2014-11-25 20:02:02	egoldsten_	a singleton
2014-11-25 20:02:17	o-O-o	Type getType() const { return type; }
2014-11-25 20:02:19	o-O-o	that is GARBAGE
2014-11-25 20:02:23	o-O-o	just use RTTI
2014-11-25 20:02:29	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-25 20:02:33	mihipte	egoldsten_, singleton?
2014-11-25 20:02:54	egoldsten_	with "static" ...
2014-11-25 20:03:04	mihipte	egoldsten_, I know what it is, but I'm pretty sure it doesn't apply
2014-11-25 20:03:40	mihipte	egoldsten_, well, within each template instantiation the type is static
2014-11-25 20:04:04	mihipte	I guess that's some weird templated variation of a singleton
2014-11-25 20:04:20	<--	r3g3x (~r3g3x@unaffiliated/r3g3x) has quit (Quit: Leaving)
2014-11-25 20:04:33	-->	Seppoz (~Invincibl@unaffiliated/seppoz) has joined ##c++
2014-11-25 20:04:36	-->	nilsi_ (~nilsi@183.101.241.130) has joined ##c++
2014-11-25 20:04:51	-->	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 20:04:57	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 20:05:10	<--	nilsi_ (~nilsi@183.101.241.130) has quit (Read error: Connection reset by peer)
2014-11-25 20:05:51	<--	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has quit (Remote host closed the connection)
2014-11-25 20:06:01	-->	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has joined ##c++
2014-11-25 20:06:24	CobaltHex	is struct { ... } Foo; considered a singleton?
2014-11-25 20:06:41	egoldsten_	I don't want convince people that I'm right mihipte but it looks like a singleton static function and a static local var
2014-11-25 20:07:04	CobaltHex	so mihipte would that really be a better alternative?
2014-11-25 20:07:16	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 265 seconds)
2014-11-25 20:07:24	saint_	is there a place that can help me find the position of  a point on a color wheel , depending on its RGB value ?
2014-11-25 20:07:31	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-25 20:07:33	mihipte	egoldsten_, as no class instance is static, I don't think "signleton" makes sense
2014-11-25 20:08:07	<--	unomystEz (~uno@cpe-72-229-190-111.nyc.res.rr.com) has quit (Quit: Leaving)
2014-11-25 20:08:12	mihipte	CobaltHex, I would have to research rtti in the context of C++14, last I did was shortly after 11 was released... word was not to depend on it
2014-11-25 20:09:10	-->	ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-11-25 20:09:31	egoldsten_	I don't like too much RTTI but it is useful sometimes mihipte especially if you need to tag an instance like he wants
2014-11-25 20:09:41	<--	Repelex (~textual@189.59.36.231.dynamic.adsl.gvt.net.br) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-25 20:09:54	<--	ac_slater (~weechat@96.237.110.242) has quit (Client Quit)
2014-11-25 20:09:59	mihipte	egoldsten_, what are your reasons for disliking it?
2014-11-25 20:10:52	<--	FlorianJW-terra (~florian@madways.de) has quit (Ping timeout: 240 seconds)
2014-11-25 20:10:55	egoldsten_	It is an overread
2014-11-25 20:11:02	egoldsten_	like virtuals
2014-11-25 20:11:53	mihipte	overread? I don't know that term... virtuals cause extra information to be stored in classes, is that what you mean?
2014-11-25 20:11:53	egoldsten_	I'm using emscripten a C++ to JS compiler
2014-11-25 20:12:14	<--	Sam_Hi (~Sam_Hi@99-48-159-122.lightspeed.cornca.sbcglobal.net) has quit (Quit: Leaving)
2014-11-25 20:12:16	egoldsten_	there no free() the memory is never really freed
2014-11-25 20:12:32	egoldsten_	So I manage a pool of instances with that
2014-11-25 20:12:36	<--	cyberik (~cyberik@145-118-119-112.fttx.bbned.nl) has quit (Quit: Leaving)
2014-11-25 20:12:42	immibis	o-O-o: several large projects have found that RTTI doesn't meet their needs, and use something like that instead
2014-11-25 20:13:22	egoldsten_	Yes I'm not native enghish The RTTI is stored near the vtable
2014-11-25 20:13:27	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-25 20:13:42	mihipte	ah, I see
2014-11-25 20:14:09	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-25 20:14:10	jeaye	mihipte: overhead
2014-11-25 20:14:33	jeaye	mihipte: virtual function calls use late binding; each call is more indirect than a non-virtual function call would be.
2014-11-25 20:14:53	mihipte	well, so would the CRTP solution :) if RTTI is/becomes dependable for that purpose I would certainly prefer it
2014-11-25 20:14:58	mihipte	less code == good
2014-11-25 20:15:08	<--	Mannn (~Mannn____@cpe-70-113-106-32.austin.res.rr.com) has quit (Remote host closed the connection)
2014-11-25 20:15:14	-->	BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has joined ##c++
2014-11-25 20:15:18	o-O-o	immibis: any rationale?
2014-11-25 20:15:26	o-O-o	anedoctal evidence sucks, you know
2014-11-25 20:15:31	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-25 20:15:35	egoldsten_	yes overhead jeaye thank you!
2014-11-25 20:15:44	o-O-o	immibis: if you don't know why these SEVERAL projects do that, then you know nothing, jon snow
2014-11-25 20:15:57	immibis	o-O-o: http://stackoverflow.com/questions/5134975/what-can-make-c-rtti-undesirable <- here's at least one
2014-11-25 20:16:01	immibis	(LLVM)
2014-11-25 20:16:05	o-O-o	don't reinvent things that your compiler already does for you
2014-11-25 20:16:29	egoldsten_	virtuals and RTTi are not bad in general It depends on what you do with it mihipte
2014-11-25 20:16:49	o-O-o	pff llvm sucking like hell
2014-11-25 20:16:55	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-25 20:17:22	<--	wto (~wto@h-141-69.a336.priv.bahnhof.se) has quit (Ping timeout: 256 seconds)
2014-11-25 20:17:36	<--	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-11-25 20:17:49	-->	juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-11-25 20:17:51	mihipte	egoldsten_, I know :) I'm just trying to get a starting point to refresh my info since it's being called into question
2014-11-25 20:18:03	egoldsten_	:-)
2014-11-25 20:18:05	<--	Katie22 (Katie22@71-211-132-139.hlrn.qwest.net) has quit
2014-11-25 20:19:20	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-11-25 20:19:28	-->	wto (~wto@h-141-69.a336.priv.bahnhof.se) has joined ##c++
2014-11-25 20:20:03	egoldsten_	I have a macro "implement_class()" I do "class C{implement_class(C)...}" it add methods to give its name for exemple
2014-11-25 20:20:16	egoldsten_	they do that in Qt with Q_OBJECT
2014-11-25 20:20:26	egoldsten_	MFC also do that
2014-11-25 20:21:35	<--	darkarcher (~archer@c-50-178-231-188.hsd1.in.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-25 20:21:43	mihipte	lol @ what Qt does... I love the library, but that's some black magic in the MOC
2014-11-25 20:22:04	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 20:22:32	mihipte	it's C++... no, it's a DSL... ah, macros with generated code...
2014-11-25 20:22:41	egoldsten_	Yes I don't like custom precompilers like in Boost an Qt
2014-11-25 20:23:00	-->	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-11-25 20:23:43	egoldsten_	I don't like macro but it is the best/simplest solution I've found It is easy to undestand and efficient for code it generates
2014-11-25 20:25:07	-->	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has joined ##c++
2014-11-25 20:25:29	<--	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has quit (Remote host closed the connection)
2014-11-25 20:26:25	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-25 20:28:05	<--	oleo (~oleo@xdsl-78-35-161-57.netcologne.de) has quit (Read error: Connection reset by peer)
2014-11-25 20:29:03	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-25 20:29:43	-->	darkarcher (~archer@c-50-178-231-188.hsd1.in.comcast.net) has joined ##c++
2014-11-25 20:30:12	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-25 20:30:41	-->	oleo (~oleo@xdsl-78-35-175-79.netcologne.de) has joined ##c++
2014-11-25 20:30:54	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-25 20:32:32	-->	TheAncientGoat (~quassel@175.142.135.110) has joined ##c++
2014-11-25 20:34:39	<--	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-25 20:34:45	-->	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 20:36:23	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-11-25 20:37:31	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-25 20:38:27	<--	licnep (uid4387@gateway/web/irccloud.com/x-bxsgacpuydvpnkim) has quit (Quit: Connection closed for inactivity)
2014-11-25 20:38:45	CobaltHex	do you guys think that typeid(..).hash_code() is 'expensive'?
2014-11-25 20:38:57	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 20:39:02	<--	Anodl (~Anodl@p4FDEEF03.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-25 20:39:16	-->	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has joined ##c++
2014-11-25 20:39:44	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-25 20:40:39	egoldsten_	you can use the .name() the pointer value is unique
2014-11-25 20:41:01	egoldsten_	it is always the same for the type
2014-11-25 20:41:06	<--	darkarcher (~archer@c-50-178-231-188.hsd1.in.comcast.net) has quit (Quit: Leaving)
2014-11-25 20:41:41	egoldsten_	and typeid(T).name()==typeid(T&).name() wich is useful
2014-11-25 20:41:50	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Quit: WeeChat 0.4.2)
2014-11-25 20:42:02	egoldsten_	you can trus the pointer don't be afraid
2014-11-25 20:42:15	<--	pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 256 seconds)
2014-11-25 20:42:23	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-25 20:42:31	CobaltHex	im just saying
2014-11-25 20:42:39	CobaltHex	if i call it like 60 times a second
2014-11-25 20:42:52	<--	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has quit (Remote host closed the connection)
2014-11-25 20:43:21	egoldsten_	what do you wand to with that? exaplain a little bit please
2014-11-25 20:43:38	CobaltHex	i just use the hash_code as a key for a map
2014-11-25 20:43:44	-->	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has joined ##c++
2014-11-25 20:44:05	darkswordchris	Hello. How would I start another program without blocking the program that executes it?
2014-11-25 20:44:07	egoldsten_	I don't know the implementation
2014-11-25 20:44:15	egoldsten_	popen()
2014-11-25 20:44:16	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-25 20:44:28	egoldsten_	it is like fopen() for a process
2014-11-25 20:44:37	egoldsten_	after you fread() lines
2014-11-25 20:44:45	egoldsten_	pclose() to close
2014-11-25 20:44:53	tz	use std::type_index for the map key
2014-11-25 20:45:26	darkswordchris	egoldsten_: but the idea is that my program will start the other program and close before it does
2014-11-25 20:46:03	egoldsten_	you can "detach" it with shell trick darkswordchris
2014-11-25 20:46:10	darkswordchris	ok, thanks
2014-11-25 20:46:26	egoldsten_	a dirty solution is to put "sh" before its path
2014-11-25 20:46:30	CobaltHex	is type index efficient?
2014-11-25 20:46:54	egoldsten_	I think it is not the same on Linux and BSD
2014-11-25 20:47:01	tz	if you're worried about efficiency when calling it 60 times a second, you're looking in the wrong place for optimisation
2014-11-25 20:47:11	tz	go profile your app instead
2014-11-25 20:47:18	darkswordchris	Is it platform independent egoldsten_?
2014-11-25 20:47:19	egoldsten_	nanosecond!
2014-11-25 20:47:24	mihipte	CobaltHex, you should probably assume anything that simple in the compiler is efficient anyway
2014-11-25 20:47:38	egoldsten_	popen() i think yes
2014-11-25 20:47:45	darkswordchris	ok, thanks
2014-11-25 20:47:48	-->	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has joined ##c++
2014-11-25 20:47:56	mihipte	it's probably a uint, which is as good as you could do yourself
2014-11-25 20:48:40	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-25 20:48:46	<--	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has quit (Remote host closed the connection)
2014-11-25 20:49:16	mihipte	unsigned int, sorry
2014-11-25 20:49:49	CobaltHex	tz, ive just heard bad things about rtti so im just wary
2014-11-25 20:50:18	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-25 20:50:56	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-25 20:51:13	mihipte	CobaltHex, efficiency wasn't my reason for ditching it in 2011, and http://stackoverflow.com/questions/579887/how-expensive-is-rtti
2014-11-25 20:51:15	-->	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has joined ##c++
2014-11-25 20:51:16	<--	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has quit (Changing host)
2014-11-25 20:51:16	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-25 20:51:25	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-25 20:51:33	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-25 20:51:41	egoldsten_	CobaltHex: https://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a01567_source.html
2014-11-25 20:52:23	egoldsten_	for GCC "return reinterpret_cast<size_t>(__name);" is hash_code() implementation
2014-11-25 20:52:41	egoldsten_	so its quite the same as the name()
2014-11-25 20:52:54	egoldsten_	a name is better you can print it
2014-11-25 20:52:58	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-25 20:54:17	<--	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has quit (Quit: Page closed)
2014-11-25 20:54:25	<--	plamen (user@nat/mslo/x-vptsvjxckxodsbgl) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-25 20:54:28	egoldsten_	I've learned something because of you
2014-11-25 20:54:48	CobaltHex	:P
2014-11-25 20:54:49	mihipte	CobaltHex, hash_code might be useful if you figure out that you really do have a bottleneck in your map
2014-11-25 20:55:38	CobaltHex	im mostly just trying to decide if i should just template it with a manual string
2014-11-25 20:55:54	CobaltHex	or automatically with rtti
2014-11-25 20:56:19	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 258 seconds)
2014-11-25 20:56:21	mihipte	I think the type name makes the most sense... it's readable with 0 maintenance cost
2014-11-25 20:56:37	mihipte	at least I assume it's readable in your particular compiler
2014-11-25 20:56:42	-->	Repelex (~textual@189.59.36.231.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-25 20:57:03	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 20:57:06	CobaltHex	but do that manually
2014-11-25 20:57:10	CobaltHex	or automatically with rtti
2014-11-25 20:57:12	<--	mukunda (~mukunda@24.9.162.249) has left ##c++
2014-11-25 20:57:16	-->	mukunda_ (~mukunda@24.9.162.249) has joined ##c++
2014-11-25 20:57:19	-->	darkarcher (~archer@184.75.221.82) has joined ##c++
2014-11-25 20:57:31	mihipte	manually has maintenance cost: typing the class name an extra time for each class
2014-11-25 20:57:39	mihipte	automatically has 0
2014-11-25 20:57:46	egoldsten_	typeid() will be colored in your editor :-)
2014-11-25 20:57:47	CobaltHex	yeah
2014-11-25 20:57:51	mihipte	I don't know why you would do it manually
2014-11-25 20:57:53	egoldsten_	in blue here
2014-11-25 20:57:55	CobaltHex	but rtti has its own costs
2014-11-25 20:58:04	-->	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has joined ##c++
2014-11-25 20:58:15	mihipte	you should prove they are actually costs for you before not paying them
2014-11-25 20:58:34	mihipte	developer time is more valuable than processor time, in general
2014-11-25 20:58:37	egoldsten_	explain better what you want do the map is not engh
2014-11-25 20:58:42	egoldsten_	enough
2014-11-25 20:59:00	tz	run metrics, find out if RTTI is the problem, if not, use it
2014-11-25 20:59:05	mihipte	^
2014-11-25 20:59:17	mihipte	which means writing it with RTTI first
2014-11-25 20:59:20	tz	I'm 99% certain that your bottlenecs are going to be elsewhere
2014-11-25 20:59:21	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-25 20:59:29	<--	cbot` (~FS@150.108.238.42) has quit (Quit: Leaving)
2014-11-25 20:59:44	tz	mainly by the vagueness of where you think the issue is
2014-11-25 20:59:53	tz	and given the number of times you're calling it
2014-11-25 21:00:02	CobaltHex	mihipte well this is a game so
2014-11-25 21:00:03	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 21:00:08	egoldsten_	yes I agree with tz
2014-11-25 21:00:10	CobaltHex	not like an AAA but
2014-11-25 21:00:12	CobaltHex	yeah
2014-11-25 21:00:19	CobaltHex	and i guess that's what I'll do
2014-11-25 21:00:39	mukunda_	TIL about virtual destructors... the hard way :/
2014-11-25 21:00:54	mihipte	CobaltHex, what kind of game, and how is that affecting your ideas of efficiency?
2014-11-25 21:01:01	tz	I take it you're making an entity component framework or the like
2014-11-25 21:01:08	tz	keyed by component type
2014-11-25 21:01:12	egoldsten_	in games they don't use new/malloc nor rtti exceptiong at startup
2014-11-25 21:01:18	-->	Majiet (~LostMajie@178.62.97.14) has joined ##c++
2014-11-25 21:01:55	egoldsten_	it is difficult to get rid of virtual destructors
2014-11-25 21:02:06	<--	Majiet (~LostMajie@178.62.97.14) has left ##c++
2014-11-25 21:02:26	<--	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2014-11-25 21:02:29	-->	Majiet (~LostMajie@178.62.97.14) has joined ##c++
2014-11-25 21:02:36	mihipte	I'm assuming "game" in this context means "Halo or Portal"?
2014-11-25 21:02:44	CobaltHex	tz yes
2014-11-25 21:02:51	<--	Repelex (~textual@189.59.36.231.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 264 seconds)
2014-11-25 21:03:05	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Client Quit)
2014-11-25 21:03:07	mihipte	it sounds like we're not talking about Checkers
2014-11-25 21:03:12	egoldsten_	fps?
2014-11-25 21:03:14	<--	Albori (~Albori@64-251-150-248.fidnet.com) has quit (Ping timeout: 240 seconds)
2014-11-25 21:03:17	CobaltHex	no game in specific
2014-11-25 21:03:19	CobaltHex	just trying to be mindful
2014-11-25 21:03:39	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-11-25 21:03:44	egoldsten_	are you using SDL or SFML?
2014-11-25 21:03:45	tz	can you make your key static inside your insertion function? you calculate it once then reuse
2014-11-25 21:03:47	<--	Rylee (rylee@unaffiliated/rylai) has quit (Max SendQ exceeded)
2014-11-25 21:03:59	tz	the type doesn't change at runtime
2014-11-25 21:04:40	-->	Rylee (rylee@unaffiliated/rylai) has joined ##c++
2014-11-25 21:05:02	tz	that said, type_index wasn't the bottleneck in my ECF
2014-11-25 21:05:18	tz	all I can say: choose your storage containers wisely
2014-11-25 21:05:23	mihipte	static locals are awesome, but if you use them watch your executable size... I don't know how what the relation is, but that's the warning I remember
2014-11-25 21:05:54	egoldsten_	use vector/string.reserve()
2014-11-25 21:05:57	mihipte	each static variable goes into the executable image, which can cost
2014-11-25 21:06:03	CobaltHex	sdl
2014-11-25 21:06:33	egoldsten_	so you do to an engine CobaltHex
2014-11-25 21:06:43	mihipte	a static local in a template would make your executable grow for each relevant class
2014-11-25 21:06:54	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-25 21:07:02	tz	by a single type_index, which isn't going to be a large amount under normal circumstances
2014-11-25 21:07:03	egoldsten_	do you know that you can compile it later to js?
2014-11-25 21:07:10	mihipte	tz, right
2014-11-25 21:07:31	tz	I should dig up my code at some point
2014-11-25 21:08:15	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-25 21:09:47	-->	lkjhgf (~Guest@72.170.227.30) has joined ##c++
2014-11-25 21:11:58	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-25 21:12:44	<--	SiGe_ (~SiGe@usc-secure-wireless-207-184.usc.edu) has quit (Remote host closed the connection)
2014-11-25 21:14:05	-->	amle (3b5b7116@gateway/web/freenode/ip.59.91.113.22) has joined ##c++
2014-11-25 21:17:16	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-25 21:17:54	<--	amle (3b5b7116@gateway/web/freenode/ip.59.91.113.22) has quit (Client Quit)
2014-11-25 21:17:54	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Client Quit)
2014-11-25 21:18:00	-->	Lazik (~341234123@unaffiliated/lazik) has joined ##c++
2014-11-25 21:18:12	-->	Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-25 21:18:23	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-25 21:18:23	-->	HerzogDeXtEr (~flex@88.130.168.79) has joined ##c++
2014-11-25 21:18:26	-->	joy_ (3b5b7116@gateway/web/freenode/ip.59.91.113.22) has joined ##c++
2014-11-25 21:18:38	<--	joy_ (3b5b7116@gateway/web/freenode/ip.59.91.113.22) has left ##c++
2014-11-25 21:18:57	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Client Quit)
2014-11-25 21:22:06	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 21:23:24	<--	adek (~adek@199.201.64.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-25 21:24:13	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-25 21:24:23	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 21:25:02	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-25 21:25:24	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 21:25:41	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Client Quit)
2014-11-25 21:26:14	-->	dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-25 21:27:27	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Disconnected by services)
2014-11-25 21:27:29	-->	nooblet (~nooblet@101.98.214.38) has joined ##c++
2014-11-25 21:27:29	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-25 21:28:12	<--	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has quit (Quit: Leaving)
2014-11-25 21:28:14	<--	nooblet (~nooblet@101.98.214.38) has quit (Client Quit)
2014-11-25 21:28:35	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-25 21:28:46	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-25 21:29:34	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 240 seconds)
2014-11-25 21:30:33	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-25 21:32:04	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-25 21:32:23	-->	Jacob_Mason (~jacobmaso@75.76.53.33) has joined ##c++
2014-11-25 21:32:24	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-25 21:33:10	<--	Jacob_Mason (~jacobmaso@75.76.53.33) has quit (Client Quit)
2014-11-25 21:33:28	-->	JacobMason (~jacobmaso@75.76.53.33) has joined ##c++
2014-11-25 21:36:00	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-25 21:36:52	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-25 21:37:08	-->	Olipro (~Olipro@95.147.72.207) has joined ##c++
2014-11-25 21:37:32	--	Olipro is now known as Guest21458
2014-11-25 21:38:38	<--	RoestVrijStaal_ (~RoestVrij@54181E5D.cm-5-1a.dynamic.ziggo.nl) has quit (Quit: Going offline, see ya!)
2014-11-25 21:39:11	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-25 21:39:11	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Client Quit)
2014-11-25 21:39:58	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-25 21:41:45	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-25 21:42:05	<--	mihipte (~mihipte@67.210.148.49) has quit (Quit: Leaving)
2014-11-25 21:45:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 21:45:51	-->	Dreadnaught (~Dreadnaug@36.154.dsl.brs.iprimus.net.au) has joined ##c++
2014-11-25 21:45:51	<--	Dreadnaught (~Dreadnaug@36.154.dsl.brs.iprimus.net.au) has quit (Changing host)
2014-11-25 21:45:51	-->	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-11-25 21:45:55	<--	filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-11-25 21:48:01	-->	filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-11-25 21:48:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 21:48:55	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-25 21:50:44	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-25 21:51:11	-->	kurahaupo (~kurahaupo@118.148.221.136) has joined ##c++
2014-11-25 21:51:22	<--	JacobMason (~jacobmaso@75.76.53.33) has quit (Quit: Leaving)
2014-11-25 21:51:29	-->	root_ (~root@5.175.193.188) has joined ##c++
2014-11-25 21:51:31	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 240 seconds)
2014-11-25 21:51:42	-->	JacobMason (~jacobmaso@75.76.53.33) has joined ##c++
2014-11-25 21:51:47	<--	root_ (~root@5.175.193.188) has quit (Client Quit)
2014-11-25 21:51:58	<--	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has quit (Quit: Going offline, see ya! ( www.adiirc.com)
2014-11-25 21:52:11	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-25 21:52:23	--	pyon is now known as pyon-free
2014-11-25 21:52:32	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-25 21:53:19	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-25 21:53:23	<--	JacobMason (~jacobmaso@75.76.53.33) has quit (Client Quit)
2014-11-25 21:53:40	-->	JacobMason (~jacobmaso@75.76.53.33) has joined ##c++
2014-11-25 21:53:51	<--	Extreme (~Extreme@unaffiliated/extreme7) has quit (Ping timeout: 240 seconds)
2014-11-25 21:54:05	-->	root_ (~root@5.175.193.188) has joined ##c++
2014-11-25 21:55:37	<--	root_ (~root@5.175.193.188) has quit (Client Quit)
2014-11-25 21:56:14	-->	APerson_ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-25 21:56:20	-->	gotin (~root@5.175.193.188) has joined ##c++
2014-11-25 21:56:43	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-25 21:57:23	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 21:57:24	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-25 21:57:58	-->	SiGe__ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-25 21:59:17	<--	josh (~josh@66.60.115.195) has quit (Ping timeout: 272 seconds)
2014-11-25 21:59:38	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Remote host closed the connection)
2014-11-25 21:59:50	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 244 seconds)
2014-11-25 22:00:41	<--	SiGe__ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-25 22:00:56	-->	Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-11-25 22:01:26	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-25 22:01:37	-->	Amaranthus (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-25 22:01:42	-->	hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-11-25 22:01:59	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-25 22:02:25	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-25 22:02:30	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 265 seconds)
2014-11-25 22:03:14	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-25 22:03:35	<--	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has quit (Quit: rcirc on GNU Emacs 24.3.1)
2014-11-25 22:04:07	<--	JacobMason (~jacobmaso@75.76.53.33) has quit (Quit: Leaving)
2014-11-25 22:04:38	pEYEd	how do you convert and std::string vector to double?
2014-11-25 22:06:17	<--	HeTo (henkka@2002:5eed:4417:1::24) has quit (Ping timeout: 258 seconds)
2014-11-25 22:06:31	-->	Simotek-Work- (~Simotek@opensuse/member/simotek) has joined ##c++
2014-11-25 22:06:47	-->	HeTo (henkka@2002:5eed:4417:1::24) has joined ##c++
2014-11-25 22:07:22	egoldsten_	atoi(string)
2014-11-25 22:07:27	egoldsten_	no
2014-11-25 22:07:47	egoldsten_	with streams but it is compilcated
2014-11-25 22:07:54	egoldsten_	atoi() is ok
2014-11-25 22:08:38	-->	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has joined ##c++
2014-11-25 22:09:35	-->	immibis_ (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has joined ##c++
2014-11-25 22:10:09	<--	immibis (~ChatZill1@122-59-112-18.jetstream.xtra.co.nz) has quit (Ping timeout: 244 seconds)
2014-11-25 22:10:14	--	immibis_ is now known as immibis
2014-11-25 22:10:27	aschmack	egoldsten_, pEYEd, you'd want atof, not atoi, but there may be better ways
2014-11-25 22:10:30	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 22:10:32	Chris	atoi() is evil and should never be used.
2014-11-25 22:10:38	<--	K-ballo (~sonoio@181.228.126.42) has left ##c++ ("http://talesofcpp.fusionfenix.com")
2014-11-25 22:11:06	Chris	(likewise with atof)
2014-11-25 22:11:33	egoldsten_	yes aschmack you're right
2014-11-25 22:11:35	aschmack	haha why chris, because they return 0, a perfectly fine int/double, on error
2014-11-25 22:11:36	Chris	In C++11 you probably want std::stod for std::string to double.
2014-11-25 22:11:56	Chris	aschmack: they have undefined behavior for out of range results.
2014-11-25 22:12:29	Chris	If you don't have std::stod, you'd use std::strtod instead.
2014-11-25 22:13:40	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-25 22:14:57	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-25 22:16:31	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-25 22:19:11	<--	gotin (~root@5.175.193.188) has quit (Quit: Lost terminal)
2014-11-25 22:19:40	<--	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has quit (Quit: asche zu asche und staub zu staub.)
2014-11-25 22:21:43	<--	hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-25 22:21:43	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 22:22:23	Lazik	what breaks atoi?
2014-11-25 22:22:46	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-25 22:22:53	o-O-o	Lazik: your mom
2014-11-25 22:23:05	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 255 seconds)
2014-11-25 22:23:18	Chris	Lazik: atoi("4583487239847239847984729483724923874723894729"); is undefined behavior (assuming your int is smaller than that)
2014-11-25 22:23:29	Chris	Most implementations will return 0, but the standard renders it undefined.
2014-11-25 22:23:41	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-25 22:24:15	o-O-o	!give Lazik stdref atoi
2014-11-25 22:24:16	nolyc	Lazik: http://en.cppreference.com/w/cpp/string/byte/atoi
2014-11-25 22:24:21	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-25 22:24:47	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-25 22:25:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 22:25:18	Chris	That page is kind of incorrect.
2014-11-25 22:25:55	Chris	Or misleading at best.
2014-11-25 22:25:56	<--	filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-11-25 22:26:06	<--	APerson_ (~quassel@wikipedia/APerson) has quit (Ping timeout: 240 seconds)
2014-11-25 22:26:18	Chris	"return value is undefined" is very poorly worded. Even (void)atoi("some out of range number"); is undefined behavior. The undefinedness has nothing to do with the return value.
2014-11-25 22:26:48	-->	zeitue (~z@67.221.139.166) has joined ##c++
2014-11-25 22:27:09	Lazik	undefined behavior, does that end up being returning an uninitialized value?
2014-11-25 22:27:30	Chris	No, undefined behavior means the implementation can do absolutely anything.
2014-11-25 22:27:45	Chris	In fact, the entire program is rendered undefined.
2014-11-25 22:28:00	-->	filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-11-25 22:28:22	Lazik	good to know
2014-11-25 22:28:54	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-25 22:29:40	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-25 22:30:07	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 250 seconds)
2014-11-25 22:30:24	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-25 22:31:44	-->	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has joined ##c++
2014-11-25 22:33:27	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-25 22:35:58	-->	ivyfield (815de5ad@gateway/web/freenode/ip.129.93.229.173) has joined ##c++
2014-11-25 22:35:58	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 22:37:24	<--	TheGhostinator (~TheBeerin@c-66-41-147-9.hsd1.mn.comcast.net) has quit
2014-11-25 22:37:49	-->	marvimias (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has joined ##c++
2014-11-25 22:39:20	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 22:39:20	-->	komarov (~komarov@185.57.72.175) has joined ##c++
2014-11-25 22:40:48	-->	Ulrike_Rayne (~Ulrike_Ra@cpe-76-181-211-173.columbus.res.rr.com) has joined ##c++
2014-11-25 22:40:50	<--	cuppy (~litropy@unaffiliated/litropy) has left ##c++ ("Leaving")
2014-11-25 22:43:22	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 22:43:57	<--	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-25 22:45:09	matt90	is it possible to capture in `template <template <typename T> class A>` so as to `A<T> a` ?
2014-11-25 22:45:20	matt90	(capture T)
2014-11-25 22:45:46	<--	Lectus (bd691a4f@gateway/web/freenode/ip.189.105.26.79) has quit (Quit: Page closed)
2014-11-25 22:46:13	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-25 22:46:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 22:46:59	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 250 seconds)
2014-11-25 22:47:04	marvimias	<marvimias> So I thought of a challenge, the challenge here is to create a self-contained version of the function atoi. atoi parses a string interpreting its content as an integral number, which is returned as a value of type int.
2014-11-25 22:47:04	marvimias	<marvimias> You need to re-make this function in C/C++/Haskell without calling ANY functions from ANY libraries at all while maintaining the same prototype as the original:
2014-11-25 22:47:04	marvimias	<marvimias> int atoi (const char * str);
2014-11-25 22:47:04	marvimias	<marvimias> If you do not understand the challenge, here is an equivalent type of answer using memcpy instead of atoi: http://pastebin.com/8Zde6ycZ
2014-11-25 22:48:43	CobaltHex	atoi is eas
2014-11-25 22:48:44	CobaltHex	y
2014-11-25 22:50:19	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-25 22:52:17	-->	preyalone (uid21561@gateway/web/irccloud.com/x-pvnludhfczsmkbwl) has joined ##c++
2014-11-25 22:53:02	moonchild	matt90: yes it is
2014-11-25 22:54:06	-->	FOP (~jnar@209.197.20.238) has joined ##c++
2014-11-25 22:54:15	moonchild	http://en.cppreference.com/w/cpp/language/template_parameters
2014-11-25 22:54:20	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-25 22:54:37	matt90	wow cppreference
2014-11-25 22:54:38	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-25 22:54:58	matt90	that's really helpful
2014-11-25 22:55:10	matt90	I definitely didn't spend any time reading that before asking here
2014-11-25 22:55:12	matt90	not at all
2014-11-25 22:55:14	<--	matt90 (~matt90@149-169-138-60.nat.asu.edu) has quit (Quit: Leaving)
2014-11-25 22:55:25	moonchild	i don't think they go through it in detail, but give me a second to find some example code
2014-11-25 22:55:28	<--	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has quit (Read error: Connection reset by peer)
2014-11-25 22:55:37	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2014-11-25 22:56:38	moonchild	asshat
2014-11-25 22:57:24	-->	Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has joined ##c++
2014-11-25 22:58:37	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-25 22:59:55	-->	dfletcher_ (~dfletcher@108-196-222-251.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2014-11-25 23:00:03	<--	dfletcher_ (~dfletcher@108-196-222-251.lightspeed.sntcca.sbcglobal.net) has quit (Changing host)
2014-11-25 23:00:03	-->	dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-25 23:02:08	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 255 seconds)
2014-11-25 23:02:09	--	dfletcher_ is now known as dfletcher
2014-11-25 23:02:58	<--	saint_ (~saint@209.188.5.218) has quit (Quit: UNIVERSE CORRUPTED. REBOOT (Y/N) ?)
2014-11-25 23:02:58	<--	komarov (~komarov@185.57.72.175) has quit (Ping timeout: 250 seconds)
2014-11-25 23:04:03	pi-	What's the right way to '#define FOO true' without using preprocessor?
2014-11-25 23:04:33	moonchild	const bool FOO = true; or constexpr bool FOO = true;
2014-11-25 23:04:46	marvimias	CobaltHex, Is it?
2014-11-25 23:04:53	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-25 23:05:30	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-25 23:06:35	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 23:06:42	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-25 23:07:14	pi-	moonchild: that causes 'Reference to non-static member function must be called' when I use some constructor W::W() { x(FOO); }'
2014-11-25 23:07:16	<--	FOP (~jnar@209.197.20.238) has quit (Quit: Leaving)
2014-11-25 23:07:55	moonchild	pi-: use constexpr, and 'x{FOO}'
2014-11-25 23:08:14	-->	JacobMason (~system42@gateway/tor-sasl/system42) has joined ##c++
2014-11-25 23:08:23	moonchild	also, your ctor may need to be constexpr
2014-11-25 23:08:31	<--	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Read error: Connection reset by peer)
2014-11-25 23:08:54	-->	stapler_ (~stapler@2601:d:9500:469:5d9d:e8b4:b116:b0) has joined ##c++
2014-11-25 23:09:01	immibis	pi-: do you have a minimal example to produce that error?
2014-11-25 23:09:15	<--	stapler_ (~stapler@2601:d:9500:469:5d9d:e8b4:b116:b0) has left ##c++
2014-11-25 23:09:25	-->	linuxuz3r (~linuxuz3r@107-210-170-22.lightspeed.sndgca.sbcglobal.net) has joined ##c++
2014-11-25 23:09:26	-->	stapler (~stapler@unaffiliated/stapler) has joined ##c++
2014-11-25 23:11:00	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-25 23:11:32	pi-	immibis: no, but I do have the code: https://gist.github.com/p-i-/7641257af68965658904#file-gistfile1-cpp-L325
2014-11-25 23:11:45	pi-	I've settled for #define
2014-11-25 23:12:12	immibis	"#define borrowed true"?
2014-11-25 23:12:16	pi-	yer
2014-11-25 23:13:06	pi-	It doesn't seem right, but every attempt with const / static / constexpr gave problems
2014-11-25 23:13:14	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Quit: Leaving)
2014-11-25 23:14:03	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 244 seconds)
2014-11-25 23:14:24	immibis	i see Object doesn't have a nullary constructor, so that shouldn't compile right now?
2014-11-25 23:14:40	immibis	the Boolean constructor on line 325 doesn't invoke an Object constructor
2014-11-25 23:14:59	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-25 23:15:00	-->	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-11-25 23:15:13	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-25 23:15:29	moonchild	for anyone that cares, xz is about 25x faster at decompressing as it is at compressing
2014-11-25 23:15:31	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-25 23:15:42	moonchild	*than it is
2014-11-25 23:15:48	<--	Rafaelfsilva (~Rafaelfsi@177.184.119.149) has quit (Ping timeout: 265 seconds)
2014-11-25 23:16:10	immibis	at which compression level?
2014-11-25 23:16:21	moonchild	9e + x86 filter
2014-11-25 23:16:42	<--	Amaranthus (~travis@ubuntu/member/Amaranth) has quit (Remote host closed the connection)
2014-11-25 23:17:02	<--	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-11-25 23:18:16	<--	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-25 23:18:21	-->	Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-25 23:18:35	moonchild	xz at that level is pretty impractical
2014-11-25 23:19:04	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-25 23:19:10	pi-	immibis: I have noticed that. It does actually compile, maybe the compiler generates the default constructor...?
2014-11-25 23:19:10	<--	TheAncientGoat (~quassel@175.142.135.110) has quit (Ping timeout: 265 seconds)
2014-11-25 23:19:16	pi-	^ didn't notice that
2014-11-25 23:19:31	pi-	Speech recognition, sorry
2014-11-25 23:19:37	kalven	moonchild: doesn't it use crazy amounts of ram at that level?
2014-11-25 23:19:39	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-25 23:20:08	moonchild	kalven: the manpage says it does, but i haven't observe it to use all that much
2014-11-25 23:20:36	immibis	pi-: see if it works with a call to the Object constructor
2014-11-25 23:21:31	moonchild	kalven: i think you need very long repetitions with just the right amount of entropy to hit the pathological mem usage case
2014-11-25 23:24:02	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-25 23:24:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-25 23:24:20	-->	pringlescan (~Adium@76.98.177.92) has joined ##c++
2014-11-25 23:25:01	kalven	moonchild: are you using it for something?
2014-11-25 23:25:33	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Remote host closed the connection)
2014-11-25 23:26:37	<--	lkjhgf (~Guest@72.170.227.30) has quit (Remote host closed the connection)
2014-11-25 23:26:54	-->	dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-25 23:27:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-25 23:27:19	moonchild	yeah, compressing a raw dump of a laptop's hd partition
2014-11-25 23:28:12	moonchild	partition was ntfs, filled a file on it with 0's to squeeze it down
2014-11-25 23:28:32	moonchild	~140 gb, down to ~13, took 10 hrs
2014-11-25 23:28:54	<--	pringlescan (~Adium@76.98.177.92) has quit (Ping timeout: 258 seconds)
2014-11-25 23:29:06	moonchild	12.5 minutes to decompress
2014-11-25 23:29:38	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 272 seconds)
2014-11-25 23:29:38	--	dfletcher_ is now known as dfletcher
2014-11-25 23:30:34	<--	Lilian (~Lilian@gateway/tor-sasl/lilian) has quit (Ping timeout: 250 seconds)
2014-11-25 23:31:15	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-25 23:31:39	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-25 23:32:34	<--	Simotek-Work- (~Simotek@opensuse/member/simotek) has quit (Remote host closed the connection)
2014-11-25 23:32:35	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-25 23:33:00	moonchild	i'm sorta a geek when it comes to compression algos, so i always pay attention to this stuff
2014-11-25 23:33:31	egoldsten_	there is something like compress.ru
2014-11-25 23:33:42	-->	Lilian (~Lilian@gateway/tor-sasl/lilian) has joined ##c++
2014-11-25 23:33:45	egoldsten_	just about compression
2014-11-25 23:33:49	moonchild	wassat?
2014-11-25 23:34:02	egoldsten_	it's not compress may be but it is a russian tld
2014-11-25 23:34:34	egoldsten_	it's a forum of guys doing contests to compress a set of wikipedia dumps
2014-11-25 23:34:45	moonchild	ahh
2014-11-25 23:34:52	egoldsten_	they use the file to comapre the results
2014-11-25 23:34:57	egoldsten_	it's fun
2014-11-25 23:35:11	moonchild	there's a big prize for getting some of that down to a manageable size
2014-11-25 23:35:20	egoldsten_	they ben on compression, time, memory ...
2014-11-25 23:36:41	<--	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-25 23:36:42	-->	nilsi (~nilsi@39.7.15.13) has joined ##c++
2014-11-25 23:37:02	moonchild	my interest in the subject is mostly academic, but it *is* useful for archiving unused data, and, if done correctly, can increase disk read perfomance
2014-11-25 23:37:02	<--	filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-11-25 23:38:18	-->	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-11-25 23:39:06	-->	filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-11-25 23:39:07	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-11-25 23:39:14	<--	xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-25 23:39:27	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-11-25 23:39:30	egoldsten_	it's similar to dynamic memory allocation. Things can't take too much. Every operation has a cost or an hidden cost.
2014-11-25 23:39:31	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-25 23:39:41	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-25 23:39:45	moonchild	yep
2014-11-25 23:39:57	moonchild	the exception is lzo compression
2014-11-25 23:40:38	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Max SendQ exceeded)
2014-11-25 23:40:58	moonchild	the algo is so simple that it wins out over the time to do a disk write
2014-11-25 23:41:13	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-25 23:41:18	-->	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-25 23:42:10	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 255 seconds)
2014-11-25 23:42:35	egoldsten_	i have to go to sleep
2014-11-25 23:42:46	-->	komarov (~komarov@185.57.72.175) has joined ##c++
2014-11-25 23:42:50	egoldsten_	have a good night or day i don t know
2014-11-25 23:42:51	<--	JacobMason (~system42@gateway/tor-sasl/system42) has left ##c++ ("Leaving")
2014-11-25 23:42:53	egoldsten_	bye!
2014-11-25 23:42:55	<--	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has left ##c++
2014-11-25 23:43:26	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-25 23:43:36	<--	kurahaupo (~kurahaupo@118.148.221.136) has quit (Ping timeout: 245 seconds)
2014-11-25 23:44:06	-->	basic6 (~basic6@p4FCB6344.dip0.t-ipconnect.de) has joined ##c++
2014-11-25 23:44:37	<--	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-25 23:45:28	<--	filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-11-25 23:45:34	-->	dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-25 23:46:15	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-25 23:47:20	<--	basic6_ (~basic6@p4FCB6296.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-25 23:47:42	-->	filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-11-25 23:50:28	pEYEd	how do you assign a variable to a popen call?   biggestMark += 0.00000001; FILE *markbuy = popen("php coin.php 155" biggestMark, "r");  ->  Control.cpp:85:76: error: expected ')' before 'biggestMark'
2014-11-25 23:50:55	<--	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has quit (Quit: WeeChat 1.0.1)
2014-11-25 23:51:13	-->	synflox (~sf@151.56.255.92) has joined ##c++
2014-11-25 23:51:56	moonchild	get rid of 'biggestMark'
2014-11-25 23:52:17	<--	synflox (~sf@151.56.255.92) has left ##c++
2014-11-25 23:52:20	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-25 23:52:25	moonchild	FILE * popen(const char *, const char *)
2014-11-25 23:53:01	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 272 seconds)
2014-11-25 23:53:43	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-25 23:53:51	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-25 23:53:51	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 264 seconds)
2014-11-25 23:54:20	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Max SendQ exceeded)
2014-11-25 23:54:37	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-25 23:55:18	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Max SendQ exceeded)
2014-11-25 23:55:33	-->	Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-25 23:57:35	-->	proteusguy (~proteusgu@ppp-110-168-229-220.revip5.asianet.co.th) has joined ##c++
2014-11-25 23:59:00	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-25 23:59:52	-->	robbyoconnor (~wakawaka@cpe-68-174-58-54.hvc.res.rr.com) has joined ##c++
2014-11-25 23:59:55	<--	robbyoconnor (~wakawaka@cpe-68-174-58-54.hvc.res.rr.com) has quit (Changing host)
2014-11-25 23:59:55	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 00:00:29	moonchild	pEYEd: here's some code that avoids the use of popen: http://ideone.com/3r7mZe
2014-11-26 00:01:06	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-11-26 00:01:19	-->	dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-26 00:01:25	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-26 00:01:57	moonchild	...it still needs a wait/waitpid to reap the child somewhere
2014-11-26 00:03:30	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-26 00:04:48	<--	fahadash (~fahadash@unaffiliated/fahadash) has quit (Quit: Leaving)
2014-11-26 00:06:16	-->	zorbsOne (nobody@unaffiliated/zorbsone) has joined ##c++
2014-11-26 00:06:25	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 255 seconds)
2014-11-26 00:06:44	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 00:08:04	-->	lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-26 00:08:05	CobaltHex	is it possible to convert a type info back to a type?
2014-11-26 00:08:33	CobaltHex	or cast to a type
2014-11-26 00:08:40	lh_mouse	no.
2014-11-26 00:08:40	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 258 seconds)
2014-11-26 00:09:27	moonchild	hmmm, can't you?
2014-11-26 00:09:44	<--	marchelzo_ (~marchelzo@HLFXNS016CW-142134090179.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Quit: WeeChat 1.0)
2014-11-26 00:09:50	moonchild	that seems kinda counterintuitive
2014-11-26 00:09:56	lh_mouse	A type isn't an object.
2014-11-26 00:09:59	CobaltHex	well
2014-11-26 00:10:00	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 264 seconds)
2014-11-26 00:10:12	CobaltHex	i have a map of type_index -> derived
2014-11-26 00:10:24	CobaltHex	id like to return the derived
2014-11-26 00:10:35	moonchild	dynamic_cast
2014-11-26 00:11:03	CobaltHex	derived is not known
2014-11-26 00:11:11	lh_mouse	std::map<type_index, std::function<std::unique_ptr<base_class> ()>> object_factory; // here you go
2014-11-26 00:11:13	CobaltHex	only base is know
2014-11-26 00:11:25	moonchild	if dynamic_cast is not going to do it for you, your design is b0rked
2014-11-26 00:11:32	CobaltHex	idk if it will
2014-11-26 00:11:39	-->	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 00:11:40	<--	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has quit (Changing host)
2014-11-26 00:11:40	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-26 00:11:59	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-26 00:12:28	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 00:14:27	-->	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-11-26 00:15:07	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-26 00:15:22	-->	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has joined ##c++
2014-11-26 00:15:45	-->	teknozulu (~n3ss3s@35.11.22.108) has joined ##c++
2014-11-26 00:15:59	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-26 00:16:02	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Ping timeout: 250 seconds)
2014-11-26 00:17:46	-->	dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-26 00:18:41	CobaltHex	so there is no way to have (without a ton of workaround)
2014-11-26 00:18:50	CobaltHex	a map with a type storing a derived
2014-11-26 00:18:50	<--	filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-11-26 00:18:56	-->	o] (~achubergs@97-113-31-93.tukw.qwest.net) has joined ##c++
2014-11-26 00:19:02	CobaltHex	or rather storing a base, with deriveds stored
2014-11-26 00:19:09	CobaltHex	and return the derived
2014-11-26 00:19:15	CobaltHex	based on simply knowing its type info
2014-11-26 00:19:31	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Quit: ???????)
2014-11-26 00:19:45	-->	SiGe__ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 00:19:55	moonchild	not really
2014-11-26 00:20:01	CobaltHex	:(
2014-11-26 00:20:12	moonchild	you could throw the object and use a catch block
2014-11-26 00:20:20	moonchild	but that's ugly
2014-11-26 00:20:41	moonchild	and i've publicly shamed people for less
2014-11-26 00:20:50	CobaltHex	ll
2014-11-26 00:20:52	CobaltHex	lol*
2014-11-26 00:20:58	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-26 00:21:01	-->	raj___ (~xar@182.65.92.234) has joined ##c++
2014-11-26 00:21:03	CobaltHex	can you use templates with the [] operator
2014-11-26 00:21:07	CobaltHex	and what would the use look like
2014-11-26 00:21:24	<--	sohail (~user@69-196-187-44.dsl.teksavvy.com) has quit (Remote host closed the connection)
2014-11-26 00:21:42	moonchild	template <class T> blah class::operator[] (T index)
2014-11-26 00:21:46	CobaltHex	 mean
2014-11-26 00:21:48	CobaltHex	i mean*
2014-11-26 00:21:55	-->	filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-11-26 00:21:55	CobaltHex	a.<test>[] ?
2014-11-26 00:22:10	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-26 00:22:16	moonchild	no, just a[t]
2014-11-26 00:22:30	CobaltHex	how would it know what type
2014-11-26 00:22:47	CobaltHex	err
2014-11-26 00:22:50	CobaltHex	could you do the () operator
2014-11-26 00:22:50	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Ping timeout: 240 seconds)
2014-11-26 00:22:58	moonchild	{ map<string, int> m{ {"foo", 42} }; cout << m["foo"]; }
2014-11-26 00:23:02	geordi	42
2014-11-26 00:23:32	CobaltHex	how would you do ()
2014-11-26 00:23:42	-->	dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-26 00:24:46	moonchild	look at std::less
2014-11-26 00:24:49	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 240 seconds)
2014-11-26 00:24:50	--	dfletcher_ is now known as dfletcher
2014-11-26 00:25:15	moonchild	hmm, bad example
2014-11-26 00:26:00	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 00:26:13	moonchild	{ F f; cout << f(1, 2); } struct F { template<class T> T operator () (T a, T b) { return a + b; } };
2014-11-26 00:26:13	geordi	3
2014-11-26 00:26:41	CobaltHex	could you do it without the parameters?
2014-11-26 00:26:55	moonchild	hmmm
2014-11-26 00:26:59	lh_mouse	CobaltHex, function templates deduce their template parameters if not provided.
2014-11-26 00:27:05	CobaltHex	yeah
2014-11-26 00:27:10	CobaltHex	but there doesnt seem to be an explicit syntax
2014-11-26 00:27:16	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 250 seconds)
2014-11-26 00:27:24	moonchild	{ F f; cout << f<int>(); } struct F { template<class T> T operator () () { return 42; } };
2014-11-26 00:27:24	geordi	error: no match for 'operator<<' (operand types are 'ostream {aka ostream}' and 'F')
2014-11-26 00:27:48	moonchild	<- CobaltHex not that way
2014-11-26 00:27:53	CobaltHex	k
2014-11-26 00:28:21	moonchild	{ F f; cout << f::operator()<int>(); } struct F { template<class T> T operator () () { return 42; } };
2014-11-26 00:28:21	geordi	error: 'f' is not a class, namespace, or enumeration
2014-11-26 00:28:30	moonchild	{ F f; cout << f.operator()<int>(); } struct F { template<class T> T operator () () { return 42; } };
2014-11-26 00:28:31	geordi	42
2014-11-26 00:28:34	moonchild	^^
2014-11-26 00:28:43	CobaltHex	ew
2014-11-26 00:29:22	moonchild	yeah, well you asked :P
2014-11-26 00:30:49	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-26 00:30:50	<--	nilsi (~nilsi@39.7.15.13) has quit (Read error: Connection reset by peer)
2014-11-26 00:31:14	-->	nilsi (~nilsi@39.7.15.13) has joined ##c++
2014-11-26 00:31:14	<--	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-26 00:32:28	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 265 seconds)
2014-11-26 00:34:47	-->	kurahaupo (~kurahaupo@118.148.221.136) has joined ##c++
2014-11-26 00:34:50	-->	nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-26 00:35:42	<--	kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-26 00:38:26	-->	dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-26 00:39:00	-->	tango_ (~tex_vim@151.54.80.77) has joined ##c++
2014-11-26 00:39:47	-->	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-11-26 00:40:01	tango_	hello all, I wanted to know if it was possible to achieve something like the following pre-C++11 (yes, I know, I'd rather switch to C++11, but I can't in this specific context):
2014-11-26 00:40:24	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 272 seconds)
2014-11-26 00:40:24	--	dfletcher_ is now known as dfletcher
2014-11-26 00:40:39	-->	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has joined ##c++
2014-11-26 00:41:37	tango_	I have a class A and a list of instances of it. I have some member functions f1, f2, f3, and corresponding static ones d1, d2, d3, such that (basically) A::d1 iterates over the instances in the list and calls f1 for each, A::d2 invokes f2 of each instance in the list, etc
2014-11-26 00:41:49	tango_	of course, f1, f2, f3 all have different argument lists
2014-11-26 00:42:11	-->	futileIJL (~apathyPMB@218.30.116.3) has joined ##c++
2014-11-26 00:42:45	tango_	since the code for d1, d2, d3 is exactly the same, I would like to make a template of it and them have d1 be its specialization with f1, and so on. is this possible in C++11?
2014-11-26 00:42:48	tango_	ehm
2014-11-26 00:43:00	tango_	sorry, withOUT C++11 (variadic templates specifically)
2014-11-26 00:43:52	<--	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has quit (Quit: Leaving)
2014-11-26 00:44:34	<--	futileIJL (~apathyPMB@218.30.116.3) has left ##c++
2014-11-26 00:45:07	-->	LifeBlood (~unixunite@74.194.165.220) has joined ##c++
2014-11-26 00:45:14	-->	futileIJL (~apathyPMB@218.30.116.3) has joined ##c++
2014-11-26 00:46:27	moonchild	template<class F> struct d1 { void operator() (F f, A a) { foreach (member of a) { f(member); } }
2014-11-26 00:46:49	<--	ivan\ (~ivan@unaffiliated/ivan/x-000001) has quit (Read error: Connection reset by peer)
2014-11-26 00:46:51	-->	ivan\_ (~ivan@unaffiliated/ivan/x-000001) has joined ##c++
2014-11-26 00:47:00	moonchild	something like that
2014-11-26 00:47:15	tango_	moonchild: the argument list of f is variable
2014-11-26 00:47:21	<--	CobaltHex (~CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2014-11-26 00:47:35	moonchild	you can't then
2014-11-26 00:47:43	<--	komarov (~komarov@185.57.72.175) has quit (Ping timeout: 264 seconds)
2014-11-26 00:47:43	tango_	for example, one might have signature void f1(float, bool), the other void f2(float, int*, float*)
2014-11-26 00:47:48	tango_	moonchild: ok, I suspected as much
2014-11-26 00:47:52	moonchild	what you *can* do is pass an iterator range instead
2014-11-26 00:47:58	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-26 00:48:12	tango_	moonchild: va_* stuff?
2014-11-26 00:48:12	moonchild	or a tuple, if you have an implementation of it
2014-11-26 00:48:57	--	ivan\_ is now known as ivan\
2014-11-26 00:49:38	<--	SiGe__ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 00:50:16	moonchild	tango_: you can't use va_args for c++ non-trivial types
2014-11-26 00:50:17	tango_	moonchild: ok, thanks for confirming my suspicion
2014-11-26 00:50:26	tango_	moonchild: oh there's also that
2014-11-26 00:50:37	tango_	ok I'll just keep the hand-made repeated implementations for now
2014-11-26 00:50:38	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-26 00:50:57	tango_	and hope that we'll able to switch to C++11 soon(ish)
2014-11-26 00:51:08	moonchild	there's ways of simulating it all with something like an array of void *'s
2014-11-26 00:51:19	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 255 seconds)
2014-11-26 00:51:25	moonchild	but you don't have variadic templates in '98
2014-11-26 00:51:41	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 00:52:00	moonchild	you can also do a poor-man's tuple with pair<a, pair<b, pair<c, ...>>>
2014-11-26 00:52:01	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-26 00:52:13	moonchild	that gets cumbersome though
2014-11-26 00:52:32	-->	FabTG (~ftg@142.ip-37-59-108.eu) has joined ##c++
2014-11-26 00:52:43	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-26 00:53:07	tango_	moonchild: if it's not a trivial replacement for what we have now it's not (currently) worth it, honestly
2014-11-26 00:53:10	moonchild	(that's pretty lisp-ish)
2014-11-26 00:53:15	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-26 00:53:41	-->	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-26 00:54:45	-->	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has joined ##c++
2014-11-26 00:54:47	<--	jarrod_ (~jarrod@S0106f81edff843fc.vc.shawcable.net) has quit (Changing host)
2014-11-26 00:54:47	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-26 00:55:25	<--	srjek (~srjek@46dhcp63.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-26 00:55:34	-->	srjek_ (~srjek@46dhcp63.ece.uic.edu) has joined ##c++
2014-11-26 00:55:57	--	srjek_ is now known as srjek
2014-11-26 00:57:32	<--	thomas (~thomas@freenode/staff/thomas) has quit (Quit: Reconnecting)
2014-11-26 00:57:38	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-26 00:57:39	<--	nilsi (~nilsi@39.7.15.13) has quit (Remote host closed the connection)
2014-11-26 00:57:56	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-26 00:57:59	<--	oleo (~oleo@xdsl-78-35-175-79.netcologne.de) has quit (Quit: Verlassend)
2014-11-26 00:58:20	-->	thomas (~thomas@freenode/staff/thomas) has joined ##c++
2014-11-26 00:58:32	tango_	moonchild: thanks a lot for the hints anyway
2014-11-26 00:59:07	moonchild	np
2014-11-26 01:00:17	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-26 01:01:11	-->	akaWolf (~akaWolf@unaffiliated/akawolf) has joined ##c++
2014-11-26 01:02:01	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-26 01:02:43	<--	proteusguy (~proteusgu@ppp-110-168-229-220.revip5.asianet.co.th) has quit (Remote host closed the connection)
2014-11-26 01:03:21	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-26 01:05:16	<--	teknozulu (~n3ss3s@35.11.22.108) has quit (Ping timeout: 264 seconds)
2014-11-26 01:06:00	<--	kurahaupo (~kurahaupo@118.148.221.136) has left ##c++ ("Leaving")
2014-11-26 01:06:24	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2014-11-26 01:06:44	-->	nilsi (~nilsi@39.7.15.13) has joined ##c++
2014-11-26 01:08:24	<--	ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-26 01:11:10	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-26 01:11:43	<--	nilsi (~nilsi@39.7.15.13) has quit (Ping timeout: 240 seconds)
2014-11-26 01:13:20	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-26 01:13:37	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 01:14:53	-->	arbin-cn (~gravesPHN@218.30.116.3) has joined ##c++
2014-11-26 01:14:59	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-26 01:15:41	-->	Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-26 01:16:59	-->	HerzogDeXtEr1 (~flex@i59F6CB30.versanet.de) has joined ##c++
2014-11-26 01:18:08	<--	cyberspace- (20253@ninthfloor.org) has quit (Read error: Connection reset by peer)
2014-11-26 01:18:48	<--	mays (~mays@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 01:18:50	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-26 01:19:10	-->	cyberspace- (20253@ninthfloor.org) has joined ##c++
2014-11-26 01:19:37	<--	HerzogDeXtEr (~flex@88.130.168.79) has quit (Ping timeout: 240 seconds)
2014-11-26 01:20:22	-->	seishun (~Kakera@78.84.140.163) has joined ##c++
2014-11-26 01:20:51	-->	teknozulu (~n3ss3s@35.11.22.108) has joined ##c++
2014-11-26 01:21:35	-->	SiGe___ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 01:21:42	-->	brundige (~brundige@192.210.214.197) has joined ##c++
2014-11-26 01:23:41	-->	zhangxaochen (~zhangxaoc@218.108.29.108) has joined ##c++
2014-11-26 01:23:49	zhangxaochen	what's the meaning of "perf" of "opencv_perf_calib3dd"?
2014-11-26 01:24:36	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 245 seconds)
2014-11-26 01:25:01	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Ping timeout: 264 seconds)
2014-11-26 01:25:10	-->	darc0197 (ae86bcb3@gateway/web/freenode/ip.174.134.188.179) has joined ##c++
2014-11-26 01:25:19	pEYEd	my line 13 is causing a segment fault.  https://bpaste.net/show/b824160f0738  I am trying to send a variable to popen. cout of command shows missing data.
2014-11-26 01:26:24	<--	darc0197 (ae86bcb3@gateway/web/freenode/ip.174.134.188.179) has left ##c++
2014-11-26 01:27:12	zhangxaochen	hi, is there any opencv prebuilt packages to download with PDB files included?
2014-11-26 01:27:32	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Remote host closed the connection)
2014-11-26 01:28:37	zhangxaochen	the official downloads don't contain PDB files ...
2014-11-26 01:29:37	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-26 01:29:50	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-26 01:30:53	<--	Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 258 seconds)
2014-11-26 01:31:05	-->	Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-11-26 01:31:21	adamm	pEYEd: line 12?
2014-11-26 01:32:52	-->	komarov (~komarov@46.227.191.88) has joined ##c++
2014-11-26 01:33:22	pEYEd	adamm I don't get an error on 12. but commenting out line 13 gets rid of the error.
2014-11-26 01:33:38	pEYEd	and the function  :(
2014-11-26 01:33:55	adamm	waht are you doing on line 12?
2014-11-26 01:33:57	xico	pEYEd: can't you use a debugger?
2014-11-26 01:34:24	<--	teknozulu (~n3ss3s@35.11.22.108) has quit (Ping timeout: 255 seconds)
2014-11-26 01:34:38	<--	futileIJL (~apathyPMB@218.30.116.3) has quit (Quit: ThrashIRC v2.9 sic populo comunicated)
2014-11-26 01:34:44	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-26 01:34:59	<--	preyalone (uid21561@gateway/web/irccloud.com/x-pvnludhfczsmkbwl) has quit (Quit: Connection closed for inactivity)
2014-11-26 01:35:04	xico	pEYEd: also, write a testcase, we cannot foretell what sendbuy is
2014-11-26 01:35:35	pEYEd	xico gdbhttps://bpaste.net/show/674d68bd3cb5
2014-11-26 01:35:43	-->	Zifre (~Zifre@unaffiliated/zifre) has joined ##c++
2014-11-26 01:35:56	o]	ahhhhhhhhhhhhn testcase is soooooo haaaaaaaaaaaard
2014-11-26 01:36:00	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 250 seconds)
2014-11-26 01:36:23	adamm	stare at that line 12 and if you can't see a problem, get some sleep and then stare at it again. I'm going to grab some sleep now :)
2014-11-26 01:36:26	-->	proteusguy (~proteusgu@180.183.139.197) has joined ##c++
2014-11-26 01:37:00	xico	adamm: indeed
2014-11-26 01:37:16	xico	funny the compiler would let that one pass
2014-11-26 01:39:21	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 01:39:59	pEYEd	adamm what the proper was to increase the value of a double vector max_element result by 0.00000001 ??
2014-11-26 01:40:10	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 256 seconds)
2014-11-26 01:40:43	<--	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-26 01:41:20	xico	pEYEd: probably using operator*
2014-11-26 01:41:44	xico	or not
2014-11-26 01:42:42	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 01:42:43	<--	Zifre (~Zifre@unaffiliated/zifre) has quit (Read error: Connection reset by peer)
2014-11-26 01:42:49	<--	akaWolf (~akaWolf@unaffiliated/akawolf) has quit (Quit: leaving)
2014-11-26 01:43:31	-->	akaWolf (~akaWolf@unaffiliated/akawolf) has joined ##c++
2014-11-26 01:43:56	pEYEd	xico same segment fault with  *biggestMark += 0.00000001;
2014-11-26 01:44:00	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-26 01:44:14	o]	stop using pointers
2014-11-26 01:44:44	o]	god damn it. why you fucks are so obsessed with pointers?
2014-11-26 01:45:04	-->	kurahaupo (~kurahaupo@118.148.224.133) has joined ##c++
2014-11-26 01:47:30	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 01:47:31	-->	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 01:47:41	-->	BlaXpirit (~blaxpirit@190-26-132-95.pool.ukrtel.net) has joined ##c++
2014-11-26 01:48:37	<--	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has quit (Quit: :q!)
2014-11-26 01:50:20	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-26 01:51:05	xico	pEYEd: yeah, biggestMark increment by 1e-x would most probably have been casted to 0 anyways.
2014-11-26 01:51:23	-->	endomancer (~endomance@2001:8003:2e3b:e301:148:71f0:7949:9ab6) has joined ##c++
2014-11-26 01:52:02	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-26 01:52:20	pEYEd	xico ?  how do you make it  not round off?
2014-11-26 01:53:23	xico	pEYEd: by not incrementing the iterator with a float
2014-11-26 01:53:30	xico	{ vector<int> v{1,2,3}; auto b = v.begin(); b += 0.00001; cout << *b << endl; }
2014-11-26 01:53:30	geordi	1
2014-11-26 01:53:50	xico	{ vector<double> v{1,2,3}; auto b = v.begin(); *b += 0.00001; cout << *b << endl; }
2014-11-26 01:53:51	geordi	1.00001
2014-11-26 01:53:57	xico	(using operator*)
2014-11-26 01:54:22	xico	wont help you with your absence of testcase though.
2014-11-26 01:54:53	xico	{ vector<double> v{1,2,3}; auto b = v.begin(); b += 0.00001; cout << *b << endl; } // wrong type for the first example
2014-11-26 01:54:53	geordi	1
2014-11-26 01:55:08	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-26 01:58:12	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 01:59:12	pEYEd	xico *biggestMark += 0.00000001;  cout << *biggestMark << endl;  shows the correct data. enabling sprintf(sendbuy,"%20.4f",*biggestMark); still produces a segment fault.
2014-11-26 02:00:42	lh_mouse	What is sendbuy?
2014-11-26 02:01:14	xico	pEYEd: 22:48 < xico> pEYEd: also, write a testcase, we cannot foretell what sendbuy is
2014-11-26 02:01:24	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 02:04:25	<--	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-11-26 02:05:09	-->	Gvidon (~gvidon@unaffiliated/gvidon) has joined ##c++
2014-11-26 02:05:56	pEYEd	xico what do you mean by test case?
2014-11-26 02:07:54	<--	zhangxaochen (~zhangxaoc@218.108.29.108) has quit (Quit: Leaving)
2014-11-26 02:08:02	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 02:08:12	-->	rendar (~I@host207-179-dynamic.1-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 02:08:29	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-26 02:08:57	latexi95	!give pEYEd testcase
2014-11-26 02:08:58	nolyc	pEYEd: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-26 02:09:25	<--	akaWolf (~akaWolf@unaffiliated/akawolf) has quit (Quit: leaving)
2014-11-26 02:09:56	-->	akaWolf (~akaWolf@unaffiliated/akawolf) has joined ##c++
2014-11-26 02:11:35	<--	d_s (~dupasmoka@gateway/shell/mydevil.net/x-iiqavxdrydxedrgw) has quit (Ping timeout: 255 seconds)
2014-11-26 02:11:44	<--	bb010g (uid21050@gateway/web/irccloud.com/x-pfnakdljwjriakte) has quit (Quit: Connection closed for inactivity)
2014-11-26 02:12:34	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-26 02:12:41	<--	robert_|disconne (~hellspawn@static-96-254-212-18.tampfl.fios.verizon.net) has quit (Changing host)
2014-11-26 02:12:41	-->	robert_|disconne (~hellspawn@objectx/robert) has joined ##c++
2014-11-26 02:12:43	--	robert_|disconne is now known as robert_
2014-11-26 02:13:17	-->	Errorical (~Errorical@213.128.190.150) has joined ##c++
2014-11-26 02:15:01	<--	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 02:15:16	<--	seishun (~Kakera@78.84.140.163) has quit (Ping timeout: 255 seconds)
2014-11-26 02:15:47	<--	komarov (~komarov@46.227.191.88) has quit (Ping timeout: 250 seconds)
2014-11-26 02:16:29	-->	komarov (~komarov@46.227.191.55) has joined ##c++
2014-11-26 02:16:38	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-26 02:17:10	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-26 02:20:30	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Ping timeout: 264 seconds)
2014-11-26 02:23:04	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-26 02:23:43	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-26 02:25:00	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2014-11-26 02:25:10	-->	d_s (~dupasmoka@gateway/shell/mydevil.net/x-zxkgqtftzvlqpzzq) has joined ##c++
2014-11-26 02:27:50	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 02:30:54	-->	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has joined ##c++
2014-11-26 02:31:00	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 02:31:27	<--	esperegu (~quassel@ip-213-124-221-127.ip.prioritytelecom.net) has quit (Ping timeout: 240 seconds)
2014-11-26 02:32:06	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-26 02:32:26	-->	jagob (~jacob@h195.natout.aau.dk) has joined ##c++
2014-11-26 02:33:09	-->	zer0def (~zer0def@5.254.151.243) has joined ##c++
2014-11-26 02:33:32	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 02:34:45	<--	cyndis (cyndis@lakka.kapsi.fi) has quit (Ping timeout: 272 seconds)
2014-11-26 02:35:16	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-26 02:35:19	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-26 02:37:17	-->	cyndis (cyndis@lakka.kapsi.fi) has joined ##c++
2014-11-26 02:37:19	<--	Errorical (~Errorical@213.128.190.150) has quit (Quit: Leaving)
2014-11-26 02:37:22	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 02:37:53	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-26 02:38:31	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-26 02:41:45	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 02:42:25	-->	adc (~adc@55e9ec02.rev.dansknet.dk) has joined ##c++
2014-11-26 02:43:33	<--	adc (~adc@55e9ec02.rev.dansknet.dk) has quit (Changing host)
2014-11-26 02:43:33	-->	adc (~adc@unaffiliated/adc) has joined ##c++
2014-11-26 02:44:07	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Quit: Meow)
2014-11-26 02:44:38	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 264 seconds)
2014-11-26 02:44:39	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-26 02:44:54	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 02:44:59	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-26 02:45:32	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-26 02:46:44	-->	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has joined ##c++
2014-11-26 02:46:44	-->	lewis1711 (~lewis@210.54.34.115) has joined ##c++
2014-11-26 02:47:06	lewis1711	why are non-virtual constructors slower than functions that initialise structs, if both do the same thing?
2014-11-26 02:47:26	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 264 seconds)
2014-11-26 02:48:09	-->	Burga (~andrewm@124-150-99-226.dyn.iinet.net.au) has joined ##c++
2014-11-26 02:48:15	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-26 02:48:26	<--	stapler (~stapler@unaffiliated/stapler) has quit (Remote host closed the connection)
2014-11-26 02:48:57	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-26 02:48:59	<--	linuxuz3r (~linuxuz3r@107-210-170-22.lightspeed.sndgca.sbcglobal.net) has quit (Quit: Leaving)
2014-11-26 02:49:13	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-26 02:49:23	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 02:49:28	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 02:49:39	-->	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has joined ##c++
2014-11-26 02:51:01	Gvidon	lewis1711: Constructors also initialise base classes and members
2014-11-26 02:52:31	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-26 02:53:26	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 02:54:49	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep. ZZZzzz?)
2014-11-26 02:55:28	<--	raj___ (~xar@182.65.92.234) has quit (Read error: Connection reset by peer)
2014-11-26 02:55:30	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2014-11-26 02:55:42	-->	Errorical (~Errorical@213.128.190.150) has joined ##c++
2014-11-26 02:56:02	-->	raj___ (~xar@182.65.92.234) has joined ##c++
2014-11-26 02:57:50	-->	kerberosio (~hello@firewall.reference.be) has joined ##c++
2014-11-26 02:57:53	-->	aggn (~irc@2001:4ca0:2fff:4::50) has joined ##c++
2014-11-26 02:58:21	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-26 02:58:55	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Remote host closed the connection)
2014-11-26 03:01:18	<--	komarov (~komarov@46.227.191.55) has quit (Ping timeout: 272 seconds)
2014-11-26 03:02:08	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 256 seconds)
2014-11-26 03:02:43	<--	d_s (~dupasmoka@gateway/shell/mydevil.net/x-zxkgqtftzvlqpzzq) has quit (Quit: leaving)
2014-11-26 03:02:49	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 03:02:58	-->	d_s (~dupasmoka@gateway/shell/mydevil.net/x-yzurrjskkhzclskn) has joined ##c++
2014-11-26 03:03:40	<--	dumdedum (~dumdedum@212.97.160.185.static.user.ono.com) has quit (Ping timeout: 255 seconds)
2014-11-26 03:04:33	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-26 03:04:34	-->	esperegu (~quassel@ip-213-124-221-127.ip.prioritytelecom.net) has joined ##c++
2014-11-26 03:04:41	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-26 03:04:42	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-26 03:04:42	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-26 03:04:43	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-11-26 03:05:10	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Read error: No route to host)
2014-11-26 03:06:14	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Quit: More lovin', less bludgeon)
2014-11-26 03:07:20	-->	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-26 03:07:51	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 03:10:00	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:9100:db3a:6ba0:f08a) has joined ##c++
2014-11-26 03:10:19	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-26 03:11:04	-->	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-26 03:11:09	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Quit: Leaving.)
2014-11-26 03:11:29	<--	Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-11-26 03:11:56	-->	aggn_ (~irc@a0172.ipv6.tum.vpn.lrz.de) has joined ##c++
2014-11-26 03:12:12	<--	aggn_ (~irc@a0172.ipv6.tum.vpn.lrz.de) has quit (Remote host closed the connection)
2014-11-26 03:13:18	<--	aggn (~irc@2001:4ca0:2fff:4::50) has quit (Ping timeout: 272 seconds)
2014-11-26 03:13:26	-->	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 03:15:03	-->	redjack1964_ (~quassel@39.237.151.77.rev.sfr.net) has joined ##c++
2014-11-26 03:16:15	pEYEd	I am pumping borked data into popen  https://bpaste.net/show/5eea34cab27d  :(
2014-11-26 03:16:24	-->	Superlokkus (~Superlokk@141.56.66.89) has joined ##c++
2014-11-26 03:16:54	<--	lewis1711 (~lewis@210.54.34.115) has left ##c++ ("Konversation terminated!")
2014-11-26 03:17:04	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-26 03:17:12	<--	redjack1964 (~quassel@39.237.151.77.rev.sfr.net) has quit (Ping timeout: 258 seconds)
2014-11-26 03:17:36	-->	C0MPAQ (~l0rd@aftr-109-91-38-81.unity-media.net) has joined ##c++
2014-11-26 03:18:08	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-26 03:18:28	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 250 seconds)
2014-11-26 03:18:29	<--	brundige (~brundige@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 03:19:16	<--	raj___ (~xar@182.65.92.234) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 03:19:55	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-26 03:20:02	-->	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has joined ##c++
2014-11-26 03:21:24	-->	gundry (~gundry@192.210.214.197) has joined ##c++
2014-11-26 03:22:57	<--	Superlokkus (~Superlokk@141.56.66.89) has quit (Quit: Linkinus - http://linkinus.com)
2014-11-26 03:24:07	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 265 seconds)
2014-11-26 03:24:32	-->	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has joined ##c++
2014-11-26 03:25:25	-->	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-26 03:25:26	-->	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-26 03:26:49	-->	avvs (~avvs@gateway/tor-sasl/avvs) has joined ##c++
2014-11-26 03:29:20	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 03:32:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 03:33:25	-->	eyvindandersen (~eyvind@80-71-135-9.u.parknet.dk) has joined ##c++
2014-11-26 03:36:00	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 03:38:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 03:39:41	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-26 03:40:35	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-26 03:41:10	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2014-11-26 03:41:57	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 03:42:09	<--	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has quit (Read error: Connection reset by peer)
2014-11-26 03:42:14	<--	jcelerier (~doom@AToulouse-657-1-1052-172.w83-205.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-11-26 03:42:53	-->	reiser_ (~reiser@110.77.250.64) has joined ##c++
2014-11-26 03:43:00	<--	nardev (~nardev@77.238.221.157) has quit (Ping timeout: 272 seconds)
2014-11-26 03:43:14	-->	rriemann (~rriemann@192.33.216.80) has joined ##c++
2014-11-26 03:45:19	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-26 03:46:12	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 244 seconds)
2014-11-26 03:47:03	-->	phinxy (tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-26 03:47:52	<--	Yepoleb (~quassel@188-23-118-173.adsl.highway.telekom.at) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-26 03:48:03	rendar	inline MyObject & f() { static MyObject my; return my; }   <- i can have this on an header, instead of having a global object, and 'my' will be contructed once, and destructed once, like if it'd be a global object declared in the .cpp of the TU, right?
2014-11-26 03:48:09	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-26 03:48:54	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-26 03:49:09	-->	Yepoleb (~quassel@178-191-135-124.adsl.highway.telekom.at) has joined ##c++
2014-11-26 03:49:12	-->	WormDr1nk (~CustosLim@41.160.176.35) has joined ##c++
2014-11-26 03:49:22	<--	WormDr1nk (~CustosLim@41.160.176.35) has quit (Changing host)
2014-11-26 03:49:22	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-26 03:50:15	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-26 03:50:15	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-26 03:50:15	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-26 03:52:12	<--	bzf (~bzf@146.185.165.15) has left ##c++ ("Leaving")
2014-11-26 03:52:17	Adrinael	rendar, almost
2014-11-26 03:52:36	Adrinael	rendar, the compiler can have separate instances of inline functions in each TU
2014-11-26 03:52:42	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-26 03:53:23	Adrinael	Wait no
2014-11-26 03:53:35	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-26 03:53:36	Adrinael	Thanks to 7.1.2/4 the static local is the same regardless
2014-11-26 03:53:38	-->	blut (~blut@ersc147.goemobile.de) has joined ##c++
2014-11-26 03:54:24	Adrinael	rendar, therefore, correct.
2014-11-26 03:54:29	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Quit: WeeChat 0.4.2)
2014-11-26 03:55:06	-->	grayshade (~grayshade@86.122.135.130) has joined ##c++
2014-11-26 03:55:43	<--	nivyaj (uid41702@gateway/web/irccloud.com/x-xpqalrlhzswrxfpm) has quit (Quit: Connection closed for inactivity)
2014-11-26 03:57:37	<--	ivan\ (~ivan@unaffiliated/ivan/x-000001) has quit (Ping timeout: 255 seconds)
2014-11-26 03:58:16	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-26 03:59:30	-->	guidol (~guidol@g147088.upc-g.chello.nl) has joined ##c++
2014-11-26 04:00:38	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-26 04:02:00	rendar	Adrinael: cool
2014-11-26 04:02:20	rendar	Adrinael: when 7.1.2/4 has been introduced? i don't want different behaviour if i compile for older standard
2014-11-26 04:02:26	Adrinael	C++98
2014-11-26 04:02:28	-->	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has joined ##c++
2014-11-26 04:02:39	rendar	C++98 included?
2014-11-26 04:02:56	Adrinael	Yes
2014-11-26 04:02:59	-->	Malsasa (~Malsasa@36.81.105.251) has joined ##c++
2014-11-26 04:03:00	rendar	cool, thanks
2014-11-26 04:04:19	rendar	Adrinael: i'd use this method to avoid inter-TUs object members calling, because sometime it may happens that a global object in a TU hasn't been initialized yet (the ctor hasn't been called) while its member function is called from another global object from another TU which is initializing right now
2014-11-26 04:04:41	Adrinael	It's a commonly used idiom
2014-11-26 04:04:46	Adrinael	Initialize-on-first-use
2014-11-26 04:05:02	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-26 04:05:03	<--	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has quit (Read error: No route to host)
2014-11-26 04:05:28	-->	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has joined ##c++
2014-11-26 04:05:33	<--	eyvindandersen (~eyvind@80-71-135-9.u.parknet.dk) has quit (Quit: leaving)
2014-11-26 04:06:01	-->	maroloccio (~marolocci@213.95.133.22) has joined ##c++
2014-11-26 04:06:52	-->	huseyinkozan (~huseyinko@88.229.155.31) has joined ##c++
2014-11-26 04:06:52	<--	huseyinkozan (~huseyinko@88.229.155.31) has quit (Changing host)
2014-11-26 04:06:52	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-26 04:07:50	<--	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has left ##c++
2014-11-26 04:08:28	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Quit: http://www.twitter.com/aleenamaleena)
2014-11-26 04:09:27	-->	redjack1964 (~quassel@39.237.151.77.rev.sfr.net) has joined ##c++
2014-11-26 04:10:28	Gvidon	rendar: If your global objects have initialisation dependencies, it's likely that there can be similar dependencies during destruction, and this approach won't help you with them
2014-11-26 04:11:07	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-26 04:11:59	<--	redjack1964_ (~quassel@39.237.151.77.rev.sfr.net) has quit (Ping timeout: 255 seconds)
2014-11-26 04:15:07	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 04:15:13	markand	hello guys
2014-11-26 04:15:23	markand	I've seen this : http://yosefk.com/c++fqa/mixing.html#fqa-32.6
2014-11-26 04:15:38	markand	it says that calling a C++ function from a C function will not interoperate
2014-11-26 04:15:49	markand	http://ideone.com/DmxB3T <- here seems to work though
2014-11-26 04:16:38	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Read error: Connection reset by peer)
2014-11-26 04:17:26	<--	maroloccio (~marolocci@213.95.133.22) has quit (Quit: WeeChat 1.0)
2014-11-26 04:18:08	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-26 04:18:13	Adrinael	markand, those are all C++ functions
2014-11-26 04:18:13	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 04:18:48	<--	Cervantes (~Cervantes@99-110-220-236.lightspeed.irvnca.sbcglobal.net) has quit (Quit: WeeChat 0.3.7)
2014-11-26 04:18:57	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-26 04:19:04	-->	aggn (~irc@2001:4ca0:0:f221:9ff:e29b:86d1:fca2) has joined ##c++
2014-11-26 04:19:08	-->	jcelerier (~doom@AToulouse-657-1-1057-117.w83-193.abo.wanadoo.fr) has joined ##c++
2014-11-26 04:19:54	markand	Adrinael, so it is perfectly safe ?
2014-11-26 04:19:56	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-26 04:20:07	Adrinael	markand, calling C++ functions from C++ functions is safe, yes
2014-11-26 04:20:13	Adrinael	That's not what the FAQ entry was about
2014-11-26 04:20:19	-->	maroloccio (~marolocci@213.95.133.22) has joined ##c++
2014-11-26 04:20:19	Adrinael	extern "C" does NOT make the function C code
2014-11-26 04:20:27	<--	maroloccio (~marolocci@213.95.133.22) has quit (Client Quit)
2014-11-26 04:20:54	<--	darkarcher (~archer@184.75.221.82) has quit (Read error: Connection reset by peer)
2014-11-26 04:21:09	rendar	Gvidon: oh, how to fix that then?
2014-11-26 04:21:37	markand	yes I see
2014-11-26 04:21:51	markand	that's why it works for me
2014-11-26 04:21:55	Adrinael	markand, try making call() a C function instead: Put it in a .c file
2014-11-26 04:22:09	markand	Adrinael, I've just tried it with gcc 4.9
2014-11-26 04:22:11	markand	it worked
2014-11-26 04:22:19	markand	(MinGW)
2014-11-26 04:22:25	Adrinael	And don't compile the .c file with g++, use gcc
2014-11-26 04:22:50	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 04:23:10	-->	maroloccio (~marolocci@213.95.133.22) has joined ##c++
2014-11-26 04:23:19	Adrinael	It might work on Windows. It's UB.
2014-11-26 04:23:34	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 04:23:50	lh_mouse	Personally I agree with Adrinael.
2014-11-26 04:23:55	markand	Adrinael, okay, anyway the C library will be compiled in C++
2014-11-26 04:24:06	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-26 04:24:10	markand	so I just wanted to be sure that even wrapper under extern "C" if compiled in C++ it will work
2014-11-26 04:24:12	lh_mouse	Let a C++ exception propaganda through C function should be forbidden.
2014-11-26 04:24:21	Adrinael	ITYM propagate
2014-11-26 04:24:24	Gvidon	rendar: That's a good question. The simplest solution, I think, is to put all your global objects into one TU in the right order
2014-11-26 04:24:30	lh_mouse	propagate*
2014-11-26 04:24:38	lh_mouse	Yea. Wrong word.
2014-11-26 04:25:16	Gvidon	"C++ exception propaganda". I like that
2014-11-26 04:26:14	lh_mouse	Even C++ exceptions are allowed to propagate, those C code might still be unaware of exceptions and interruption of control flows. So it is dangerous.
2014-11-26 04:26:17	markand	so it's fine to throw from extern "C" only if the whole code is compiled in C++, nice
2014-11-26 04:26:32	lh_mouse	markand, then why extern "C" ??
2014-11-26 04:27:01	markand	because it's a C library
2014-11-26 04:27:04	markand	(duktape)
2014-11-26 04:27:14	lh_mouse	Then don't use exceptions.
2014-11-26 04:27:15	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-26 04:27:17	markand	which is using sjlj to "mimic" exception to the javascript engine
2014-11-26 04:27:22	Gvidon	Then it's certainly *NOT* ok to throw exceptions
2014-11-26 04:27:30	markand	and we're currently trying to use C++ exception if the library is compiled in C++
2014-11-26 04:27:32	lh_mouse	As an alternative, compile C code with -fexceptions.
2014-11-26 04:27:36	markand	because SJLJ breaks RAII
2014-11-26 04:28:43	lh_mouse	GNU documentations say that all GNU C libraries are compiled with -fexceptions, which enables C++ exceptions to propagate through C functions e.g. std::qsort().
2014-11-26 04:29:05	lh_mouse	But I don't think they should.
2014-11-26 04:29:46	Adrinael	That's useful and allowed
2014-11-26 04:29:55	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:9100:db3a:6ba0:f08a) has quit (Read error: Connection reset by peer)
2014-11-26 04:30:04	Adrinael	As long as you don't expect code that relies on that to be portable
2014-11-26 04:30:10	lh_mouse	No qsort is useless in C++.
2014-11-26 04:30:25	Adrinael	No, I mean GNU C libraries being -fexceptions, in general
2014-11-26 04:30:37	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 258 seconds)
2014-11-26 04:30:45	lh_mouse	Oh ok.
2014-11-26 04:30:58	-->	snyp (~Snyp@150.129.132.113) has joined ##c++
2014-11-26 04:31:03	V-ille	qsort is useless in C++? [citation needed]
2014-11-26 04:31:04	<--	raj___ (~xar@14.140.166.2) has quit (Read error: Connection reset by peer)
2014-11-26 04:31:16	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 04:31:24	lh_mouse	We have std::sort now, why std::qsort?
2014-11-26 04:31:24	snyp	What editor/ide do you use to code C++?
2014-11-26 04:31:30	Adrinael	Emacs
2014-11-26 04:31:33	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-26 04:31:40	Gvidon	vim, naturally
2014-11-26 04:31:49	snyp	Adrinael: Is there semantic autocomplete support?
2014-11-26 04:31:55	Adrinael	bash: naturally: command not found
2014-11-26 04:31:57	-->	TheAncientGoat (~quassel@175.136.59.214) has joined ##c++
2014-11-26 04:32:00	snyp	YouCompleteMe just DOES NOT WORK FOR ME.
2014-11-26 04:32:37	M-ou-se	!news
2014-11-26 04:32:38	-->	mr_digital (~kvirc@182.72.141.246) has joined ##c++
2014-11-26 04:32:38	nolyc	I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-26 04:32:41	-->	komarov (~komarov@46.227.191.8) has joined ##c++
2014-11-26 04:32:57	rendar	Gvidon: or, in a header with that inline function method, right?
2014-11-26 04:33:04	snyp	which channel is for C++ tools?
2014-11-26 04:33:07	lh_mouse	Letting exceptions propagate through C code is neither portable nor realiable. So please don't do that.
2014-11-26 04:33:09	M-ou-se	!general
2014-11-26 04:33:10	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-26 04:33:15	snyp	ok
2014-11-26 04:33:25	mr_digital	can someone help me as to why this does not compile? http://pastebin.com/4ptsQZQe
2014-11-26 04:33:28	Adrinael	snyp, the basic fuzzy completion is not semantic but does what I need (M-/). There's that one thingie that provides semantic completion if your project is using Make without speshul magicks. Continue on ##c++-general.
2014-11-26 04:34:04	M-ou-se	mr_digital: "return(0);" ? return is not a function. just write "return 0;"
2014-11-26 04:34:06	Adrinael	geordi --precedence *iter -> t_var
2014-11-26 04:34:06	geordi	*(iter -> t_var)
2014-11-26 04:34:10	Adrinael	mr_digital, ^
2014-11-26 04:34:17	Adrinael	geordi --precedence (*iter) -> t_var
2014-11-26 04:34:17	geordi	(*iter) -> t_var
2014-11-26 04:34:30	Gvidon	rendar: No, just make them usual global objects and put them all in one .cpp file in the right order. There are other possible solutions, but this is the simplest one, I think
2014-11-26 04:34:41	Adrinael	Also wtf vector<int*> suddenly
2014-11-26 04:34:55	Adrinael	Your vector is vector<test*>
2014-11-26 04:34:58	M-ou-se	mr_digital: also, it helps to use ideone.com instead of pastebin.com, because that directly compiles your code and shows us the warnings/errors/output
2014-11-26 04:35:01	mr_digital	return (0) should not be a problem
2014-11-26 04:35:10	M-ou-se	it is not a problem, no
2014-11-26 04:35:23	M-ou-se	but it is very weird.
2014-11-26 04:35:49	rendar	Gvidon: hmmm, there are also other solutions? i can't see any
2014-11-26 04:35:49	mr_digital	thanks ADRINAEL
2014-11-26 04:36:04	<--	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-26 04:36:33	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 04:36:35	<--	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-26 04:36:47	mr_digital	it still does not compile
2014-11-26 04:37:24	tesuji	mr_digital: idone
2014-11-26 04:37:25	M-ou-se	mr_digital: post it to ideone.com
2014-11-26 04:37:26	mr_digital	i am getting error: error: request for member 't_var' in '* iter.__gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-> [with _Iterator = test**, _Container = std::vector<test*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = test**]()', which is of non-class type 'test*'
2014-11-26 04:37:27	Adrinael	!doesnotwork
2014-11-26 04:37:28	nolyc	Does not work isn't very helpful. What doesn't work? Do you have an error? You need to provide more detailed information. We are not telepathic, you know. Try saying !testcase.
2014-11-26 04:37:57	mr_digital	error: request for member 't_var' in '* iter.__gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-> [with _Iterator = test**, _Container = std::vector<test*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = test**]()', which is of non-class type 'test*'
2014-11-26 04:38:01	Adrinael	You say "still". That implies you made changes. Which changes? ideone.com already!
2014-11-26 04:38:16	mr_digital	the change was int* to test*
2014-11-26 04:38:18	M-ou-se	mr_digital: don't paste errors here in the channel.
2014-11-26 04:38:25	Adrinael	mr_digital, what about the other change?
2014-11-26 04:38:28	mr_digital	sorry for pasting error
2014-11-26 04:38:28	M-ou-se	use ideone.com
2014-11-26 04:38:38	mr_digital	no other change
2014-11-26 04:38:50	-->	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has joined ##c++
2014-11-26 04:38:53	Adrinael	Change *iter -> t_var to (*iter) -> t _var
2014-11-26 04:39:01	mr_digital	ok i am going to upload i to ideone.com
2014-11-26 04:39:30	<--	snyp (~Snyp@150.129.132.113) has quit (Quit: WeeChat 1.0.1)
2014-11-26 04:39:47	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-26 04:39:47	mr_digital	thanks again ADRINAEL
2014-11-26 04:39:54	mr_digital	it compiles now
2014-11-26 04:40:03	tesuji	!compiles
2014-11-26 04:40:04	nolyc	It compiles?! SHIP IT!!
2014-11-26 04:40:11	mr_digital	can you explain?
2014-11-26 04:40:16	mr_digital	lol @ nolyc
2014-11-26 04:40:28	-->	qwertzu12 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has joined ##c++
2014-11-26 04:41:07	mr_digital	Adrinael:  can you explain?
2014-11-26 04:41:28	mr_digital	Adrinael:  is it a cast issue?
2014-11-26 04:41:38	<--	komarov (~komarov@46.227.191.8) has quit (Ping timeout: 256 seconds)
2014-11-26 04:41:45	tesuji	mr_digital: he showed you the answer earlier. search for "--precedence"
2014-11-26 04:42:11	-->	komarov (~komarov@46.227.191.2) has joined ##c++
2014-11-26 04:42:15	mr_digital	tesuji: will do, thanks
2014-11-26 04:42:39	-->	raj____ (~xar@14.140.166.2) has joined ##c++
2014-11-26 04:42:40	mr_digital	Adrinael:  thanks again
2014-11-26 04:42:54	<--	boris`` (~boris@unaffiliated/boris/x-0919186) has quit (Ping timeout: 244 seconds)
2014-11-26 04:43:09	<--	raj___ (~xar@14.140.166.2) has quit (Read error: Connection reset by peer)
2014-11-26 04:43:42	-->	boris`` (~boris@unaffiliated/boris/x-0919186) has joined ##c++
2014-11-26 04:43:57	<--	raj____ (~xar@14.140.166.2) has quit (Read error: Connection reset by peer)
2014-11-26 04:44:12	blut	I am about to create a circular reference with a weak_ptr and a shared_ptr. How can i give a weak_ptr to 'this' to a constructor?
2014-11-26 04:44:27	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 04:44:30	blut	Or plainly: How do I create a weak_ptr from 'this'?
2014-11-26 04:44:33	Adrinael	blut, shared_from_this, std::enable_shared_from_this
2014-11-26 04:44:33	<--	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has quit (Read error: No route to host)
2014-11-26 04:44:44	blut	Thank you!
2014-11-26 04:46:51	-->	guidol_ (~guidol@zandbak.cwi.nl) has joined ##c++
2014-11-26 04:46:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 04:47:20	<--	guidol (~guidol@g147088.upc-g.chello.nl) has quit (Ping timeout: 264 seconds)
2014-11-26 04:47:30	<--	mr_digital (~kvirc@182.72.141.246) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 04:48:23	-->	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has joined ##c++
2014-11-26 04:49:13	<--	maroloccio (~marolocci@213.95.133.22) has quit (Quit: WeeChat 1.0)
2014-11-26 04:50:08	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 04:50:32	-->	_war10ck_ (~sayantan@106.51.142.158) has joined ##c++
2014-11-26 04:50:54	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 04:50:56	<--	raj___ (~xar@14.140.166.2) has quit (Ping timeout: 264 seconds)
2014-11-26 04:51:03	-->	Kulrak (kulrak@C-59-101-147-5.mel.connect.net.au) has joined ##c++
2014-11-26 04:51:04	-->	Dreadnaught (kulrak@c-59-101-147-5.mel.connect.net.au) has joined ##c++
2014-11-26 04:51:04	<--	Kulrak (kulrak@C-59-101-147-5.mel.connect.net.au) has quit (Changing host)
2014-11-26 04:51:04	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-26 04:51:04	<--	Dreadnaught (kulrak@c-59-101-147-5.mel.connect.net.au) has quit (Changing host)
2014-11-26 04:51:04	-->	Dreadnaught (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-26 04:51:21	<--	Dreadnaught (kulrak@tlug/member/kulrak) has quit (Client Quit)
2014-11-26 04:52:48	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-11-26 04:54:04	<--	komarov (~komarov@46.227.191.2) has quit (Read error: Connection reset by peer)
2014-11-26 04:54:06	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-11-26 04:55:46	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-26 04:57:41	-->	maroloccio (~marolocci@213.95.133.22) has joined ##c++
2014-11-26 04:57:55	<--	maroloccio (~marolocci@213.95.133.22) has quit (Client Quit)
2014-11-26 04:58:31	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 05:00:47	-->	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has joined ##c++
2014-11-26 05:00:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 05:00:50	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 05:03:02	-->	maroloccio (~marolocci@213.95.133.22) has joined ##c++
2014-11-26 05:04:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 05:04:25	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 05:05:35	<--	ducklobster (~ducklobst@75.127.3.149) has quit (Ping timeout: 240 seconds)
2014-11-26 05:05:53	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-26 05:06:31	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-11-26 05:07:01	-->	fmardini (~fmardini@pptp-212-201-74-98.pptp.stw-bonn.de) has joined ##c++
2014-11-26 05:07:08	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Ping timeout: 244 seconds)
2014-11-26 05:08:51	<--	elsewho_ (~elsewho@139.20.16.239) has quit (Quit: Leaving)
2014-11-26 05:08:51	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2014-11-26 05:09:13	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-26 05:09:15	-->	elsewho (~elsewho@139.20.16.239) has joined ##c++
2014-11-26 05:09:26	elsewho	hello, when using a duration_cast<seconds>(...).count() i only get integer values. how can i convert into a floating point?
2014-11-26 05:10:05	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 264 seconds)
2014-11-26 05:12:32	Adrinael	seconds is an integer type
2014-11-26 05:12:46	<--	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-11-26 05:13:34	<--	aggn (~irc@2001:4ca0:0:f221:9ff:e29b:86d1:fca2) has quit (Ping timeout: 265 seconds)
2014-11-26 05:13:41	Adrinael	Do duration_cast<duration<float>>(...).count() instead
2014-11-26 05:13:42	-->	aggn (~irc@host172-2.natpool.mwn.de) has joined ##c++
2014-11-26 05:14:20	TinoDidriksen	Or just use nanoseconds and work with that.
2014-11-26 05:14:43	<--	raj___ (~xar@14.140.166.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 05:15:16	Adrinael	Aye
2014-11-26 05:15:55	Adrinael	Actually duration<float> is silly, duration<float, ratio<1>> is what you want for seconds-as-float
2014-11-26 05:16:00	RokerHRO	or just use Planck time, there are no fractions. :-D
2014-11-26 05:16:15	-->	koderok (~koderok@14.141.153.182) has joined ##c++
2014-11-26 05:16:30	Adrinael	Boat, floating, etc
2014-11-26 05:16:57	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 05:17:00	RokerHRO	boats don't have a floating point.
2014-11-26 05:17:18	Adrinael	Yeah, it's more of a volume
2014-11-26 05:17:24	<--	koderok (~koderok@14.141.153.182) has quit (Client Quit)
2014-11-26 05:19:15	-->	sinanislekdemir (~sinanisle@212.57.9.204) has joined ##c++
2014-11-26 05:21:14	elsewho	thank you very much!
2014-11-26 05:22:06	Adrinael	Now that I have a brain, duration<float> is the same as duration<float, ratio<1>>
2014-11-26 05:23:12	elsewho	when using float as type then the seconds will they have a fraction? or will it always be natural numbers?
2014-11-26 05:23:23	elsewho	... just converted to float.
2014-11-26 05:23:51	Adrinael	Depends what you're casting from
2014-11-26 05:25:12	<--	reiser_ (~reiser@110.77.250.64) has left ##c++
2014-11-26 05:25:14	TinoDidriksen	(also, use double instead of float)
2014-11-26 05:25:36	-->	ragesam (~ragesam@a0362.ipv6.tum.vpn.lrz.de) has joined ##c++
2014-11-26 05:26:28	<--	ragesam (~ragesam@a0362.ipv6.tum.vpn.lrz.de) has quit (Client Quit)
2014-11-26 05:27:53	elsewho	thx! it works. but i think i will use the next smaller unit as suggested. because it seems to be a better approach, so i dont have to fix the predefined typedefs ...
2014-11-26 05:27:56	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-26 05:28:04	-->	zwer_p (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-26 05:28:38	<--	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has quit (Read error: Connection reset by peer)
2014-11-26 05:30:52	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-26 05:30:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 05:32:14	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Ping timeout: 264 seconds)
2014-11-26 05:32:33	-->	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has joined ##c++
2014-11-26 05:33:03	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-26 05:33:38	<--	fOrceez (~f0rceez@122-148-225-232.static.dsl.dodo.com.au) has quit (Ping timeout: 272 seconds)
2014-11-26 05:34:01	<--	proteusguy (~proteusgu@180.183.139.197) has quit (Remote host closed the connection)
2014-11-26 05:34:14	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 05:35:31	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2014-11-26 05:36:01	<--	mf_ (~mf_@188.113.126.36) has quit (Ping timeout: 258 seconds)
2014-11-26 05:36:09	<--	drale2k (~drale2k@178.115.128.211.wireless.dyn.drei.com) has quit (Read error: Connection reset by peer)
2014-11-26 05:36:43	<--	endomancer (~endomance@2001:8003:2e3b:e301:148:71f0:7949:9ab6) has quit (Quit: endomancer)
2014-11-26 05:38:37	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-26 05:39:07	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-26 05:39:31	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (Quit: Leaving)
2014-11-26 05:41:55	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-26 05:42:15	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-26 05:42:22	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2014-11-26 05:42:31	<--	SubCreative (~SubCreati@unaffiliated/cannacoin) has quit (Ping timeout: 258 seconds)
2014-11-26 05:42:51	-->	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has joined ##c++
2014-11-26 05:42:51	<--	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has quit (Changing host)
2014-11-26 05:42:51	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-26 05:43:41	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-26 05:44:04	-->	endomancer (~endomance@2001:8003:2e3b:e301:98b7:bd3a:f4a0:ee59) has joined ##c++
2014-11-26 05:44:34	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-26 05:44:51	-->	komarov (~komarov@46.227.191.35) has joined ##c++
2014-11-26 05:44:55	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-26 05:45:14	<--	fmardini (~fmardini@pptp-212-201-74-98.pptp.stw-bonn.de) has quit (Ping timeout: 245 seconds)
2014-11-26 05:46:17	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2014-11-26 05:46:51	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-26 05:47:14	-->	s00pcan (~chris@108.208.65.111) has joined ##c++
2014-11-26 05:47:20	<--	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-26 05:48:03	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-26 05:48:20	jophish	Yo yo yo
2014-11-26 05:48:38	jophish	Why doesn't std::allocater<void> have a construct method?
2014-11-26 05:48:52	<--	tango_ (~tex_vim@151.54.80.77) has left ##c++
2014-11-26 05:49:02	-->	wroos (~wroos@h-79-52.a259.priv.bahnhof.se) has joined ##c++
2014-11-26 05:49:05	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:49:16	-->	tarruda (~tarruda@200.17.134.134) has joined ##c++
2014-11-26 05:49:45	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:50:16	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:50:28	jophish	As far as I can tell, construct doesn't depend on the type of the allocator at all
2014-11-26 05:50:35	jophish	err, one version of it anywya
2014-11-26 05:50:48	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:51:16	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:51:40	-->	aggn_ (~irc@a0253.ipv6.tum.vpn.lrz.de) has joined ##c++
2014-11-26 05:51:48	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:51:58	<--	aggn (~irc@host172-2.natpool.mwn.de) has quit (Ping timeout: 244 seconds)
2014-11-26 05:52:16	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:52:35	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:53:07	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-26 05:53:16	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:53:17	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-26 05:53:48	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:54:25	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:54:56	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:55:06	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit
2014-11-26 05:55:27	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:55:52	<--	SiGe___ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 05:56:01	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:56:35	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:56:43	-->	Justinas (~Justinas@79.142.116.54) has joined ##c++
2014-11-26 05:56:46	Justinas	Morning.
2014-11-26 05:57:02	-->	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has joined ##c++
2014-11-26 05:57:17	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Max SendQ exceeded)
2014-11-26 05:57:34	-->	V-ille (~ville@59ec6584.symbio.com) has joined ##c++
2014-11-26 05:57:43	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-26 05:57:46	Justinas	Morning, V-ille.
2014-11-26 05:57:54	Ploppz	"The address of the instruction beyond the function call is pushed onto the stack." Not sure what they mean with "beyond" here - Is it the instruction that should be run after the function returns?
2014-11-26 05:57:56	<--	komarov (~komarov@46.227.191.35) has quit (Read error: Connection reset by peer)
2014-11-26 05:58:19	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-26 05:58:21	Justinas	Yes.
2014-11-26 05:58:34	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 264 seconds)
2014-11-26 05:58:41	-->	komarov (~komarov@46.227.191.106) has joined ##c++
2014-11-26 05:58:42	V-ille	sounds implementation-specific
2014-11-26 05:59:24	Justinas	Moreover, we know at least two major call conventions -- c and pascal for i386.
2014-11-26 05:59:34	<--	Guest21458 (~Olipro@95.147.72.207) has quit (Ping timeout: 264 seconds)
2014-11-26 06:00:00	Justinas	They differ in how stack is organized before and after the function call.
2014-11-26 06:00:07	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 06:01:14	Justinas	I have a more philosophical problem (the more I live, the more I notice that the hardest part in programming are meaningful names :-D).
2014-11-26 06:01:31	Justinas	How would you call a result of some measurement that gives you a lot of data points?
2014-11-26 06:01:51	V-ille	I would call it "off-topic"
2014-11-26 06:02:00	Justinas	*rolls eyes*
2014-11-26 06:02:41	<--	rriemann (~rriemann@192.33.216.80) has quit (Ping timeout: 245 seconds)
2014-11-26 06:04:56	<--	guidol_ (~guidol@zandbak.cwi.nl) has quit (Ping timeout: 240 seconds)
2014-11-26 06:04:57	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 06:05:39	<--	aggn_ (~irc@a0253.ipv6.tum.vpn.lrz.de) has quit (Ping timeout: 265 seconds)
2014-11-26 06:06:05	introom	hi
2014-11-26 06:06:09	introom	when won't ADL happen?
2014-11-26 06:06:26	V-ille	for example, when your call expression is (foo)(args);
2014-11-26 06:06:36	introom	seems like ADL happens all the time.
2014-11-26 06:07:29	<--	simius (~simius@h-88-117.a230.priv.bahnhof.se) has quit (Ping timeout: 250 seconds)
2014-11-26 06:07:36	<--	raj___ (~xar@14.140.166.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 06:08:07	V-ille	for the case I mentioned, it doesn't
2014-11-26 06:08:15	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 06:08:39	introom	V-ille: would you be a bit more in detail?
2014-11-26 06:08:43	V-ille	also, member call expressions do no ADL
2014-11-26 06:08:55	Ploppz	Is the stack per computer system or per program?
2014-11-26 06:09:02	V-ille	introom: the parens around the foo make it an rvalue, and that turns off ADL
2014-11-26 06:09:09	ville	Ploppz: c++ wouldn't know.
2014-11-26 06:09:26	introom	V-ille: aha. I didn't notice it.
2014-11-26 06:10:32	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 244 seconds)
2014-11-26 06:11:15	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2014-11-26 06:11:49	introom	V-ille: to confirm, for the member call, ADL will happen if corresponding methods isn't found in the class namespace and the enclosing namespace of the class.
2014-11-26 06:11:50	introom	right/
2014-11-26 06:11:52	introom	?
2014-11-26 06:12:16	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-26 06:12:18	jophish	In fact, why is std::allocator typed at all?
2014-11-26 06:12:35	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-26 06:12:36	V-ille	introom: no. Member calls do no ADL.
2014-11-26 06:12:40	ville	think he meant x.f() form not void aa() { f() }
2014-11-26 06:12:45	V-ille	correct
2014-11-26 06:12:58	ville	err void aa::g() { f() } where f() may be member function
2014-11-26 06:13:07	<--	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has quit (Ping timeout: 258 seconds)
2014-11-26 06:13:07	ville	also insert arguments so that adl would be relevant
2014-11-26 06:13:53	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-26 06:13:54	-->	Haswell (~Haswell@131.83-213-122.dynamic.clientes.euskaltel.es) has joined ##c++
2014-11-26 06:14:01	<--	Haswell (~Haswell@131.83-213-122.dynamic.clientes.euskaltel.es) has quit (Changing host)
2014-11-26 06:14:01	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-26 06:16:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 06:17:50	-->	Leff (~this@unaffiliated/leff) has joined ##c++
2014-11-26 06:18:42	introom	any related topics for me to search regarding (func) makes func an rvalue and thus ADL is avoided?
2014-11-26 06:19:57	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 06:20:27	<--	Burga (~andrewm@124-150-99-226.dyn.iinet.net.au) has quit (Ping timeout: 250 seconds)
2014-11-26 06:20:28	ville	introom: it isn't necessarily a function.
2014-11-26 06:20:55	ville	operator () overloading lets you use () to non-functions
2014-11-26 06:21:59	V-ille	sure, but operator() is a member operator, if overloaded. Constructing-expressions don't count ;)
2014-11-26 06:22:42	V-ille	introom: you could read [basic.lookup.argdep]
2014-11-26 06:23:19	ville	there always seems to be a rule that one fails to consider when looking at piece of c++ code in isolation
2014-11-26 06:23:43	introom	what's basic.lookup.argdep?
2014-11-26 06:23:46	ville	just how little you can tell about the symbols appearing in it.
2014-11-26 06:23:48	V-ille	introom: it's actually right there in the very beginning. "When the postfix-expression in a function call (5.2.2) is an unqualified-id..."
2014-11-26 06:23:49	ville	introom: the standard
2014-11-26 06:24:15	V-ille	so, when the postfix-expression is not an unqualified-id, ADL doesn't happen
2014-11-26 06:24:42	V-ille	introom: so, from this we realize, of course, that qualified calls like std::swap(...) don't do ADL either.
2014-11-26 06:24:57	V-ille	!draft
2014-11-26 06:24:59	nolyc	http://isocpp.org/files/papers/N3797.pdf or http://github.com/cplusplus/draft or see http://isocpp.org/ sidebar for latest version
2014-11-26 06:26:01	V-ille	..I think we want to wait for the post-meeting mailing for a more up to date draft.
2014-11-26 06:26:35	introom	V-ille: this arouses my interest. so is there some mailing list?
2014-11-26 06:27:37	V-ille	mailing list? There are public forums that isocpp.org mentions. The committee mailing lists are not open to public, and will not be.
2014-11-26 06:27:45	<--	Malsasa (~Malsasa@36.81.105.251) has quit (Remote host closed the connection)
2014-11-26 06:29:10	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-26 06:32:57	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 06:35:07	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 245 seconds)
2014-11-26 06:35:17	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 06:36:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 06:36:10	-->	snyp (~Snyp@150.129.132.113) has joined ##c++
2014-11-26 06:38:06	snyp	void transfer(T&& ob) { print_stuff(); do_stuff(std::move(ob)); }
2014-11-26 06:38:13	snyp	void transfer(T&& ob) { print_stuff(); do_stuff(ob); }
2014-11-26 06:38:26	snyp	why does second one call copy ctor?
2014-11-26 06:38:39	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-26 06:38:49	snyp	assuming ob is an rvalue reference.
2014-11-26 06:39:05	lh_mouse	a named rvalue reference is an lvalue.
2014-11-26 06:39:21	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-26 06:39:26	snyp	I understand that ob itself is an lvalue
2014-11-26 06:40:34	<--	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-26 06:40:41	snyp	void transfer(T& ob) { print_stuff(); do_stuff(std::move(ob)); }
2014-11-26 06:40:43	Adrinael	You actually want do_stuff(std::forward<T>(ob))
2014-11-26 06:40:51	snyp	this will work too right?
2014-11-26 06:41:13	Adrinael	T& ob will not work for rvalues
2014-11-26 06:41:22	snyp	Adrinael: oh yes
2014-11-26 06:41:29	-->	aslant (~aslant@37.157.35.58) has joined ##c++
2014-11-26 06:41:38	Adrinael	T&& ob  and std::forward<T>(ob) will work for lvalues (passed as lvalue) and rvalues (passed as rvalues)
2014-11-26 06:42:45	<--	gundry (~gundry@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:42:50	Adrinael	T&& ob and std::move(ob) will move from ob, even if it was an lvalue
2014-11-26 06:42:54	snyp	Adrinael: yeah, universal reference. i am actually reading modern effective c++. just want to make everything really really clear.
2014-11-26 06:43:11	<--	raj___ (~xar@14.140.166.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 06:43:18	snyp	is reference collapsing in the standard for the sole purpose of forwarding?
2014-11-26 06:43:52	<--	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has left ##c++
2014-11-26 06:44:04	jophish	what is the void specialization of std::allocator useful for?
2014-11-26 06:44:32	-->	l2esonance (~l2esonanc@c-50-136-185-21.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 06:44:39	jophish	It's a shame it doesn't have construct and destroy
2014-11-26 06:44:56	Adrinael	Reference collapsing? Do you mean universal references? Because the two are related but different
2014-11-26 06:45:37	-->	finnley (~finnley@192.210.214.197) has joined ##c++
2014-11-26 06:45:45	Adrinael	void foo(T& x);      foo<int&>(blah); <-- instantiates with T = int&. Forming an int& &. Aka reference-to-reference. That collapses nicely to int& instead of erroring
2014-11-26 06:45:49	snyp	Adrinael: Scott Meyers says universal references are a lie, it is reference collapsing working behind the scene...
2014-11-26 06:45:50	<--	finnley (~finnley@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:46:17	Adrinael	Universal references is just a way of saying "I want T to be a reference type, but I don't care which reference format, both are fine"
2014-11-26 06:46:41	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-26 06:46:59	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 06:47:14	Adrinael	So, void foo(T&& x);  foo<int&>(blah);  instantiates with T = int&, forming int & &&, collapses to int&
2014-11-26 06:47:27	-->	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-26 06:47:50	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-26 06:47:51	snyp	Adrinael: yeah.
2014-11-26 06:48:41	-->	rygalski (~rygalski@192.210.214.197) has joined ##c++
2014-11-26 06:48:45	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-26 06:48:55	<--	rygalski (~rygalski@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:49:02	-->	dacechavez (~dacechave@s83-180-236-192.cust.tele2.se) has joined ##c++
2014-11-26 06:49:20	<--	Brando753 (~Brando753@unaffiliated/brando753) has quit (Ping timeout: 250 seconds)
2014-11-26 06:49:26	snyp	I just don't feel comfortable with just simply 'casting' from lvalue to rvalue, etc. How can a simple cast change the way the compiler allocates the object?
2014-11-26 06:49:56	Adrinael	Then don't use std::move()
2014-11-26 06:50:00	Adrinael	Use std::forward
2014-11-26 06:50:22	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2014-11-26 06:51:20	-->	AlecTaylor (~Alec@unaffiliated/alectaylor) has joined ##c++
2014-11-26 06:51:24	AlecTaylor	hi
2014-11-26 06:51:26	AlecTaylor	Are there generalised REPL servers available? - E.g.: if I sent `print("Hello world")` to a Python one, which wouldn't cause new processes to spawn (unless existing ones are overloaded).
2014-11-26 06:51:39	TinoDidriksen	Ask #python ?
2014-11-26 06:51:44	-->	alsheimer (~alsheimer@192.210.214.197) has joined ##c++
2014-11-26 06:52:04	AlecTaylor	TinoDidriksen: I'm looking for something generalised, e.g.: which can take any of the popular languages and return its response
2014-11-26 06:52:27	TinoDidriksen	That's still off topic here. Maybe #programming ...
2014-11-26 06:52:27	AlecTaylor	If there's nothing, a language like C++ would likely be best to implement it in
2014-11-26 06:52:32	AlecTaylor	Yeah
2014-11-26 06:52:44	AlecTaylor	What was the ot one, ##C++-general ?
2014-11-26 06:52:48	TinoDidriksen	Yeah
2014-11-26 06:53:03	<--	alsheimer (~alsheimer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:53:21	snyp	Adrinael: What about move-only types?
2014-11-26 06:53:34	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-26 06:53:48	snyp	hmm i am beginning to see the picture, you just gotta reach that move constructor somehow.
2014-11-26 06:54:17	snyp	assuming you don't want to use the stolen-from object now onward
2014-11-26 06:54:29	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 06:55:34	-->	clase (~clase@192.210.214.197) has joined ##c++
2014-11-26 06:55:41	<--	AlecTaylor (~Alec@unaffiliated/alectaylor) has left ##c++ ("Leaving")
2014-11-26 06:55:44	snyp	Why only allow moving on rvalues? It's perfectly possible on lvalues too... why convert them to rvalues first?
2014-11-26 06:55:56	<--	clase (~clase@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:56:05	-->	SiGe (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 06:56:16	snyp	yeah that is my main question i guess.
2014-11-26 06:56:18	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-26 06:56:26	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 06:56:41	-->	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has joined ##c++
2014-11-26 06:56:43	-->	AlecTaylor (~Alec@unaffiliated/alectaylor) has joined ##c++
2014-11-26 06:56:52	<--	AlecTaylor (~Alec@unaffiliated/alectaylor) has left ##c++ ("Leaving")
2014-11-26 06:58:14	<--	immibis (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has quit (Ping timeout: 264 seconds)
2014-11-26 06:58:29	-->	fmardini (~fmardini@pptp-212-201-71-32.pptp.stw-bonn.de) has joined ##c++
2014-11-26 06:58:37	-->	ollendick (~ollendick@192.210.214.197) has joined ##c++
2014-11-26 06:59:42	<--	ollendick (~ollendick@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 06:59:56	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-26 07:00:32	<--	SiGe (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Ping timeout: 258 seconds)
2014-11-26 07:01:01	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-26 07:01:16	<--	blut (~blut@ersc147.goemobile.de) has quit (Ping timeout: 256 seconds)
2014-11-26 07:01:17	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 07:01:27	-->	MYNICK_ (~MYNICK@220-137-47-161.dynamic.hinet.net) has joined ##c++
2014-11-26 07:02:27	-->	cazeault (~cazeault@192.210.214.197) has joined ##c++
2014-11-26 07:03:16	<--	cazeault (~cazeault@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:03:48	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-26 07:05:48	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-11-26 07:05:53	-->	dejong (~dejong@192.210.214.197) has joined ##c++
2014-11-26 07:06:17	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-26 07:07:15	lh_mouse	snyp, std::string foo = "foo";  std::string bar(foo); // to move or not to move?
2014-11-26 07:08:26	snyp	not move.
2014-11-26 07:08:44	lh_mouse	[20:11:47] <snyp> Why only allow moving on rvalues? It's perfectly possible on lvalues too... why convert them to rvalues first? // you have the answer now.
2014-11-26 07:09:16	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-26 07:09:17	<--	aslant (~aslant@37.157.35.58) has quit (Read error: Connection reset by peer)
2014-11-26 07:09:29	snyp	i see, rvalues make sense coz they are 'temporary'. so you make the lvalue temporary. am i right?
2014-11-26 07:10:01	-->	aslant_ (~aslant@37.157.35.58) has joined ##c++
2014-11-26 07:10:16	<--	dejong (~dejong@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:12:16	lh_mouse	You make the compiler think it is 'temporary'.
2014-11-26 07:12:38	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2014-11-26 07:13:09	-->	rotondi (~rotondi@192.210.214.197) has joined ##c++
2014-11-26 07:13:12	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2014-11-26 07:13:18	<--	rotondi (~rotondi@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:13:32	snyp	aha
2014-11-26 07:13:35	snyp	i see i see
2014-11-26 07:15:17	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 272 seconds)
2014-11-26 07:15:50	-->	salyer (~salyer@192.210.214.197) has joined ##c++
2014-11-26 07:16:04	<--	salyer (~salyer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:16:10	snyp	thanks lh_mouse and Adrinael. i think i sort of get it now.
2014-11-26 07:16:12	snyp	bbl
2014-11-26 07:16:14	<--	snyp (~Snyp@150.129.132.113) has quit (Quit: WeeChat 1.0.1)
2014-11-26 07:18:17	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 07:18:53	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 258 seconds)
2014-11-26 07:18:53	-->	hui (~hui@192.210.214.197) has joined ##c++
2014-11-26 07:19:17	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 07:21:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 07:21:40	<--	hui (~hui@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:22:07	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-26 07:23:10	<--	raj___ (~xar@14.140.166.2) has quit (Read error: Connection reset by peer)
2014-11-26 07:23:33	-->	raj___ (~xar@14.140.166.2) has joined ##c++
2014-11-26 07:24:14	-->	kinneman (~kinneman@192.210.214.197) has joined ##c++
2014-11-26 07:24:30	<--	kinneman (~kinneman@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:24:45	<--	JSharpe (~JSharpe@31.205.60.241) has quit (Read error: No route to host)
2014-11-26 07:26:40	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (Ping timeout: 272 seconds)
2014-11-26 07:26:54	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 07:27:02	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 250 seconds)
2014-11-26 07:27:18	-->	glashen (~glashen@192.210.214.197) has joined ##c++
2014-11-26 07:27:49	<--	glashen (~glashen@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:28:15	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 07:29:01	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-26 07:30:22	-->	duett (~kester@192.210.214.197) has joined ##c++
2014-11-26 07:30:35	<--	duett (~kester@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:30:45	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 07:31:15	-->	teknozulu (~n3ss3s@35.11.22.108) has joined ##c++
2014-11-26 07:31:30	<--	komarov (~komarov@46.227.191.106) has quit (Ping timeout: 258 seconds)
2014-11-26 07:32:47	<--	raj___ (~xar@14.140.166.2) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-26 07:32:49	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-26 07:33:07	<--	phinxy (tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-26 07:33:25	-->	bellini (~bellini@192.210.214.197) has joined ##c++
2014-11-26 07:33:45	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-26 07:33:50	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-26 07:33:50	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-26 07:33:51	<--	bellini (~bellini@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:34:46	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Quit: Leaving)
2014-11-26 07:36:08	<--	teknozulu (~n3ss3s@35.11.22.108) has quit (Ping timeout: 264 seconds)
2014-11-26 07:36:29	-->	piela (~piela@192.210.214.197) has joined ##c++
2014-11-26 07:36:29	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-26 07:36:39	<--	piela (~piela@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:39:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 07:39:32	-->	depaulis (~depaulis@192.210.214.197) has joined ##c++
2014-11-26 07:40:02	<--	depaulis (~depaulis@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:40:40	-->	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-26 07:41:48	-->	aggn (~irc@2001:4ca0:0:f222:9ff:e29b:86d1:fca2) has joined ##c++
2014-11-26 07:42:31	-->	blut (~blut@ersc147.goemobile.de) has joined ##c++
2014-11-26 07:42:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 07:42:36	-->	weisser (~weisser@192.210.214.197) has joined ##c++
2014-11-26 07:42:45	<--	weisser (~weisser@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:43:22	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Ping timeout: 258 seconds)
2014-11-26 07:43:54	<--	Gvidon (~gvidon@unaffiliated/gvidon) has left ##c++
2014-11-26 07:44:16	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-26 07:44:19	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Fades into the shadows)
2014-11-26 07:44:19	<--	fstd (~fstd@unaffiliated/fisted) has quit (Read error: Connection reset by peer)
2014-11-26 07:44:40	<--	TheAncientGoat (~quassel@175.136.59.214) has quit (Remote host closed the connection)
2014-11-26 07:44:42	--	fstd_ is now known as fstd
2014-11-26 07:44:58	-->	komarov (~komarov@46.227.191.30) has joined ##c++
2014-11-26 07:45:16	-->	bleifus (~bleifus@192.210.214.197) has joined ##c++
2014-11-26 07:45:31	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 07:45:48	<--	bleifus (~bleifus@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:46:19	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-26 07:48:20	-->	fijalkows (~fijalkows@192.210.214.197) has joined ##c++
2014-11-26 07:48:37	<--	fijalkows (~fijalkows@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-26 07:51:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 07:51:13	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 07:51:24	-->	antila (~antila@192.210.214.197) has joined ##c++
2014-11-26 07:51:27	-->	ShaMoon (~liying@113.57.176.173) has joined ##c++
2014-11-26 07:51:42	<--	antila (~antila@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:52:48	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-26 07:52:59	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 07:53:41	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-26 07:54:12	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 07:54:12	-->	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 07:54:27	-->	brightbil (~brightbil@192.210.214.197) has joined ##c++
2014-11-26 07:55:40	<--	brightbil (~brightbil@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:56:11	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-26 07:56:32	-->	Olipro (~Olipro@95.147.72.186) has joined ##c++
2014-11-26 07:56:34	NinjaPenguin	!goodbooks
2014-11-26 07:56:35	nolyc	Good books are !ac++ or !primer or !pppuc++ for starters, and then !tc++pl once you have the basics down, with !josuttis and !langer for standard library references. See !book for further reading. Send these commands to nolyc via private message.
2014-11-26 07:56:51	NinjaPenguin	!primer
2014-11-26 07:56:53	nolyc	_C++ Primer: 5th Edition_ by Lippman, Lajoie, and Moo.  A good beginner book if you want something more traditional than !AC++.  Also covers C++11.  http://www.amazon.com/dp/0321714113/  Not to be confused with the terrible and unrelated _C++ Primer Plus_.
2014-11-26 07:56:57	--	Olipro is now known as Guest63820
2014-11-26 07:58:10	<--	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-26 07:58:17	-->	cobar (~cobar@192.210.214.197) has joined ##c++
2014-11-26 07:58:23	tamaroth	!tc++pl
2014-11-26 07:58:25	nolyc	The C++ Programming Language by Bjarne Stroustrup. If you keep no other book, keep this one. http://www.stroustrup.com/4th.html
2014-11-26 07:58:33	<--	cobar (~cobar@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 07:59:41	-->	Anodl1 (~Anodl@p5B355E59.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 07:59:51	NinjaPenguin	!books
2014-11-26 07:59:52	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-26 08:00:56	-->	Brando753 (~Brando753@unaffiliated/brando753) has joined ##c++
2014-11-26 08:01:20	-->	tomory (~tomory@192.210.214.197) has joined ##c++
2014-11-26 08:01:22	<--	tomory (~tomory@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:04:01	-->	hartsfiel (~hartsfiel@192.210.214.197) has joined ##c++
2014-11-26 08:04:09	<--	hartsfiel (~hartsfiel@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:04:53	<--	linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Read error: Connection reset by peer)
2014-11-26 08:04:55	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-11-26 08:06:27	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-26 08:06:27	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-26 08:06:41	-->	rusinko (~rusinko@192.210.214.197) has joined ##c++
2014-11-26 08:07:01	<--	rusinko (~rusinko@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:07:27	-->	curmet (~curmet@36.85.62.126) has joined ##c++
2014-11-26 08:09:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 08:09:45	-->	cianci (~cianci@192.210.214.197) has joined ##c++
2014-11-26 08:09:52	<--	cianci (~cianci@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:10:08	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-26 08:12:26	-->	boddorf (~boddorf@192.210.214.197) has joined ##c++
2014-11-26 08:12:40	<--	boddorf (~boddorf@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:12:53	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 08:13:20	-->	Imek (~imek@mailgate.team17.com) has joined ##c++
2014-11-26 08:13:37	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-26 08:13:53	marvimias	http://msdn.microsoft.com/en-us/library/windows/desktop/ee416307%28v=vs.85%29.aspx how do I set up the cascaded shadow frustum modelview matrices?
2014-11-26 08:14:05	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 08:15:29	-->	krupinsky (~krupinsky@192.210.214.197) has joined ##c++
2014-11-26 08:15:47	<--	krupinsky (~krupinsky@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:16:40	TinoDidriksen	!give marvimias windows
2014-11-26 08:16:42	nolyc	marvimias: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-26 08:17:03	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-26 08:17:59	<--	curmet (~curmet@36.85.62.126) has quit (Read error: Connection reset by peer)
2014-11-26 08:18:33	-->	billotti (~billotti@192.210.214.197) has joined ##c++
2014-11-26 08:18:57	<--	billotti (~billotti@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:18:57	-->	aslant (~aslant@37.157.35.58) has joined ##c++
2014-11-26 08:19:34	<--	aslant_ (~aslant@37.157.35.58) has quit (Read error: Connection reset by peer)
2014-11-26 08:19:48	<--	luny (~luny@unaffiliated/luny) has quit (Read error: Connection reset by peer)
2014-11-26 08:19:51	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-26 08:20:36	-->	Leftas (~leftas@91.228.84.180) has joined ##c++
2014-11-26 08:21:02	<--	s00pcan (~chris@108.208.65.111) has quit (Ping timeout: 264 seconds)
2014-11-26 08:21:36	-->	sosbee (~sosbee@192.210.214.197) has joined ##c++
2014-11-26 08:21:53	<--	sosbee (~sosbee@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:21:57	<--	moonchild (~loon@73.13.118.191) has quit (Remote host closed the connection)
2014-11-26 08:22:29	<--	themagician (themagicia@91-158-133-33.elisa-laajakaista.fi) has quit (Ping timeout: 244 seconds)
2014-11-26 08:22:48	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-26 08:22:51	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-26 08:23:11	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-26 08:24:40	-->	feucht (~feucht@192.210.214.197) has joined ##c++
2014-11-26 08:25:10	-->	Syzygy (~Syzygy@91-115-171-16.adsl.highway.telekom.at) has joined ##c++
2014-11-26 08:25:10	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-26 08:25:21	<--	Leff (~this@unaffiliated/leff) has quit (Quit: Leff)
2014-11-26 08:25:30	<--	condy (~condy@unaffiliated/condy) has quit (Ping timeout: 256 seconds)
2014-11-26 08:25:39	<--	tarruda (~tarruda@200.17.134.134) has quit (Quit: WeeChat 0.4.2)
2014-11-26 08:26:56	<--	feucht (~feucht@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:27:10	-->	tarruda (~tarruda@200.17.134.134) has joined ##c++
2014-11-26 08:27:21	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-26 08:27:27	-->	CaptainSifff (~CaptainSi@wthp120.physik.uni-wuerzburg.de) has joined ##c++
2014-11-26 08:28:47	-->	64MAA6ZDW (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 08:29:35	<--	Syzygy (~Syzygy@91-115-171-16.adsl.highway.telekom.at) has quit (Read error: Connection reset by peer)
2014-11-26 08:29:38	-->	murwin (~murwin@192.210.214.197) has joined ##c++
2014-11-26 08:30:33	<--	murwin (~murwin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:31:16	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-26 08:31:33	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 08:32:44	<--	ShaMoon (~liying@113.57.176.173) has quit (Remote host closed the connection)
2014-11-26 08:32:48	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 08:33:00	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-26 08:33:05	-->	hasker (~hasker@192.210.214.197) has joined ##c++
2014-11-26 08:33:10	<--	64MAA6ZDW (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-26 08:33:29	<--	hasker (~hasker@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:33:32	ville	x
2014-11-26 08:33:41	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 08:34:05	<--	aslant (~aslant@37.157.35.58) has quit (Remote host closed the connection)
2014-11-26 08:34:05	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 08:34:07	Adrinael	y
2014-11-26 08:34:13	-->	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has joined ##c++
2014-11-26 08:34:40	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 08:34:47	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Read error: Connection reset by peer)
2014-11-26 08:34:50	-->	7YUAAF7QG (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 08:35:06	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 08:36:07	<--	7YUAAF7QG (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 08:36:08	-->	coviello (~coviello@192.210.214.197) has joined ##c++
2014-11-26 08:36:32	<--	LBV_User (~leonardo@177.2.128.75) has quit (Read error: Connection reset by peer)
2014-11-26 08:36:43	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-26 08:36:57	V-ille	z
2014-11-26 08:37:15	<--	Justinas (~Justinas@79.142.116.54) has quit (Quit: leaving)
2014-11-26 08:37:40	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (Ping timeout: 258 seconds)
2014-11-26 08:38:07	BlaXpirit	{
2014-11-26 08:38:10	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 08:38:49	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (Ping timeout: 258 seconds)
2014-11-26 08:38:52	Ploppz	`using namespace Foo;` - can you later in the code say that you're not using that namespace anymore? (want to switch to another one?)
2014-11-26 08:39:04	<--	coviello (~coviello@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:39:07	-->	Syzygy (~Syzygy@91-115-171-16.adsl.highway.telekom.at) has joined ##c++
2014-11-26 08:39:40	tesuji	no
2014-11-26 08:41:08	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-26 08:41:23	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-26 08:41:28	Adrinael	It's not a switch. It pulls in all names from that namespace into the current namespace.
2014-11-26 08:41:52	-->	dewer (~dewer@192.210.214.197) has joined ##c++
2014-11-26 08:42:12	Ploppz	Ok, thanks
2014-11-26 08:42:13	<--	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has quit (Quit: WeeChat 1.0.1)
2014-11-26 08:42:35	ville	its effect obeys scope though
2014-11-26 08:43:01	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-26 08:43:02	<--	avvs (~avvs@gateway/tor-sasl/avvs) has quit (Remote host closed the connection)
2014-11-26 08:43:09	<--	dewer (~dewer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:44:02	<--	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has quit (Quit: foo)
2014-11-26 08:45:14	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit
2014-11-26 08:45:27	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-26 08:45:42	-->	wagganer (~wagganer@192.210.214.197) has joined ##c++
2014-11-26 08:46:05	<--	wagganer (~wagganer@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:46:22	-->	avvs (~avvs@gateway/tor-sasl/avvs) has joined ##c++
2014-11-26 08:46:29	-->	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has joined ##c++
2014-11-26 08:47:50	<--	redjack1964 (~quassel@39.237.151.77.rev.sfr.net) has quit (Remote host closed the connection)
2014-11-26 08:48:39	-->	aslant (~aslant@37.157.35.58) has joined ##c++
2014-11-26 08:48:45	-->	sersen (~sersen@192.210.214.197) has joined ##c++
2014-11-26 08:49:36	-->	prosper_ (~prosper@142.150.23.90) has joined ##c++
2014-11-26 08:49:41	<--	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has quit (Quit:  )
2014-11-26 08:50:04	<--	sersen (~sersen@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:50:20	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-26 08:50:20	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-26 08:50:20	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-26 08:50:56	<--	FriskyKat (SomeWhere@90.213.100.90) has quit (Ping timeout: 256 seconds)
2014-11-26 08:51:40	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-26 08:52:35	<--	termos (sid18647@gateway/web/irccloud.com/x-phszaskipbrsvjpq) has quit (Ping timeout: 258 seconds)
2014-11-26 08:52:55	-->	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has joined ##c++
2014-11-26 08:52:58	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 08:52:58	-->	modero (~modero@192.210.214.197) has joined ##c++
2014-11-26 08:53:16	<--	modero (~modero@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:53:21	<--	batmoz (~quassel@foo.kassala.de) has quit (Ping timeout: 258 seconds)
2014-11-26 08:53:40	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 08:54:02	-->	termos (sid18647@gateway/web/irccloud.com/x-qtgrooggdmxpmyxb) has joined ##c++
2014-11-26 08:54:12	-->	timj (~timj@p5DDB148C.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 08:54:15	<--	Jubb (~Jubb@pool-72-66-106-10.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-26 08:54:36	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-26 08:55:37	<--	fmardini (~fmardini@pptp-212-201-71-32.pptp.stw-bonn.de) has quit (Ping timeout: 245 seconds)
2014-11-26 08:56:01	<--	stfn (~stfn@unaffiliated/stfn) has quit (Ping timeout: 258 seconds)
2014-11-26 08:56:01	-->	christodo (~christodo@192.210.214.197) has joined ##c++
2014-11-26 08:56:13	<--	christodo (~christodo@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:56:32	-->	themagician (themagicia@91-158-133-33.elisa-laajakaista.fi) has joined ##c++
2014-11-26 08:56:33	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Quit: Leaving)
2014-11-26 08:56:57	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Quit: Quitting)
2014-11-26 08:57:36	<--	komarov (~komarov@46.227.191.30) has quit (Read error: Connection reset by peer)
2014-11-26 08:58:14	-->	Gforce (~ev@unaffiliated/gforce) has joined ##c++
2014-11-26 08:58:19	<--	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-mcvuiucklqalmruh) has quit (Ping timeout: 258 seconds)
2014-11-26 08:58:42	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-26 08:58:46	-->	komarov (~komarov@46.227.191.60) has joined ##c++
2014-11-26 08:59:05	-->	scobee (~scobee@192.210.214.197) has joined ##c++
2014-11-26 08:59:25	<--	scobee (~scobee@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 08:59:46	<--	Gforce (~ev@unaffiliated/gforce) has left ##c++
2014-11-26 09:00:07	-->	stfn (~stfn@unaffiliated/stfn) has joined ##c++
2014-11-26 09:00:13	-->	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-nyjfqbeusxmqxjml) has joined ##c++
2014-11-26 09:02:03	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 09:02:08	-->	ladt (~ladt@192.210.214.197) has joined ##c++
2014-11-26 09:02:14	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-26 09:02:30	<--	ladt (~ladt@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:02:34	-->	FriskyKat (SomeWhere@90.208.196.66) has joined ##c++
2014-11-26 09:03:11	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Remote host closed the connection)
2014-11-26 09:03:29	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 09:03:35	-->	phinxy (~tehhhd@212.3.19.229) has joined ##c++
2014-11-26 09:03:37	<--	phinxy (~tehhhd@212.3.19.229) has quit (Changing host)
2014-11-26 09:03:37	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-26 09:03:44	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-26 09:03:48	-->	plamen (user@nat/mslo/x-cytqpicrqxqpoyqf) has joined ##c++
2014-11-26 09:03:49	<--	aslant (~aslant@37.157.35.58) has quit (Remote host closed the connection)
2014-11-26 09:03:56	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Remote host closed the connection)
2014-11-26 09:04:07	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-26 09:04:33	-->	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has joined ##c++
2014-11-26 09:04:44	<--	prosper_ (~prosper@142.150.23.90) has quit (Ping timeout: 250 seconds)
2014-11-26 09:04:44	-->	aslant (~aslant@37.157.35.58) has joined ##c++
2014-11-26 09:04:58	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-26 09:05:01	<--	aggn (~irc@2001:4ca0:0:f222:9ff:e29b:86d1:fca2) has quit (Ping timeout: 265 seconds)
2014-11-26 09:05:12	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Ping timeout: 258 seconds)
2014-11-26 09:05:12	-->	burczyk (~burczyk@192.210.214.197) has joined ##c++
2014-11-26 09:05:17	<--	burczyk (~burczyk@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-26 09:06:42	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-26 09:07:07	<--	yeticry (~yeticry@60.168.89.165) has quit (Ping timeout: 272 seconds)
2014-11-26 09:07:41	-->	yeticry (~yeticry@60.168.89.165) has joined ##c++
2014-11-26 09:07:53	-->	halpern (~halpern@192.210.214.197) has joined ##c++
2014-11-26 09:08:15	<--	halpern (~halpern@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:08:57	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Remote host closed the connection)
2014-11-26 09:09:15	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 09:09:48	<--	jagob (~jacob@h195.natout.aau.dk) has quit (Remote host closed the connection)
2014-11-26 09:09:49	-->	teraliv_ (~chatzilla@192.198.151.44) has joined ##c++
2014-11-26 09:10:12	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Disconnected by services)
2014-11-26 09:10:17	-->	Zcvzyvw_ (~nooblet@101.98.214.38) has joined ##c++
2014-11-26 09:10:21	-->	CobaltHex (~CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has joined ##c++
2014-11-26 09:10:56	-->	knknown (~knknown@192.210.214.197) has joined ##c++
2014-11-26 09:11:03	<--	knknown (~knknown@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:11:13	<--	daNRG (~danny@e181230215.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2014-11-26 09:13:16	<--	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has quit (Quit: Leaving)
2014-11-26 09:13:37	-->	derderian (~derderian@192.210.214.197) has joined ##c++
2014-11-26 09:13:42	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-26 09:13:45	<--	derderian (~derderian@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:15:11	-->	guidol (~guidol@g147088.upc-g.chello.nl) has joined ##c++
2014-11-26 09:15:20	-->	Dumblez0r (~Dumblez0r@93-164-8-6-static.dk.customer.tdc.net) has joined ##c++
2014-11-26 09:16:17	-->	schug (~schug@192.210.214.197) has joined ##c++
2014-11-26 09:16:24	<--	schug (~schug@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-26 09:17:14	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-26 09:17:32	-->	TheAncientGoat (~quassel@175.136.59.214) has joined ##c++
2014-11-26 09:17:54	-->	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has joined ##c++
2014-11-26 09:18:01	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-26 09:18:07	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 09:18:58	<--	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-nyjfqbeusxmqxjml) has quit (Ping timeout: 258 seconds)
2014-11-26 09:18:58	-->	tieszen (~tieszen@192.210.214.197) has joined ##c++
2014-11-26 09:19:38	<--	tieszen (~tieszen@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:20:10	-->	Shr3ddy66 (Shr3ddy66@gateway/shell/elitebnc/x-pbnytuucempyxypc) has joined ##c++
2014-11-26 09:20:13	<--	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has quit (Remote host closed the connection)
2014-11-26 09:21:39	<--	batmoz (~quassel@foo.kassala.de) has quit (Ping timeout: 258 seconds)
2014-11-26 09:21:39	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 09:21:39	<--	HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (Ping timeout: 258 seconds)
2014-11-26 09:21:39	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Read error: Connection reset by peer)
2014-11-26 09:22:16	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 09:22:22	<--	nilsi (~nilsi@183.101.241.130) has quit (Remote host closed the connection)
2014-11-26 09:22:25	-->	ireton (~ireton@192.210.214.197) has joined ##c++
2014-11-26 09:22:37	<--	ireton (~ireton@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:22:45	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-26 09:23:03	-->	hrehf (8d032ab7@gateway/web/freenode/ip.141.3.42.183) has joined ##c++
2014-11-26 09:23:09	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 09:23:14	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-26 09:23:44	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:dcaa:788d:55db:cd8b) has joined ##c++
2014-11-26 09:24:44	-->	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has joined ##c++
2014-11-26 09:25:05	<--	aslant (~aslant@37.157.35.58) has quit (Remote host closed the connection)
2014-11-26 09:25:16	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 265 seconds)
2014-11-26 09:25:22	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:dcaa:788d:55db:cd8b) has quit (Read error: Connection reset by peer)
2014-11-26 09:25:28	-->	roehrenbe (~roehrenbe@192.210.214.197) has joined ##c++
2014-11-26 09:25:44	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:dcaa:788d:55db:cd8b) has joined ##c++
2014-11-26 09:26:04	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-26 09:26:23	<--	roehrenbe (~roehrenbe@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:26:41	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-26 09:28:38	hrehf	what do i need to do so my (almost empty) can use the parent's class move-constructor?
2014-11-26 09:28:49	<--	FabTG_ (~ftg@AAnnecy-651-1-27-167.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2014-11-26 09:28:55	-->	brizeno (~brizeno@192.210.214.197) has joined ##c++
2014-11-26 09:28:58	-->	rshane (~shaneh@pdpc/supporter/student/rshane) has joined ##c++
2014-11-26 09:29:09	hrehf	using base::base; doesn't seem to work, at least i have an instance where it's calling the copy constructor of the base class instead
2014-11-26 09:29:23	<--	SiGe_ (~SiGe@usc-secure-wireless-207-028.usc.edu) has quit (Ping timeout: 256 seconds)
2014-11-26 09:29:25	<--	brizeno (~brizeno@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:30:06	-->	DqrkdeviL (4df2caeb@gateway/web/cgi-irc/kiwiirc.com/ip.77.242.202.235) has joined ##c++
2014-11-26 09:30:10	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-26 09:30:11	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-26 09:31:02	-->	oleo (~oleo@xdsl-78-35-150-144.netcologne.de) has joined ##c++
2014-11-26 09:31:58	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-26 09:31:58	-->	swander (~swander@192.210.214.197) has joined ##c++
2014-11-26 09:32:00	<--	BlaXpirit (~blaxpirit@190-26-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-26 09:32:07	<--	swander (~swander@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:32:21	<--	Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has quit (Ping timeout: 258 seconds)
2014-11-26 09:32:31	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Remote host closed the connection)
2014-11-26 09:32:36	-->	a_le (~a_le@166.170.39.43) has joined ##c++
2014-11-26 09:32:43	-->	fmardini (~fmardini@pptp-212-201-75-199.pptp.stw-bonn.de) has joined ##c++
2014-11-26 09:32:51	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 09:33:26	<--	FabTG (~ftg@142.ip-37-59-108.eu) has quit (Remote host closed the connection)
2014-11-26 09:33:30	<--	Jaxan (~quassel@foo.kassala.de) has quit (Ping timeout: 258 seconds)
2014-11-26 09:33:57	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-26 09:34:14	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-26 09:34:30	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-26 09:34:39	-->	klinner (~klinner@192.210.214.197) has joined ##c++
2014-11-26 09:34:50	<--	DqrkdeviL (4df2caeb@gateway/web/cgi-irc/kiwiirc.com/ip.77.242.202.235) has left ##c++
2014-11-26 09:34:53	-->	FabTG (~ftg@142.ip-37-59-108.eu) has joined ##c++
2014-11-26 09:35:10	-->	Jaxan (~quassel@foo.kassala.de) has joined ##c++
2014-11-26 09:35:24	<--	klinner (~klinner@192.210.214.197) has quit (Remote host closed the connection)
2014-11-26 09:35:37	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2014-11-26 09:36:02	-->	Malsasa (~Malsasa@36.81.105.251) has joined ##c++
2014-11-26 09:37:28	-->	sohail (~user@69-196-187-44.dsl.teksavvy.com) has joined ##c++
2014-11-26 09:37:44	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-26 09:38:21	-->	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has joined ##c++
2014-11-26 09:38:26	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 09:39:24	<--	Dumblez0r (~Dumblez0r@93-164-8-6-static.dk.customer.tdc.net) has quit (Quit: Dumblez0r)
2014-11-26 09:39:57	-->	Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has joined ##c++
2014-11-26 09:40:52	-->	aggn (~irc@a0135.ipv6.tum.vpn.lrz.de) has joined ##c++
2014-11-26 09:42:01	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit
2014-11-26 09:42:18	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Remote host closed the connection)
2014-11-26 09:42:49	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-26 09:43:56	-->	daNRG (~danny@WL-POOL1-ONT-111.UNI-MUENSTER.DE) has joined ##c++
2014-11-26 09:44:12	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-26 09:44:51	-->	s00pcan (~chris@c-98-224-218-28.hsd1.mi.comcast.net) has joined ##c++
2014-11-26 09:45:49	-->	doom1 (~doom@AToulouse-657-1-971-207.w109-223.abo.wanadoo.fr) has joined ##c++
2014-11-26 09:46:41	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 09:47:16	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 09:48:12	-->	BlaXpirit (~blaxpirit@190-26-132-95.pool.ukrtel.net) has joined ##c++
2014-11-26 09:48:33	<--	jcelerier (~doom@AToulouse-657-1-1057-117.w83-193.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2014-11-26 09:48:56	<--	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has quit (Quit: Ex-Chat)
2014-11-26 09:50:43	<--	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-26 09:50:49	V-ille	!give hrehf testcase
2014-11-26 09:50:51	nolyc	hrehf: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-26 09:50:52	<--	fmardini (~fmardini@pptp-212-201-75-199.pptp.stw-bonn.de) has quit (Ping timeout: 256 seconds)
2014-11-26 09:51:08	<--	bumbar_ (~username@unaffiliated/bumbar) has quit (Ping timeout: 240 seconds)
2014-11-26 09:51:19	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-26 09:51:53	-->	Stealthy (5419851e@pdpc/supporter/active/stealthy) has joined ##c++
2014-11-26 09:52:08	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 245 seconds)
2014-11-26 09:52:13	Stealthy	anyone know a #channel for visual studio crap?
2014-11-26 09:52:35	<--	guidol (~guidol@g147088.upc-g.chello.nl) has quit (Read error: Connection reset by peer)
2014-11-26 09:52:41	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2014-11-26 09:52:57	V-ille	!windows
2014-11-26 09:52:59	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-26 09:53:06	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-11-26 09:53:14	-->	guidol (~guidol@g147088.upc-g.chello.nl) has joined ##c++
2014-11-26 09:54:10	Stealthy	ty
2014-11-26 09:54:18	-->	Kopharex (~Kopharex@79.143.119.230) has joined ##c++
2014-11-26 09:54:31	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 255 seconds)
2014-11-26 09:54:47	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 09:55:00	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-11-26 09:55:02	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-26 09:55:35	-->	Goles (~goles@192.241.216.196) has joined ##c++
2014-11-26 09:55:53	<--	Albori (~Albori@64-251-150-248.fidnet.com) has quit (Ping timeout: 240 seconds)
2014-11-26 09:56:04	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Read error: Connection reset by peer)
2014-11-26 09:56:07	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Remote host closed the connection)
2014-11-26 09:56:16	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-26 09:56:37	<--	themagician (themagicia@91-158-133-33.elisa-laajakaista.fi) has quit
2014-11-26 09:56:38	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Read error: Connection reset by peer)
2014-11-26 09:57:39	<--	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2014-11-26 09:57:50	<--	_war10ck_ (~sayantan@106.51.142.158) has quit (Quit: leaving)
2014-11-26 09:58:43	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-26 09:59:15	-->	superboob (~para@213.187.75.26) has joined ##c++
2014-11-26 09:59:40	-->	Gama11 (~quassel@p5DD1EF6E.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 10:00:02	-->	pappa (~pappa@178.165.132.60.wireless.dyn.drei.com) has joined ##c++
2014-11-26 10:00:14	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-26 10:01:05	<--	Stealthy (5419851e@pdpc/supporter/active/stealthy) has quit (Quit: Page closed)
2014-11-26 10:01:29	-->	Aer93 (~Aer93@141.84.69.66) has joined ##c++
2014-11-26 10:01:48	<--	notpara (~para@213.187.75.26) has quit (Ping timeout: 258 seconds)
2014-11-26 10:02:12	Aer93	hi, I have a noob question... I want to have somethin like pure virtual function, but the arguments may change, is that possible?
2014-11-26 10:02:42	Aer93	I want to give an error if I forgot to implement a base method, but I dont want the arguments fixed
2014-11-26 10:02:57	Aer93	I've tryed virtual void methode () = 0
2014-11-26 10:03:09	Aer93	but when I implement methode (int a)
2014-11-26 10:03:19	Aer93	it returns error..., any idea??
2014-11-26 10:03:28	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-26 10:04:03	tamaroth	sure, consider this:
2014-11-26 10:04:20	tamaroth	class A { virtual method() = 0; };
2014-11-26 10:04:48	Aer93	if I dont specify the arguments I should be able to change them?
2014-11-26 10:04:51	Aer93	ahhhh, ok
2014-11-26 10:05:01	tamaroth	class B : public A { using A::method; virtual void method(int x);
2014-11-26 10:05:32	<--	Errorical (~Errorical@213.128.190.150) has quit (Remote host closed the connection)
2014-11-26 10:05:40	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-26 10:06:26	V-ille	the parameters have to be fixed
2014-11-26 10:06:41	tamaroth	yes, they do
2014-11-26 10:06:48	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-26 10:07:15	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 256 seconds)
2014-11-26 10:07:21	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Quit: RIP)
2014-11-26 10:07:41	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-26 10:07:49	V-ille	and then, when all else fails, there's vector<any> :P
2014-11-26 10:07:55	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 10:08:34	<--	sinanislekdemir (~sinanisle@212.57.9.204) has quit (Remote host closed the connection)
2014-11-26 10:08:44	tamaroth	Aer93: http://ideone.com/IqVzBZ check this out
2014-11-26 10:09:06	tamaroth	you have a virtual method without a parameter and you overload it in child class
2014-11-26 10:09:56	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 10:10:26	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-26 10:10:53	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 10:10:58	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 10:12:01	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-26 10:12:13	-->	a_le_ (~a_le@109.sub-70-197-19.myvzw.com) has joined ##c++
2014-11-26 10:12:25	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 240 seconds)
2014-11-26 10:12:34	<--	a_le (~a_le@166.170.39.43) has quit (Read error: Connection reset by peer)
2014-11-26 10:13:04	V-ille	*override
2014-11-26 10:13:11	tamaroth	yeah, sorry
2014-11-26 10:13:13	tamaroth	override
2014-11-26 10:13:15	V-ille	oh, overload, actually :P
2014-11-26 10:13:33	tamaroth	I always mix it up, too dumb to remember it
2014-11-26 10:13:46	V-ille	B remains abstract, in your example
2014-11-26 10:14:02	<--	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has quit (Ping timeout: 258 seconds)
2014-11-26 10:14:03	tamaroth	yeah, got to fix that
2014-11-26 10:14:08	V-ille	and you can't call method with an int argument via A
2014-11-26 10:14:41	V-ille	so I fail to see how this is a solution to the problem presented
2014-11-26 10:15:13	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-26 10:15:44	-->	zguy (~wzinda@mail.bomgar.com) has joined ##c++
2014-11-26 10:16:32	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 10:16:53	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-26 10:20:09	<--	qwertzu12 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has quit (Ping timeout: 258 seconds)
2014-11-26 10:20:35	tamaroth	yeah, it won't work with pure virtual methods ;\
2014-11-26 10:21:02	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-26 10:21:50	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-26 10:21:51	V-ille	it won't work with non-pure virtual functions either
2014-11-26 10:22:12	-->	Syzygy_ (~Syzygy@178-191-161-140.adsl.highway.telekom.at) has joined ##c++
2014-11-26 10:22:30	tamaroth	http://ideone.com/IqVzBZ - it seems it does
2014-11-26 10:22:59	tamaroth	or is there something wrong there with terminology?
2014-11-26 10:23:16	V-ille	you still can't invoke 'method' with an int argument via A
2014-11-26 10:23:28	tamaroth	via A no
2014-11-26 10:23:44	tamaroth	but I don't think he wanted that
2014-11-26 10:24:05	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Remote host closed the connection)
2014-11-26 10:24:18	tamaroth	or perhaps I misunderstood what he wanted
2014-11-26 10:24:18	V-ille	well, the whole A is then completely pointless in your example
2014-11-26 10:24:22	-->	varibull_ (~varibull@ta.tainstruments.com) has joined ##c++
2014-11-26 10:24:30	tamaroth	pretty much, yeah
2014-11-26 10:26:11	<--	Syzygy (~Syzygy@91-115-171-16.adsl.highway.telekom.at) has quit (Ping timeout: 244 seconds)
2014-11-26 10:26:26	<--	Kopharex (~Kopharex@79.143.119.230) has quit (Quit: Leaving)
2014-11-26 10:26:45	<--	aboudreault (~aboudreau@osgeo/member/aboudreault) has quit (Ping timeout: 255 seconds)
2014-11-26 10:27:26	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Quit: SiN_Bizkit)
2014-11-26 10:27:49	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-26 10:28:18	<--	komarov (~komarov@46.227.191.60) has quit (Read error: Connection reset by peer)
2014-11-26 10:29:12	-->	komarov (~komarov@46.227.191.32) has joined ##c++
2014-11-26 10:29:33	<--	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has quit (Quit: new kernel)
2014-11-26 10:29:45	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-26 10:30:51	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Remote host closed the connection)
2014-11-26 10:31:18	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-26 10:31:47	-->	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has joined ##c++
2014-11-26 10:32:40	<--	grayshade (~grayshade@86.122.135.130) has quit (Ping timeout: 255 seconds)
2014-11-26 10:32:42	-->	AGodlyDeciple (~agodlydec@99-116-25-214.lightspeed.cicril.sbcglobal.net) has joined ##c++
2014-11-26 10:33:24	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-26 10:33:34	<--	a_le_ (~a_le@109.sub-70-197-19.myvzw.com) has quit (Ping timeout: 255 seconds)
2014-11-26 10:33:48	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 10:33:51	-->	aboudreault (~aboudreau@osgeo/member/aboudreault) has joined ##c++
2014-11-26 10:35:11	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-26 10:35:32	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-26 10:35:35	-->	mf___ (~mf_@188.113.126.36) has joined ##c++
2014-11-26 10:36:19	<--	MYNICK_ (~MYNICK@220-137-47-161.dynamic.hinet.net) has quit (Remote host closed the connection)
2014-11-26 10:36:24	-->	CHC (~CHC@unaffiliated/chc) has joined ##c++
2014-11-26 10:36:48	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-26 10:37:08	-->	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-11-26 10:37:18	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-26 10:37:39	pEYEd	sprintf or popen is stripping the last two digits of my decimals off. https://bpaste.net/show/5eea34cab27d
2014-11-26 10:37:41	<--	daNRG (~danny@WL-POOL1-ONT-111.UNI-MUENSTER.DE) has quit (Ping timeout: 250 seconds)
2014-11-26 10:38:14	<--	Atque (~Atque@unaffiliated/atque) has quit (Remote host closed the connection)
2014-11-26 10:38:48	-->	luxigo_ (~luxigo@185.31.100.229) has joined ##c++
2014-11-26 10:40:22	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has joined ##c++
2014-11-26 10:40:47	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Remote host closed the connection)
2014-11-26 10:41:16	-->	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has joined ##c++
2014-11-26 10:41:24	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 10:43:54	-->	Unscrupulous (~unscrupt@2607:fb90:2c0c:d632:0:30:5a67:7401) has joined ##c++
2014-11-26 10:44:01	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-26 10:44:20	<--	blut (~blut@ersc147.goemobile.de) has quit (Ping timeout: 240 seconds)
2014-11-26 10:44:43	<--	pappa (~pappa@178.165.132.60.wireless.dyn.drei.com) has quit (Ping timeout: 255 seconds)
2014-11-26 10:44:46	-->	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 10:45:05	-->	grayshade (~grayshade@86.122.135.130) has joined ##c++
2014-11-26 10:45:38	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-26 10:45:41	<--	Unscrup44 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-26 10:45:57	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-japftcdyplmteqiq) has quit (Quit: Connection closed for inactivity)
2014-11-26 10:46:12	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Fades into the shadows)
2014-11-26 10:46:24	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 10:47:12	-->	dumdedum (~dumdedum@85.251.33.187.dyn.user.ono.com) has joined ##c++
2014-11-26 10:47:15	-->	pullphinger (~Pullxinge@12.40.23.68) has joined ##c++
2014-11-26 10:48:19	-->	pappa (~pappa@178.165.132.60.wireless.dyn.drei.com) has joined ##c++
2014-11-26 10:48:26	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-26 10:48:26	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Client Quit)
2014-11-26 10:48:52	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-26 10:49:11	ville	looks like observer_ptr was adopted at last.
2014-11-26 10:49:24	<--	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-26 10:51:58	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 10:52:16	<--	Malsasa (~Malsasa@36.81.105.251) has quit (Remote host closed the connection)
2014-11-26 10:52:22	-->	leeN (~leeN@g228044165.adsl.alicedsl.de) has joined ##c++
2014-11-26 10:52:52	<--	pappa (~pappa@178.165.132.60.wireless.dyn.drei.com) has quit (Ping timeout: 255 seconds)
2014-11-26 10:53:32	-->	Marcus_aurelius (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has joined ##c++
2014-11-26 10:53:40	K-ballo	it was somewhat controversial, it was adopted for a TS but otherwise I don't think it would have made it
2014-11-26 10:54:47	ville	K-ballo: what could possibly be controversial about it?
2014-11-26 10:55:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 10:55:07	ville	i am surprised it took 4 versions to get the paper through
2014-11-26 10:55:09	KrzaQ	is it explicitly non-owning T*?
2014-11-26 10:55:23	ville	KrzaQ: yes it doesn't own.
2014-11-26 10:56:39	K-ballo	V-ille: do we have notes for the straw polls session? where can I find them?
2014-11-26 10:57:37	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-26 10:57:58	KrzaQ	I don't see the controversy here, then. I may know that I alaways use T* to observe only in my code, but it's not so obvious for otherpeople reading it
2014-11-26 10:59:14	<--	maroloccio (~marolocci@213.95.133.22) has quit (Quit: WeeChat 1.0)
2014-11-26 10:59:21	K-ballo	I remember several people saying that it shouldn't be part of the standard library, but were ok putting it in a TS
2014-11-26 10:59:27	ville	...and given the large body of owning T* code it's just confusing with out one.
2014-11-26 10:59:31	-->	safinaskar (~user@188.234.24.9) has joined ##c++
2014-11-26 10:59:45	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 10:59:46	K-ballo	and also someone commented that it should exist, but with the opposite behavior for conversions
2014-11-26 11:00:02	-->	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-26 11:00:06	ville	K-ballo: example of conversions?
2014-11-26 11:00:35	KrzaQ	ville: exactly
2014-11-26 11:00:39	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 11:00:43	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 244 seconds)
2014-11-26 11:00:56	<--	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-26 11:01:05	KrzaQ	I am lucky to work on a project that was started in 2012, already in C++11, so it's not a problem here
2014-11-26 11:01:07	K-ballo	ville: I don't have any more details, that's all I remember from the plenary, wasn't present for the discussion
2014-11-26 11:01:18	<--	lllshamanlll (~lllshaman@146.66.164.249) has quit (Ping timeout: 240 seconds)
2014-11-26 11:01:47	<--	grayshade (~grayshade@86.122.135.130) has quit (Quit: WeeChat 1.1-dev)
2014-11-26 11:01:49	-->	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has joined ##c++
2014-11-26 11:03:05	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-26 11:03:07	ville	ok.
2014-11-26 11:03:43	V-ille	K-ballo: they are on the urbana wiki
2014-11-26 11:04:00	V-ille	oh, the notes. Those are in the minutes, which will appear in the post-meeting mailing.
2014-11-26 11:04:14	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-26 11:05:37	V-ille	Eelis: ok, the literal->char* diagnostic change is in
2014-11-26 11:05:57	V-ille	I didn't get it quite right but the mighty maintainer cleaned it up :P
2014-11-26 11:05:59	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 11:06:09	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-26 11:06:52	V-ille	ville: there was a suggestion that it should automatically convert from/to T*
2014-11-26 11:07:10	<--	Unscrupulous (~unscrupt@2607:fb90:2c0c:d632:0:30:5a67:7401) has quit (Ping timeout: 272 seconds)
2014-11-26 11:07:13	V-ille	the from-part I don't really care about, the to-part is not good
2014-11-26 11:07:23	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-11-26 11:07:29	ville	while i would like that to happen for all smart pointers. i say no if the other smart pointers don't follow suite
2014-11-26 11:07:33	V-ille	of course, people making such comments weren't there when the design was discussed
2014-11-26 11:07:48	V-ille	well, the from-part is wrong for unique_ptr and shared_ptr
2014-11-26 11:08:54	-->	Unscrupulous (~unscrupt@2607:fb90:2c0c:d632:0:30:5a67:7401) has joined ##c++
2014-11-26 11:08:55	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Client Quit)
2014-11-26 11:09:15	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-26 11:09:25	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2014-11-26 11:09:26	--	shintahW2 is now known as shintahW
2014-11-26 11:11:28	<--	TheAncientGoat (~quassel@175.136.59.214) has quit (Remote host closed the connection)
2014-11-26 11:11:49	V-ille	I have fair difficulties understanding what's so controversial about observer_ptr. Sure, its name is daft, but the utility itself is necessary to me.
2014-11-26 11:12:56	<--	komarov (~komarov@46.227.191.32) has quit (Ping timeout: 258 seconds)
2014-11-26 11:13:57	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-26 11:14:07	<--	Unscrupulous (~unscrupt@2607:fb90:2c0c:d632:0:30:5a67:7401) has quit (Ping timeout: 272 seconds)
2014-11-26 11:14:09	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-26 11:15:11	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-26 11:15:19	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-26 11:18:06	-->	daNRG (~danny@g228253017.adsl.alicedsl.de) has joined ##c++
2014-11-26 11:21:20	<--	doev (~doev@p4FE115A2.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-26 11:23:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 11:23:59	-->	scai (~scai@pD9EA640A.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 11:24:22	-->	josh (~josh@66.60.115.195) has joined ##c++
2014-11-26 11:25:11	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 264 seconds)
2014-11-26 11:25:15	<--	leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-11-26 11:25:38	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 255 seconds)
2014-11-26 11:25:58	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-26 11:26:56	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 11:27:30	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-11-26 11:28:30	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-26 11:29:04	-->	Sound (~Sound@unaffiliated/sound) has joined ##c++
2014-11-26 11:29:06	<--	luxigo_ (~luxigo@185.31.100.229) has left ##c++
2014-11-26 11:29:17	-->	SiGe_ (~SiGe@usc-secure-wireless-207-177.usc.edu) has joined ##c++
2014-11-26 11:29:18	Aer93	I'm struggling with this... maybe someone can help me. I'm having this error 'undefined refernece to vtable for ClassA'
2014-11-26 11:29:36	Aer93	I know its because the virtual functions.... but I have all of them implemented
2014-11-26 11:29:53	Aer93	I'm not missing any of them... I don't get whats the problem, any idea?
2014-11-26 11:30:14	lh_mouse	Aer93, is your class defined in a shared library?
2014-11-26 11:30:29	lh_mouse	 the vtable of your class *
2014-11-26 11:31:10	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 11:31:27	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-26 11:32:10	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 244 seconds)
2014-11-26 11:32:15	Aer93	lh_mouse: sorry, but what's a share library? I have my abstract classe defined in a .h, and a child class in a different .h with the implementation of the virtual functions in a .cpp
2014-11-26 11:32:45	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 255 seconds)
2014-11-26 11:33:14	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-26 11:33:18	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 11:33:40	<--	SiGe_ (~SiGe@usc-secure-wireless-207-177.usc.edu) has quit (Ping timeout: 240 seconds)
2014-11-26 11:34:01	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 11:34:10	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 11:34:57	Aer93	any idea?
2014-11-26 11:34:58	-->	parameter (2e6b7760@gateway/web/freenode/ip.46.107.119.96) has joined ##c++
2014-11-26 11:35:04	lh_mouse	Aer93, do you implement some virtual functions of ClassA?
2014-11-26 11:35:29	<--	Marcus_aurelius (~Douglas@rhodes-baldwinwireless-pat.uc.edu) has quit (Ping timeout: 258 seconds)
2014-11-26 11:35:37	Aer93	nop, all are virtual .... = 0
2014-11-26 11:35:44	V-ille	the destructor?
2014-11-26 11:35:53	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-11-26 11:36:04	lh_mouse	Yes in your case you need to virtual the dtor and implement it.
2014-11-26 11:36:21	V-ille	parse error
2014-11-26 11:36:27	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 11:36:38	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-26 11:36:41	lh_mouse	virtual-ize
2014-11-26 11:36:46	V-ille	!give Aer93 testcase
2014-11-26 11:36:47	nolyc	Aer93: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-26 11:36:52	V-ille	this guesswork is hopeless
2014-11-26 11:37:00	Aer93	have a look http://paste.ubuntu.com/9252276/
2014-11-26 11:37:09	Aer93	ups, didnt read
2014-11-26 11:37:24	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-26 11:37:32	lh_mouse	Never define a virtual dtor inside its class scope.
2014-11-26 11:37:34	-->	seishun (~Kakera@87.110.113.80) has joined ##c++
2014-11-26 11:37:40	Aer93	I put you the code there of the abstract calss
2014-11-26 11:37:45	Aer93	virtual dtor?
2014-11-26 11:38:07	-->	teknozulu (~n3ss3s@35.11.22.108) has joined ##c++
2014-11-26 11:38:26	V-ille	"never define a virtual destructor in its class scope"? why?
2014-11-26 11:38:40	Aer93	this is the class child http://paste.ubuntu.com/9252287/
2014-11-26 11:38:45	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-26 11:39:42	Aer93	where should if I erase the destructur it doesn't work either
2014-11-26 11:39:48	-->	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-11-26 11:39:50	-->	SiGe (~SiGe@usc-secure-wireless-207-177.usc.edu) has joined ##c++
2014-11-26 11:40:50	lh_mouse	V-ille, I used to encounter a strange problem: I defined a base class in a shared library, then defined another class that was publicly derived from that base class. But when I tried to dynamic_cast a pointer to base to a pointer to derived, I got a null pointer.
2014-11-26 11:41:09	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-26 11:41:52	-->	grok0 (~o~o@unaffiliated/o-/x-1234567) has joined ##c++
2014-11-26 11:42:24	-->	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-11-26 11:42:53	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ywfjaojmnegvuzri) has joined ##c++
2014-11-26 11:42:55	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-26 11:43:47	BZEU	How should I setup the class structures?
2014-11-26 11:43:57	Aer93	any idea about how could I fix this ?
2014-11-26 11:44:03	lh_mouse	It turned out to be that, I didn't define the (implicitly virtual) dtor of `derived`, so the compiler generated an implicit one which was inline. When that file was #include'd (in the source of the latter shared library) the compiler generated RTTI info for `derived` which was completely different from that of `base` that was defined in the former shared library.
2014-11-26 11:44:09	BZEU	I mean when to use "abstract" classes, what functions should be in each class etc. The class structure.
2014-11-26 11:44:11	BZEU	of something.
2014-11-26 11:44:48	lh_mouse	Explicitly defining an out-of-line dtor solved the problem.
2014-11-26 11:45:35	V-ille	lh_mouse: that's great, but it doesn't constitute a "never"-rule.
2014-11-26 11:46:07	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Changing host)
2014-11-26 11:46:07	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-26 11:46:07	V-ille	Aer93: we would really need a testcase. We can't see what you're doing and what errors you're getting, so you're quite beyond help.
2014-11-26 11:46:12	<--	Zcvzyvw_ (~nooblet@101.98.214.38) has quit (Quit: ...)
2014-11-26 11:46:28	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-26 11:46:52	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 11:47:14	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-26 11:47:44	lh_mouse	V-ille, anyway I think Aer93 should really try defining an out-of-line destructor.
2014-11-26 11:48:00	Aer93	ok, I'll build a testcase
2014-11-26 11:48:13	Aer93	I'll try first the out-of-line destructor
2014-11-26 11:49:18	<--	HerzogDeXtEr1 (~flex@i59F6CB30.versanet.de) has quit (Quit: Leaving.)
2014-11-26 11:49:27	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 11:50:18	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-26 11:50:20	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-26 11:50:50	Aer93	I'm looking in google and I don't find it.... he he, what's an out-of-line destructor?
2014-11-26 11:52:01	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-26 11:52:26	V-ille	a destructor defined outside the class definition
2014-11-26 11:52:40	ville	and not declared explicitly inline
2014-11-26 11:52:56	V-ille	class braindamage {~braindamage();}; braindamage::~braindamage() {}
2014-11-26 11:53:16	<--	SiGe (~SiGe@usc-secure-wireless-207-177.usc.edu) has quit (Read error: Connection reset by peer)
2014-11-26 11:53:30	-->	SiGe__ (~SiGe@usc-secure-wireless-207-177.usc.edu) has joined ##c++
2014-11-26 11:53:38	ville	would you still call an inline function that's defined outside class definition out-of-line or just non-inline?
2014-11-26 11:54:01	ville	err...
2014-11-26 11:54:08	ville	screwed that up. let's have another go.
2014-11-26 11:54:26	-->	vol4ko_j (~vol4ko@unaffiliated/vol4ko) has joined ##c++
2014-11-26 11:54:54	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 11:55:07	ville	"struct aa { inline void f(); } void aa::f() {}" would you call that out-of-line?
2014-11-26 11:56:11	-->	dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-26 11:57:07	<--	vol4ko (null@unaffiliated/vol4ko) has quit (Ping timeout: 240 seconds)
2014-11-26 11:57:37	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 11:57:56	<--	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-11-26 11:58:21	-->	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-11-26 11:58:49	<--	jakemp (~jakemp@user-105n004.cable.mindspring.com) has quit (Ping timeout: 258 seconds)
2014-11-26 11:59:10	Aer93	the out-of-line thing didnt work, same error
2014-11-26 11:59:26	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-26 11:59:45	hs_	ville, the standard has a funny approach to it
2014-11-26 12:00:07	hs_	if it is defined in the class definition, it is *italicized* "inline"
2014-11-26 12:00:29	hs_	but a *code font* "inline" member function may also be defined outside of its class definition
2014-11-26 12:00:33	hs_	so the distinction is typographical
2014-11-26 12:01:21	ville	i would still call that an inline function and if need be say the definition is outside the class definition.
2014-11-26 12:01:45	<--	avvs (~avvs@gateway/tor-sasl/avvs) has quit (Remote host closed the connection)
2014-11-26 12:02:01	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-26 12:02:24	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-26 12:03:09	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-11-26 12:03:43	-->	rriemann (~rriemann@166.21.90.92.rev.sfr.net) has joined ##c++
2014-11-26 12:04:06	<--	Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 264 seconds)
2014-11-26 12:04:31	hs_	given the wording in the standard, it doesn't seem to count as "italicized"-inline if it is defined outside of the class
2014-11-26 12:05:55	hs_	but it _can_ still be "code font"-inline with the addition of the keyword
2014-11-26 12:06:33	hs_	9.3.2/9.3.3
2014-11-26 12:07:41	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 12:08:52	-->	ShishKabab (~vincent@46.255.84.17) has joined ##c++
2014-11-26 12:09:34	lh_mouse	Aer93, check whether you forgot to compile and link the .cpp file that contained the destructor, check whether you defined your class in a different namespace, check whether you put your header inside an extern "C" block, check everything... And, cut your code to make a testcase please.
2014-11-26 12:10:02	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-26 12:10:09	Aer93	lh_mouse: oh my god, it is that
2014-11-26 12:10:11	<--	kerberosio (~hello@firewall.reference.be) has quit
2014-11-26 12:10:22	<--	ShishKabab (~vincent@46.255.84.17) has quit (Client Quit)
2014-11-26 12:10:34	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-26 12:10:46	Aer93	lh_mouse: nice thinking
2014-11-26 12:11:12	Aer93	lh_mouse: i'm used to use a make that autoinlcudes new .cpp but in this project they dont do that
2014-11-26 12:11:29	Aer93	lh_mouse: and therefore I forgot. I'm going to try if it works, but pretty sure you are correct
2014-11-26 12:11:58	-->	ApEk (47add304@gateway/web/freenode/ip.71.173.211.4) has joined ##c++
2014-11-26 12:12:26	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-26 12:12:48	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-26 12:12:56	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-26 12:12:59	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 12:13:03	-->	stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-26 12:14:16	<--	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 264 seconds)
2014-11-26 12:15:45	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-26 12:16:05	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-26 12:16:29	-->	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-11-26 12:18:25	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Remote host closed the connection)
2014-11-26 12:19:40	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 264 seconds)
2014-11-26 12:20:51	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 12:21:03	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 240 seconds)
2014-11-26 12:21:38	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 244 seconds)
2014-11-26 12:21:46	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-26 12:21:55	<--	beowuff (~beowuff@ec2-50-112-149-197.us-west-2.compute.amazonaws.com) has quit (Remote host closed the connection)
2014-11-26 12:22:05	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-26 12:22:23	-->	Unscrupulous (~unscrupt@2607:fb90:2c16:3550:0:25:538e:f301) has joined ##c++
2014-11-26 12:22:32	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-26 12:22:45	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-26 12:22:46	-->	lh_cat (~yaaic@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-26 12:22:52	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-26 12:23:20	-->	nivyaj (uid41702@gateway/web/irccloud.com/x-xoxhpjfdjuohaeyf) has joined ##c++
2014-11-26 12:23:42	-->	Unscrup33 (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has joined ##c++
2014-11-26 12:24:52	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-26 12:25:53	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 12:27:32	<--	Unscrupulous (~unscrupt@2607:fb90:2c16:3550:0:25:538e:f301) has quit (Ping timeout: 265 seconds)
2014-11-26 12:27:47	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-26 12:28:39	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-26 12:28:51	<--	rriemann (~rriemann@166.21.90.92.rev.sfr.net) has quit (Ping timeout: 244 seconds)
2014-11-26 12:28:55	-->	rriemann_ (~rriemann@179.21.90.92.rev.sfr.net) has joined ##c++
2014-11-26 12:29:08	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-26 12:29:36	<--	leeN (~leeN@g228044165.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-26 12:29:39	<--	parameter (2e6b7760@gateway/web/freenode/ip.46.107.119.96) has quit (Quit: Page closed)
2014-11-26 12:29:45	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 240 seconds)
2014-11-26 12:31:28	<--	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has quit (Remote host closed the connection)
2014-11-26 12:31:56	<--	SiGe__ (~SiGe@usc-secure-wireless-207-177.usc.edu) has quit (Remote host closed the connection)
2014-11-26 12:32:28	<--	leeter (~leeter@unaffiliated/leeter) has quit (Client Quit)
2014-11-26 12:32:38	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-26 12:32:55	doug64k	when making a hasher (for unordered_*), which bits should I focus on? should I attempt to put the most unique bits in the high bits or low bits?
2014-11-26 12:34:26	doug64k	example: hashing file offsets. would it be a good hash to just return the offset itself, cast to size_t, or would it be better to use a huge multiplier like a rand() PRNG
2014-11-26 12:35:26	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-26 12:36:34	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-26 12:36:37	-->	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-26 12:37:00	doug64k	if I expected a range of values that fits in 12 bits, should I shift the value left sizeof(size_t)*8-12
2014-11-26 12:40:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 12:42:34	-->	sinanislekdemir (~sinanisle@95.70.203.6) has joined ##c++
2014-11-26 12:43:31	C0MPAQ	I think if I was female
2014-11-26 12:43:44	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 12:43:49	C0MPAQ	I would try to become the most powerful C++ programmer
2014-11-26 12:44:08	C0MPAQ	only to dominate all male programmers and make them worship me
2014-11-26 12:44:20	-->	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has joined ##c++
2014-11-26 12:44:28	C0MPAQ	and then I would make them work for my giant mega open source projects
2014-11-26 12:44:30	C0MPAQ	for free
2014-11-26 12:44:37	C0MPAQ	and develop the ultimate software
2014-11-26 12:44:46	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-26 12:45:02	C0MPAQ	is that just too male, or why does it not happen?
2014-11-26 12:45:12	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-26 12:45:16	-->	leeN (~leeN@g228044165.adsl.alicedsl.de) has joined ##c++
2014-11-26 12:45:41	doug64k	gender is irrelevant, I've seen good females and terrible males too
2014-11-26 12:46:23	C0MPAQ	I would worship godly female programmers
2014-11-26 12:46:36	C0MPAQ	but I know only one
2014-11-26 12:46:38	C0MPAQ	kind of
2014-11-26 12:46:43	doug64k	in our society men are expected to be good at things, that is the only real reason why you measure that men are better, when men do measure better
2014-11-26 12:46:47	-->	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-11-26 12:46:59	sinanislekdemir	well, its weird. actually there are not too much but a few really talented female coders where i work and i really do respect them.
2014-11-26 12:47:15	doug64k	humans worry about the expectations of others because survival usually depends on not being kicked out of the group
2014-11-26 12:47:16	<--	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (Client Quit)
2014-11-26 12:47:30	-->	jakemp (~jeremy@216.227.250.50) has joined ##c++
2014-11-26 12:47:50	sinanislekdemir	I should admit that there are no differences between genders, they keep the standards all the time, they share their knowledge and the come up with good solutions
2014-11-26 12:48:13	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-26 12:48:13	hs_	sounds really fascinating
2014-11-26 12:48:21	hs_	##C++-social awaits you
2014-11-26 12:48:31	<--	dumdedum (~dumdedum@85.251.33.187.dyn.user.ono.com) has quit (Quit: foo)
2014-11-26 12:48:55	doug64k	I'm still waiting for someone's advice about making good hashers
2014-11-26 12:49:12	doug64k	make the high bits be good, or the low bits?
2014-11-26 12:50:02	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-26 12:50:18	-->	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has joined ##c++
2014-11-26 12:50:40	doug64k	I think it is a C++ question because it depends on the official definition of hashing in the unordered containers and I am having a hard time finding material that isn't a hello-world for unordered containers
2014-11-26 12:50:42	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-26 12:51:10	hs_	doug64k, it's not a C++ question
2014-11-26 12:51:21	hs_	you are asking about good hashing
2014-11-26 12:51:37	doug64k	I am asking about how the hash is used in a way
2014-11-26 12:51:45	hs_	who knows, it is wizardy, go look at boost::hash_combine
2014-11-26 12:52:13	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-26 12:52:21	doug64k	let's say I am hashing int, the hash might be just the int itself right?
2014-11-26 12:52:46	doug64k	not in general - in real-life unordered containers
2014-11-26 12:53:20	-->	hypebeast (pi@g231032137.adsl.alicedsl.de) has joined ##c++
2014-11-26 12:53:26	hs_	sure it could just be the int itself
2014-11-26 12:53:42	-->	DqrkdeviL (2ec141d4@gateway/web/freenode/ip.46.193.65.212) has joined ##c++
2014-11-26 12:53:45	hs_	if your ints are 0...n it should be
2014-11-26 12:54:02	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-26 12:54:25	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-26 12:55:11	doug64k	hs_: so don't do any fancy n << (sizeof(size_t)*8-12) if you expect n to fit in 12 bits then
2014-11-26 12:56:05	doug64k	right?
2014-11-26 12:56:33	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-26 12:56:42	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 255 seconds)
2014-11-26 12:56:48	doug64k	hs_: you suggest to put the "good" hash bits in the low bits, right?
2014-11-26 12:56:51	-->	jmknsd (~jakemp@user-105n004.cable.mindspring.com) has joined ##c++
2014-11-26 12:57:17	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-26 12:57:33	-->	adek (~adek@199.201.64.134) has joined ##c++
2014-11-26 12:57:40	<--	jakemp (~jeremy@216.227.250.50) has quit (Quit: Leaving)
2014-11-26 12:57:42	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-26 12:58:21	doug64k	I suppose this is a try-it-and-see question. sorry. I thought there was a widely agreed upon recommendation for implementing hash
2014-11-26 12:58:32	<--	jmknsd (~jakemp@user-105n004.cable.mindspring.com) has left ##c++
2014-11-26 12:58:35	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-26 12:58:35	doug64k	for easy keys in unordered containers
2014-11-26 12:59:04	-->	jakemp (~jakemp@user-105n004.cable.mindspring.com) has joined ##c++
2014-11-26 12:59:42	hs_	doug64k, sorry was helping someone
2014-11-26 13:00:44	hs_	doug64k, seriously look at boost::hash_combine
2014-11-26 13:01:03	hs_	at the very least it discusses the motivation for its design and you can build on that if you need something else
2014-11-26 13:01:19	hs_	i have to relearn this stuff every time I think about
2014-11-26 13:01:33	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-26 13:02:16	-->	Bigpet3 (~bigpet@i5E86A10F.versanet.de) has joined ##c++
2014-11-26 13:02:51	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-26 13:02:54	<--	leeter (~leeter@unaffiliated/leeter) has quit (Client Quit)
2014-11-26 13:03:27	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-26 13:04:08	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-26 13:04:40	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-26 13:04:41	<--	AGodlyDeciple (~agodlydec@99-116-25-214.lightspeed.cicril.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-26 13:04:45	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Ping timeout: 264 seconds)
2014-11-26 13:05:26	-->	AGodlyDeciple (~agodlydec@99-116-25-214.lightspeed.cicril.sbcglobal.net) has joined ##c++
2014-11-26 13:06:00	<--	AGodlyDeciple (~agodlydec@99-116-25-214.lightspeed.cicril.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-26 13:06:06	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-26 13:06:10	--	MrFlibble is now known as LunarJetman
2014-11-26 13:06:11	--	LunarJetman is now known as MrFlibble
2014-11-26 13:07:17	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-26 13:07:44	<--	endomancer (~endomance@2001:8003:2e3b:e301:98b7:bd3a:f4a0:ee59) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-26 13:07:50	-->	ppf| (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-26 13:08:20	<--	sinanislekdemir (~sinanisle@95.70.203.6) has quit (Read error: Connection reset by peer)
2014-11-26 13:08:36	-->	endomancer (~endomance@2001:8003:2e3b:e301:44cd:cdff:41d2:b2dc) has joined ##c++
2014-11-26 13:08:43	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 13:09:05	-->	Bigpet4 (~bigpet@i5E86B05C.versanet.de) has joined ##c++
2014-11-26 13:09:11	<--	Bigpet3 (~bigpet@i5E86A10F.versanet.de) has quit (Ping timeout: 258 seconds)
2014-11-26 13:09:35	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-11-26 13:10:16	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-26 13:11:40	<--	doom1 (~doom@AToulouse-657-1-971-207.w109-223.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-11-26 13:11:44	<--	rriemann_ (~rriemann@179.21.90.92.rev.sfr.net) has quit (Ping timeout: 264 seconds)
2014-11-26 13:12:33	-->	mehdi (sid15567@gateway/web/irccloud.com/x-stfdhctobtaqqajb) has joined ##c++
2014-11-26 13:13:07	mehdi	Can someone please explain to me why http://ideone.com/K6vx2w does not throw a warning? In that example, you can see a uint32_t being push_back'ed into a vector<uint8_t>
2014-11-26 13:13:44	TinoDidriksen	By default, lossy conversions don't generate a warning. You have to ask for that warning level.
2014-11-26 13:14:05	mehdi	ah, it doesn't show up with -Wall (gcc)
2014-11-26 13:15:01	TinoDidriksen	-Wall -Wextra -Wconversion
2014-11-26 13:15:04	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-26 13:18:32	<--	Anodl1 (~Anodl@p5B355E59.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-26 13:18:38	-->	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 13:18:39	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-26 13:18:58	<--	leeter (~leeter@unaffiliated/leeter) has quit (Client Quit)
2014-11-26 13:19:17	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-26 13:20:42	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-26 13:20:44	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 13:21:00	<--	guidol (~guidol@g147088.upc-g.chello.nl) has quit (Read error: Connection reset by peer)
2014-11-26 13:22:59	<--	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-26 13:24:07	<--	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has quit (Remote host closed the connection)
2014-11-26 13:25:04	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-26 13:25:48	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-26 13:25:48	-->	minas114 (~minas@83-28-190.netrun.cytanet.com.cy) has joined ##c++
2014-11-26 13:26:28	-->	serses (~serses@94.52.74.129) has joined ##c++
2014-11-26 13:26:41	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Client Quit)
2014-11-26 13:27:00	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-26 13:27:53	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-26 13:28:17	serses	so guys what do you think about Boost library.Worth learning it?
2014-11-26 13:28:48	leeter	eeeyup
2014-11-26 13:28:57	ville	boost is a collection of over 100 libraries. good luck learning all of them and more in finding use for all of them
2014-11-26 13:29:13	leeter	that said... knowing to look to boost first is a good idea
2014-11-26 13:30:18	TinoDidriksen	It's definitely worth knowing what's available in Boost.
2014-11-26 13:30:25	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-26 13:30:39	-->	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 13:30:46	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Ping timeout: 256 seconds)
2014-11-26 13:31:10	leeter	but as ville said... it's massive, knowing where to look is better than knowing how it works
2014-11-26 13:31:16	leeter	most of boost is reasonably documented
2014-11-26 13:31:26	leeter	and the rest has stackoverflow questions
2014-11-26 13:33:00	-->	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2014-11-26 13:33:52	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-26 13:33:55	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-26 13:34:25	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-11-26 13:35:33	<--	serses (~serses@94.52.74.129) has left ##c++ ("Leaving")
2014-11-26 13:37:36	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 240 seconds)
2014-11-26 13:38:12	<--	Sound (~Sound@unaffiliated/sound) has quit
2014-11-26 13:38:18	-->	heiner (~heiner@p50856593.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 13:38:24	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-26 13:39:02	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-26 13:39:34	BZEU	Could someone help me understand this typedef VOID ( _stdcall *arg1 ) ( IN bool newValue );
2014-11-26 13:39:36	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-26 13:39:54	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 13:40:39	-->	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has joined ##c++
2014-11-26 13:41:01	ville	oh dear. criticism aside it declares a type alias for a particular kind pointer-to-function
2014-11-26 13:41:05	M-ou-se	BZEU: it's defining 'arg1' as a typedef for a pointer to a _stdcall function returning VOID and taking one parameter: IN bool
2014-11-26 13:41:06	<--	minas114 (~minas@83-28-190.netrun.cytanet.com.cy) has quit (Quit: Leaving)
2014-11-26 13:41:16	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 264 seconds)
2014-11-26 13:41:31	M-ou-se	(whatever VOID and IN are...)
2014-11-26 13:41:40	<--	heiner_ (~heiner@p5B3FFBC8.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-26 13:42:02	BZEU	M-ou-se: What is the _stdcall conv. used here for_
2014-11-26 13:42:03	BZEU	?
2014-11-26 13:42:06	o-O-o	!give BZEU winapi
2014-11-26 13:42:07	nolyc	BZEU: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-26 13:42:16	<--	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has quit (Ping timeout: 265 seconds)
2014-11-26 13:42:18	M-ou-se	BZEU: dunno, it's nonstandard.
2014-11-26 13:43:20	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Read error: Connection reset by peer)
2014-11-26 13:43:36	<--	nikb (~nikb@unaffiliated/nikb) has quit (Ping timeout: 244 seconds)
2014-11-26 13:44:12	o-O-o	BZEU: it is a typedef for a pointer to a function with non standard macros and qualifiers. that seems like windows shit, so you need to go to a windows related channel
2014-11-26 13:44:18	o-O-o	also this seems to be C, not C++
2014-11-26 13:44:35	-->	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has joined ##c++
2014-11-26 13:45:54	<--	nivyaj (uid41702@gateway/web/irccloud.com/x-xoxhpjfdjuohaeyf) has quit (Ping timeout: 258 seconds)
2014-11-26 13:46:06	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined ##c++
2014-11-26 13:46:40	<--	DqrkdeviL (2ec141d4@gateway/web/freenode/ip.46.193.65.212) has quit (Quit: Page closed)
2014-11-26 13:46:45	-->	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2014-11-26 13:46:59	-->	DqrkdeviL (2ec141d4@gateway/web/freenode/ip.46.193.65.212) has joined ##c++
2014-11-26 13:47:02	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 13:47:03	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 255 seconds)
2014-11-26 13:47:18	-->	nivyaj (uid41702@gateway/web/irccloud.com/x-nnxenstykdfixbji) has joined ##c++
2014-11-26 13:47:39	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 13:47:47	VladolfPutler	I know ofcourse that int and char are, unless otherwise specified, signed. Would it not have made more sense to have unsigned be standard?
2014-11-26 13:48:26	<--	safinaskar (~user@188.234.24.9) has quit (Read error: Connection reset by peer)
2014-11-26 13:49:14	kadoban	VladolfPutler: char is actually implementation-defined signedness.
2014-11-26 13:49:32	-->	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-26 13:50:04	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 13:50:10	kadoban	VladolfPutler: But as to your actual question... *shrug* I don't know that one is better than another as a default.
2014-11-26 13:50:40	kadoban	It's a bit of a moot point though, not like it's going to change even if there was a 1000% correct argument for the other way.
2014-11-26 13:50:47	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-26 13:51:30	VladolfPutler	kadoban, no, it need not be, it's just that I very often use uint8_t and uint16_t, almost always I don't want signed
2014-11-26 13:51:36	VladolfPutler	but maybe that's just my case
2014-11-26 13:51:53	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-26 13:52:08	-->	nyqiust (~nyquist@178.162.205.22) has joined ##c++
2014-11-26 13:52:10	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-11-26 13:54:49	-->	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has joined ##c++
2014-11-26 13:55:14	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 250 seconds)
2014-11-26 13:55:26	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 13:59:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 14:00:16	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 14:01:29	-->	simius (~simius@h-88-117.a230.priv.bahnhof.se) has joined ##c++
2014-11-26 14:01:36	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 14:02:44	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 14:03:07	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2014-11-26 14:04:05	<--	Aer93 (~Aer93@141.84.69.66) has quit (Quit: WeeChat 0.4.2)
2014-11-26 14:04:14	<--	plamen (user@nat/mslo/x-cytqpicrqxqpoyqf) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-26 14:04:15	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 14:05:14	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-11-26 14:05:58	-->	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-26 14:06:31	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 14:06:52	<--	Bigpet4 (~bigpet@i5E86B05C.versanet.de) has quit (Ping timeout: 265 seconds)
2014-11-26 14:07:38	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-26 14:07:48	-->	Bigpet4 (~bigpet@i5E86B05C.versanet.de) has joined ##c++
2014-11-26 14:08:11	<--	teknozulu (~n3ss3s@35.11.22.108) has quit (Ping timeout: 240 seconds)
2014-11-26 14:08:12	<--	rendar (~I@host207-179-dynamic.1-87-r.retail.telecomitalia.it) has quit (Ping timeout: 250 seconds)
2014-11-26 14:08:14	CalimeroTeknik	how can I cleanly pass a struct initializer to unordered_map::emplace()? mymap.emplace((struct foo){1,2}); tells me ISO C++ doesn't allow that
2014-11-26 14:08:44	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-phiznwqrolphxfge) has joined ##c++
2014-11-26 14:08:44	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-26 14:08:54	CalimeroTeknik	it's an unordered_map<int, struct foo>
2014-11-26 14:09:06	<--	Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-11-26 14:09:31	<--	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-11-26 14:10:00	ville	you need to give a key too
2014-11-26 14:10:34	CalimeroTeknik	ah yeah, I did
2014-11-26 14:10:43	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-26 14:10:54	CalimeroTeknik	sorry, I should have written mymap.emplace(1, (struct foo){1,2});
2014-11-26 14:11:24	ville	!give CalimeroTeknik testcase
2014-11-26 14:11:25	nolyc	CalimeroTeknik: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-26 14:11:34	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-26 14:11:35	CalimeroTeknik	didn't I provide that?
2014-11-26 14:11:43	CalimeroTeknik	I guess not
2014-11-26 14:11:46	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Client Quit)
2014-11-26 14:11:56	<--	esas (~esas@unaffiliated/esas) has quit
2014-11-26 14:14:03	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-26 14:14:10	CalimeroTeknik	here's a testcase: http://sprunge.us/cULR (compile with g++ st.cpp -std=c++11 -Wall -pedantic)
2014-11-26 14:14:11	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 250 seconds)
2014-11-26 14:14:21	CalimeroTeknik	actually -pedantic is sufficient
2014-11-26 14:14:56	ville	why do people not put the testcase to the adviced paste site...
2014-11-26 14:14:56	<--	pullphinger (~Pullxinge@12.40.23.68) has quit
2014-11-26 14:15:03	-->	rendar (~I@host207-179-dynamic.1-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 14:15:13	ville	or at least one that compiles the code showing the error
2014-11-26 14:15:26	CalimeroTeknik	ah sorry? http://ideone.com/46sevM
2014-11-26 14:15:29	<--	zwer_p (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 250 seconds)
2014-11-26 14:15:38	CalimeroTeknik	I can't find where to enable -pedantic
2014-11-26 14:16:01	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-26 14:16:24	xico	CalimeroTeknik: emplace does not take an instance
2014-11-26 14:16:27	-->	zwer_p (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-26 14:16:48	xico	just the arguments of the constructor
2014-11-26 14:16:53	V-ille	geordi: struct foo {foo(int, int) {}}; int main() {unordered_map<int, foo> mif; mif.emplace(1, foo{42, 666}); }
2014-11-26 14:16:56	geordi	<no output>
2014-11-26 14:17:11	V-ille	and it emplaces a pair, so the pair's ctor arguments are what you need
2014-11-26 14:17:12	<--	theglass (~theglass@gateway/tor-sasl/theglass) has quit (Ping timeout: 250 seconds)
2014-11-26 14:17:16	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 14:18:05	-->	SiGe (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 14:18:11	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-26 14:18:39	V-ille	so http://ideone.com/zFFOg8
2014-11-26 14:18:59	-->	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 14:19:34	-->	hoster (~hoster@192.210.214.197) has joined ##c++
2014-11-26 14:19:57	CalimeroTeknik	oh, I see, my syntax was wrong. thank you
2014-11-26 14:20:16	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 255 seconds)
2014-11-26 14:20:19	<--	SiGe (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 14:20:59	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-26 14:21:58	-->	mustu (b6bacd77@gateway/web/freenode/ip.182.186.205.119) has joined ##c++
2014-11-26 14:22:02	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-26 14:22:53	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-26 14:22:58	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-26 14:22:58	-->	theglass (~theglass@gateway/tor-sasl/theglass) has joined ##c++
2014-11-26 14:23:18	mustu	I want to learn Windows OS Internals... should I start with learning C++?
2014-11-26 14:23:20	<--	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-26 14:23:27	-->	A1T (~bepi_admi@test-centre4-gw.estec.esa.int) has joined ##c++
2014-11-26 14:23:34	leeter	for the user mode code yes
2014-11-26 14:23:50	leeter	although the kernel more and more could be somewhat considered c++
2014-11-26 14:23:52	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-26 14:25:24	-->	SiGe (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 14:25:40	<--	kurahaupo (~kurahaupo@118.148.224.133) has quit (Ping timeout: 255 seconds)
2014-11-26 14:25:41	-->	cedricverst (~cedricver@dD576B56E.access.telenet.be) has joined ##c++
2014-11-26 14:25:54	mustu	leeter: what is required to learn the Kernel.. I also want to learn device drivers development
2014-11-26 14:26:09	<--	SiGe (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 14:26:20	leeter	C
2014-11-26 14:26:36	<--	l2esonance (~l2esonanc@c-50-136-185-21.hsd1.ca.comcast.net) has quit (Quit: l2esonance)
2014-11-26 14:26:39	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 14:27:50	leeter	mustu, the kernel is written largely in C or a super-C based on C++
2014-11-26 14:27:59	leeter	it's not C++ though as it's basically type safe C
2014-11-26 14:28:22	leeter	you can't use RAII or most of the things that make C++ useful
2014-11-26 14:29:17	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-26 14:29:21	Smirnov	better learn gcc flavor of C since it uses the gcc extensions extensively
2014-11-26 14:29:30	mustu	I started reading the "Windows Internals" book but that contains a lot of C++ code. So I thought to first learn C++ and then move on to the C/C++ used in Windows
2014-11-26 14:29:32	Hannibal_Smith	I remember a person who worked on the Windows team here, saying that Windows is written in C
2014-11-26 14:29:35	Hannibal_Smith	Uff
2014-11-26 14:29:37	Hannibal_Smith	I remember a person who worked on the Windows team here, saying that Windows is written in C++
2014-11-26 14:29:57	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-26 14:29:58	Smirnov	oh, thought you were talking about the linux kernel.
2014-11-26 14:30:10	Smirnov	the windows kernel isn't open source though, so good luck learning it
2014-11-26 14:30:14	<--	endomancer (~endomance@2001:8003:2e3b:e301:44cd:cdff:41d2:b2dc) has quit (Quit: endomancer)
2014-11-26 14:30:34	Hannibal_Smith	Ahaha true
2014-11-26 14:31:01	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Ping timeout: 244 seconds)
2014-11-26 14:31:30	mustu	Smirnov: I meant learning up to the level taught in Windows Internals book
2014-11-26 14:31:48	V-ille	!windows
2014-11-26 14:31:50	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-26 14:32:06	mustu	thanks
2014-11-26 14:32:08	Smirnov	i'd reconsider learning windows internals, windows is down trending in the market
2014-11-26 14:32:10	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Ping timeout: 258 seconds)
2014-11-26 14:32:49	<--	Banandana (~Banandana@c-67-174-45-82.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-26 14:34:56	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-26 14:37:13	<--	leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-11-26 14:37:28	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-26 14:38:22	<--	dataangel (~user@2601:d:2780:26b:b957:ee5:2b6:2ab4) has quit (Read error: Connection reset by peer)
2014-11-26 14:38:54	o-O-o	!next
2014-11-26 14:38:55	nolyc	Another satisfied customer, next!
2014-11-26 14:39:34	<--	cedricverst (~cedricver@dD576B56E.access.telenet.be) has quit (Remote host closed the connection)
2014-11-26 14:39:41	<--	wroos (~wroos@h-79-52.a259.priv.bahnhof.se) has quit (Quit: L?mnar)
2014-11-26 14:39:49	<--	gigabytes (~gigabytes@adsl-ull-248-215.51-151.net24.it) has quit
2014-11-26 14:40:07	<--	TheSausageMaster (~TheSausag@gateway/tor-sasl/thesausagemaster) has quit (Ping timeout: 250 seconds)
2014-11-26 14:41:17	-->	nikb (~nikb@ip68-224-246-203.lv.lv.cox.net) has joined ##c++
2014-11-26 14:42:11	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 255 seconds)
2014-11-26 14:43:32	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-26 14:43:39	-->	kronikarz (~kronikarz@zabka096.fucio.net) has joined ##c++
2014-11-26 14:44:38	<--	kronikarz (~kronikarz@zabka096.fucio.net) has left ##c++
2014-11-26 14:45:56	<--	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-26 14:48:06	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-26 14:48:35	<--	K-ballo (~sonoio@181.228.126.42) has quit (Read error: Connection reset by peer)
2014-11-26 14:49:18	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-26 14:50:42	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 14:51:21	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-26 14:52:32	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-26 14:52:58	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 14:53:35	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 14:54:50	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 14:54:52	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Remote host closed the connection)
2014-11-26 14:55:15	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-26 14:55:17	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Changing host)
2014-11-26 14:55:17	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-26 14:55:56	<--	Imek (~imek@mailgate.team17.com) has quit (Quit: Leaving)
2014-11-26 14:56:06	--	stryyker2 is now known as Stryyker
2014-11-26 14:56:29	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-26 14:57:02	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-26 14:57:41	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 14:57:47	<--	s00pcan (~chris@c-98-224-218-28.hsd1.mi.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-26 14:57:49	<--	sohail (~user@69-196-187-44.dsl.teksavvy.com) has quit (Ping timeout: 256 seconds)
2014-11-26 14:58:00	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 14:58:27	<--	Praise (~Fat@unaffiliated/praise) has quit (Read error: Connection reset by peer)
2014-11-26 14:58:40	-->	Praise (~Fat@88-149-170-39.v4.ngi.it) has joined ##c++
2014-11-26 14:58:40	<--	Praise (~Fat@88-149-170-39.v4.ngi.it) has quit (Changing host)
2014-11-26 14:58:40	-->	Praise (~Fat@unaffiliated/praise) has joined ##c++
2014-11-26 14:58:51	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-26 14:59:07	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 15:00:12	<--	rpag (~rg4@unaffiliated/rg4) has quit (Ping timeout: 240 seconds)
2014-11-26 15:00:46	-->	pBlack (~pBlack@216.2.69.86) has joined ##c++
2014-11-26 15:00:55	-->	LanDi (~LOL@186.232.216.90) has joined ##c++
2014-11-26 15:01:07	<--	roxfan (~dunno@94.218-200-80.adsl-dyn.isp.belgacom.be) has quit (Read error: Connection reset by peer)
2014-11-26 15:01:29	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-26 15:02:34	-->	bzf (~bzf@146.185.165.15) has joined ##c++
2014-11-26 15:02:41	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 15:03:17	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-26 15:03:51	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-26 15:04:04	-->	dataangel (~user@2601:d:2780:26b:71cf:911f:c29a:26f8) has joined ##c++
2014-11-26 15:05:37	-->	kurahaupo (~kurahaupo@118.148.229.185) has joined ##c++
2014-11-26 15:06:00	<--	Garner (uid38417@gateway/web/irccloud.com/x-karwdwvtklkvgkpc) has quit (Quit: Connection closed for inactivity)
2014-11-26 15:06:32	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-26 15:07:44	<--	it0a (~it0a@rrcs-24-56-88-130.ma.biz.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-26 15:08:01	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 15:09:10	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Remote host closed the connection)
2014-11-26 15:09:32	<--	Navid (~navid@unaffiliated/navid) has quit (Quit: Navid)
2014-11-26 15:09:59	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-26 15:10:12	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 15:10:25	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 15:10:41	-->	roxfan (dunno@194.151-242-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2014-11-26 15:10:47	doug64k	hs_: thanks, I'll have a look at boost::hash_combine
2014-11-26 15:10:55	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 15:14:09	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 15:14:12	<--	CaptainSifff (~CaptainSi@wthp120.physik.uni-wuerzburg.de) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-11-26 15:14:23	<--	Rutix (~rutix@april-fools/2013/runnerup/Rutix) has quit
2014-11-26 15:15:50	-->	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 15:16:02	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-26 15:16:37	<--	kurahaupo (~kurahaupo@118.148.229.185) has quit (Ping timeout: 240 seconds)
2014-11-26 15:17:15	mustu	I've just tried CodeLight and Dev-C++ on my WIndows 8 .. but both stops working when I compile the program
2014-11-26 15:17:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 15:17:34	mustu	have anyone tried these IDEs on Windows 8?
2014-11-26 15:18:35	RlyDontKnow	!give mustu topic
2014-11-26 15:18:36	nolyc	mustu: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-26 15:18:37	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-26 15:18:48	-->	Aer93 (~Aer93@141.84.69.66) has joined ##c++
2014-11-26 15:19:21	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 15:20:45	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Read error: Connection reset by peer)
2014-11-26 15:21:24	<--	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2014-11-26 15:21:53	<--	aggn (~irc@a0135.ipv6.tum.vpn.lrz.de) has quit (Remote host closed the connection)
2014-11-26 15:22:16	Aer93	Can somebody give me some advice about this problem... I'm modifying a makefile, what I want is to have my cpp in folders, and I have in a variable
2014-11-26 15:22:22	Aer93	 http://paste.ubuntu.com/9255526/
2014-11-26 15:22:34	Aer93	there you can see what he does, and what I ideally want, but I dont know how to do it
2014-11-26 15:22:46	Aer93	the original make file does %.cpp
2014-11-26 15:22:58	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-26 15:23:13	Aer93	but I dont want that, I woudl like to do the same but with the cpp file I have in my variable CCFILES
2014-11-26 15:23:15	Aer93	any idea?
2014-11-26 15:23:18	<--	LifeBlood (~unixunite@74.194.165.220) has quit (Quit: Leaving)
2014-11-26 15:23:46	-->	bursihido (~bursihido@unaffiliated/bursihido) has joined ##c++
2014-11-26 15:24:43	--	dts is now known as WillBot
2014-11-26 15:25:05	<--	theglass (~theglass@gateway/tor-sasl/theglass) has quit (Ping timeout: 250 seconds)
2014-11-26 15:25:06	NinjaPenguin	Aer93: ##c++-general
2014-11-26 15:25:36	<--	scai (~scai@pD9EA640A.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-26 15:26:09	-->	FabTG_ (~ftg@AAnnecy-651-1-27-167.w86-209.abo.wanadoo.fr) has joined ##c++
2014-11-26 15:26:13	-->	p|q (~plq@95.14.121.21) has joined ##c++
2014-11-26 15:26:30	Aer93	NinjaPenguin: I though maybe here some woudl know about makefile, where should I ask?
2014-11-26 15:26:42	NinjaPenguin	Aer93: ##c++-general
2014-11-26 15:26:51	-->	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 15:26:51	<--	davek_ (~tracekill@c-24-5-30-47.hsd1.ca.comcast.net) has quit (Changing host)
2014-11-26 15:26:51	-->	davek_ (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-26 15:26:51	Aer93	ah, ok
2014-11-26 15:27:02	micom	i would try with ##workingset
2014-11-26 15:27:03	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 15:27:54	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 15:28:05	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2014-11-26 15:29:29	<--	Anodl (~Anodl@p5B355E59.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-26 15:29:59	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-26 15:30:29	p|q	{ map<string, vector<string>> m. m["foo"].push_back("bar"); }
2014-11-26 15:30:31	geordi	error: expected initializer before '.' token
2014-11-26 15:30:37	p|q	{ map<string, vector<string>> m; m["foo"].push_back("bar"); }
2014-11-26 15:30:39	geordi	<no output>
2014-11-26 15:30:44	<--	CHC (~CHC@unaffiliated/chc) has quit
2014-11-26 15:30:57	p|q	so this actually default inits a vector and inserts "bar" ?
2014-11-26 15:31:09	-->	John_John_ (~John_John@ppp-2-86-33-202.home.otenet.gr) has joined ##c++
2014-11-26 15:31:29	--	WillBot is now known as dts
2014-11-26 15:32:00	John_John_	any suggestions on gui library ?
2014-11-26 15:32:12	micom	visual basic
2014-11-26 15:32:21	John_John_	that sounds good
2014-11-26 15:32:35	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-26 15:32:45	Hannibal_Smith	John_John_, Qt
2014-11-26 15:32:47	TinoDidriksen	John_John_, Qt
2014-11-26 15:32:54	micom	p|q, make a testcase and check it via yourself its quite easy
2014-11-26 15:33:16	pragma-	Surprise UB!
2014-11-26 15:33:24	John_John_	everyone loves cutie i guess
2014-11-26 15:33:38	John_John_	what about wxWidgets ?
2014-11-26 15:34:21	John_John_	and a question on Qt?should i prefer to use the Qt development studio also ?
2014-11-26 15:34:42	LBV_User	John_John_: that's up to you, also there is #qt
2014-11-26 15:34:54	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 15:34:54	John_John_	thanks
2014-11-26 15:34:57	micom	depends on your needs cuttie is really powerful framework
2014-11-26 15:34:59	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 240 seconds)
2014-11-26 15:35:06	micom	wxwidget works on native elements
2014-11-26 15:35:15	John_John_	more complete than wx ?
2014-11-26 15:36:11	micom	yea
2014-11-26 15:36:12	John_John_	?native elements? i dont know what that is
2014-11-26 15:36:16	micom	read about "moc"
2014-11-26 15:36:19	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-26 15:36:44	John_John_	do you happen to use visual studio ?
2014-11-26 15:36:53	micom	never
2014-11-26 15:37:37	John_John_	what do you use ?
2014-11-26 15:38:02	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 15:38:03	John_John_	i am asking because i am on a mac but i have a windows vm also
2014-11-26 15:38:10	<--	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Quit: Leaving)
2014-11-26 15:38:18	micom	i do use kdevelop
2014-11-26 15:38:20	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Client Quit)
2014-11-26 15:38:23	John_John_	aha
2014-11-26 15:38:30	John_John_	on what linux distro ?
2014-11-26 15:38:45	micom	!offtopic
2014-11-26 15:38:47	nolyc	This channel is about ISO Standard C++. If you want to discuss extra libraries, projects, or other things not necessarily on topic (but still related to C++) join ##c++-general
2014-11-26 15:39:14	<--	prime (~prime@unaffiliated/primex) has quit (Quit: will be back after these short messages)
2014-11-26 15:39:19	John_John_	my question is related to c++ really
2014-11-26 15:39:22	TinoDidriksen	John_John_, Qt Creator is great on all platforms. Ask #qt or ##C++-general
2014-11-26 15:39:24	<--	LBV_User (~leonardo@177.2.128.75) has quit (Quit: done with this Instant Ramen Cup)
2014-11-26 15:39:34	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-26 15:39:35	John_John_	thanks TinoDidriksen
2014-11-26 15:40:05	-->	r3m11 (~vieux@svt40-1-78-231-120-192.fbx.proxad.net) has joined ##c++
2014-11-26 15:40:14	m0shbear	qt is nice; my only objection with it is lack of ctrl+shift+u
2014-11-26 15:40:14	-->	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-26 15:40:33	 *	m0shbear forgets which ISO standard specifies that unicode code point input thing
2014-11-26 15:41:14	m0shbear	ah, 14755
2014-11-26 15:41:14	<--	nyqiust (~nyquist@178.162.205.22) has quit (Remote host closed the connection)
2014-11-26 15:43:20	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: leaving)
2014-11-26 15:44:16	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 265 seconds)
2014-11-26 15:44:20	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-26 15:44:43	-->	Garner (uid38417@gateway/web/irccloud.com/x-yagafdomzsxhdvzg) has joined ##c++
2014-11-26 15:45:40	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-26 15:47:21	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 15:48:08	-->	ketamin (~Thunderbi@131.178.200.65) has joined ##c++
2014-11-26 15:48:35	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-11-26 15:48:59	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 15:49:22	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 244 seconds)
2014-11-26 15:49:29	<--	mustu (b6bacd77@gateway/web/freenode/ip.182.186.205.119) has quit (Ping timeout: 246 seconds)
2014-11-26 15:50:40	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-26 15:50:50	<--	ketamin (~Thunderbi@131.178.200.65) has quit (Remote host closed the connection)
2014-11-26 15:50:57	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-26 15:51:05	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-26 15:51:18	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-26 15:51:28	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-26 15:52:16	<--	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-11-26 15:52:36	<--	Syzygy_ (~Syzygy@178-191-161-140.adsl.highway.telekom.at) has quit (Read error: Connection reset by peer)
2014-11-26 15:52:44	<--	bursihido (~bursihido@unaffiliated/bursihido) has quit (Quit: WeeChat 1.0.1)
2014-11-26 15:52:53	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-26 15:52:55	<--	emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-11-26 15:53:27	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-26 15:53:56	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-11-26 15:54:17	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-26 15:54:47	CalimeroTeknik	is there syntactic sugar to obtain directly the second element of a std::pair<iterator,bool>?
2014-11-26 15:54:53	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined ##c++
2014-11-26 15:54:57	CalimeroTeknik	as returned by a function
2014-11-26 15:56:10	NinjaPenguin	->second()!
2014-11-26 15:56:10	m0shbear	CalimeroTeknik: like std::get<1>(...) ?
2014-11-26 15:56:10	<--	MasterPiece (~MasterPie@unaffiliated/masterpiece) has quit (Max SendQ exceeded)
2014-11-26 15:56:55	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-26 15:57:09	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2014-11-26 15:57:23	CalimeroTeknik	NinjaPenguin, I tried that, (but with a ., since it's not a pointer)
2014-11-26 15:57:27	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-26 15:57:30	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-11-26 15:57:39	CalimeroTeknik	m0shbear, that produces the same error as function().second;
2014-11-26 15:58:20	-->	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has joined ##c++
2014-11-26 15:58:32	CalimeroTeknik	at this point I think example code would be best
2014-11-26 15:59:21	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-26 15:59:31	<--	varibull_ (~varibull@ta.tainstruments.com) has quit (Remote host closed the connection)
2014-11-26 15:59:39	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-11-26 15:59:48	Eelis	<< []{ return make_pair(2,3); }().second
2014-11-26 15:59:49	geordi	3
2014-11-26 15:59:53	Eelis	works for me
2014-11-26 16:00:28	<--	Burgundy (~burgundy@188.26.254.244) has quit (Read error: Connection reset by peer)
2014-11-26 16:00:50	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-26 16:01:02	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-26 16:01:42	CalimeroTeknik	true, the error is somewhere else, thanks
2014-11-26 16:02:20	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-26 16:02:37	<--	pBlack (~pBlack@216.2.69.86) has quit (Quit: This computer has gone to sleep)
2014-11-26 16:02:48	<--	Leftas (~leftas@91.228.84.180) has quit (Ping timeout: 258 seconds)
2014-11-26 16:03:16	-->	Nando_k (~Nando_k@dslb-178-003-071-092.178.003.pools.vodafone-ip.de) has joined ##c++
2014-11-26 16:03:54	-->	_war10ck_ (~sayantan@106.51.142.158) has joined ##c++
2014-11-26 16:04:18	CalimeroTeknik	ok, oops? a vector of pointers cannot be initialized by {}: http://ideone.com/8qrcsB
2014-11-26 16:04:30	CalimeroTeknik	er wait
2014-11-26 16:04:58	CalimeroTeknik	I meant to post this which works. http://ideone.com/yHvRBv
2014-11-26 16:05:36	-->	m477_ (~quassel@agrq32.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-26 16:05:49	<--	AbleBacon (407e1042@gateway/web/freenode/ip.64.126.16.66) has quit (Quit: Page closed)
2014-11-26 16:06:13	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-26 16:07:25	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 265 seconds)
2014-11-26 16:08:17	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 16:08:20	<--	m477 (~quassel@agrk43.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 245 seconds)
2014-11-26 16:10:30	<--	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has quit (Ping timeout: 240 seconds)
2014-11-26 16:10:30	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 16:13:08	<--	paul424 (~chatzilla@91.207.69.217) has quit (Ping timeout: 250 seconds)
2014-11-26 16:13:20	<--	ApEk (47add304@gateway/web/freenode/ip.71.173.211.4) has quit (Quit: Page closed)
2014-11-26 16:13:46	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 255 seconds)
2014-11-26 16:13:48	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 16:16:19	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-26 16:16:36	<--	C0MPAQ (~l0rd@aftr-109-91-38-81.unity-media.net) has quit (Ping timeout: 250 seconds)
2014-11-26 16:18:48	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Quit: leaving)
2014-11-26 16:18:59	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-26 16:19:05	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-26 16:19:08	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-26 16:19:28	_war10ck_	Can I write a unique_ptr in the header and then use it in the source file
2014-11-26 16:19:44	_war10ck_	and if I can, can some one give me an example?
2014-11-26 16:19:54	ville	that question makes no sense
2014-11-26 16:20:10	<--	prime (~prime@unaffiliated/primex) has quit (Remote host closed the connection)
2014-11-26 16:20:10	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-26 16:20:22	ville	header: int unique_ptr; source: void f() { unique_ptr = 0; }
2014-11-26 16:20:58	<--	LanDi (~LOL@186.232.216.90) has quit (Remote host closed the connection)
2014-11-26 16:21:13	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 16:21:17	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-26 16:21:33	-->	edward-san (~Edward`sa@host236-72-dynamic.53-82-r.retail.telecomitalia.it) has joined ##c++
2014-11-26 16:21:35	-->	LickPlusPlus (~LickPytho@58.166.109.179) has joined ##c++
2014-11-26 16:22:18	-->	Burgundy (~burgundy@188.26.254.244) has joined ##c++
2014-11-26 16:22:53	_war10ck_	ville: I am talking about std::unique_ptr<class>
2014-11-26 16:23:00	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-26 16:23:17	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 16:23:38	<--	plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-26 16:24:46	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-26 16:24:52	ville	even given that i can't make sense of your question
2014-11-26 16:25:22	<--	jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Quit: Leaving...)
2014-11-26 16:26:37	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-26 16:26:44	hs_	_war10ck_, if I understand your question (big if!!) then the answer is probably not: if you define an object in a header, and include the header more than once you get multiple definitions
2014-11-26 16:27:43	hs_	_war10ck_, "extern" prefixed on it will treat it as a declaration instead of a definition
2014-11-26 16:28:05	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 16:28:36	hs_	and then you can define it in a .cpp file
2014-11-26 16:30:43	hs_	{ cout << *a; } /* imagine this is your .h file --> */ extern unique_ptr<int> a; /* and this is your cpp file --> */ \\ unique_ptr<int> a{new int{10}}; // _war10ck_
2014-11-26 16:30:44	geordi	10
2014-11-26 16:30:57	hs_	but globals like that are typically a bad idea
2014-11-26 16:31:13	_war10ck_	hs_: I will try it, I think you made my day :) Thanks
2014-11-26 16:31:23	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-26 16:32:04	-->	SiGe (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 16:32:24	_war10ck_	hs_: Yeah, I am trying to reduce the globals as well as the use of memory allocation and de-allocation manually
2014-11-26 16:33:26	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2014-11-26 16:33:45	<--	SiGe (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 16:33:49	<--	John_John_ (~John_John@ppp-2-86-33-202.home.otenet.gr) has left ##c++
2014-11-26 16:33:52	<--	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-26 16:35:34	-->	BusterBny (~IceChat9@pool-108-54-16-212.nycmny.east.verizon.net) has joined ##c++
2014-11-26 16:36:32	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 16:37:14	jophish	Why is there no aligned new in the standard!
2014-11-26 16:38:00	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-26 16:38:05	hs_	wut
2014-11-26 16:38:33	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-26 16:38:36	jophish	I'd like a platform agnostic way of allocating aligned memory
2014-11-26 16:38:39	<--	grok0 (~o~o@unaffiliated/o-/x-1234567) has quit (Quit: Leaving)
2014-11-26 16:38:43	ville	alignas?
2014-11-26 16:38:50	<--	nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 240 seconds)
2014-11-26 16:38:54	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-26 16:38:58	<--	BusterBny (~IceChat9@pool-108-54-16-212.nycmny.east.verizon.net) has quit (Quit: Give a man a fish and he will eat for a day. Teach him how to fish, and he will sit in a boat and drink beer all day)
2014-11-26 16:39:45	hs_	I must not understand.. new already returns aligned
2014-11-26 16:39:49	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2014-11-26 16:40:01	hs_	you mean specified independent of type alignment?
2014-11-26 16:40:05	jophish	ville: that's great a lot of the time. I this example, I'm trying to allocate a big bunch of bytes
2014-11-26 16:40:27	ville	should cover that as well
2014-11-26 16:40:42	<--	wakd (~wakd@unaffiliated/wakd) has quit (Ping timeout: 255 seconds)
2014-11-26 16:40:53	jophish	hs_: yeah, something like: my_unique_ptr.reset(aligned_new<char>(123, 256))
2014-11-26 16:41:26	jophish	char[] in fact*
2014-11-26 16:42:55	-->	PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-11-26 16:42:58	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-26 16:43:51	<--	p|q (~plq@95.14.121.21) has quit (Ping timeout: 255 seconds)
2014-11-26 16:45:36	-->	SiGe (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 16:46:14	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-26 16:46:37	-->	vl4kn0 (d05ad62c@gateway/web/freenode/ip.208.90.214.44) has joined ##c++
2014-11-26 16:46:56	vl4kn0	Hi, is there a way to measure how long does a process wait for disk I/O?
2014-11-26 16:47:15	<--	SiGe (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 16:47:40	-->	SiGe_ (~SiGe@enlrtr.usc.edu) has joined ##c++
2014-11-26 16:49:48	<--	SiGe_ (~SiGe@enlrtr.usc.edu) has quit (Remote host closed the connection)
2014-11-26 16:51:02	<--	netj (~netj@128.12.163.109) has quit (Ping timeout: 255 seconds)
2014-11-26 16:51:15	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-26 16:51:40	<--	xenoph (~module@89.11.172.72) has quit (Quit: Leaving)
2014-11-26 16:51:46	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-26 16:51:52	-->	netj (~netj@naru.stanford.edu) has joined ##c++
2014-11-26 16:53:14	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-26 16:53:39	-->	Hvk (5f52adb6@gateway/web/freenode/ip.95.82.173.182) has joined ##c++
2014-11-26 16:53:45	-->	doom1 (~doom@AToulouse-657-1-1052-172.w83-205.abo.wanadoo.fr) has joined ##c++
2014-11-26 16:53:57	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 16:54:54	-->	pfo__ (~pfo@tworkow.imba.oeaw.ac.at) has joined ##c++
2014-11-26 16:54:55	Hvk	hey can somebody help me to replay this regex to c++? /<item[^"]+"(\S+)"[^"]+"(\S+)"/g
2014-11-26 16:55:15	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Max SendQ exceeded)
2014-11-26 16:56:08	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-26 16:56:14	<--	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-11-26 16:57:27	<--	pfo_ (~pfo@chello084114049188.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-11-26 16:58:40	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-26 16:58:50	<--	rendar (~I@host207-179-dynamic.1-87-r.retail.telecomitalia.it) has quit
2014-11-26 16:59:22	<--	Aer93 (~Aer93@141.84.69.66) has quit (Ping timeout: 240 seconds)
2014-11-26 17:00:10	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-26 17:00:46	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-26 17:00:48	<--	peterhu (~peterhuen@peterhuene.info) has quit (Quit: kernel update)
2014-11-26 17:00:49	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-26 17:02:06	-->	vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-26 17:03:35	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 264 seconds)
2014-11-26 17:04:11	ville	jophish: why doesn't alignas and alignof do the trick for you?
2014-11-26 17:04:57	-->	Zeranoe (~Zeranoe@97.91.36.56) has joined ##c++
2014-11-26 17:05:06	-->	ziikutv (~Adium@unaffiliated/ziikutv) has joined ##c++
2014-11-26 17:05:08	<--	ziikutv (~Adium@unaffiliated/ziikutv) has left ##c++
2014-11-26 17:06:12	jophish	ville: I'm not quite sure how to use alignas in the template parameters to unique_ptr
2014-11-26 17:06:13	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-26 17:06:33	-->	p|q (~plq@95.14.121.21) has joined ##c++
2014-11-26 17:06:45	jophish	without duplicating something like aligned_storage, but that's static in the allocation size
2014-11-26 17:08:09	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-11-26 17:09:07	realloc1	hmm is there already a gcc version which includes std::put_time from <iomanip>?
2014-11-26 17:09:14	realloc1	*put_time
2014-11-26 17:10:31	realloc1	...aaaand.... do you know some other missing functions/features? I'm just interested
2014-11-26 17:11:46	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 17:12:16	pi-	https://gist.github.com/p-i-/8969384eeb552b4c543b <-- I wrote up the points from yesterday's discussion on the idea of named parameters. Would anyone care to critique it? Can the argument be strengthened? Can it be shot down in flames?
2014-11-26 17:13:11	-->	peterhu (~peterhuen@peterhuene.info) has joined ##c++
2014-11-26 17:13:13	<--	vl4kn0 (d05ad62c@gateway/web/freenode/ip.208.90.214.44) has quit (Quit: Page closed)
2014-11-26 17:14:04	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 256 seconds)
2014-11-26 17:14:14	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-26 17:14:58	<--	rshane (~shaneh@pdpc/supporter/student/rshane) has quit (Quit: WeeChat 0.4.2)
2014-11-26 17:15:37	Oxyd	pi-: You didn't at all touch on the issue of a parameter having multiple different names. E.g. void foo(int x); void foo(int y);.
2014-11-26 17:16:04	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-26 17:16:26	-->	rriemann_ (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-26 17:17:23	hs_	pi-, here are some random comments:.. explain how f(b:666); translates into a call to f( int a = 1, int b = 2, int c = 3) with parameters 1 666 and 3... function argument names must now have linkage?
2014-11-26 17:17:25	pi-	Oxyd: I don't follow. Are you suggesting overloading should be allowed upon parameter name?
2014-11-26 17:17:55	Oxyd	pi-: No. You may declare a function multiple times, and each of these declarations may name the parameters differently.
2014-11-26 17:18:03	hs_	so "vector<int> v(size: 34, capacity: 64);" is portable to the extent that the _names_ of the arguments are standardized?
2014-11-26 17:18:38	pi-	Oxyd: yes, that would be overloading the function upon parameter name! I hadn't thought about that...
2014-11-26 17:18:42	hs_	"force compilers to work left to right.."
2014-11-26 17:18:43	hs_	oh dear
2014-11-26 17:18:50	Oxyd	geordi: void foo(int, int value = 0); void foo(int value = 0, int); int main() { foo(); } void foo(int x, int y) { cout << x, y; }  // Also this
2014-11-26 17:18:51	geordi	0, 0
2014-11-26 17:19:35	Oxyd	pi-: Not overloading. It's just one function.
2014-11-26 17:19:54	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 17:19:56	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 17:20:25	Oxyd	pi-: You cannot propose that int foo(int x); and int foo(int y); be *two* different overloads -- that would break existing code, and would make your proposal go down in flames.
2014-11-26 17:20:56	pi-	Oxyd: yes, I'm relieved that's not what you're not suggesting
2014-11-26 17:21:06	pi-	That's what I thought you were saying at first
2014-11-26 17:21:12	<--	BlaXpirit (~blaxpirit@190-26-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-26 17:21:37	Oxyd	So, given void foo(int, int value); void foo(int value, int = 0);, what does foo(value:5); call?
2014-11-26 17:22:24	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-26 17:22:26	Oxyd	Hm. That makes no sense. Given void foo(int, int value = 0); void foo(int value = 0, int);, what does foo(value:5); call?
2014-11-26 17:22:46	-->	jbeaudry (~jbeaudry@64-79-123-18.static.wiline.com) has joined ##c++
2014-11-26 17:22:47	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-26 17:22:55	pi-	Oxyd: isn't that illegal? You are defining two symbols with the same signature...
2014-11-26 17:23:02	Oxyd	No, I am defining one symbol.
2014-11-26 17:23:05	Oxyd	With the same signature.
2014-11-26 17:23:22	Oxyd	geordi: void foo(int, int value = 0); void foo(int value = 0, int); int main() { foo(); } void foo(int x, int y) { cout << x, y; }  // And I already showed that it's perfectly fine.
2014-11-26 17:23:23	geordi	0, 0
2014-11-26 17:24:03	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 17:24:05	Oxyd	Neither parameter names nor default values are a part of the signature. It's simply two declarations of a void foo(int, int);.
2014-11-26 17:24:41	pi-	hmm, well would it be reasonable to enforce that you can't have contradicting signatures for a particular function?
2014-11-26 17:24:42	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 255 seconds)
2014-11-26 17:24:47	Oxyd	No.
2014-11-26 17:25:25	Oxyd	Consider a header with void foo(int how_much_work_should_be_done); and a .cpp file with void foo(int n) { ... }. The header has a nice, long descriptive name, and the implementation file has something shorter.
2014-11-26 17:25:28	-->	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has joined ##c++
2014-11-26 17:25:56	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Remote host closed the connection)
2014-11-26 17:26:20	vocodork_	i prefer things to be named the same on both sides myself
2014-11-26 17:26:25	vocodork_	including argument names
2014-11-26 17:26:34	vocodork_	makes for quicker scanning through code
2014-11-26 17:26:36	Oxyd	You're not the only user of C++, so it doesn't matter.
2014-11-26 17:26:40	vocodork_	visual recognition
2014-11-26 17:26:43	<--	seishun (~Kakera@87.110.113.80) has quit (Ping timeout: 264 seconds)
2014-11-26 17:26:44	pi-	Oxyd: yes, I've bumped into something similar, where 'f(float x, float)' was used because the second parameter wasn't used.
2014-11-26 17:26:44	vocodork_	true :)
2014-11-26 17:27:00	vocodork_	but i recon it's a universal truth, more or less, pattern recognition
2014-11-26 17:27:07	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-26 17:27:08	hs_	it's not relevant..
2014-11-26 17:27:33	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-26 17:27:49	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-26 17:27:50	pi-	Oxyd: I'm also surprised to see that you can 'void foo(int value = 0, int);' -- I thought optional parameters have to go on the right.
2014-11-26 17:28:06	Oxyd	pi-: But the second parameter already has a default value.
2014-11-26 17:28:12	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-26 17:28:20	Oxyd	pi-: So it's an void(int = 0, int = 0);, perfectly fine.
2014-11-26 17:28:41	Oxyd	pi-: Further redeclarations may introduce new default values for parameters that don't have a default yet.
2014-11-26 17:28:42	vocodork_	pi-: that github text link you posted solves a non-issue imho
2014-11-26 17:28:55	vocodork_	pi-: nobody sane codes without intellisense really
2014-11-26 17:29:10	Eelis	intelliwhat?
2014-11-26 17:29:15	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-26 17:29:16	pi-	vocodork_: rkn
2014-11-26 17:29:20	Oxyd	Nobody codes without Windows? That's a bold claim.
2014-11-26 17:29:21	<--	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-11-26 17:29:22	vocodork_	pi-: so resolving all possible signatures is generally just a matter of writing a '(' after the function name for the list to pop up
2014-11-26 17:29:38	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-26 17:29:42	vocodork_	Oxyd: intellisense/autocomplete, however you want to call it
2014-11-26 17:30:03	vocodork_	coding in a primitive editor is self punishment, no need to alter the language for it
2014-11-26 17:30:09	<--	Spec-Chum (~Spec-Chum@94.2.107.192) has quit (Quit: Leaving)
2014-11-26 17:30:30	hs_	pi-, if you declare void foo(int value = 0, int); before something like void foo(int, int blah = 0); has been seen, it is an error
2014-11-26 17:30:33	-->	[DarkArcher] (~Archer]@162.219.178.122) has joined ##c++
2014-11-26 17:30:35	-->	hypebeas1 (pi@g231035105.adsl.alicedsl.de) has joined ##c++
2014-11-26 17:30:39	<--	Zeranoe (~Zeranoe@97.91.36.56) has quit (Quit: Zeranoe)
2014-11-26 17:32:38	pi-	ok I can see there is a potential problem there. It looks like you need rather a contrived scenario to evoke it though...
2014-11-26 17:33:07	Hvk	hey can somebody help me to implement this regex to c++? /<item[^"]+"(\S+)"[^"]+"(\S+)"/g
2014-11-26 17:33:39	pi-	hs_: now looking at the link issue you mentioned above...
2014-11-26 17:33:56	hs_	this is all related
2014-11-26 17:33:59	vocodork_	Hvk: use some regex library?
2014-11-26 17:34:02	<--	hypebeast (pi@g231032137.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-11-26 17:34:14	vocodork_	Hvk: or c++11
2014-11-26 17:34:16	Hvk	i tried std::regex but failed hardly
2014-11-26 17:34:23	hs_	you would require that argument names have linkage, and so foo(int value,int); and foo(int,int value); would be two distinction functions
2014-11-26 17:34:26	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-26 17:34:37	vocodork_	Hvk: what is failing?
2014-11-26 17:34:37	Oxyd	You obviously can't require that as it'd be a breaking change.
2014-11-26 17:34:40	SlashLife	Hvk: Use an XML library.
2014-11-26 17:34:53	hs_	"breaking" is mildly put =]
2014-11-26 17:35:04	hs_	it would be a different language
2014-11-26 17:35:05	vocodork_	Hvk: if you're parsing xml, yes, use an xml library
2014-11-26 17:35:19	vocodork_	Hvk: and if you can avoid xml, use a json library :)
2014-11-26 17:35:20	Hvk	vocodork any good tips?
2014-11-26 17:35:29	vocodork_	Hvk: what are you trying to do really?
2014-11-26 17:35:36	vocodork_	Hvk: why do you need to do that regex?
2014-11-26 17:35:38	Oxyd	You simply need to accept that you have a set, possibly empty, of names for each parameter, and that the sets for all parameters of a function are not necessarily disjoint.
2014-11-26 17:35:43	Hvk	parse xmpp response :D
2014-11-26 17:36:00	Oxyd	And propose a way to make it work under these conditions.
2014-11-26 17:36:08	vocodork_	Hvk: that's basically xml no?
2014-11-26 17:36:08	Hvk	something like this http://regex101.com/r/aQ9aI3/4
2014-11-26 17:36:19	vocodork_	Hvk: so get an xml library to work with
2014-11-26 17:36:21	Hvk	vocodork_: yea
2014-11-26 17:36:21	-->	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2014-11-26 17:36:29	vocodork_	Hvk: it will allow you to browse through the xml tree
2014-11-26 17:36:37	vocodork_	Hvk: and parse safely for you, with proper checking and such
2014-11-26 17:36:44	vocodork_	Hvk: there should be some low overhead ones around
2014-11-26 17:36:55	Hvk	vocodork_: any tip? never used :X
2014-11-26 17:37:19	pi-	ok, thanks hs_, Oxyd -- that's what I was digging for. I was trying to figure out why it hadn't been put in years ago, as it looks on the surface like an obvious move.
2014-11-26 17:37:28	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-26 17:37:35	vocodork_	Hvk: try http://bit.ly/1rvNsMv
2014-11-26 17:37:41	-->	luny` (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 17:37:57	vocodork_	Hvk: something like tinyxml or so
2014-11-26 17:39:34	ville	hmm hmm proposal to deprecate wchar_t. now that would be daring
2014-11-26 17:40:42	<--	[DarkArcher] (~Archer]@162.219.178.122) has quit (Quit: Leaving)
2014-11-26 17:40:57	<--	luny (~luny@unaffiliated/luny) has quit (Ping timeout: 265 seconds)
2014-11-26 17:41:00	-->	DarkArcher (~Archer]@162.219.178.122) has joined ##c++
2014-11-26 17:42:28	-->	luny`` (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 17:43:10	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-26 17:44:44	hs_	pi-, yeah it is a dark abyss of issues.. I still like the idea of parameters being dispersed in the function name though, just can't find a compelling syntax for it
2014-11-26 17:45:40	<--	luny` (~luny@unaffiliated/luny) has quit (Ping timeout: 240 seconds)
2014-11-26 17:46:12	hs_	so instead of do_widthheight(int,int); you could have something like f_withWidth(int)andHeight(int);
2014-11-26 17:46:12	<--	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-11-26 17:46:26	hs_	sort(c)with(f);
2014-11-26 17:46:28	<--	r3m11 (~vieux@svt40-1-78-231-120-192.fbx.proxad.net) has left ##c++
2014-11-26 17:46:28	hs_	etc
2014-11-26 17:46:33	hs_	ugly ugly syntax though
2014-11-26 17:46:57	ville	well sort(c).with(f)
2014-11-26 17:47:05	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-26 17:47:07	hs_	right but that is a single function call
2014-11-26 17:47:11	hs_	like sort_with(c,f)
2014-11-26 17:47:11	-->	luny` (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 17:47:29	ville	i don't see how it really matters
2014-11-26 17:48:16	hs_	haven't you heard the song? nothing really matters..
2014-11-26 17:48:46	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-26 17:49:03	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 17:50:15	pi-	That's what I keep reminding myself everytime my code breaks
2014-11-26 17:50:19	<--	luny`` (~luny@unaffiliated/luny) has quit (Ping timeout: 240 seconds)
2014-11-26 17:50:21	-->	mustu (2724a68b@gateway/web/freenode/ip.39.36.166.139) has joined ##c++
2014-11-26 17:50:37	-->	luny`` (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 17:50:47	pi-	hs_: yes, I like that syntax idea. You can almost do it with Objective-C syntax.
2014-11-26 17:51:11	pi-	Initially it feels very ugly, but I found I warmed to it very quickly.
2014-11-26 17:51:43	<--	luny` (~luny@unaffiliated/luny) has quit (Ping timeout: 255 seconds)
2014-11-26 17:51:57	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 256 seconds)
2014-11-26 17:52:33	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-26 17:53:18	ville	objective-c is definition of ugly
2014-11-26 17:53:33	<--	luny (~luny@unaffiliated/luny) has quit (Ping timeout: 265 seconds)
2014-11-26 17:53:38	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-26 17:54:06	-->	scorp_ (cdd39f85@gateway/web/freenode/ip.205.211.159.133) has joined ##c++
2014-11-26 17:54:38	-->	immibis (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has joined ##c++
2014-11-26 17:54:52	<--	luny`` (~luny@unaffiliated/luny) has quit (Ping timeout: 255 seconds)
2014-11-26 17:55:30	scorp_	Hi, i was wondering if its possible to use polymer-project on desktop app using some kind of web view?
2014-11-26 17:55:41	hs_	keep wondering
2014-11-26 17:57:53	ville	!give scorp_ general
2014-11-26 17:57:54	nolyc	scorp_: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-26 17:59:20	-->	Forbidden404 (~francisco@189-70-175-217.user.veloxzone.com.br) has joined ##c++
2014-11-26 17:59:46	-->	paulmcquad (~paulmcqua@78.18.50.11) has joined ##c++
2014-11-26 17:59:56	-->	marahin (~marahin@workspace.marahin.pl) has joined ##c++
2014-11-26 18:00:07	--	marahin is now known as Guest62694
2014-11-26 18:00:58	<--	doom1 (~doom@AToulouse-657-1-1052-172.w83-205.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2014-11-26 18:01:35	<--	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-26 18:01:49	<--	scorp_ (cdd39f85@gateway/web/freenode/ip.205.211.159.133) has quit (Ping timeout: 246 seconds)
2014-11-26 18:02:45	-->	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has joined ##c++
2014-11-26 18:03:20	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-26 18:03:35	kralyk	Hi. I'm having a hard time "bumping" floats. I need to add a small number to a float in order to increase its value very slightly.
2014-11-26 18:03:37	<--	p|q (~plq@95.14.121.21) has quit (Ping timeout: 265 seconds)
2014-11-26 18:03:40	-->	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-26 18:03:58	kralyk	But I can't just add, say 1e-6f, because it will not change larger floats at all.
2014-11-26 18:04:46	xico	kralyk: don't you want to multiply then?
2014-11-26 18:05:11	xico	kralyk: or is it a floating problem?
2014-11-26 18:05:32	kralyk	I might multiply but large floats would be increased much more.
2014-11-26 18:05:50	kralyk	Basically I'd like a function that would tell me the smallest fraction a float can be increased by.
2014-11-26 18:05:56	<--	Guest62694 (~marahin@workspace.marahin.pl) has left ##c++
2014-11-26 18:06:00	o-O-o	kralyk: you can't
2014-11-26 18:06:10	o-O-o	kralyk: you need fixed point, instead of floating point
2014-11-26 18:06:29	kralyk	Uhhh no I can't do that.
2014-11-26 18:06:35	<--	Forbidden404 (~francisco@189-70-175-217.user.veloxzone.com.br) has left ##c++
2014-11-26 18:06:40	o-O-o	kralyk: ok
2014-11-26 18:06:42	o-O-o	!next
2014-11-26 18:06:43	nolyc	Another satisfied customer, next!
2014-11-26 18:07:44	-->	Mannn (~Mannn____@cpe-70-113-106-32.austin.res.rr.com) has joined ##c++
2014-11-26 18:08:00	kralyk	o-O-o: you suck there is a function :D
2014-11-26 18:08:08	<--	jbeaudry (~jbeaudry@64-79-123-18.static.wiline.com) has quit (Ping timeout: 250 seconds)
2014-11-26 18:08:10	xico	kralyk: which?
2014-11-26 18:08:13	kralyk	it's c++11 though :-/
2014-11-26 18:08:19	kralyk	nextafter
2014-11-26 18:09:05	-->	Kajika (~Kajika@unaffiliated/kajika) has joined ##c++
2014-11-26 18:09:17	xico	kralyk: nice!
2014-11-26 18:09:57	kralyk	Yeah it's very nice, except a homework upload system at my uni doesn't support c++11 :-/
2014-11-26 18:10:02	kralyk	I'm seriously pissed of now.
2014-11-26 18:10:08	<--	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-26 18:10:24	xico	kralyk: check the implementation
2014-11-26 18:10:25	<--	rriemann_ (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 264 seconds)
2014-11-26 18:10:32	kralyk	good idea on it
2014-11-26 18:10:44	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 250 seconds)
2014-11-26 18:10:59	xico	(and complain)
2014-11-26 18:11:05	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-26 18:11:15	-->	Unscrupulous (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has joined ##c++
2014-11-26 18:11:42	NinjaPenguin	Your uni sucks. C++11 is not that new anymore and it brought in great features.
2014-11-26 18:12:23	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-26 18:12:40	kralyk	The school's main system actually supports C++11 but this course uses some kind of custom shitty one...
2014-11-26 18:13:35	<--	Unscrup33 (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has quit (Ping timeout: 258 seconds)
2014-11-26 18:13:49	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-26 18:13:52	-->	Unscrup42 (~unscrupt@2607:fb90:2c06:7b55:0:14:a328:5b01) has joined ##c++
2014-11-26 18:14:27	NinjaPenguin	Your course sucks?
2014-11-26 18:14:42	<--	Nando_k (~Nando_k@dslb-178-003-071-092.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2014-11-26 18:15:12	kralyk	I guess...
2014-11-26 18:16:00	kralyk	Hang on it's also part of posix ... this might just work...
2014-11-26 18:16:09	kralyk	(the nextafter function)
2014-11-26 18:16:10	<--	Unscrupulous (~unscrupt@173-164-99-133-Oregon.hfc.comcastbusiness.net) has quit (Ping timeout: 272 seconds)
2014-11-26 18:16:25	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-26 18:19:23	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Quit: Leaving)
2014-11-26 18:19:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 18:19:40	--	tobleronegordon is now known as toblerone[a]
2014-11-26 18:20:21	-->	NoCreativity (~quassel@177.98.162.82) has joined ##c++
2014-11-26 18:20:27	-->	ivan\ (~ivan@unaffiliated/ivan/x-000001) has joined ##c++
2014-11-26 18:20:53	doug64k	it is normal to have unreasonable tool restrictions
2014-11-26 18:21:05	doug64k	kralyk: ^
2014-11-26 18:21:18	Mannn	So who here uses codeblocks?
2014-11-26 18:21:19	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-26 18:21:21	hs_	yeah I just dug up the nextafter function too looking for something!
2014-11-26 18:21:41	hs_	pretty neat
2014-11-26 18:21:51	doug64k	Mannn: I like qtcreator
2014-11-26 18:21:58	kralyk	me too
2014-11-26 18:22:27	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 244 seconds)
2014-11-26 18:22:39	Mannn	Well I have 3 related files and I don't know how to compile them together, I'm used to only one cpp. here I have one header file, and two other files
2014-11-26 18:22:42	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 18:22:43	Mannn	connected using the #include
2014-11-26 18:23:10	kralyk	Those two other files are .cpp?
2014-11-26 18:23:20	doug64k	Mannn: read the documentation for your compiler
2014-11-26 18:23:34	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-26 18:23:44	doug64k	Mannn: example: gcc -o myexe mycpp1.cpp other.cpp foo.cpp
2014-11-26 18:24:01	doug64k	oops, g++
2014-11-26 18:24:04	doug64k	not gcc
2014-11-26 18:24:07	-->	Unscrupulous (~unscrupt@172.56.32.219) has joined ##c++
2014-11-26 18:24:13	doug64k	I always do that :)
2014-11-26 18:24:20	Mannn	If I was using qtcreator then, would it be able to do that for me? Or would I have to type it everytime?
2014-11-26 18:24:35	doug64k	Mannn: qtcreator would do that and a lot more for you
2014-11-26 18:24:35	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-26 18:24:36	kralyk	You need to be aware of the building process in any IDE
2014-11-26 18:24:41	Mannn	And howwww
2014-11-26 18:24:42	kralyk	Or should be, anway
2014-11-26 18:25:03	<--	Kajika (~Kajika@unaffiliated/kajika) has quit (Quit: Leaving)
2014-11-26 18:25:22	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Quit: Leaving...)
2014-11-26 18:25:38	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Client Quit)
2014-11-26 18:25:47	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-26 18:26:12	<--	Unscrup42 (~unscrupt@2607:fb90:2c06:7b55:0:14:a328:5b01) has quit (Ping timeout: 258 seconds)
2014-11-26 18:27:04	kralyk	Hmm the nextafter function doesn't always work for me :-/
2014-11-26 18:28:01	hs_	go on..
2014-11-26 18:28:03	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-26 18:28:21	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-26 18:28:38	kralyk	It returns the same float
2014-11-26 18:28:41	<--	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-26 18:28:43	doug64k	kralyk: you need to do it, or you need to do it in a way that works across platforms?
2014-11-26 18:28:53	<--	DarkArcher (~Archer]@162.219.178.122) has quit (Ping timeout: 250 seconds)
2014-11-26 18:28:59	kralyk	Basically just on linux + gcc is enough
2014-11-26 18:29:00	-->	jrolland-ubuntu (~jrolland@72.131.125.94) has joined ##c++
2014-11-26 18:29:06	hs_	how are you using it?
2014-11-26 18:29:13	kralyk	brb pasting
2014-11-26 18:29:56	doug64k	kralyk: all you need is to know the exponent and from that and the size of the mantissa you can determine the "epsilon"
2014-11-26 18:30:10	<--	edward-san (~Edward`sa@host236-72-dynamic.53-82-r.retail.telecomitalia.it) has quit (Quit: "Ma Watt a Fahrad in Coulomb! Un Volt, due Volt, tre Volt ... e con un Ohm!" "Cos? t'Amp?re!")
2014-11-26 18:30:29	hs_	{ float f{0.2f}; float h = nextafter(f,numeric_limits<float>::infinity()); cout << fixed << setprecision(30) << f,h,(f==h); }
2014-11-26 18:30:29	geordi	0.200000002980232238769531250000, 0.200000017881393432617187500000, false
2014-11-26 18:30:56	kralyk	http://ideone.com/j4dLZN
2014-11-26 18:31:01	kralyk	(code snippet)
2014-11-26 18:31:17	doug64k	kralyk: nextafter works. define "doesn't always work"
2014-11-26 18:32:06	-->	pBlack (~pBlack@216.2.69.86) has joined ##c++
2014-11-26 18:32:10	l_r	what is nextafter?
2014-11-26 18:32:10	doug64k	hs_: infinity? why not max()
2014-11-26 18:32:21	doug64k	l_r: http://en.cppreference.com/w/cpp/numeric/math/nextafter
2014-11-26 18:32:35	kralyk	I reckon the calculations that follow are to imprecise to be affected by the small difference nextafter produces
2014-11-26 18:32:39	kralyk	too*
2014-11-26 18:32:42	<--	mustu (2724a68b@gateway/web/freenode/ip.39.36.166.139) has quit (Quit: Page closed)
2014-11-26 18:32:42	l_r	oh god...i did not know it
2014-11-26 18:32:55	hs_	doug64k, no particular reason, it just needs a "to" that isn't from
2014-11-26 18:32:56	hs_	=]
2014-11-26 18:34:06	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-11-26 18:34:44	kralyk	Hang on, in my code the floats are actually equal, ie. operator==() returns true. Wtf?
2014-11-26 18:35:10	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-26 18:35:13	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-26 18:35:23	-->	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has joined ##c++
2014-11-26 18:35:29	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-26 18:35:32	hs_	kralyk, I suspect XY problem..
2014-11-26 18:35:51	kralyk	hs_: what do you mean?
2014-11-26 18:35:59	kralyk	Here's updated code: http://ideone.com/PXJCDN
2014-11-26 18:36:04	-->	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has joined ##c++
2014-11-26 18:36:16	kralyk	When I breakpoint on line 13, those bools are all true. I don't get how that's possible.
2014-11-26 18:36:23	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-26 18:36:51	hs_	what are the values origin.x and direction.x?
2014-11-26 18:37:06	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-26 18:37:23	kralyk	various, right now I have x = 550, y = -3.05... etc.
2014-11-26 18:38:31	kralyk	I'll try to write a simple program to test the nextafter thingy...
2014-11-26 18:39:40	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-26 18:42:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 18:42:35	doug64k	kralyk: http://coliru.stacked-crooked.com/a/eba295b57457ae62
2014-11-26 18:42:55	-->	Unscrup43 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-26 18:43:17	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 18:43:28	kralyk	Ok.
2014-11-26 18:43:31	kralyk	See this: http://ideone.com/ggqbtB
2014-11-26 18:43:39	kralyk	I guess the INFINITY macro might be the problem...?
2014-11-26 18:43:59	doug64k	don't use macros if you can help it
2014-11-26 18:44:12	doug64k	numeric_limits
2014-11-26 18:44:31	<--	Unscrupulous (~unscrupt@172.56.32.219) has quit (Ping timeout: 256 seconds)
2014-11-26 18:44:44	--	toblerone[a] is now known as tobleronegordon
2014-11-26 18:44:52	<--	paulmcquad (~paulmcqua@78.18.50.11) has quit (Quit: Leaving)
2014-11-26 18:45:33	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 18:46:29	<--	pBlack (~pBlack@216.2.69.86) has quit (Ping timeout: 255 seconds)
2014-11-26 18:47:01	<--	Burgundy (~burgundy@188.26.254.244) has quit (Read error: Connection reset by peer)
2014-11-26 18:47:27	kralyk	nope, macro wasn't it
2014-11-26 18:47:31	-->	Burgundy (~burgundy@188.26.254.244) has joined ##c++
2014-11-26 18:47:44	doug64k	kralyk: it is not magic at all, it effectively tells you what you would get if you adjust the mantissa by 1, carrying/borrowing the exponent appropriately
2014-11-26 18:47:55	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-26 18:48:22	<--	ERROH (mama@unaffiliated/almathea) has quit (Ping timeout: 245 seconds)
2014-11-26 18:48:26	Goles	Hey guys, is there a way to declare an unordered map in a simmilar fashion to a C++11 vector? ( vector<int> v = {1, 2, 3}; )
2014-11-26 18:48:41	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Ping timeout: 250 seconds)
2014-11-26 18:48:45	hs_	kralyk, ok
2014-11-26 18:48:47	doug64k	Goles: did you try?
2014-11-26 18:49:02	<--	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has quit (Read error: Connection reset by peer)
2014-11-26 18:49:04	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-26 18:49:09	<--	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has quit (Ping timeout: 258 seconds)
2014-11-26 18:49:11	kralyk	doug64k: hmm...
2014-11-26 18:49:19	Goles	doug64k: not really, I mean, I don't know what to try. {K, V, K, V, K, V} ?
2014-11-26 18:49:23	doug64k	Goles: http://en.cppreference.com/w/cpp/container/unordered_map/unordered_map
2014-11-26 18:49:30	kralyk	The problem must be the nextafter function, I included it from somewhere else
2014-11-26 18:49:44	doug64k	Goles: { {"key1", 'a'}, {"key2", 'b'}}
2014-11-26 18:49:44	kralyk	from some gcc extension or posix or something..
2014-11-26 18:49:49	hs_	right, you are not using c++11 and it wasn't the std::nextafter
2014-11-26 18:49:58	Goles	doug64k: thanks, that's really helpful,
2014-11-26 18:50:13	doug64k	kralyk: are you using namespace std? if so, shame on you. this is why you std::nextafter
2014-11-26 18:50:18	-->	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-26 18:50:24	-->	pBlack (~pBlack@216.2.69.86) has joined ##c++
2014-11-26 18:50:27	<--	Bigpet4 (~bigpet@i5E86B05C.versanet.de) has quit (Ping timeout: 255 seconds)
2014-11-26 18:50:28	hs_	also, if you call nextafter(float,double); you will get back a double
2014-11-26 18:50:30	hs_	https://ideone.com/QllkHu
2014-11-26 18:50:47	hs_	and your double will be converted back to a float
2014-11-26 18:51:26	kralyk	Finnally managed to get it to work.
2014-11-26 18:51:33	<--	Gama11 (~quassel@p5DD1EF6E.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-26 18:51:47	hs_	anyway the example I pasted here works if you change the "to" parameter to a float
2014-11-26 18:52:07	kralyk	I used numeric_limits<float>::max() which should yield float
2014-11-26 18:52:33	kralyk	Anyway, it works for me using nextafterf ... which I'm not sure whence comes but whatever
2014-11-26 18:53:01	hs_	paste broken code again?
2014-11-26 18:53:37	<--	ppf| (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-26 18:53:37	kralyk	I was because I wasn't using the stdlibs nextafter
2014-11-26 18:53:37	doug64k	Goles: my favorite: now I can do someMap.insert({ {fancy, key}, {very, fancy, value} })
2014-11-26 18:53:43	hs_	ah
2014-11-26 18:53:58	<--	Hvk (5f52adb6@gateway/web/freenode/ip.95.82.173.182) has quit (Quit: Page closed)
2014-11-26 18:54:05	kralyk	Since I can't use C++11 thanks to that goddamn upload systemd of my uni's
2014-11-26 18:54:05	<--	a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-11-26 18:54:08	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 256 seconds)
2014-11-26 18:54:11	Goles	doug64k: wow, love that... it's been a while since I did C++, 98 was much more verbose than now
2014-11-26 18:54:14	doug64k	no more giant typedefs on every insert
2014-11-26 18:55:00	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:dcaa:788d:55db:cd8b) has quit (Read error: Connection reset by peer)
2014-11-26 18:55:37	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit (Remote host closed the connection)
2014-11-26 18:55:58	-->	avitex (a5e42998@gateway/web/freenode/ip.165.228.41.152) has joined ##c++
2014-11-26 18:55:58	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-26 18:56:21	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-26 18:58:36	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 18:58:51	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-26 18:59:10	<--	Xark (~K@unaffiliated/xark) has quit (Quit: *** GAME OVER ***  Insert Coin...)
2014-11-26 18:59:55	Goles	doug64k: yep, that helps a lot
2014-11-26 19:00:32	<--	avitex (a5e42998@gateway/web/freenode/ip.165.228.41.152) has left ##c++
2014-11-26 19:01:12	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-26 19:01:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 19:02:04	-->	ERROH (mama@unaffiliated/almathea) has joined ##c++
2014-11-26 19:02:08	-->	avitex (a5e42998@gateway/web/freenode/ip.165.228.41.152) has joined ##c++
2014-11-26 19:02:20	avitex	Should I return a const ref to a std::vector<boost::shared_ptr<type>> from a function, if the vector is a member of the function's class?
2014-11-26 19:02:30	avitex	eg std::vector<UserPtr> getUsers();
2014-11-26 19:04:23	o11c	avitex: that's reasonable
2014-11-26 19:04:38	o11c	const std::vector<UserPtr>& getUsers() const;
2014-11-26 19:04:49	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-26 19:04:59	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit (Client Quit)
2014-11-26 19:05:16	-->	juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-11-26 19:05:18	avitex	o11c: Thank's, just getting my head around smart pointers.
2014-11-26 19:05:24	avitex	Thanks*
2014-11-26 19:06:22	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 258 seconds)
2014-11-26 19:06:31	-->	rayston (~rayston@ip68-106-242-42.ph.ph.cox.net) has joined ##c++
2014-11-26 19:06:33	-->	a_le (~a_le@mobile-166-171-248-175.mycingular.net) has joined ##c++
2014-11-26 19:06:37	-->	mukunda (~mukunda@24.9.162.249) has joined ##c++
2014-11-26 19:06:38	-->	Xark (~K@unaffiliated/xark) has joined ##c++
2014-11-26 19:07:23	--	rayston is now known as Tenju
2014-11-26 19:08:15	avitex	o11c: The last const means that getUsers is guaranteed not to mess with members of the class, yes?
2014-11-26 19:08:36	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 19:08:41	o11c	well
2014-11-26 19:08:58	o11c	the 'mutable' keyword *does* exit
2014-11-26 19:09:07	<--	Smirnov (~Smirnov@about/csharp/ms/clrjit/smirnov) has quit (Quit: leaving)
2014-11-26 19:09:07	avitex	Ahhh
2014-11-26 19:09:10	avitex	I see xD
2014-11-26 19:09:22	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-26 19:09:28	<--	mukunda_ (~mukunda@24.9.162.249) has quit (Ping timeout: 240 seconds)
2014-11-26 19:10:11	avitex	So should I by practice add const to the end of functions like 'totalUsers()' which would just return a count.
2014-11-26 19:11:04	kadoban	avitex: Yes
2014-11-26 19:11:48	avitex	kadoban: How exciting.
2014-11-26 19:12:00	-->	NoCreativity_ (~quassel@179.177.48.139.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-26 19:12:27	<--	josh (~josh@66.60.115.195) has quit (Ping timeout: 255 seconds)
2014-11-26 19:12:40	<--	NoCreativity (~quassel@177.98.162.82) has quit (Ping timeout: 264 seconds)
2014-11-26 19:12:41	-->	herocoder (~herocoder@68.83.210.114) has joined ##c++
2014-11-26 19:13:07	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 240 seconds)
2014-11-26 19:13:33	IWishIKnew	Good practice should compell you to append the const modifier to any class' member functions that should not, or will not modify the stateof the class.
2014-11-26 19:13:37	IWishIKnew	*state of
2014-11-26 19:13:50	IWishIKnew	aka: if it doesn't chage any variables, append a const to it.
2014-11-26 19:14:20	avitex	Great, that helps
2014-11-26 19:14:45	<--	tarruda (~tarruda@200.17.134.134) has quit (Quit: WeeChat 0.4.2)
2014-11-26 19:15:55	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Ping timeout: 258 seconds)
2014-11-26 19:16:13	avitex	Is the previous context of Users, would a naming convention of say, UserCollection be appropriate for an alias of std::vector<UserPtr>?
2014-11-26 19:16:16	JamesNZ	Why do std::string::size() and std::string::length() both exist if they both do the same thing?
2014-11-26 19:16:53	IWishIKnew	JamesNZ:  I've been asking that very question since I started writing C++ over 3 years ago...
2014-11-26 19:16:59	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-26 19:17:02	IWishIKnew	;)
2014-11-26 19:17:12	JamesNZ	:P
2014-11-26 19:17:18	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-26 19:17:53	IWishIKnew	there's probably some sort of super-technical reason... let me look it up in the Big Book.
2014-11-26 19:18:27	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-26 19:18:27	<--	SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Quit: Leaving)
2014-11-26 19:18:38	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has quit (Ping timeout: 244 seconds)
2014-11-26 19:18:38	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 19:19:05	IWishIKnew	JamesNZ:  nope, they do exactly the same thing...
2014-11-26 19:19:10	IWishIKnew	:/
2014-11-26 19:19:22	<--	herocoder (~herocoder@68.83.210.114) has quit (Ping timeout: 258 seconds)
2014-11-26 19:19:25	JamesNZ	Yeah.
2014-11-26 19:19:37	-->	mukunda_ (~mukunda@24.9.162.249) has joined ##c++
2014-11-26 19:20:10	IWishIKnew	you could just as well std::distance(mystring.begin(), mystring.end()) too.
2014-11-26 19:20:15	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-26 19:20:28	<--	illerucis (~illerucis@2620:10d:c0a3:1003:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-26 19:20:34	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-26 19:21:14	JamesNZ	Well, .size()/.length() is more convenient :P
2014-11-26 19:22:25	-->	herocoder (~herocoder@68.83.210.114) has joined ##c++
2014-11-26 19:22:27	IWishIKnew	meh...
2014-11-26 19:22:29	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-26 19:22:32	IWishIKnew	tomato tomoto
2014-11-26 19:22:32	<--	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-26 19:22:45	<--	mukunda (~mukunda@24.9.162.249) has quit (Ping timeout: 244 seconds)
2014-11-26 19:23:04	-->	safinaskar (~user@188.234.48.2) has joined ##c++
2014-11-26 19:24:22	<--	leeN (~leeN@g228044165.adsl.alicedsl.de) has quit (Quit: The morning breaks us up inside?)
2014-11-26 19:25:34	 *	Xark notes length bloats your source code with all those extra chars. :)
2014-11-26 19:26:09	-->	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has joined ##c++
2014-11-26 19:26:17	<--	pBlack (~pBlack@216.2.69.86) has quit (Quit: This computer has gone to sleep)
2014-11-26 19:27:18	 *	IWishIKnew agrees.
2014-11-26 19:28:56	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-26 19:30:11	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 19:30:14	 *	avitex Just looked up about the '/me' command xD
2014-11-26 19:30:47	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-11-26 19:30:53	<--	vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 265 seconds)
2014-11-26 19:30:59	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has joined ##c++
2014-11-26 19:31:17	-->	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has joined ##c++
2014-11-26 19:31:22	<--	realloc1 (~realloc1@aftr-185-17-204-163.dynamic.mnet-online.de) has quit (Client Quit)
2014-11-26 19:31:23	<--	tobleronegordon (~vegetaria@unaffiliated/ninegordon) has quit (Read error: Connection reset by peer)
2014-11-26 19:31:32	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-26 19:31:50	-->	rkreis (~robin@pD9EF1086.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 19:32:38	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Client Quit)
2014-11-26 19:33:05	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-26 19:33:29	<--	nivyaj (uid41702@gateway/web/irccloud.com/x-nnxenstykdfixbji) has quit (Quit: Connection closed for inactivity)
2014-11-26 19:34:04	<--	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-11-26 19:34:55	<--	rkreis_ (~robin@pD9EF133D.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-26 19:35:05	jesyspa	JamesNZ: Because "length" is the term typically used for strings, while having a size function is convenient if you want to use it where a container is expected.
2014-11-26 19:35:45	<--	codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has quit (Remote host closed the connection)
2014-11-26 19:36:42	JamesNZ	jesyspa: Ah.
2014-11-26 19:36:47	juliohm	I would like to ask you guys what is your approach in developing very large complex projects. How do you decide between static polymorphism with templates and dynamic polymorphism with inheritance/composition?
2014-11-26 19:37:13	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has quit (Ping timeout: 255 seconds)
2014-11-26 19:37:13	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-26 19:37:18	juliohm	Talking about dynamic polymorphism, do you agree composition is usually preferred?
2014-11-26 19:37:35	<--	MrFlibble (LunarJetma@2.124.188.136) has quit (Quit: MrFlibble)
2014-11-26 19:37:48	<--	DqrkdeviL (2ec141d4@gateway/web/freenode/ip.46.193.65.212) has quit (Quit: Page closed)
2014-11-26 19:38:08	kralyk	Is it possible that float precision might just not be enough for a raytracer?
2014-11-26 19:38:50	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-26 19:39:05	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 265 seconds)
2014-11-26 19:39:18	juliohm	kralyk, it's out of my expertise, but you're constrained by the hardware, no? Most GPUs only work with single precision
2014-11-26 19:39:28	-->	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has joined ##c++
2014-11-26 19:39:43	doug64k	kralyk: it is sufficient if you have sufficient divide precision. you will get cracks if you use reciprocal divides without steps to increase precision
2014-11-26 19:40:01	-->	codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has joined ##c++
2014-11-26 19:40:22	kralyk	juliohm: it's purely software since it's a homework...
2014-11-26 19:40:25	kralyk	doug64k: ok ty
2014-11-26 19:40:29	doug64k	kralyk: practically every raytracer uses float so obviously it can work
2014-11-26 19:40:47	juliohm	kralyk, understand, good luck
2014-11-26 19:41:07	kralyk	doug64k: ok. Well, my sphere intersects are way off and I can't figure out why but that's probably off-topic here...
2014-11-26 19:41:25	kralyk	where way off = up to 1e-3
2014-11-26 19:41:25	adamm	"static polymorphism" is an oxymoron
2014-11-26 19:41:38	-->	TheLastExile (~x@2601:a:1f00:4c2:468a:5bff:fe9d:9aa7) has joined ##c++
2014-11-26 19:41:41	<--	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-11-26 19:42:36	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 264 seconds)
2014-11-26 19:42:45	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-26 19:42:55	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-26 19:44:46	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit (Ping timeout: 255 seconds)
2014-11-26 19:45:26	-->	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-26 19:45:44	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-26 19:46:47	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 264 seconds)
2014-11-26 19:46:48	--	fstd_ is now known as fstd
2014-11-26 19:48:31	<--	zorbsOne (nobody@unaffiliated/zorbsone) has left ##c++
2014-11-26 19:49:12	-->	Rafaelfsilva (~Rafaelfsi@3.ip-198-50-147.net) has joined ##c++
2014-11-26 19:51:21	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-26 19:51:54	-->	TheAncientGoat (~quassel@175.136.59.214) has joined ##c++
2014-11-26 19:52:03	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Remote host closed the connection)
2014-11-26 19:52:12	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-26 19:52:24	-->	thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-11-26 19:52:29	thecha	 how can i get a fuction to recieve an object as argument that is yet to be declared down in main (c++related)
2014-11-26 19:52:36	-->	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has joined ##c++
2014-11-26 19:52:56	<--	M-ou-se (~m-ou.se@m-ou.se) has quit (Ping timeout: 255 seconds)
2014-11-26 19:52:58	IWishIKnew	jesyspa:  I think it has more to do with the fact that "size" is consistently used to return the number of elements within a container...
2014-11-26 19:53:25	jesyspa	IWishIKnew: That's what I said.
2014-11-26 19:53:49	pEYEd	How do you insert more than one argument into sprintf?  https://bpaste.net/show/f9ab737d6179
2014-11-26 19:54:04	IWishIKnew	that is not what you said.  But if that's what you meant it really doesn't matter because then we are in agreement.
2014-11-26 19:55:03	<--	a_le (~a_le@mobile-166-171-248-175.mycingular.net) has quit
2014-11-26 19:55:37	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Quit:  Hexchat -  A REAL handcrafted IRC client.)
2014-11-26 19:55:54	-->	a_le (~a_le@mobile-166-171-248-175.mycingular.net) has joined ##c++
2014-11-26 19:56:33	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-26 19:56:57	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 240 seconds)
2014-11-26 19:59:27	juliohm	thecha, forward declaration?
2014-11-26 19:59:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 19:59:44	juliohm	you mean the object or the type?
2014-11-26 19:59:46	-->	M-ou-se (~m-ou.se@m-ou.se) has joined ##c++
2014-11-26 20:00:08	-->	hatzopoulos (~hatzopoul@modemcable153.86-83-70.mc.videotron.ca) has joined ##c++
2014-11-26 20:00:14	juliohm	if it is the object, then there is no way of passing it before it is created
2014-11-26 20:01:25	<--	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Quit: leaving)
2014-11-26 20:02:46	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 20:03:25	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-26 20:04:40	<--	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-11-26 20:05:47	<--	xpro256 (~xpro@a95-94-1-44.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-11-26 20:06:46	<--	safinaskar (~user@188.234.48.2) has quit (Read error: Connection reset by peer)
2014-11-26 20:07:27	<--	daNRG (~danny@g228253017.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2014-11-26 20:07:35	<--	luny (~luny@unaffiliated/luny) has quit (Ping timeout: 244 seconds)
2014-11-26 20:08:36	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-26 20:08:49	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-26 20:08:59	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-11-26 20:09:42	-->	pBlack (~pBlack@216.2.69.86) has joined ##c++
2014-11-26 20:10:06	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-26 20:10:58	<--	NoCreativity_ (~quassel@179.177.48.139.dynamic.adsl.gvt.net.br) has quit (Read error: Connection reset by peer)
2014-11-26 20:10:59	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-26 20:13:35	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 20:14:36	<--	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-11-26 20:16:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 20:17:04	<--	a_le (~a_le@mobile-166-171-248-175.mycingular.net) has quit (Remote host closed the connection)
2014-11-26 20:17:27	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-26 20:17:54	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-11-26 20:19:36	doug64k	pEYEd: put another % placeholder in the string
2014-11-26 20:19:59	-->	Douhan (uid13125@gateway/web/irccloud.com/x-jlgszcuawpigjyfx) has joined ##c++
2014-11-26 20:20:55	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-26 20:23:00	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 20:23:32	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 20:24:05	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 244 seconds)
2014-11-26 20:24:42	-->	illerucis (~illerucis@cpe-66-108-204-203.nyc.res.rr.com) has joined ##c++
2014-11-26 20:25:12	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-26 20:25:54	<--	illerucis (~illerucis@cpe-66-108-204-203.nyc.res.rr.com) has quit (Remote host closed the connection)
2014-11-26 20:26:14	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 20:26:27	-->	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-26 20:26:37	<--	adek (~adek@199.201.64.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 20:27:58	-->	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has joined ##c++
2014-11-26 20:28:34	jophish	Err, what's the solution to this: I'm sure it's very simple but I can't remember: http://ideone.com/SY9C2n
2014-11-26 20:28:46	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-26 20:29:11	jophish	I could pass tee as another template parameter, but that seems a bit horrible
2014-11-26 20:29:46	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-26 20:29:56	<--	_war10ck_ (~sayantan@106.51.142.158) has quit (Quit: leaving)
2014-11-26 20:31:54	<--	pBlack (~pBlack@216.2.69.86) has quit (Quit: This computer has gone to sleep)
2014-11-26 20:33:17	jophish	actually, it's not so bad just for this one parameter
2014-11-26 20:33:48	-->	nivyaj (uid41702@gateway/web/irccloud.com/x-zbntxvnkqdhpxvwr) has joined ##c++
2014-11-26 20:34:13	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-26 20:36:55	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 20:40:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 20:40:10	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-26 20:40:34	pEYEd	How do you insert more than one argument into sprintf?  https://bpaste.net/show/f9ab737d6179
2014-11-26 20:42:01	-->	pBlack (~pBlack@216.2.69.86) has joined ##c++
2014-11-26 20:42:21	-->	jbeaudry (~jbeaudry@172.56.39.77) has joined ##c++
2014-11-26 20:43:26	<--	pBlack (~pBlack@216.2.69.86) has quit (Client Quit)
2014-11-26 20:44:06	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 255 seconds)
2014-11-26 20:45:36	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-11-26 20:45:48	<--	jbeaudry (~jbeaudry@172.56.39.77) has quit (Client Quit)
2014-11-26 20:47:10	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-26 20:47:40	<--	Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-11-26 20:50:29	-->	SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-11-26 20:52:15	kralyk	pEYEd: First off, you should use snprintf.
2014-11-26 20:52:37	kralyk	pEYEd: To pass another parameter simply include its tag in the format string... or did you mean something else?
2014-11-26 20:52:47	-->	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has joined ##c++
2014-11-26 20:52:53	<--	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-26 20:52:57	egoldsten_	hello :-)
2014-11-26 20:53:08	CobaltHex	hero
2014-11-26 20:53:33	pEYEd	kralyk  it's only picking up one  ->  sprintf(sendbuy,"%.2f", beginprice, workcoins);
2014-11-26 20:54:05	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-11-26 20:56:18	-->	oleo__ (~oleo@xdsl-84-44-179-10.netcologne.de) has joined ##c++
2014-11-26 20:56:32	<--	torei (~torei@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Quit: Leaving)
2014-11-26 20:56:55	--	oleo is now known as Guest85724
2014-11-26 20:57:19	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 20:57:34	<--	Guest85724 (~oleo@xdsl-78-35-150-144.netcologne.de) has quit (Ping timeout: 255 seconds)
2014-11-26 20:59:49	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 21:00:51	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-26 21:02:30	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 265 seconds)
2014-11-26 21:02:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 21:04:09	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-26 21:05:14	-->	bb010g (uid21050@gateway/web/irccloud.com/x-gbycdlaorrttnomy) has joined ##c++
2014-11-26 21:05:40	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-26 21:06:51	avitex	If I have a std::list<shared_ptr>, is it fine to simply list::remove(shared_ptr)?
2014-11-26 21:08:53	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-26 21:09:33	-->	supersam (~supersam@c-73-14-18-149.hsd1.co.comcast.net) has joined ##c++
2014-11-26 21:11:45	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-26 21:11:52	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-26 21:11:56	-->	stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-26 21:14:49	<--	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-26 21:15:30	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 240 seconds)
2014-11-26 21:16:15	-->	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has joined ##c++
2014-11-26 21:18:12	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 244 seconds)
2014-11-26 21:19:59	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-26 21:20:53	-->	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-11-26 21:21:01	-->	lmnshade (~lmn@c-67-172-245-200.hsd1.ut.comcast.net) has joined ##c++
2014-11-26 21:21:03	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-26 21:21:05	yates	is it legal to pass a destructor arguments?
2014-11-26 21:21:20	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-26 21:22:57	egoldsten_	it takes no argument ...
2014-11-26 21:22:58	Oxyd	yates: No.
2014-11-26 21:23:13	egoldsten_	you can call it if you want ...
2014-11-26 21:23:43	Oxyd	avitex: Yes.
2014-11-26 21:23:53	yates	ok, right.
2014-11-26 21:24:07	avitex	Oxyd: Epic, I did try it, just wanted to be sure. http://ideone.com/2hg0rE
2014-11-26 21:25:06	<--	Garner (uid38417@gateway/web/irccloud.com/x-yagafdomzsxhdvzg) has quit (Quit: Connection closed for inactivity)
2014-11-26 21:25:10	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 21:26:04	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-26 21:26:08	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 240 seconds)
2014-11-26 21:26:27	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2014-11-26 21:27:31	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-26 21:27:53	<--	chewyDelicious (~nooblet@101.98.214.38) has quit (Ping timeout: 256 seconds)
2014-11-26 21:27:56	-->	chewyDelicious (~nooblet@101.98.214.38) has joined ##c++
2014-11-26 21:29:09	egoldsten_	it is called when needed by the compiler when an instance is out of the scope
2014-11-26 21:30:21	-->	TheHackOps (~TheHackOp@203-158-39-145.dyn.iinet.net.au) has joined ##c++
2014-11-26 21:30:56	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Quit: ????????!)
2014-11-26 21:31:44	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-26 21:32:10	<--	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-26 21:33:41	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-26 21:35:27	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-26 21:35:31	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-26 21:35:58	Jinxit	if my class has no pointers, there's no need for a destructor right?
2014-11-26 21:36:11	Jinxit	or arrays
2014-11-26 21:36:22	<--	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has left ##c++
2014-11-26 21:36:38	-->	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has joined ##c++
2014-11-26 21:36:48	<--	plash (~plash@cpe-65-189-214-200.neo.res.rr.com) has quit (Changing host)
2014-11-26 21:36:48	-->	plash (~plash@unaffiliated/plash) has joined ##c++
2014-11-26 21:36:52	Oxyd	No.
2014-11-26 21:37:05	plash	pEYEd: "%.2f %.2f"
2014-11-26 21:37:06	Oxyd	Nevertheless, most classes don't need a user-provided destructor.
2014-11-26 21:37:08	-->	Galik (~galik@cpc2-pool13-2-0-cust799.15-1.cable.virginm.net) has joined ##c++
2014-11-26 21:37:08	<--	Galik (~galik@cpc2-pool13-2-0-cust799.15-1.cable.virginm.net) has quit (Changing host)
2014-11-26 21:37:08	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2014-11-26 21:37:19	Oxyd	Most properly-designed classes, that is.
2014-11-26 21:38:14	Jinxit	oh right, because shared_ptr etc will get caught automatically right?
2014-11-26 21:38:21	Oxyd	Yes.
2014-11-26 21:38:25	Jinxit	neat
2014-11-26 21:39:34	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-26 21:40:22	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-26 21:40:55	pEYEd	plash it won't allow me to split it into 2 with the second "%.2f"
2014-11-26 21:40:59	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-26 21:41:08	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 21:41:35	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-26 21:44:01	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Remote host closed the connection)
2014-11-26 21:44:03	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-26 21:44:04	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-26 21:44:16	-->	ObjectiveMatt (~Objective@66.87.151.50) has joined ##c++
2014-11-26 21:45:18	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Ping timeout: 272 seconds)
2014-11-26 21:45:52	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-26 21:46:12	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
2014-11-26 21:46:55	plash	pEYEd: I don't follow. please post your code again
2014-11-26 21:47:11	pEYEd	  https://bpaste.net/show/f9ab737d6179
2014-11-26 21:47:57	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-26 21:47:57	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-26 21:48:32	-->	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has joined ##c++
2014-11-26 21:49:51	plash	pEYEd: what do you think is happening to the 'work' arg passed to the first sprintf()?
2014-11-26 21:50:03	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-26 21:51:05	pEYEd	plash it appears to be skipping over beginprice and only outputting work.
2014-11-26 21:51:45	plash	okay yes, but that's not /the problem/
2014-11-26 21:51:56	plash	you are passing two va args to something that only expects 1
2014-11-26 21:51:59	plash	s/two/2/
2014-11-26 21:52:38	plash	pEYEd: "%.8f" is only one format element, so it'll only peel one argument from the varargs
2014-11-26 21:52:52	yates	Jinxit: this really depends on the application. for example, the code may be have hardware outputs that need to be set to certain states on exit.
2014-11-26 21:53:02	-->	chipmadness (~chipmadne@75-134-183-81.dhcp.bycy.mi.charter.com) has joined ##c++
2014-11-26 21:53:07	yates	so it's not always just about pointers.
2014-11-26 21:53:10	plash	I doubt it is defined what will happen when you don't supply the same # of arguments as are specified in the format string
2014-11-26 21:53:58	Jinxit	yates: yeah true, i haven't really worked with hardware so i didn't think of that
2014-11-26 21:54:01	pEYEd	the php script expects 3 arguments  https://bpaste.net/show/2ec895f91086 the static 155 is the 3rd.
2014-11-26 21:54:15	pEYEd	plash  ^^
2014-11-26 21:54:27	<--	ObjectiveMatt (~Objective@66.87.151.50) has quit (Read error: Connection reset by peer)
2014-11-26 21:54:43	plash	it's the 2nd
2014-11-26 21:54:55	plash	that's not important
2014-11-26 21:54:58	plash	your sprintf is wrong
2014-11-26 21:55:12	plash	I don't even know what your original question was, so I should probably stop trying
2014-11-26 21:55:12	pEYEd	yup.
2014-11-26 21:55:50	pEYEd	how to pass two variable arguments. one one is making it.
2014-11-26 21:56:20	pEYEd	only one is making it  :/
2014-11-26 21:57:56	kralyk	pEYEd: So what's wrong with "%f %f"?
2014-11-26 21:58:21	<--	chipmadness (~chipmadne@75-134-183-81.dhcp.bycy.mi.charter.com) has quit (Read error: Connection reset by peer)
2014-11-26 21:58:46	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-26 22:00:22	<--	oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (Ping timeout: 265 seconds)
2014-11-26 22:00:40	lh_mouse	Is allowing the _copy ctor_ of an exception object to throw a good practice?
2014-11-26 22:01:05	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-26 22:01:28	pEYEd	kralyk it won't allow the second percent sign  cpp:113:43: warning: format '%f' expects a matching 'double' argument
2014-11-26 22:01:54	-->	oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-11-26 22:01:55	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-26 22:02:31	Oxyd	lh_mouse: It sounds like a stupid practice.
2014-11-26 22:03:13	Oxyd	geordi: struct foo { foo() = default; foo(foo const&) { throw 0; } }; int main() { try { throw foo{}; } catch (foo&) { } }
2014-11-26 22:03:14	geordi	terminated by exception: 0
2014-11-26 22:04:50	<--	lmnshade (~lmn@c-67-172-245-200.hsd1.ut.comcast.net) has quit (Changing host)
2014-11-26 22:04:50	-->	lmnshade (~lmn@unaffiliated/pentagrass) has joined ##c++
2014-11-26 22:06:45	<--	lmnshade (~lmn@unaffiliated/pentagrass) has left ##c++
2014-11-26 22:07:42	<--	adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-26 22:08:19	doug64k	pEYEd: you need %lf for double
2014-11-26 22:09:46	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-26 22:09:54	lh_mouse	doug64k, it is %Lf.
2014-11-26 22:09:59	<--	avitex (a5e42998@gateway/web/freenode/ip.165.228.41.152) has quit (Quit: Page closed)
2014-11-26 22:10:02	lh_mouse	oh that 's for long double.
2014-11-26 22:10:11	lh_mouse	doug64k, you don't need the l for double.
2014-11-26 22:10:35	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-26 22:11:06	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-26 22:11:16	egoldsten_	I think it is better just to put scalars in exception lh_mouse so you don't need to define a copy construction it is made by the made by the compiler
2014-11-26 22:11:32	<--	K-ballo (~sonoio@181.228.126.42) has quit (Quit: Bye)
2014-11-26 22:12:07	doug64k	lh_mouse: correct. that is crap in my head from msvc
2014-11-26 22:13:26	lh_mouse	doug64k, C is crap.
2014-11-26 22:13:29	egoldsten_	it's just for long double
2014-11-26 22:13:35	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-26 22:14:14	lh_mouse	In C float parameters get promoted to double in printf so %f actually works with double.
2014-11-26 22:14:32	lh_mouse	And MSVC does not support C99 %Lf IIRC.
2014-11-26 22:14:33	doug64k	right
2014-11-26 22:14:51	doug64k	lh_mouse: ...
2014-11-26 22:15:04	doug64k	http://msdn.microsoft.com/en-us/library/tcxf1dw6.aspx
2014-11-26 22:15:06	doug64k	nice try though
2014-11-26 22:15:35	egoldsten_	what is best way to know the archicture in static?
2014-11-26 22:15:38	lh_mouse	long double  -> l or L     // totally crap
2014-11-26 22:15:43	egoldsten_	architecture
2014-11-26 22:16:03	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-26 22:16:11	egoldsten_	to avoi somthing like pow(sizeof(voi*),2)...
2014-11-26 22:16:12	lh_mouse	According to C99 an l before f has no effect. And in C89 it is UB.
2014-11-26 22:16:18	egoldsten_	void* sorry
2014-11-26 22:16:30	-->	chipmadness (~chipmadne@75-134-183-81.dhcp.bycy.mi.charter.com) has joined ##c++
2014-11-26 22:18:50	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 22:19:14	-->	kaleid0 (~kaleid0@2600:1014:b063:51ed:d8ae:5b35:8d70:67db) has joined ##c++
2014-11-26 22:19:29	lh_mouse	egoldsten_, what if we need to store a string inside an exception? Store a shared_ptr instead?
2014-11-26 22:19:55	egoldsten_	non use a "const char*"
2014-11-26 22:20:00	doug64k	lh_mouse: strings will get copied by the auto-generated copy constructor
2014-11-26 22:20:08	egoldsten_	somthing that is allocated at startup
2014-11-26 22:20:21	doug64k	std::string
2014-11-26 22:20:29	Oxyd	lh_mouse: There's a reason why standard exception classes don't take std::string.
2014-11-26 22:20:29	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 22:20:38	egoldsten_	when you catch the exception you can print a better message lh_mouse
2014-11-26 22:20:53	lh_mouse	Oxyd, they do. -> std::runtime_error
2014-11-26 22:20:58	-->	DarkArcher (~Archer]@162.253.129.218) has joined ##c++
2014-11-26 22:21:07	doug64k	Oxyd: why? so the program can survive a few hundred more microseconds then crash from OOM?
2014-11-26 22:21:09	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-26 22:21:17	<--	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has quit (Quit: rcirc on GNU Emacs 24.3.1)
2014-11-26 22:21:23	egoldsten_	but they might also throw execptions doug64k ...
2014-11-26 22:21:27	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-26 22:21:32	Oxyd	lh_mouse: Mhm. You're right. But they don't store it.
2014-11-26 22:21:33	doug64k	why would they throw unless OOM
2014-11-26 22:21:34	lh_mouse	egoldsten_, there IS std::runtime_error.
2014-11-26 22:21:51	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-26 22:21:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 22:21:52	egoldsten_	it is great I used it lh_mouse
2014-11-26 22:21:53	Oxyd	Or do they?
2014-11-26 22:22:05	lh_mouse	Oxyd, they must store it, but not as an std::string.
2014-11-26 22:22:40	-->	kdawg (~kevin@cpe-70-115-139-112.austin.res.rr.com) has joined ##c++
2014-11-26 22:23:16	<--	lh_cat (~yaaic@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 245 seconds)
2014-11-26 22:23:36	egoldsten_	const char* are not so bad if you that it points to somthing static
2014-11-26 22:23:45	egoldsten_	like a string in the source code
2014-11-26 22:23:51	Oxyd	Right. Those ctors that take string aren't noexcept.
2014-11-26 22:23:53	egoldsten_	know
2014-11-26 22:24:00	doug64k	you can get away with char const* and use statically allocated string literal so it can't fail
2014-11-26 22:24:14	doug64k	but in my opinion, if you are making the OOM scenario work you are wasting your time
2014-11-26 22:24:48	egoldsten_	what is OOM doug64k ?
2014-11-26 22:24:53	doug64k	out of memory
2014-11-26 22:24:53	egoldsten_	I don't know
2014-11-26 22:24:57	egoldsten_	of thanks
2014-11-26 22:25:29	<--	chipmadness (~chipmadne@75-134-183-81.dhcp.bycy.mi.charter.com) has quit (Ping timeout: 255 seconds)
2014-11-26 22:25:47	egoldsten_	I use execptions just for deadly errors most of the time it is for exit the program
2014-11-26 22:25:59	egoldsten_	I have a die() function
2014-11-26 22:26:10	doug64k	if you exhaustively unit test every allocation call site with fault injection then I can believe your program can continue after OOM
2014-11-26 22:27:08	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-26 22:27:20	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-26 22:28:38	egoldsten_	I manage buffers on the stack embedded in a template class It is like this "fix_array<int,32> little_array;" I can put objects also like that
2014-11-26 22:28:52	egoldsten_	I do not use the STL
2014-11-26 22:31:31	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-26 22:33:38	<--	herocoder (~herocoder@68.83.210.114) has quit (Ping timeout: 258 seconds)
2014-11-26 22:34:36	<--	Kelsie|2 (~Kelsie@unaffiliated/kelsie) has quit (Quit: Bye <3)
2014-11-26 22:36:29	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-26 22:38:37	<--	Rafaelfsilva (~Rafaelfsi@3.ip-198-50-147.net) has quit (Ping timeout: 244 seconds)
2014-11-26 22:39:08	<--	prime (~prime@unaffiliated/primex) has quit (Ping timeout: 244 seconds)
2014-11-26 22:40:55	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 22:42:06	<--	hatzopoulos (~hatzopoul@modemcable153.86-83-70.mc.videotron.ca) has quit (Quit: Leaving)
2014-11-26 22:43:58	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Ping timeout: 255 seconds)
2014-11-26 22:45:40	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-26 22:45:54	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 256 seconds)
2014-11-26 22:46:04	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-26 22:46:20	-->	MulleDK20 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-11-26 22:46:25	-->	mukunda (~mukunda@24.9.162.249) has joined ##c++
2014-11-26 22:46:31	-->	int0x27h_ (~int0x27h@unaffiliated/int0x27h) has joined ##c++
2014-11-26 22:47:23	-->	LetoTheII (~jd@unaffiliated/letothe2nd) has joined ##c++
2014-11-26 22:47:24	-->	yeticry_ (~yeticry@60.168.89.165) has joined ##c++
2014-11-26 22:47:29	-->	Christian86 (Administra@185.66.140.51) has joined ##c++
2014-11-26 22:47:48	-->	antons__ (~antons@199.48.120.2) has joined ##c++
2014-11-26 22:48:07	-->	Dreadnaught (~Dreadnaug@36.154.dsl.brs.iprimus.net.au) has joined ##c++
2014-11-26 22:48:07	<--	Dreadnaught (~Dreadnaug@36.154.dsl.brs.iprimus.net.au) has quit (Changing host)
2014-11-26 22:48:07	-->	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-11-26 22:48:27	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-26 22:48:43	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-26 22:48:47	-->	mf____ (~mf_@188.113.126.36) has joined ##c++
2014-11-26 22:49:05	-->	dirtydaw1 (dirtydawg@gateway/shell/blinkenshell.org/x-onhyfgvkchoatfqa) has joined ##c++
2014-11-26 22:49:07	<--	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-26 22:49:12	-->	Praise- (~Fat@unaffiliated/praise) has joined ##c++
2014-11-26 22:49:47	-->	thesquib_ (~thesquib@squib.co.nz) has joined ##c++
2014-11-26 22:50:01	-->	FabTG__ (~ftg@142.ip-37-59-108.eu) has joined ##c++
2014-11-26 22:50:02	<--	DrBenway (~DrBenway@235-250-126-200.fibertel.com.ar) has quit (Ping timeout: 265 seconds)
2014-11-26 22:50:04	-->	Zarthuss (Zarthus@trivialand/guesser/zarthus) has joined ##c++
2014-11-26 22:50:18	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-26 22:50:49	-->	kriskrop1 (~kris@108-81-178-201.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2014-11-26 22:50:50	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-26 22:51:00	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 265 seconds)
2014-11-26 22:51:04	-->	gregj_ (~gj@gregj.kernel.pl) has joined ##c++
2014-11-26 22:51:26	-->	kbtr_ (~kbtr@zncb.io) has joined ##c++
2014-11-26 22:51:35	<--	yeticry (~yeticry@60.168.89.165) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	int0x27h (~int0x27h@unaffiliated/int0x27h) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	Christian87 (Administra@185.66.140.51) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	LetoThe2nd (~jd@unaffiliated/letothe2nd) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	mukunda_ (~mukunda@24.9.162.249) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	Zarthus (Zarthus@trivialand/guesser/zarthus) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	thesquib (~thesquib@squib.co.nz) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	mf___ (~mf_@188.113.126.36) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	FabTG (~ftg@142.ip-37-59-108.eu) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	dirtydawg (dirtydawg@gateway/shell/blinkenshell.org/x-vlhlkwgqnxtovptw) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	Praise (~Fat@unaffiliated/praise) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	kriskropd (~kris@unaffiliated/kriskropd) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:35	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	kbtr (~kbtr@zncb.io) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	gregj (~gj@pdpc/supporter/student/gregj) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	jakemp (~jakemp@user-105n004.cable.mindspring.com) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	Refresh (~Refresh@ec2-54-93-174-158.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	yan_ (~yan@162.243.0.148) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	antons_ (~antons@199.48.120.2) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	<--	Ardonik (~user@adsl-75-28-98-116.dsl.irvnca.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:36	--	int0x27h_ is now known as int0x27h
2014-11-26 22:51:50	--	MulleDK20 is now known as MulleDK19
2014-11-26 22:51:57	<--	gnoirzox (~gnoirzox@178.170.103.136) has quit (Ping timeout: 264 seconds)
2014-11-26 22:51:58	-->	yan_ (~yan@162.243.0.148) has joined ##c++
2014-11-26 22:51:59	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (Read error: Connection reset by peer)
2014-11-26 22:52:00	-->	blueness (~blueness@cpe-74-77-145-97.buffalo.res.rr.com) has joined ##c++
2014-11-26 22:52:00	<--	blueness (~blueness@cpe-74-77-145-97.buffalo.res.rr.com) has quit (Changing host)
2014-11-26 22:52:01	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2014-11-26 22:52:06	-->	Refresh (~Refresh@ec2-54-93-174-158.eu-central-1.compute.amazonaws.com) has joined ##c++
2014-11-26 22:52:13	-->	jakemp (~jakemp@user-105n004.cable.mindspring.com) has joined ##c++
2014-11-26 22:52:19	-->	ciaranm (~ciaranm@tchaikovsky.exherbo.org) has joined ##c++
2014-11-26 22:52:19	<--	ciaranm (~ciaranm@tchaikovsky.exherbo.org) has quit (Changing host)
2014-11-26 22:52:19	-->	ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has joined ##c++
2014-11-26 22:52:30	-->	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has joined ##c++
2014-11-26 22:52:41	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has joined ##c++
2014-11-26 22:52:50	-->	Ardonik (~user@adsl-75-28-98-116.dsl.irvnca.sbcglobal.net) has joined ##c++
2014-11-26 22:52:58	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-26 22:53:08	-->	gnoirzox (~gnoirzox@178.170.103.136) has joined ##c++
2014-11-26 22:53:24	-->	nardev (~nardev@77.238.221.157) has joined ##c++
2014-11-26 22:54:34	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2014-11-26 22:55:20	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-26 22:57:26	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 22:59:19	-->	SiN_Bizkit (~SiN_Bizki@host-94-251-111-51.bbcustomer.zsttk.net) has joined ##c++
2014-11-26 22:59:27	-->	bulldog (~diego@nat-130-132-173-179.central.yale.edu) has joined ##c++
2014-11-26 23:00:41	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 23:01:05	Goles	Guys, where's the recommended place to paste C++? ideally with STDIN support?
2014-11-26 23:01:30	kralyk	ideone.com
2014-11-26 23:01:34	egoldsten_	I've seen something today
2014-11-26 23:02:02	det	Goles, coliru/ideone
2014-11-26 23:02:42	egoldsten_	http://gcc.godbolt.org/ Goles
2014-11-26 23:02:54	egoldsten_	It's new i think
2014-11-26 23:03:09	egoldsten_	but the others are ok
2014-11-26 23:03:12	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-26 23:03:27	-->	moonchild (~loon@73.13.118.191) has joined ##c++
2014-11-26 23:03:49	KrzaQ	Goles: http://melpon.org/wandbox/
2014-11-26 23:03:58	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-26 23:04:01	KrzaQ	superior to other three mentioned
2014-11-26 23:04:28	egoldsten_	yes! It's quite better KrzaQ
2014-11-26 23:04:30	-->	josh (~josh@66.29.190.54.static.utbb.net) has joined ##c++
2014-11-26 23:04:53	Goles	Cool, thanks!
2014-11-26 23:04:59	<--	kaleid0 (~kaleid0@2600:1014:b063:51ed:d8ae:5b35:8d70:67db) has quit (Ping timeout: 258 seconds)
2014-11-26 23:05:44	-->	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has joined ##c++
2014-11-26 23:06:47	Goles	guys, if I have a file with this format: https://gist.github.com/Goles/486258f0a694f358bb74 , and I start reading STDIN with 'int a; cin >> a' (a will be == 3). Then if I start using the getline function to read each line after the '3', the 3 will be read again... how can I avoid this issue?
2014-11-26 23:07:19	KrzaQ	will it?
2014-11-26 23:07:53	-->	dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-26 23:07:55	moonchild	um, don't use iostreams for input?
2014-11-26 23:08:23	Goles	moonchild: I'm getting started into reading input... what would be a better way to do it?
2014-11-26 23:08:34	Goles	KrzaQ: apparently... yes, here's a working example.
2014-11-26 23:08:38	KrzaQ	Goles: http://melpon.org/wandbox/permlink/a4C5Hu96zcE8mX3y
2014-11-26 23:09:36	moonchild	Goles: using >> for input is buggy and error prone, i could go off on a lecture about it, but offering a concrete suggestion instead,
2014-11-26 23:10:07	moonchild	use getline for everything, and parse the strings read yourself
2014-11-26 23:10:19	egoldsten_	yes i think stroustrup doest not use it
2014-11-26 23:10:20	Goles	KrzaQ: take a look http://ideone.com/GuZdez,
2014-11-26 23:10:29	-->	Nando_k (~Nando_k@dslb-178-003-077-058.178.003.pools.vodafone-ip.de) has joined ##c++
2014-11-26 23:10:30	Goles	moonchild: thanks for the tip,
2014-11-26 23:10:59	Goles	moonchild: so to read the first integer in my file, can getline just do getline(cin, num); (int num;)
2014-11-26 23:11:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 23:11:07	KrzaQ	Goles: so where exactly is 3 read again?
2014-11-26 23:11:10	moonchild	no
2014-11-26 23:11:14	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 255 seconds)
2014-11-26 23:11:34	KrzaQ	3 is removed from stream, you're left with "\naaab\nbaa\naaa"
2014-11-26 23:11:35	moonchild	getline(cin, string); int = stol(string)
2014-11-26 23:11:46	Goles	moonchild: it's read in line 42
2014-11-26 23:11:59	-->	Simplar (05e47fbd@gateway/web/freenode/ip.5.228.127.189) has joined ##c++
2014-11-26 23:12:03	-->	AgentElrond (~ELROND@50-89-233-100.res.bhn.net) has joined ##c++
2014-11-26 23:12:04	KrzaQ	moonchild: what exactly is buggy about >> ?
2014-11-26 23:12:19	-->	KAHR-Alpha_ (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-26 23:12:24	AgentElrond	Question:  Given this:  http://stackoverflow.com/questions/1352370/c-static-array-initialization-how-verbose-do-i-need-to-be/1352379#1352379
2014-11-26 23:12:31	nolyc	<http://tinyurl.com/pumtfb2> (at stackoverflow.com)
2014-11-26 23:12:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 23:12:37	moonchild	KrzaQ: the problem with it is that it mixes i/o with parsing, the two should be separate
2014-11-26 23:12:43	egoldsten_	it is slow and not useful it well known
2014-11-26 23:12:58	Simplar	hi, any good API to work with MySQL in C++?
2014-11-26 23:12:59	AgentElrond	Does "SomeClass myObj = { };" initialize member variables of myObj with "value initialization" or "default initialization", and how can I determine which given the standard?
2014-11-26 23:13:10	moonchild	you can't tell where an error originates, and detecting an error is error prone as well
2014-11-26 23:13:12	KrzaQ	that is a design problem, but I wouldn't call it a bug
2014-11-26 23:13:18	lh_mouse	!give Simplar general
2014-11-26 23:13:19	nolyc	Simplar: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-26 23:13:35	moonchild	KrzaQ: using an api with design flaws *is* a bug
2014-11-26 23:13:37	lh_mouse	!give AgentElrond stdref value initialization
2014-11-26 23:13:39	nolyc	AgentElrond: http://en.cppreference.com/w/cpp/language/value_initialization
2014-11-26 23:13:40	<--	KAHR-Alpha (~Alpha@AReims-652-1-174-213.w90-58.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2014-11-26 23:13:48	--	KAHR-Alpha_ is now known as KAHR-Alpha
2014-11-26 23:13:58	<--	Simplar (05e47fbd@gateway/web/freenode/ip.5.228.127.189) has left ##c++
2014-11-26 23:14:10	AgentElrond	lh_mouse:  Thanks, I'll read that
2014-11-26 23:14:56	<--	Nando_k (~Nando_k@dslb-178-003-077-058.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 258 seconds)
2014-11-26 23:15:14	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-26 23:15:19	KrzaQ	Goles: http://ideone.com/GtS4xh
2014-11-26 23:15:55	Goles	it worked using getline
2014-11-26 23:16:25	Goles	cin.ignore(numeric_limits<std::streamsize>::max(), '\n'); , I see...
2014-11-26 23:16:41	Goles	apparently getline does it too?
2014-11-26 23:16:53	KrzaQ	no, it simply reads a whole line
2014-11-26 23:17:00	-->	kaleid0 (~kaleid0@2600:1014:b018:d32f:ed59:5b06:bc14:1f6b) has joined ##c++
2014-11-26 23:17:18	<--	Tenju (~rayston@ip68-106-242-42.ph.ph.cox.net) has quit (Ping timeout: 245 seconds)
2014-11-26 23:17:20	KrzaQ	moonchild: it may be not efficient due to stupid virtual inheritance and locales, but it definitely is useful when reading a stream.
2014-11-26 23:17:44	moonchild	i'm not going to frown upon the use of getline()
2014-11-26 23:18:09	moonchild	but really, the entire iostreams framework is kinda f***ed
2014-11-26 23:18:18	<--	AgentElrond (~ELROND@50-89-233-100.res.bhn.net) has quit (Quit: Leaving.)
2014-11-26 23:18:29	egoldsten_	alexendrei insists a lot about that "virtuals"
2014-11-26 23:19:12	moonchild	virtual dispatch is a perf hit in critical code, that's the place he plays in
2014-11-26 23:19:25	det	egoldsten_, still trolling ?
2014-11-26 23:19:42	egoldsten_	yes I try to avoid it now so I do a lot of templates moonchild
2014-11-26 23:19:55	det	egoldsten_, I think your nose is growing, soon you will be egolsten___
2014-11-26 23:20:04	egoldsten_	oh you think det it is real problems
2014-11-26 23:20:51	egoldsten_	i don't understand what you mean det i think you have false ideas about me
2014-11-26 23:20:56	moonchild	egoldsten_: it *is* a real problem, but i doubt you've ever written any code that it has made a noticeable difference in
2014-11-26 23:21:13	egoldsten_	why do you say that moonchild ?
2014-11-26 23:21:14	det	Im just a simple caveman, your idea frighten and confuse me!
2014-11-26 23:21:50	KrzaQ	io is always outside the perf critical code for me
2014-11-26 23:21:58	moonchild	because you have to run a tight loop *billions* if not *trillions* of iterations to have that perf hit actually make a difference
2014-11-26 23:22:05	KrzaQ	that's why I'm happy enough with std streams
2014-11-26 23:22:06	egoldsten_	ok det I'm open to talk about it i'm not trolling
2014-11-26 23:23:13	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-26 23:23:26	egoldsten_	you know det I do the way that is useful to me first of all
2014-11-26 23:23:31	moonchild	oh, and you need an application for that loop that seconds off the time means pass/fail or can be tied to lotsa money
2014-11-26 23:25:37	<--	nikb (~nikb@ip68-224-246-203.lv.lv.cox.net) has quit (Ping timeout: 245 seconds)
2014-11-26 23:25:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 23:28:34	<--	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has quit (Quit: WeeChat 1.0.1)
2014-11-26 23:28:48	-->	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has joined ##c++
2014-11-26 23:28:48	<--	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has quit (Changing host)
2014-11-26 23:28:48	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-26 23:28:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 23:29:43	det	KrzaQ, thanks for the link, ill check it out
2014-11-26 23:30:06	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-26 23:30:33	egoldsten_	are you a beginner det ?
2014-11-26 23:31:10	moonchild	he is not
2014-11-26 23:32:01	egoldsten_	ok moonchild he said he is frighten I'm not frighten by any c++ or haskell stuff
2014-11-26 23:32:04	-->	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has joined ##c++
2014-11-26 23:32:46	moonchild	he was referencing a saturday night live skit
2014-11-26 23:33:06	<--	DexterLB (~dex@84.238.159.106) has quit (Ping timeout: 245 seconds)
2014-11-26 23:33:26	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-26 23:33:34	egoldsten_	ok I'm not native I don't know this kind of things moonchild
2014-11-26 23:33:47	egoldsten_	I'm basic
2014-11-26 23:34:05	KrzaQ	this is a C++ channel, basic has no place here
2014-11-26 23:34:07	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ywfjaojmnegvuzri) has quit (Quit: Connection closed for inactivity)
2014-11-26 23:34:52	<--	nardev (~nardev@77.238.221.157) has quit (Quit: Ex-Chat)
2014-11-26 23:35:26	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-26 23:36:19	egoldsten_	In the words KrzaQ I'm writing in c++ for a long time
2014-11-26 23:36:21	<--	prime (~prime@unaffiliated/primex) has quit (Ping timeout: 244 seconds)
2014-11-26 23:39:25	-->	basic6_ (~basic6@p4FCB6CDA.dip0.t-ipconnect.de) has joined ##c++
2014-11-26 23:39:26	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-26 23:40:09	-->	nardev (~nardev@77.238.221.157) has joined ##c++
2014-11-26 23:40:21	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-26 23:40:41	-->	KarolisK (~karolis@194.28.233.64) has joined ##c++
2014-11-26 23:41:34	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-phiznwqrolphxfge) has quit (Quit: Connection closed for inactivity)
2014-11-26 23:42:05	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-26 23:42:36	-->	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has joined ##c++
2014-11-26 23:42:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-26 23:42:51	<--	basic6 (~basic6@p4FCB6344.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-26 23:43:44	-->	rayston (~rayston@ip68-106-242-42.ph.ph.cox.net) has joined ##c++
2014-11-26 23:44:23	moonchild	what's a long time?
2014-11-26 23:44:24	--	rayston is now known as Tengu
2014-11-26 23:44:48	--	Tengu is now known as Tenguu
2014-11-26 23:44:54	--	Tenguu is now known as Tengu
2014-11-26 23:45:00	--	Tengu is now known as Tenguu
2014-11-26 23:45:06	<--	bulldog (~diego@nat-130-132-173-179.central.yale.edu) has quit (Quit: Leaving)
2014-11-26 23:45:30	KrzaQ	sounds like time_t on ILP32
2014-11-26 23:46:01	moonchild	probably more like time_t on an avr :P
2014-11-26 23:46:55	egoldsten_	about 20 years a think moonchild too long
2014-11-26 23:48:23	--	Tenguu is now known as Tenju
2014-11-26 23:49:19	<--	LickPlusPlus (~LickPytho@58.166.109.179) has left ##c++
2014-11-26 23:50:25	-->	LickPlusPlus (~LickPytho@58.166.109.179) has joined ##c++
2014-11-26 23:51:52	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-26 23:52:03	JamesNZ	geordi: { cout << 0x10000 == 65536; }
2014-11-26 23:52:03	geordi	error: no match for 'operator==' (operand types are 'ostream' and 'int')
2014-11-26 23:52:15	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-26 23:52:19	JamesNZ	geordi: { cout << (0x10000 == 65536); }
2014-11-26 23:52:19	geordi	true
2014-11-26 23:52:28	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-26 23:52:52	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-26 23:53:04	-->	DrBenway (~DrBenway@235-250-126-200.fibertel.com.ar) has joined ##c++
2014-11-26 23:53:13	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Client Quit)
2014-11-26 23:54:27	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has quit (Ping timeout: 255 seconds)
2014-11-26 23:54:47	LickPlusPlus	testing if my registration worked
2014-11-26 23:55:32	LickPlusPlus	Looks like it did :D I have a noob question for anyone with the patience to answer
2014-11-26 23:56:00	moonchild	shoot and i'm sure someone will answer
2014-11-26 23:56:17	lh_mouse	time_t shall be unsigned IIRC.
2014-11-26 23:57:13	LickPlusPlus	What's the difference between structures and classes? Google was a little helpful, I learned that the access permissions are handled differently by either one, but is that the only difference? They just seem so similar to me
2014-11-26 23:57:19	moonchild	lh_mouse: iirc, the c standard has it as an opaque type, hence why everything passes it around as a time_t*
2014-11-26 23:57:51	moonchild	LickPlusPlus: there's no difference besides the default access policy
2014-11-26 23:57:59	<--	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has quit (Ping timeout: 272 seconds)
2014-11-26 23:58:16	<--	josh (~josh@66.29.190.54.static.utbb.net) has quit (Ping timeout: 256 seconds)
2014-11-26 23:58:30	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 265 seconds)
2014-11-26 23:58:41	KrzaQ	<< is_pod<A>::value; class A{public: int x;};
2014-11-26 23:58:41	geordi	true
2014-11-26 23:59:04	LickPlusPlus	Fair enough, thanks!
2014-11-26 23:59:21	moonchild	!next
2014-11-26 23:59:22	nolyc	Another satisfied customer, next!
2014-11-26 23:59:58	--	stryyker2 is now known as Stryyker
2014-11-27 00:00:00	lh_mouse	geordi, -c { foo f; static_cast<bar &>(f); } class foo { }; struct bar : foo { }; // LickPlusPlus
2014-11-27 00:00:01	geordi	warning: statement has no effect
2014-11-27 00:00:10	lh_mouse	oh no
2014-11-27 00:00:27	-->	HerzogDeXtEr (~flex@i59F6CB30.versanet.de) has joined ##c++
2014-11-27 00:00:35	lh_mouse	geordi, -cw { bar b; static_cast<foo &>(b); } class foo { }; struct bar : foo { }; // LickPlusPlus
2014-11-27 00:00:36	geordi	Success
2014-11-27 00:00:43	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-27 00:01:05	lh_mouse	geordi, replace last struct with class
2014-11-27 00:01:05	geordi	error: 'foo' is an inaccessible base of 'bar'
2014-11-27 00:02:03	<--	Burgundy (~burgundy@188.26.254.244) has quit (Remote host closed the connection)
2014-11-27 00:02:09	moonchild	yeah LickPlusPlus, to lh_mouse's point, not only members, but base classes inherit the access policy of struct/class
2014-11-27 00:02:22	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has joined ##c++
2014-11-27 00:03:28	moonchild	e.g. struct foo1 : base { } is analog to class foo2 : public base { }
2014-11-27 00:04:45	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-27 00:05:13	KrzaQ	some commercial compilers produce different symbols for structs and classes and whine when you mix those (i.e. forward declare class x, use struct x)
2014-11-27 00:05:53	LickPlusPlus	I won't pretend to understand that code haha
2014-11-27 00:06:06	lh_mouse	KrzaQ, get rid of MSVC.
2014-11-27 00:06:13	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 265 seconds)
2014-11-27 00:06:17	KrzaQ	done already :)
2014-11-27 00:06:18	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 00:06:31	lh_mouse	MSVC is an uncompiler.
2014-11-27 00:07:12	KrzaQ	the only thing I miss now is the super-easy-to-use debugger bundled with visual studio
2014-11-27 00:07:59	moonchild	pfft
2014-11-27 00:08:09	<--	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2014-11-27 00:08:11	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Quit: ChatZilla 0.9.91-rdmsoft [XULRunner 32.0.3/20140923175406])
2014-11-27 00:08:29	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-27 00:09:02	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-11-27 00:09:15	moonchild	debuggers are useful tools, but stepping through code with one is a crutch that you need to let go of at some point
2014-11-27 00:09:34	IWishIKnew	moonchild:  why do you say that?
2014-11-27 00:10:32	moonchild	because learning how read code and see what it does in your head is a valuable skill
2014-11-27 00:10:44	IWishIKnew	KrzaQ:  get codelite.  It integrates beautifly with GDB.
2014-11-27 00:10:57	IWishIKnew	moonchild:  oh, I already know how to do that...
2014-11-27 00:11:10	KrzaQ	Qt Creator isn't half bad
2014-11-27 00:11:16	-->	proteusguy (~proteusgu@ppp-110-168-229-227.revip5.asianet.co.th) has joined ##c++
2014-11-27 00:11:26	IWishIKnew	moonchild:  I could not get my debugger to work for a year when I started learning C++...  I learned to "run" it in my mind...
2014-11-27 00:11:31	BZEU	why should you do const char *str and not char *str?
2014-11-27 00:11:34	moonchild	best thing i've seen for gdb integration tbh, is emacs
2014-11-27 00:12:13	moonchild	also there is some code that you just can't step through in a debugger
2014-11-27 00:12:19	egoldsten_	I use code block for debugging. I works. command line and geany most of the time
2014-11-27 00:12:28	IWishIKnew	like Operating system programming   ;)
2014-11-27 00:12:33	IWishIKnew	hehe
2014-11-27 00:12:43	moonchild	like anything multithreaded
2014-11-27 00:12:47	IWishIKnew	haha
2014-11-27 00:12:48	KrzaQ	ot template metaprogramming
2014-11-27 00:12:51	KrzaQ	:/
2014-11-27 00:13:11	moonchild	you *can* step through templates in a debugger
2014-11-27 00:13:25	moonchild	but like, why are you stepping through code?
2014-11-27 00:13:32	KrzaQ	not in the way I meant
2014-11-27 00:13:32	IWishIKnew	yeah, multi-threading is fun.  I like to share memory between threads, though.  Makes it easier for them to operate in unison.
2014-11-27 00:13:54	kalven	blub blub
2014-11-27 00:14:12	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-27 00:14:34	 *	moonchild wonders what the point of threads is without shared memory
2014-11-27 00:14:36	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-27 00:15:00	egoldsten_	prinf debugging
2014-11-27 00:15:04	egoldsten_	printf
2014-11-27 00:15:07	IWishIKnew	well, there isn't "shared" memory, but I pass the same pointer to each thread.
2014-11-27 00:15:29	IWishIKnew	that way, they share the same variables, and can modify them, etc...
2014-11-27 00:15:49	moonchild	in any event, the debugger is a tool
2014-11-27 00:15:50	kalven	that's what moonchild meant
2014-11-27 00:16:10	egoldsten_	there is "worker threads" like in JS with just message passing, small shared memody usage
2014-11-27 00:16:37	moonchild	threads in the same program share the same memory space. period.
2014-11-27 00:16:45	IWishIKnew	I don't fell obliged to name my threads...
2014-11-27 00:16:52	IWishIKnew	they're just threads...
2014-11-27 00:17:04	IWishIKnew	to me they all do "work"./
2014-11-27 00:17:25	kalven	who said anything about naming threads?
2014-11-27 00:17:46	IWishIKnew	<egoldsten_> there is "worker threads"
2014-11-27 00:17:51	IWishIKnew	^ he did
2014-11-27 00:17:59	moonchild	yeah, where naming them comes in handy is in large apps when something is using 100% cpu and the name you gave a thread gets displayed in top
2014-11-27 00:18:17	kalven	no, he was refering to the threading model that browsers use, it has nothing to do with names
2014-11-27 00:18:41	IWishIKnew	in any case, I detest the use of "worker thread"
2014-11-27 00:19:26	kalven	you'll probably detest them less once you become more experienced
2014-11-27 00:19:29	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 00:19:30	-->	NoNMaDDeN (~NoNMaDDeN@203.209.53.60) has joined ##c++
2014-11-27 00:19:32	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2014-11-27 00:19:48	 *	moonchild chuckles
2014-11-27 00:20:29	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-27 00:20:32	moonchild	'worker thread' is infinitely less confusing and more terse that 'chopstick arbitrating thread in dining philosopher problem'
2014-11-27 00:20:33	IWishIKnew	kalven:  no... probably not.
2014-11-27 00:20:42	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 250 seconds)
2014-11-27 00:20:45	kalven	:)
2014-11-27 00:21:39	IWishIKnew	namely because there are no threads that don't do any "work".... if there are, then they should be removed because they are useless.
2014-11-27 00:22:05	egoldsten_	you know there is different patterns for that IWishIKnew ...
2014-11-27 00:22:06	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-27 00:22:29	IWishIKnew	I do, and I still disagree with the naming.
2014-11-27 00:22:38	IWishIKnew	it's too arbitrary...
2014-11-27 00:22:44	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 264 seconds)
2014-11-27 00:23:09	moonchild	let's also do away with the terms in the workplace 'boss and worker'
2014-11-27 00:23:11	IWishIKnew	It's like saying "I eat fruity fruit", as if there is fruit that isn't fruity...
2014-11-27 00:23:19	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2014-11-27 00:23:34	BZEU	Guys help me out, when should the parameter be constant or a reference or nothing.
2014-11-27 00:23:44	kalven	it's a common term, IWishIKnew. it has meaning.
2014-11-27 00:23:50	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Quit: WeeChat 1.0.1)
2014-11-27 00:24:01	kalven	you may not have employed the patterns where they are used yet, but I suppose you will in the future
2014-11-27 00:24:06	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2014-11-27 00:24:06	IWishIKnew	kalven:  and, yet, it's still a poor choice of name....
2014-11-27 00:24:10	moonchild	and work is the application of force over distance
2014-11-27 00:24:37	IWishIKnew	are we really going to be pedantic now?
2014-11-27 00:24:44	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 00:24:48	-->	qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-11-27 00:24:55	<--	kaleid0 (~kaleid0@2600:1014:b018:d32f:ed59:5b06:bc14:1f6b) has quit (Ping timeout: 258 seconds)
2014-11-27 00:24:58	moonchild	that bridge was crossed some time ago :)
2014-11-27 00:25:07	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2014-11-27 00:25:42	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-27 00:25:43	IWishIKnew	All I'm saying is that "worker thread", as a name for a "type" of thread, implies that there are threads that don't do "work", which is simply not true.
2014-11-27 00:25:59	moonchild	if you really want to see poor choices of terms, go back and read some of Djikstra's papers
2014-11-27 00:26:06	kalven	what you're saying is mostly coming out of your behind
2014-11-27 00:26:32	egoldsten_	No it's just a special It's a kind of sub-process It is very limited
2014-11-27 00:26:44	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-27 00:27:15	moonchild	IWishIKnew: so, a common patter in server programming is to have a listening thread that accepts connections, passes new sockets off to other threads and goes to sleep
2014-11-27 00:27:25	IWishIKnew	why don't we just have door-opening door handles?
2014-11-27 00:27:36	moonchild	that is *not* a worker thread
2014-11-27 00:27:55	moonchild	IWishIKnew: they're called push-bars
2014-11-27 00:28:01	IWishIKnew	that makes absolutely no sense to me...
2014-11-27 00:28:33	kalven	you should quit while you're not too far behind
2014-11-27 00:28:49	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-27 00:28:51	moonchild	the reason why its not a worker is because it spends 99.999999% of the time asleep
2014-11-27 00:28:57	IWishIKnew	let's just drop it... I'l never understand why other people think like they do...  to me it's just plain common sene.
2014-11-27 00:29:01	IWishIKnew	*sense
2014-11-27 00:29:11	Stryyker	To stop digging yourself in a hole you need to first stop digging.
2014-11-27 00:29:39	kalven	it's called common sense because it's common
2014-11-27 00:29:45	Stryyker	IWishIKnew: threads that are for generic work and not job specific is a common use of the expression.
2014-11-27 00:30:52	IWishIKnew	like I said... I'll never understand why people think the way they do...
2014-11-27 00:30:52	moonchild	why do we call the rectangular area on a monitor that an application draws a 'window'... you can't see through it!
2014-11-27 00:32:15	IWishIKnew	good night.
2014-11-27 00:32:19	moonchild	technology is full of inexact terms
2014-11-27 00:32:49	Stryyker	I'm not sure why he is hung up on worker threads and not the term threads.
2014-11-27 00:33:06	kalven	nice threads, brah
2014-11-27 00:33:12	moonchild	hehe
2014-11-27 00:33:14	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 250 seconds)
2014-11-27 00:33:26	moonchild	threads vs strings, compare and contrast!
2014-11-27 00:33:33	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-27 00:33:33	IWishIKnew	Stryyker:  because "worker threads" contradicts itself by implying that there are threads that do no work.
2014-11-27 00:33:46	Stryyker	no it doesn't
2014-11-27 00:33:47	moonchild	there are threads that don't work
2014-11-27 00:33:53	kalven	vs ropes vs fibers
2014-11-27 00:33:57	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 00:34:04	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-27 00:34:09	Stryyker	IWishIKnew: You should take up politics.
2014-11-27 00:34:10	moonchild	vs tasklets
2014-11-27 00:34:17	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2014-11-27 00:34:23	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-27 00:34:42	moonchild	we settled on worker because it is more PC than 'slave'
2014-11-27 00:34:43	IWishIKnew	Stryyker:  If I did, all the politicians would hate me because I'd be too blunt for their egos...
2014-11-27 00:34:53	Stryyker	Try it.
2014-11-27 00:35:02	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has quit (Ping timeout: 245 seconds)
2014-11-27 00:35:49	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Client Quit)
2014-11-27 00:36:00	IWishIKnew	I'd probably ask them if they even know what "sequester" means when they use it to refer to going broke, and they would all sit there like the dumb fucks they are, staring at me.
2014-11-27 00:36:05	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-27 00:36:25	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-27 00:36:59	moonchild	um, sequester means to isolate
2014-11-27 00:37:10	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-27 00:38:18	IWishIKnew	To Sequester: o remove or separate; banish; exile.
2014-11-27 00:38:35	IWishIKnew	has nothing to do with losing all yuor money.
2014-11-27 00:38:35	<--	bb010g (uid21050@gateway/web/irccloud.com/x-gbycdlaorrttnomy) has quit (Quit: Connection closed for inactivity)
2014-11-27 00:38:46	Stryyker	maybe you're not understanding something properly
2014-11-27 00:39:31	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 00:39:33	moonchild	!focus
2014-11-27 00:39:35	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-11-27 00:39:59	--	LetoTheII is now known as LetoThe2nd
2014-11-27 00:40:34	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-27 00:41:06	BZEU	if I have a map and I want to loop thru it I do
2014-11-27 00:41:11	BZEU	std::map<std::string, std::string>::iterator it;
2014-11-27 00:41:14	BZEU		for (it = profile.begin(); it != profile.end(); it++)
2014-11-27 00:41:14	BZEU		{
2014-11-27 00:41:21	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 258 seconds)
2014-11-27 00:41:23	-->	digitalsurgeon (5b962c98@gateway/web/freenode/ip.91.150.44.152) has joined ##c++
2014-11-27 00:41:29	BZEU	but now I want to compare if a given name is found inside the map, how do I check that
2014-11-27 00:41:40	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 240 seconds)
2014-11-27 00:41:58	<--	pEYEd (~pEYEd@ool-ad021ff2.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-27 00:42:02	kalven	is the "name" the key?
2014-11-27 00:42:05	BZEU	std::string name;
2014-11-27 00:42:10	BZEU	kalven: yes
2014-11-27 00:42:26	kalven	if so, profile.find(name) or profile.count(name), depending on what you want
2014-11-27 00:42:32	moonchild	http://en.cppreference.com/w/cpp/container/map/find
2014-11-27 00:43:39	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-27 00:44:16	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 240 seconds)
2014-11-27 00:44:19	<--	ivan\ (~ivan@unaffiliated/ivan/x-000001) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-27 00:44:24	BZEU	kalven: Why it says expression must have bool type?
2014-11-27 00:44:45	-->	ivan\ (~ivan@unaffiliated/ivan/x-000001) has joined ##c++
2014-11-27 00:45:06	kalven	use a pastebin
2014-11-27 00:46:05	moonchild	or ideone
2014-11-27 00:46:30	-->	seishun (~Kakera@87.110.113.80) has joined ##c++
2014-11-27 00:47:53	BZEU	http://codepad.org/zh4ZTg6v
2014-11-27 00:47:59	BZEU	something like this one
2014-11-27 00:48:00	<--	prime (~prime@unaffiliated/primex) has quit (Remote host closed the connection)
2014-11-27 00:48:05	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Quit:  Hexchat -  A REAL handcrafted IRC client.)
2014-11-27 00:48:58	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 00:49:13	kalven	you don't have to iterate over the entries if you use find
2014-11-27 00:49:43	BZEU	How you mean?
2014-11-27 00:49:59	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-27 00:50:00	kalven	if you just want to test for the presence of an element, use profile.count(name), if you want the value, use profile.find(name), it'll return an iterator to the key-value pair or the end iterator
2014-11-27 00:50:15	<--	supersam (~supersam@c-73-14-18-149.hsd1.co.comcast.net) has quit (Quit: Leaving)
2014-11-27 00:50:40	kalven	auto it = profile.find(name); if(it != profile.end()) { /* element found, it->second is the value */ }
2014-11-27 00:50:44	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-27 00:51:45	<--	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2014-11-27 00:53:39	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-11-27 00:53:45	BZEU	kalven: thanks man :d
2014-11-27 00:53:59	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-27 00:54:01	BZEU	should I make std::string& name constant instead?
2014-11-27 00:54:09	BZEU	const std::string& name?
2014-11-27 00:54:30	-->	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-11-27 00:54:39	Jinxit	always use const if you can
2014-11-27 00:55:01	BZEU	why?
2014-11-27 00:55:29	Jinxit	imagine if some function gives you a const string
2014-11-27 00:55:40	moonchild	because it is defensive programming, and lets other readers of the code know more about a variable
2014-11-27 00:55:46	Jinxit	then you want to get the profile using that name
2014-11-27 00:56:01	Jinxit	wouldn't be possible without const, since the string you were handling was const
2014-11-27 00:56:40	<--	Douhan (uid13125@gateway/web/irccloud.com/x-jlgszcuawpigjyfx) has quit (Quit: Connection closed for inactivity)
2014-11-27 00:56:49	Jinxit	you're basically telling the user that "i'm not gonna modify this"
2014-11-27 00:56:54	Jinxit	which is always good
2014-11-27 00:57:08	Jinxit	(unless you're in a situation where you want to modify the value, of course)
2014-11-27 00:57:24	BZEU	oh I see
2014-11-27 00:57:28	BZEU	thanks
2014-11-27 00:57:37	bzf	If stuff could be const and still wroks, it probably should be const
2014-11-27 00:57:38	BZEU	so it's good to use const char *str instead of just char *str
2014-11-27 00:57:43	BZEU	as str is pointing to a value?
2014-11-27 00:58:05	-->	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has joined ##c++
2014-11-27 00:58:10	Jinxit	const with raw pointers is another can of worms
2014-11-27 00:58:26	Jinxit	(you shouldn't use raw pointers in modern C++ AFAIK)
2014-11-27 00:58:29	bzf	Is it? Doesn't `const char*`say that the value at the pointer is const?
2014-11-27 00:58:41	jophish	Yo yo yo
2014-11-27 00:58:43	Jinxit	i can actually never remember
2014-11-27 00:58:45	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 00:59:01	Jinxit	but you can say that either 1. the pointer is const, or 2. the value that the pointer points to is const
2014-11-27 00:59:02	jophish	I'm writing swap for an empty class with a base class containing a unique_ptr
2014-11-27 00:59:14	bzf	Think `char* const` says that the pointer itself is const (which probably isn't that useful)
2014-11-27 00:59:17	bzf	Yeah, exactly
2014-11-27 00:59:20	bzf	Or both :>>
2014-11-27 00:59:27	bzf	Drop all the const!
2014-11-27 00:59:31	Jinxit	const char* const
2014-11-27 00:59:34	Jinxit	hell yeah
2014-11-27 00:59:48	moonchild	all your const are belong to us
2014-11-27 01:00:06	jophish	is it safe to implement swap(derived& a, derived& b){swap(static_cast<base&>a, static_cast<base&>b);}?
2014-11-27 01:00:32	moonchild	if you don't mind slicing your objects, sure
2014-11-27 01:00:51	jophish	What would be a better way?
2014-11-27 01:01:02	BZEU	http://codepad.org/SrresYhM
2014-11-27 01:01:14	BZEU	how can I now save the value in a string for return?
2014-11-27 01:01:26	jophish	something like this: http://stackoverflow.com/questions/11562/how-to-overload-stdswap the first answer
2014-11-27 01:01:27	moonchild	write a move ctor & asignment op for the class and use std::swap
2014-11-27 01:01:31	egoldsten_	I do it but directly with "=" for sclars and I have a method for objects
2014-11-27 01:02:47	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-27 01:03:02	jophish	moonchild: ah, I'm writing the move constructor in terms of swap
2014-11-27 01:03:22	Jinxit	BZEU: what do you want to do? return a "success" string?
2014-11-27 01:04:37	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-27 01:05:00	-->	BlaXpirit (~blaxpirit@137-28-132-95.pool.ukrtel.net) has joined ##c++
2014-11-27 01:05:08	kralyk	What can I do to improve precision of my float calculations? Anything to avoid?
2014-11-27 01:05:17	egoldsten_	yes move
2014-11-27 01:05:30	kralyk	What about 2*floatFoo vs 2.0f*floatFoo is there a difference?
2014-11-27 01:05:37	egoldsten_	string(string&& s)...
2014-11-27 01:05:47	egoldsten_	not really
2014-11-27 01:06:20	latexi95	use double if you want more precision
2014-11-27 01:06:23	egoldsten_	the compiler will warn you if ye can't promote constants
2014-11-27 01:07:14	<--	dacechavez (~dacechave@s83-180-236-192.cust.tele2.se) has quit (Quit: dacechavez)
2014-11-27 01:08:49	<--	CobaltHex (~CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2014-11-27 01:11:48	-->	qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-11-27 01:13:44	-->	HerzogDeXtEr1 (~flex@88.130.183.59) has joined ##c++
2014-11-27 01:14:01	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 01:15:20	<--	hoster (~hoster@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 01:16:23	-->	Burgundy (~burgundy@188.26.254.244) has joined ##c++
2014-11-27 01:16:36	<--	HerzogDeXtEr (~flex@i59F6CB30.versanet.de) has quit (Ping timeout: 245 seconds)
2014-11-27 01:17:25	<--	pyon-free (~user@unaffiliated/pyon) has quit (Ping timeout: 255 seconds)
2014-11-27 01:18:04	-->	daily (~daily@192.210.214.197) has joined ##c++
2014-11-27 01:18:24	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-27 01:20:07	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-27 01:20:23	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 01:21:13	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 250 seconds)
2014-11-27 01:21:40	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 01:22:46	-->	kurahaupo (~kurahaupo@118.148.229.185) has joined ##c++
2014-11-27 01:22:50	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Ping timeout: 245 seconds)
2014-11-27 01:22:50	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 245 seconds)
2014-11-27 01:22:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 01:22:54	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 01:23:05	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 01:24:02	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-27 01:24:03	<--	LickPlusPlus (~LickPytho@58.166.109.179) has quit (Read error: Connection reset by peer)
2014-11-27 01:25:20	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-27 01:25:44	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-27 01:25:50	<--	NoNMaDDeN (~NoNMaDDeN@203.209.53.60) has quit (Remote host closed the connection)
2014-11-27 01:26:23	-->	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-11-27 01:27:24	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 245 seconds)
2014-11-27 01:28:20	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 01:29:30	<--	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-27 01:30:39	<--	doomlord_1 (~textual@host86-160-0-101.range86-160.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2014-11-27 01:30:42	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-27 01:32:19	<--	oleo__ (~oleo@xdsl-84-44-179-10.netcologne.de) has quit (Quit: Verlassend)
2014-11-27 01:33:15	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Read error: Connection reset by peer)
2014-11-27 01:33:21	-->	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-27 01:33:26	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: leaving)
2014-11-27 01:33:32	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-27 01:34:20	ville	kralyk: there are plenty of things that affect calculations done with floating points. more than can be explained in few irc messages. read bruce dawson's blog posts about floating points
2014-11-27 01:35:04	moonchild	better yet, spend a semester taking a numeric methods class
2014-11-27 01:35:14	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 01:35:25	<--	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-27 01:36:05	kralyk	ville: Thanks! Will read up on it...
2014-11-27 01:37:26	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 01:37:31	<--	A1T (~bepi_admi@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2014-11-27 01:37:42	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 01:37:55	-->	nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-27 01:38:29	-->	A1T (~bepi_admi@test-centre4-gw.estec.esa.int) has joined ##c++
2014-11-27 01:38:45	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-27 01:38:57	ville	or if you are one of those mathematically inclined people there's the goldberg paper: "what every computer scientist should know about floating-point arithmetic"
2014-11-27 01:39:02	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-27 01:39:11	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-27 01:39:26	<--	adek (~adek@199.201.64.2) has quit (Read error: Connection reset by peer)
2014-11-27 01:39:45	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 01:41:07	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-27 01:41:14	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-27 01:41:18	<--	Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 255 seconds)
2014-11-27 01:41:27	kralyk	To clarify, I'm writing a raytracer and having some trouble with my ray-sphere intersection being off somewhat more than I'd expect so I'm looking into ways of making the code produce more precise results while still using float (not double)
2014-11-27 01:41:54	<--	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-27 01:43:31	kralyk	Suppose a sphere has a radius of 100 and the ray's origin is 1000 away from it. The intersection is off by up to 0.001 , would you guys consider that normal or too imprecise?
2014-11-27 01:43:57	Jinxit	are you using world or object coordinates?
2014-11-27 01:45:04	kralyk	World. Not sure what you mean by object coordinates.
2014-11-27 01:45:23	Jinxit	a good rule of thumb is that the further you get from zero the more precision you lose
2014-11-27 01:45:31	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 240 seconds)
2014-11-27 01:45:58	Jinxit	this is why you get issues if you set your near plane to be really near
2014-11-27 01:46:25	egoldsten_	iee something they use it in gaming for example to have deterministic computations
2014-11-27 01:46:58	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-27 01:47:25	-->	Extreme (~Extreme@unaffiliated/extreme7) has joined ##c++
2014-11-27 01:47:45	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-27 01:47:53	kralyk	My issue is with reflected rays. I have to offset them by quite a lot (1e-3 or even 1e-2) to stop them from coliding with the surface they reflect off.
2014-11-27 01:48:00	<--	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has quit (Remote host closed the connection)
2014-11-27 01:48:51	Jinxit	are you far away from (0, 0, 0)?
2014-11-27 01:49:12	kralyk	I don't know exact number but not very much.
2014-11-27 01:49:18	Jinxit	hmm ok
2014-11-27 01:49:44	Jinxit	i haven't actually done raytracing, but i've bumped into floating point issues in other 3D applications
2014-11-27 01:49:46	kralyk	No more than 1000
2014-11-27 01:50:11	pi-	kralyk: I wrote a ray tracer once, in QBasic ! :)
2014-11-27 01:50:14	Jinxit	that's enough to start losing precision though
2014-11-27 01:50:49	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-27 01:51:01	kralyk	Yeah. I'm reading the blog ville suggested and it seems the offset is about right.
2014-11-27 01:51:17	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-27 01:51:19	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-27 01:51:30	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 240 seconds)
2014-11-27 01:51:31	pi-	kralyk: let me guess. The problem is you're getting patchy rendering, yes? Dead pixels on your sphere. Is this what is happening? If so, you need to move your collision points either backwards towards the eye or forwards into the object depending on whether you are reflecting back or propagating through.
2014-11-27 01:51:33	-->	endomancer (~endomance@2001:8003:2e3b:e301:4923:a352:8b8c:4fa1) has joined ##c++
2014-11-27 01:51:43	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 258 seconds)
2014-11-27 01:51:52	kralyk	pi-: I've already done that.
2014-11-27 01:51:55	-->	rendar (~I@host140-177-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 01:52:17	kralyk	pi-: I've found out moving them out along the normal works best for me.
2014-11-27 01:52:27	egoldsten_	great pi- !
2014-11-27 01:52:37	egoldsten_	like persistence of vision
2014-11-27 01:52:48	kralyk	I was just a bit surprised by how much they needed moved to make the dead spots disappear... But it seems it's alright.
2014-11-27 01:52:59	<--	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-27 01:53:00	egoldsten_	there gmp for multiprecision but it is slow
2014-11-27 01:53:20	egoldsten_	libtomath also they that in haskell i thing
2014-11-27 01:53:25	kralyk	Thanks though pi-
2014-11-27 01:53:32	pi-	kralyk: yep. Definitely. And I would recommend as suggested above working in object-space for collisions.
2014-11-27 01:53:35	<--	dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 256 seconds)
2014-11-27 01:53:57	pi-	Especially if you plan to introduce more complex primitives such as cylinders, capsules, cubes, ... (which are good for bounding boxes)
2014-11-27 01:53:58	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-27 01:54:22	kralyk	Actually it's homework and it pretty simple in terms of scene complexity.
2014-11-27 01:54:36	kralyk	it's*
2014-11-27 01:54:45	pi-	nice. That is some pretty advanced homework!
2014-11-27 01:54:46	Jinxit	another thing to keep in mind is that you will run into the same issues when working with small objects
2014-11-27 01:54:51	Jinxit	because of how floating point works
2014-11-27 01:55:29	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-27 01:55:41	<--	Extreme (~Extreme@unaffiliated/extreme7) has quit (Quit: -)
2014-11-27 01:55:56	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 01:56:05	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 245 seconds)
2014-11-27 01:56:20	pi-	I saw an interesting Unity3D presentation by a game developer. His studio were working on interplanetary game where you could travel to some star system and land on a planet. They ran into numerical precision issues and had to invent some kind of logarithmic precision numerical type.
2014-11-27 01:56:40	kralyk	wow
2014-11-27 01:57:18	pi-	I can't remember what the solution was, but it had to handle distances between centimetres and light-years
2014-11-27 01:57:24	kralyk	btw the homework reference screenshots are over here https://cent.felk.cvut.cz/courses/APG/cviceni.htm  (scroll down)
2014-11-27 01:57:48	kralyk	(I couldn't find english version sry)
2014-11-27 01:58:05	-->	C0MPAQ (~l0rd@aftr-109-91-37-50.unity-media.net) has joined ##c++
2014-11-27 01:58:27	pi-	I'm going to pass on that as it makes my browser worry.
2014-11-27 01:59:32	-->	Gvidon (~gvidon@unaffiliated/gvidon) has joined ##c++
2014-11-27 01:59:34	kralyk	Yeah they got their certificate wrong, which is a bit ironic...
2014-11-27 02:00:15	pi-	https://gist.github.com/p-i-/36c73c92a99f60244a7f#file-gistfile1-cpp-L69 <-- can anyone help me on this line? I'm trying to modify the Proxy class to 'Proxy : T' -- does this mean I no longer manually need to provide this operator?
2014-11-27 02:00:34	Jinxit	pi-: floating origin is one solution to the problem
2014-11-27 02:00:48	Jinxit	http://www.floatingorigin.com/
2014-11-27 02:01:05	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 240 seconds)
2014-11-27 02:01:13	-->	dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-27 02:01:18	-->	NoNMaDDeN (~NoNMaDDeN@203.209.53.60) has joined ##c++
2014-11-27 02:01:18	Jinxit	i never had a chance to try it out but ~supposedly~ it works
2014-11-27 02:01:43	egoldsten_	yes I think it is useless because it inherits P pi-
2014-11-27 02:01:45	egoldsten_	T
2014-11-27 02:02:13	-->	doev (~doev@p4FE11C52.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 02:02:20	Jinxit	another solution is to divide the world into blocks (like minecraft) and reset the origin to the closest block's origin
2014-11-27 02:05:19	<--	qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-11-27 02:05:19	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 02:06:15	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 250 seconds)
2014-11-27 02:06:24	-->	Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-11-27 02:06:45	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 02:06:47	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-27 02:06:57	-->	DrSkyLizard (~quassel@unaffiliated/shiningthrough) has joined ##c++
2014-11-27 02:07:54	kralyk	Makes the transition between blocks a bit tricky, no? I'd expect there to be some slight discontinuities...
2014-11-27 02:08:00	-->	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-11-27 02:08:44	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 02:08:46	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-27 02:09:11	pi-	How about the next couple of lines: https://gist.github.com/p-i-/36c73c92a99f60244a7f#file-gistfile1-cpp-L72-L73 -- if I am now inheriting from T as opposed to having a 'T the_item;' member, how do I set the base class outside of a constructor?
2014-11-27 02:09:29	pi-	Previously I was doing 'the_item = foo;'
2014-11-27 02:10:55	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-27 02:11:44	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-27 02:11:45	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 02:11:45	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 02:12:23	cbreak	pi-: you can't set the base class
2014-11-27 02:12:30	cbreak	it is chosen when you define your class
2014-11-27 02:12:32	<--	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Quit: Leaving)
2014-11-27 02:12:34	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 272 seconds)
2014-11-27 02:12:51	egoldsten_	I never overload operators excepting in iterators because it is required pi-
2014-11-27 02:12:58	cbreak	pi-: why inheritance?
2014-11-27 02:13:03	<--	mintaki_ (~dan@c-76-120-69-67.hsd1.co.comcast.net) has quit (Quit: Leaving)
2014-11-27 02:13:03	<--	seishun (~Kakera@87.110.113.80) has quit (Ping timeout: 240 seconds)
2014-11-27 02:14:26	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 255 seconds)
2014-11-27 02:14:30	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 256 seconds)
2014-11-27 02:15:00	pi-	cbreak: why am I attempting to switch the design pattern? Because it is using a proxy pattern to get L-value and R-value behaviour e.g. 'foo = myList[5]; myList[5] = bar;'. (continued...)
2014-11-27 02:15:17	cbreak	?
2014-11-27 02:15:19	Jinxit	kralyk: as long as the block size is fixed it should be manageable
2014-11-27 02:15:25	cbreak	pi-: that's completely unrelated
2014-11-27 02:15:36	Jinxit	also as long as the camera is as "wrong" as the world around it, nobody will know
2014-11-27 02:15:39	--	mf____ is now known as mf_
2014-11-27 02:15:43	cbreak	pi-: why do you inherit from T?
2014-11-27 02:15:54	pi-	... hence myList[] operator needs to return a Proxy object which gets typecast into the relevant type.
2014-11-27 02:15:59	-->	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-11-27 02:16:35	kralyk	Jinxit: Ah, true...
2014-11-27 02:16:35	cbreak	pi-: think a tiny bit :/
2014-11-27 02:16:38	pi-	cbreak: it is to avoid having to manually pass through all of the methods on the actual type (https://gist.github.com/p-i-/36c73c92a99f60244a7f#file-gistfile1-cpp-L84-L117)
2014-11-27 02:16:46	<--	NoNMaDDeN (~NoNMaDDeN@203.209.53.60) has quit (Remote host closed the connection)
2014-11-27 02:16:48	cbreak	pi-: that's a braindead reason
2014-11-27 02:16:57	<--	kdawg (~kevin@cpe-70-115-139-112.austin.res.rr.com) has quit (Quit: Leaving)
2014-11-27 02:17:09	dts	whats the best way to compare iterators?
2014-11-27 02:17:13	cbreak	dts: ==
2014-11-27 02:18:07	doug64k	pi-: why though? why all that?
2014-11-27 02:18:12	dts	cbreak, thats what i thought, but its throwing errors...
2014-11-27 02:18:19	cbreak	dts: so?
2014-11-27 02:18:24	cbreak	dts: then you use it wrong
2014-11-27 02:18:30	dts	im sure i am
2014-11-27 02:18:38	-->	timj1 (~timj@p5DDB166C.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 02:18:48	cbreak	pi-: do you think you can proxy a uint8_t?
2014-11-27 02:18:54	doug64k	pi-: why is it proxying at all
2014-11-27 02:19:11	-->	rriemann_ (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2014-11-27 02:19:12	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-27 02:19:38	-->	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-27 02:20:10	kralyk	pi-: Couldn't you just store inside the proxy and simply return references with operator[] ?
2014-11-27 02:20:21	kralyk	store the item*
2014-11-27 02:20:21	cbreak	if you want to proxy something, pretend to be a pointer-to-T, not a T itself
2014-11-27 02:20:23	pi-	doug64k: it is an attempt to mimic Python's syntax for handling lists using C++ syntax. i.e. Through C++ syntax it manipulates an underlying Python List object.
2014-11-27 02:20:40	<--	kszatan (~kszatan@94.42.137.2) has quit (Remote host closed the connection)
2014-11-27 02:20:46	dts	https://gist.github.com/DTSCode/4350d08efa47af7339d1
2014-11-27 02:20:48	cbreak	pi-: python can't have lists of integers? What a shitty language.
2014-11-27 02:20:53	dts	whats the issue with my code then?
2014-11-27 02:20:59	dts	and yes it can
2014-11-27 02:21:02	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 02:21:02	dts	python is awesome
2014-11-27 02:21:08	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-27 02:21:08	cbreak	dts: what exception is thrown?
2014-11-27 02:21:12	cbreak	dts: and where?
2014-11-27 02:21:13	<--	timj (~timj@p5DDB148C.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2014-11-27 02:21:15	cbreak	dts: and why?
2014-11-27 02:21:23	dts	no exceptions. just errors. ai.cpp:45:60: error: no match for ?operator==? (operand types are ?node? and ?std::array<node, 7ul>::iterator {aka node*}?)
2014-11-27 02:21:35	dts	oh shit
2014-11-27 02:21:41	cbreak	dts: well.
2014-11-27 02:21:46	dts	i see the issue
2014-11-27 02:21:46	cbreak	dts: you can't compare those things
2014-11-27 02:21:48	dts	never mind
2014-11-27 02:22:12	kralyk	^^
2014-11-27 02:22:16	pi-	cbreak: thanks, ... It looks as though there isn't any way around the current 'manually expose all methods' approach...
2014-11-27 02:22:25	cbreak	pi-: sure there is.
2014-11-27 02:22:29	cbreak	pi-: do what I told you :)
2014-11-27 02:22:51	cbreak	you could go an other way and try to pretend a reference-to-T
2014-11-27 02:22:58	cbreak	like std::reference_wrapper
2014-11-27 02:23:05	kralyk	pi-: have a look at how unique_ptr is implemented for instance
2014-11-27 02:23:18	kralyk	or such like
2014-11-27 02:24:10	-->	Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-27 02:24:12	<--	HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (Quit: Leaving)
2014-11-27 02:24:12	-->	kszatan (~kszatan@94.42.137.2) has joined ##c++
2014-11-27 02:25:21	-->	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has joined ##c++
2014-11-27 02:25:36	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-27 02:25:55	pi-	cbreak: is that going to allow: 'Object x{...} x.someObjectMethod; List<Object> myList{...}; myList[4]=x; myList[4].someObjectMethod;' type syntax?
2014-11-27 02:25:57	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-27 02:26:25	cbreak	pi-: nope, of course not
2014-11-27 02:26:29	cbreak	you'd have to use ->
2014-11-27 02:26:38	cbreak	as I said, it's pretending to be a pointer
2014-11-27 02:26:57	pi-	That's what I thought, ok. Interesting.
2014-11-27 02:27:30	-->	Kulrak (kulrak@C-59-101-147-206.mel.connect.net.au) has joined ##c++
2014-11-27 02:27:30	<--	Kulrak (kulrak@C-59-101-147-206.mel.connect.net.au) has quit (Changing host)
2014-11-27 02:27:30	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-27 02:27:56	-->	realloc1 (~realloc1@aftr-185-17-204-22.dynamic.mnet-online.de) has joined ##c++
2014-11-27 02:28:04	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-27 02:28:36	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Remote host closed the connection)
2014-11-27 02:29:11	bzf	Okay, so I'm getting some runtime errors when compiling for ARM. Anyone recognizing these? http://pastebin.com/K9DwnZz9
2014-11-27 02:29:50	-->	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has joined ##c++
2014-11-27 02:30:09	<--	esas (~esas@unaffiliated/esas) has quit
2014-11-27 02:32:55	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 02:34:11	<--	realloc1 (~realloc1@aftr-185-17-204-22.dynamic.mnet-online.de) has quit (Ping timeout: 255 seconds)
2014-11-27 02:34:13	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-27 02:34:30	<--	Tenju (~rayston@ip68-106-242-42.ph.ph.cox.net) has quit (Ping timeout: 240 seconds)
2014-11-27 02:34:47	bzf	when running* obviously
2014-11-27 02:34:49	bzf	Need my coffee
2014-11-27 02:35:38	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-27 02:35:56	doug64k	bzf: you aren't linking against versions of libc and glibcxx that are not present on the target
2014-11-27 02:36:01	doug64k	you are*
2014-11-27 02:36:13	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 02:38:09	bzf	doug64k: Ah okay. I suppose it could then be resolved by statically linking those versions into the binary?
2014-11-27 02:39:13	-->	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 02:39:27	doug64k	bzf: that or preferably linking against library versions that are present on the target
2014-11-27 02:41:26	-->	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-27 02:43:02	doug64k	bzf: your program might be missing dependencies, perhaps your install could install the required libraries as dependencies
2014-11-27 02:44:18	<--	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-11-27 02:44:42	<--	BlaXpirit (~blaxpirit@137-28-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-27 02:44:48	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 264 seconds)
2014-11-27 02:45:17	bzf	doug64k: Thanks! I'll look into that! Sounds like a reasonable solution
2014-11-27 02:46:33	doug64k	apt-file search libstdc++.so.6 tells me several slightly different variations of libstdc++.so.6 so this problem is probably easy to encounter
2014-11-27 02:46:43	<--	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-27 02:47:04	<--	Haxxa (~Harrison@cpe-120-149-49-246.oirx3.win.bigpond.net.au) has quit (Quit: ZNC - http://znc.in)
2014-11-27 02:47:27	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 02:48:28	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-11-27 02:48:37	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-27 02:48:40	-->	Haxxa (~Harrison@CPE-120-149-49-246.oirx3.win.bigpond.net.au) has joined ##c++
2014-11-27 02:49:13	-->	it_ (~it_@212.243.190.164) has joined ##c++
2014-11-27 02:50:15	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-27 02:50:23	-->	fmardini (~fmardini@tmo-097-144.customers.d1-online.com) has joined ##c++
2014-11-27 02:51:00	doug64k	bzf: it is also possible that the libraries are somewhere but you need to ldconfig them and/or use LD_LIBRARY_PATH when launching.
2014-11-27 02:51:07	-->	hypebeast (pi@g231034124.adsl.alicedsl.de) has joined ##c++
2014-11-27 02:51:37	doug64k	bzf: cross compiled code is less able to know where the libraries are
2014-11-27 02:51:59	-->	det- (~chris@ip72-193-2-51.lv.lv.cox.net) has joined ##c++
2014-11-27 02:52:15	doug64k	that last suggestion is just for development though, in the absence of a proper install
2014-11-27 02:52:26	<--	nivyaj (uid41702@gateway/web/irccloud.com/x-zbntxvnkqdhpxvwr) has quit (Quit: Connection closed for inactivity)
2014-11-27 02:52:31	<--	det (~chris@unaffiliated/det) has quit (Ping timeout: 250 seconds)
2014-11-27 02:53:05	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Quit: Leaving)
2014-11-27 02:53:51	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-27 02:54:27	<--	hypebeas1 (pi@g231035105.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-11-27 02:55:14	bzf	doug64k: I think I've failed setting up the toolchain when building
2014-11-27 02:55:49	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 02:56:31	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-27 02:56:32	doug64k	bzf: you should get #include <iostream> int main() { std::cout << "hello" << std::endl; } cross-compiling first
2014-11-27 02:57:04	doug64k	or something equally guaranteed to work on the target
2014-11-27 02:57:12	-->	jagob (~jacob@h195.natout.aau.dk) has joined ##c++
2014-11-27 02:58:40	egoldsten_	It works on Fedora you have for example i686-gcc-mingw32-w64 to compile for Windows
2014-11-27 02:58:49	egoldsten_	It is in the repos
2014-11-27 02:58:50	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 02:59:21	doug64k	I have a mingw32 cross-compiler setup and it works great
2014-11-27 02:59:35	bzf	doug64k: That compiles and runs fine on the target
2014-11-27 03:00:02	doug64k	yes, what tool are you building with?
2014-11-27 03:00:22	doug64k	cmake?
2014-11-27 03:00:25	egoldsten_	yes doug64k it is fantastic to be able to that now
2014-11-27 03:00:33	bzf	doug64k: Yeah
2014-11-27 03:00:47	bzf	with the arm-linux-gnueabi-gcc-4.7 compiler
2014-11-27 03:01:14	<--	Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-11-27 03:01:35	doug64k	bzf: can you make a gist of your toolchain file?
2014-11-27 03:01:46	bzf	Sure
2014-11-27 03:02:29	bzf	doug64k: https://gist.github.com/bzf/4076820bc52e8bf94a6f
2014-11-27 03:03:16	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-27 03:03:32	bzf	doug64k: I'm assuming that add_subdirectory builds also will use the same settings
2014-11-27 03:04:19	doug64k	bzf: how is your find path in your source dir?
2014-11-27 03:04:29	doug64k	you didnt install the package?
2014-11-27 03:04:53	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-27 03:04:54	doug64k	bzf: for example, my win32 libraries are in /usr/x86_64-w64-mingw32
2014-11-27 03:05:32	<--	MouseTheLuckyDog (~mouse@adsl-76-193-160-186.dsl.chcgil.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-11-27 03:06:00	bzf	doug64k: Nope, I downloaded binaries from the web
2014-11-27 03:06:01	<--	arbin-cn (~gravesPHN@218.30.116.3) has quit (Quit: ThrashIRC v2.9 sic populo comunicated)
2014-11-27 03:06:13	bzf	Guess I shouldn't try to mix compilers and toolchains
2014-11-27 03:06:15	bzf	?
2014-11-27 03:06:16	-->	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-27 03:06:29	<--	endomancer (~endomance@2001:8003:2e3b:e301:4923:a352:8b8c:4fa1) has quit (Quit: endomancer)
2014-11-27 03:06:53	-->	endomancer (~endomance@2001:8003:2e3b:e301:687f:cbda:82b8:95cd) has joined ##c++
2014-11-27 03:07:37	doug64k	I suspect that whatever is in ${PROJECT_SOURCE_DIR}/arm-toolchain/arm-sddnd-linux-gnueabi/arm-sddnd-linux-gnueabi/ does not match what you can really link on the target
2014-11-27 03:08:16	<--	DarkArcher (~Archer]@162.253.129.218) has quit (Read error: Connection reset by peer)
2014-11-27 03:08:25	<--	eagleflo (~aku@eagleflow.fi) has quit (Remote host closed the connection)
2014-11-27 03:08:43	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-27 03:08:48	doug64k	bzf: attempt ldd my.so.file - it will tell you what it will try to link against
2014-11-27 03:09:10	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-27 03:09:18	doug64k	or your exe
2014-11-27 03:09:44	-->	eagleflo (~aku@eagleflow.fi) has joined ##c++
2014-11-27 03:09:48	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-27 03:10:11	-->	endomancer_ (~endomance@2001:8003:2e3b:e301:4923:a352:8b8c:4fa1) has joined ##c++
2014-11-27 03:10:16	bzf	doug64k: ? ldd test => not a dynamic executable
2014-11-27 03:10:19	<--	proteusguy (~proteusgu@ppp-110-168-229-227.revip5.asianet.co.th) has quit (Remote host closed the connection)
2014-11-27 03:10:27	doug64k	egoldsten_: I am so happy I dont have to suffer through setting up and building dependencies when building win32 code
2014-11-27 03:10:44	<--	eagleflo (~aku@eagleflow.fi) has quit (Remote host closed the connection)
2014-11-27 03:10:59	<--	hypebeast (pi@g231034124.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-11-27 03:11:13	doug64k	bzf: do you have an ldd with the toolchain prefix? what is the toolchain prefix by the way?
2014-11-27 03:11:20	<--	Furai (~Furai@static.110.94.47.78.clients.your-server.de) has quit (Quit: Gone fishing.)
2014-11-27 03:11:38	-->	Furai (~Furai@furai.pl) has joined ##c++
2014-11-27 03:11:39	doug64k	arm-linux-gnueabi right?
2014-11-27 03:11:45	bzf	doug64k: Exactly
2014-11-27 03:11:47	doug64k	does arm-linux-gnueabi-ldd exist?
2014-11-27 03:12:01	<--	endomancer_ (~endomance@2001:8003:2e3b:e301:4923:a352:8b8c:4fa1) has quit (Client Quit)
2014-11-27 03:12:02	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 03:12:09	doug64k	not sure if that is a binutil or what
2014-11-27 03:12:15	-->	eagleflo (~aku@eagleflow.fi) has joined ##c++
2014-11-27 03:12:15	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 03:12:23	bzf	Nope, I have a arm-linux-gnueabi-ld but no arm-linux-gnueabi-ldd
2014-11-27 03:12:25	-->	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-27 03:12:25	<--	rriemann_ (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 255 seconds)
2014-11-27 03:12:30	-->	hypebeast (pi@g231047172.adsl.alicedsl.de) has joined ##c++
2014-11-27 03:12:31	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 03:14:05	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-27 03:14:06	-->	blut (~blut@ersc147.goemobile.de) has joined ##c++
2014-11-27 03:14:08	doug64k	g++-arm-linux-gnueabi should give me that toolchain right?
2014-11-27 03:14:13	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-27 03:14:30	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:a4cc:8407:ebd7:40c9) has joined ##c++
2014-11-27 03:15:03	<--	daily (~daily@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 03:15:48	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-27 03:16:07	doug64k	bzf: I am going to install the toolchain and see what happens
2014-11-27 03:16:29	bzf	doug64k: Ait! Thanks for taking time
2014-11-27 03:16:55	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-27 03:17:46	-->	wojciak (~wojciak@192.210.214.197) has joined ##c++
2014-11-27 03:18:36	bzf	doug64k: Btw, do I really need to set CMAKE_C_COMPILER if I set the CMAKE_FIND_ROOT_PATH?
2014-11-27 03:19:08	doug64k	bzf: FYI, when I install ( binutils-arm-linux-gnueabi cpp-arm-linux-gnueabi gcc-arm-linux-gnueabi g++-arm-linux-gnueabi ) it wants to install libstdc++6-armel-cross and linux-libc-dev-armel-cross which would be in the normal location like the mingw32 example I gave
2014-11-27 03:21:38	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 03:21:54	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-27 03:22:20	doug64k	bzf: my find path would be /usr/arm-linux-gnueabi/
2014-11-27 03:22:51	obiwahn	doug64k: http://paste.debian.net/133769/ i case you play with bash :)
2014-11-27 03:23:07	obiwahn	adds the chain to PS1:P
2014-11-27 03:23:33	-->	Garner (uid38417@gateway/web/irccloud.com/x-zdwyssimxdurwesy) has joined ##c++
2014-11-27 03:24:03	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-27 03:24:18	bzf	doug64k: Ok, would that tell CMake to use a compiler found within that path or just look in $PATH for a matching prefix?
2014-11-27 03:24:55	-->	illerucis (~illerucis@cpe-66-108-204-203.nyc.res.rr.com) has joined ##c++
2014-11-27 03:24:57	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Ping timeout: 240 seconds)
2014-11-27 03:25:03	TinoDidriksen	Ask CMake stuff in #cmake or ##C++-general
2014-11-27 03:25:09	obiwahn	it is a #cmake question
2014-11-27 03:25:15	doug64k	bzf: that tells it where to look when linking libraries and finding path for includes and defines if you did find_library(zlib ...
2014-11-27 03:25:20	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-27 03:25:34	-->	Thomas65 (~Thomas65@xdsl-85-197-46-106.netcologne.de) has joined ##c++
2014-11-27 03:25:36	doug64k	yes it is pretty far off topic
2014-11-27 03:25:41	obiwahn	but cmake does not care  much about $PATH
2014-11-27 03:26:03	bzf	ah okay, thanks
2014-11-27 03:26:26	bzf	But building something with, let's say gcc-4.7 and still linking the binary against the toolchain should cause no problem, right?
2014-11-27 03:26:27	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-27 03:26:29	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 03:27:12	doug64k	bzf: /usr/arm-linux-gnueabi/ contains 3 directories include, bin, lib. they are the includes and libraries for the target
2014-11-27 03:28:27	-->	DarkArcher (~darkarche@162.253.129.218) has joined ##c++
2014-11-27 03:28:28	<--	bayoubengal (~bayoubeng@host-64-47-180-143.masergy.com) has quit (Read error: Connection reset by peer)
2014-11-27 03:28:34	-->	proteusguy (~proteusgu@180.183.139.197) has joined ##c++
2014-11-27 03:29:42	<--	illerucis (~illerucis@cpe-66-108-204-203.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-27 03:30:22	-->	layman806 (~layman806@122.168.249.249) has joined ##c++
2014-11-27 03:30:49	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-27 03:31:24	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-27 03:34:25	-->	V-ille (~ville@59ec6584.symbio.com) has joined ##c++
2014-11-27 03:34:25	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 03:34:51	bzf	doug64k: Okay, but does the real targets version of libc matter when I'm linking?
2014-11-27 03:35:13	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2014-11-27 03:35:19	-->	astrobunny (~astrobunn@124x35x83x162.ap124.ftth.ucom.ne.jp) has joined ##c++
2014-11-27 03:35:49	<--	schleppel (~quassel@141.39.226.237) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-27 03:35:58	doug64k	bzf: yes
2014-11-27 03:36:09	doug64k	bzf: I am doing a hello world cross compile
2014-11-27 03:36:33	bzf	doug64k: Yeah, I also got that to work
2014-11-27 03:36:47	<--	GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-27 03:37:16	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-27 03:37:16	<--	layman806 (~layman806@122.168.249.249) has quit (Quit: Leaving)
2014-11-27 03:37:17	<--	schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-27 03:37:19	doug64k	bzf: then what did you link with then
2014-11-27 03:37:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 03:37:41	bzf	I didn't specify any flags, so I'm assuming the one from gcc
2014-11-27 03:37:48	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-27 03:37:50	-->	joel_falcou (~Joel@lri30-139.lri.fr) has joined ##c++
2014-11-27 03:38:43	-->	layman806 (~layman806@122.168.249.249) has joined ##c++
2014-11-27 03:38:44	doug64k	there is no assuming when you cross-compile - you have to tell it to use the libraries in some specific directory
2014-11-27 03:38:51	doug64k	it used that same toolchain file?
2014-11-27 03:39:04	bzf	I would assume so then, yes
2014-11-27 03:39:10	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-27 03:40:24	<--	layman806 (~layman806@122.168.249.249) has quit (Client Quit)
2014-11-27 03:42:06	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 03:42:12	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 244 seconds)
2014-11-27 03:42:15	-->	re1 (~reiser@110.77.234.229) has joined ##c++
2014-11-27 03:42:19	--	Yepoleb is now known as Guest88857
2014-11-27 03:42:20	-->	Yepoleb_ (~quassel@194-166-6-196.adsl.highway.telekom.at) has joined ##c++
2014-11-27 03:42:20	<--	Guest88857 (~quassel@178-191-135-124.adsl.highway.telekom.at) has quit (Killed (kornbluth.freenode.net (Nickname regained by services)))
2014-11-27 03:42:20	--	Yepoleb_ is now known as Yepoleb
2014-11-27 03:42:56	<--	DarkArcher (~darkarche@162.253.129.218) has quit (Quit: Leaving)
2014-11-27 03:42:59	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-27 03:43:12	-->	DarkArcher (~darkarche@162.253.129.218) has joined ##c++
2014-11-27 03:44:09	<--	tellur (~quassel@nyloc.de) has quit (Remote host closed the connection)
2014-11-27 03:44:37	-->	tellur (~quassel@nyloc.de) has joined ##c++
2014-11-27 03:45:31	-->	hdon (~donny@nv-71-49-135-68.dhcp.embarqhsd.net) has joined ##c++
2014-11-27 03:45:37	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-27 03:48:20	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 03:49:06	<--	DarkArcher (~darkarche@162.253.129.218) has quit (Quit: Leaving)
2014-11-27 03:49:23	-->	DarkArcher (~darkarche@162.253.129.218) has joined ##c++
2014-11-27 03:49:53	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 240 seconds)
2014-11-27 03:51:05	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-27 03:51:27	-->	batbird (~lolwhat@gateway/tor-sasl/lolwhat) has joined ##c++
2014-11-27 03:51:28	<--	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has quit (Quit: qwertzui11)
2014-11-27 03:51:30	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 03:51:35	doug64k	bzf: this works for me http://www.filedropper.com/hello-gnueabi
2014-11-27 03:51:35	-->	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has joined ##c++
2014-11-27 03:51:53	batbird	can you print an int in base 2 with iostream without any hassle?
2014-11-27 03:52:30	cbreak	<< bin << 7
2014-11-27 03:52:30	geordi	111
2014-11-27 03:52:34	cbreak	batbird: like this?
2014-11-27 03:52:45	batbird	yay :p yeah, thanks
2014-11-27 03:52:53	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-27 03:52:57	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Ping timeout: 258 seconds)
2014-11-27 03:53:12	batbird	<< bin << 1 << 2
2014-11-27 03:53:12	geordi	110
2014-11-27 03:53:14	cbreak	might give weird results sometimes
2014-11-27 03:53:17	cbreak	<< bin << -7
2014-11-27 03:53:18	geordi	1111111111111111111111111111111111111111111111111111111111111001
2014-11-27 03:53:26	batbird	<< bin << 1 << 2; <<5;
2014-11-27 03:53:26	geordi	error: expected unqualified-id before '<<' token
2014-11-27 03:53:30	batbird	<< bin << 1 << 2; cout<<5;
2014-11-27 03:53:30	geordi	error: 'cout' does not name a type
2014-11-27 03:53:30	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Remote host closed the connection)
2014-11-27 03:53:35	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-27 03:53:38	<--	astrobunny (~astrobunn@124x35x83x162.ap124.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2014-11-27 03:53:43	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-27 03:53:44	batbird	<< bin << 1 << 2; std::cout<<5;
2014-11-27 03:53:44	geordi	error: 'cout' in namespace 'std' does not name a type
2014-11-27 03:53:56	cbreak	batbird: you'll have to use { cout << ... ;} if you want extended syntax
2014-11-27 03:54:09	cbreak	the {} is a main in geordi
2014-11-27 03:54:27	batbird	<< bin << 1 << 2; {cout<<5;}
2014-11-27 03:54:27	geordi	error: expected unqualified-id before '{' token
2014-11-27 03:54:36	cbreak	you can only have one of them.
2014-11-27 03:54:47	batbird	:3 eh
2014-11-27 03:54:55	Adrinael	<< bin << 1, 2, 5
2014-11-27 03:54:56	geordi	1, 10, 101
2014-11-27 03:54:56	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-27 03:55:16	Adrinael	<< bin << setw(8) << setfill('0') << 5
2014-11-27 03:55:17	geordi	00000101
2014-11-27 03:55:28	cbreak	{ cout << "Hi there"; for (size_t i = 5; i < 8; ++i) cout << " " << bin << i; }
2014-11-27 03:55:29	geordi	Hi there 101 110 111
2014-11-27 03:55:42	Adrinael	<< bin << setw(8) << setfill('0') << showbase << 5
2014-11-27 03:55:42	geordi	0000b101
2014-11-27 03:55:46	Adrinael	Oh bugger
2014-11-27 03:55:52	cbreak	Adrinael: yeah, isn't it bad? :(
2014-11-27 03:56:00	doug64k	lol
2014-11-27 03:56:20	batbird	<<dec<<10
2014-11-27 03:56:20	geordi	10
2014-11-27 03:56:24	cbreak	<< hex << setw(8) << setfill('0') << showbase << 5
2014-11-27 03:56:24	geordi	000000x5
2014-11-27 03:57:39	batbird	<<bin<<"\t"
2014-11-27 03:57:40	geordi	<no output>
2014-11-27 03:57:45	batbird	<<bin<<'t'
2014-11-27 03:57:46	geordi	t
2014-11-27 03:57:48	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-27 03:57:49	batbird	<<bin<<'\t'
2014-11-27 03:57:50	geordi	<no output>
2014-11-27 03:58:01	-->	snyp (~Snyp@150.129.132.81) has joined ##c++
2014-11-27 03:58:02	batbird	<<bin<<"\ta"<<5
2014-11-27 03:58:03	geordi	a101
2014-11-27 03:58:05	-->	BadApe (~BadApe@85.255.232.47) has joined ##c++
2014-11-27 03:58:54	-->	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has joined ##c++
2014-11-27 04:00:25	batbird	but bin isn't defined :O
2014-11-27 04:01:18	cbreak	batbird: it's std::bin, an iomanipulator
2014-11-27 04:01:55	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2014-11-27 04:02:10	cbreak	hmm... maybe it's a non-standard extension
2014-11-27 04:02:18	cbreak	it's not listed here: http://en.cppreference.com/w/cpp/io/manip/hex :(
2014-11-27 04:03:04	batbird	hex will do, but will drive me nuts
2014-11-27 04:03:19	batbird	no.. hex can't do it
2014-11-27 04:03:30	-->	Kajika (~Kajika@164.184.94.79.rev.sfr.net) has joined ##c++
2014-11-27 04:03:30	<--	Kajika (~Kajika@164.184.94.79.rev.sfr.net) has quit (Changing host)
2014-11-27 04:03:30	-->	Kajika (~Kajika@unaffiliated/kajika) has joined ##c++
2014-11-27 04:03:31	-->	Bigpet4 (~bigpet@i5E86AABE.versanet.de) has joined ##c++
2014-11-27 04:04:52	hdon	hi all :) i've been programming in D for almost two years, and now i'm working with C++ again. if anyone can help me understand what i'm doing wrong... http://pastebin.mozilla.org/7581575
2014-11-27 04:04:55	<--	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has quit (Quit: Sto andando via)
2014-11-27 04:04:58	hdon	i would be very grateful :)
2014-11-27 04:05:13	-->	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has joined ##c++
2014-11-27 04:05:19	hdon	wait....
2014-11-27 04:05:20	hdon	really?
2014-11-27 04:05:55	<--	joel_falcou (~Joel@lri30-139.lri.fr) has quit (Quit: Leaving)
2014-11-27 04:06:32	 *	hdon sighs
2014-11-27 04:06:43	V-ille	Eelis: we have the post-Urbana mailing, http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/#mailing2014-11
2014-11-27 04:06:44	hdon	i didn't save the change to the header that defined releaseGLStuff() :\
2014-11-27 04:07:07	hdon	well, at least i know i haven't lost touch with C++ yet :)
2014-11-27 04:07:08	<--	Kajika (~Kajika@unaffiliated/kajika) has quit (Client Quit)
2014-11-27 04:07:26	Stryyker	cbreak: Do you know if it has been proposed?
2014-11-27 04:07:39	-->	grayshade (~grayshade@86.122.135.130) has joined ##c++
2014-11-27 04:07:41	cbreak	hdon: get a better IDE :)
2014-11-27 04:07:46	cbreak	xcode would save all files when compiling
2014-11-27 04:07:56	cbreak	Stryyker: I have no idea, sorry.
2014-11-27 04:07:58	hdon	cbreak, :P
2014-11-27 04:08:31	hdon	cbreak, maybe i should modify my vim to warn me if i have unsaved buffers when i run :make
2014-11-27 04:09:01	-->	r3m1 (~remi@92.103.19.16) has joined ##c++
2014-11-27 04:09:14	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Quit: Busying myself...)
2014-11-27 04:09:35	<--	WalrusPony (~retep998@pool-173-76-139-159.bstnma.east.verizon.net) has quit (Ping timeout: 264 seconds)
2014-11-27 04:11:05	ppf	hdon: or force it to save whenever you switch buffers
2014-11-27 04:11:27	-->	doom1 (~doom@AToulouse-657-1-971-207.w109-223.abo.wanadoo.fr) has joined ##c++
2014-11-27 04:12:02	-->	WalrusPony (~retep998@pool-173-76-139-159.bstnma.east.verizon.net) has joined ##c++
2014-11-27 04:13:34	V-ille	Stryyker: I don't recall seeing a proposal, there was a brief discussion on std-proposals
2014-11-27 04:14:22	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-27 04:15:33	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 04:17:25	-->	Elirips (~Elirips@84-74-177-218.dclient.hispeed.ch) has joined ##c++
2014-11-27 04:17:58	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-27 04:18:40	batbird	does anyone know what (register int variable) * (register int variable) returns? Whether it's a register int too?
2014-11-27 04:18:53	TinoDidriksen	It's just a normal int.
2014-11-27 04:18:57	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-27 04:19:07	TinoDidriksen	The register keyword is ignored anyway.
2014-11-27 04:20:10	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-27 04:20:15	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-27 04:20:56	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 04:22:12	batbird	TinoDidriksen: what do you mean by that, that it's ignored?
2014-11-27 04:22:13	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 04:22:23	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Quit: http://www.twitter.com/aleenamaleena)
2014-11-27 04:22:29	cbreak	batbird: registers are not variables, and variables are not registers
2014-11-27 04:22:42	TinoDidriksen	Compilers don't care that you say register. They'll behave as if you hadn't written it.
2014-11-27 04:22:42	cbreak	they are mostly unrelated
2014-11-27 04:22:55	batbird	TinoDidriksen: bs. I got a 5 times speedup.
2014-11-27 04:23:05	<--	doom1 (~doom@AToulouse-657-1-971-207.w109-223.abo.wanadoo.fr) has left ##c++
2014-11-27 04:23:11	TinoDidriksen	With what compile flags?
2014-11-27 04:23:25	cbreak	haha, 5 times... :D
2014-11-27 04:23:34	batbird	g++ primenumbers.cpp  <--- takes 5 times longer to run without the register keywords
2014-11-27 04:23:39	cbreak	batbird: hahaha
2014-11-27 04:23:42	TinoDidriksen	So, no optimizations...
2014-11-27 04:23:45	TinoDidriksen	Sigh
2014-11-27 04:23:46	cbreak	batbird: throw in an -O2 or -O3
2014-11-27 04:23:55	TinoDidriksen	batbird, g++ -O3 -Wall -Wextra -std=c++11
2014-11-27 04:24:10	cbreak	batbird: benchmarking unoptimized code is beyond worthless
2014-11-27 04:24:46	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-27 04:25:05	Jinxit	is there ever a reason to do -O2 instead of -O3?
2014-11-27 04:25:16	TinoDidriksen	If you have buggy code...
2014-11-27 04:25:31	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 255 seconds)
2014-11-27 04:25:34	-->	losh (~losh@staff-fr.corp.dailymotion.com) has joined ##c++
2014-11-27 04:26:23	cbreak	Jinxit: it's less agressive
2014-11-27 04:26:28	cbreak	so it takes less time
2014-11-27 04:26:34	batbird	I ran -O3 without register in the code. It's as fast as optimized code without -O3. So -O3 uses registers for me?
2014-11-27 04:26:40	TinoDidriksen	Yes
2014-11-27 04:26:41	Jinxit	ah so compile time, got it
2014-11-27 04:26:44	cbreak	batbird: all code uses registers
2014-11-27 04:26:59	cbreak	batbird: you can't even add two numbers in x86 without using registers
2014-11-27 04:27:00	batbird	cbreak: "uses registers where they should be"
2014-11-27 04:27:09	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 04:27:16	batbird	cbreak: "bypasses load/store mem"
2014-11-27 04:27:17	cbreak	where?
2014-11-27 04:27:25	Adrinael	Compilers are much better than you at deciding what values to keep in registers and what to spill to stack
2014-11-27 04:27:29	TinoDidriksen	batbird, without any -O flags, you don't have any compiler optimization at all. With -O, the compiler will optimize according to the CPU.
2014-11-27 04:27:36	-->	p|q (~plq@78.189.180.67) has joined ##c++
2014-11-27 04:27:38	cbreak	it will decide which variables to keep in memory and which to remove.
2014-11-27 04:27:51	TinoDidriksen	And under -O, keyword register is discarded because the compiler knows better than you.
2014-11-27 04:27:57	-->	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 04:28:11	batbird	xD
2014-11-27 04:28:34	snyp	Is boost.spirit the recommended C++ parser framework?
2014-11-27 04:28:49	batbird	TinoDidriksen: "according to the CPU". Does that mean that code compiled on my computer won't be as optimized for another computer with another CPU?
2014-11-27 04:28:50	snyp	is there anything else that you use?
2014-11-27 04:29:02	<--	fmardini (~fmardini@tmo-097-144.customers.d1-online.com) has quit (Read error: Connection reset by peer)
2014-11-27 04:29:04	snyp	i hate bison.
2014-11-27 04:29:14	TinoDidriksen	batbird, yes. You can tell g++ to optimize for a specific CPU subset if you like.
2014-11-27 04:29:20	snyp	not "hate", just feel it's a bit too wobbly.
2014-11-27 04:29:46	batbird	TinoDidriksen: but -O doesn't do that? Are -O compiled code safe to distribute?
2014-11-27 04:29:58	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-27 04:30:49	<--	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has quit (Ping timeout: 258 seconds)
2014-11-27 04:30:53	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-27 04:31:22	-->	magic_ (~magic@p57BBFA99.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 04:31:32	Adrinael	Isn't tune=generic the default?
2014-11-27 04:31:42	Adrinael	You have to explicitly say -mtune=native
2014-11-27 04:32:07	<--	magic_ (~magic@p57BBFA99.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-27 04:32:34	snyp	googling shows a library called "Bisquit"
2014-11-27 04:32:40	-->	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has joined ##c++
2014-11-27 04:32:58	TinoDidriksen	So it is...for some reason I thought default was native, 'cause I always see package builders set it explicitly.
2014-11-27 04:33:01	Adrinael	snyp, also try antlr
2014-11-27 04:33:38	TinoDidriksen	batbird, right, so optimized binaries are defaulted to run on a wide selection of modern CPUs in the same arch. You can further tune that if you like.
2014-11-27 04:33:59	batbird	k thanks :)
2014-11-27 04:34:39	-->	allyourcodebase (~allyourco@182.18.211.254) has joined ##c++
2014-11-27 04:34:42	-->	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has joined ##c++
2014-11-27 04:35:33	<--	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-27 04:35:43	batbird	I know I could just "man" this, but in case you know a quick answer: how is -O different from -O1,-O2,-O3 which just is a set of different optimization levels
2014-11-27 04:35:56	snyp	Adrinael: hmm...
2014-11-27 04:36:05	TinoDidriksen	-O is -O1
2014-11-27 04:36:26	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-27 04:36:27	TinoDidriksen	There's a lot of details in that. I always use -O3
2014-11-27 04:37:30	-->	pappa (~pappa@77.119.133.3.wireless.dyn.drei.com) has joined ##c++
2014-11-27 04:38:05	<--	teraliv_ (~chatzilla@192.198.151.44) has quit (Ping timeout: 255 seconds)
2014-11-27 04:38:32	-->	teraliv_ (~chatzilla@192.198.151.44) has joined ##c++
2014-11-27 04:38:54	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-27 04:40:11	pi-	http://en.wikipedia.org/wiki/Barton%E2%80%93Nackman_trick <-- "The C++0x Concepts generic programming specification would have made obsolete the Barton?Nackman trick, though Concepts have since been removed from the final C++11 language standard". Does this mean it would be a bad idea to use Barton?Nackman, as Concepts appear to be still in the pipeline?
2014-11-27 04:41:04	pi-	I'm trying to rework operator overloads (http://codereview.stackexchange.com/a/64867/44546)
2014-11-27 04:41:28	-->	_christoph_ (~christoph@8d3a052d.hlrs.de) has joined ##c++
2014-11-27 04:41:53	-->	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 04:42:36	PlasmaHH	well, if its just a hobby project and can wait until they are specified and implemented (around 2025)
2014-11-27 04:42:42	<--	re1 (~reiser@110.77.234.229) has quit (Quit: Leaving)
2014-11-27 04:42:48	M-ou-se	pi-: it'll take at least until 2017 till concepts are standardized.
2014-11-27 04:43:43	-->	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has joined ##c++
2014-11-27 04:47:09	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 04:47:12	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-27 04:48:51	egoldsten_	So I'm I -03 -g
2014-11-27 04:48:56	egoldsten_	or -03
2014-11-27 04:49:21	<--	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-27 04:50:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 04:51:27	-->	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 04:52:07	<--	doev (~doev@p4FE11C52.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-11-27 04:54:17	pi-	Is there any way I can tidy up my operator logic? Currently I have https://gist.github.com/p-i-/35c3f001c51e82c863eb
2014-11-27 04:54:17	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 04:54:57	<--	BadApe (~BadApe@85.255.232.47) has left ##c++ ("Leaving")
2014-11-27 04:57:19	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 04:57:33	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 04:57:58	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Ping timeout: 258 seconds)
2014-11-27 04:58:30	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-27 04:58:52	PlasmaHH	deriving from "Object" ... let me stop reading there...
2014-11-27 05:00:57	egoldsten_	is it for a kind of exam pi- ?
2014-11-27 05:01:44	pi-	egoldsten_: no, I'm dusting the cobwebs off an old Python-C++ bridge
2014-11-27 05:01:44	Spark	std::Object
2014-11-27 05:02:18	egoldsten_	What is a "cobweb" pi- ?
2014-11-27 05:03:08	egoldsten_	This make think about swig
2014-11-27 05:03:09	-->	Meway-Desktop_ (~quassel@24-240-92-224.dhcp.mdsn.wi.charter.com) has joined ##c++
2014-11-27 05:03:12	Spark	spiders web, metaphorical evidence of age
2014-11-27 05:03:12	egoldsten_	me
2014-11-27 05:03:28	egoldsten_	so is a bot
2014-11-27 05:03:32	egoldsten_	it
2014-11-27 05:03:34	egoldsten_	sorry
2014-11-27 05:03:37	<--	thecha (~cha@unaffiliated/thecha) has quit (Quit: Ex-Chat)
2014-11-27 05:03:54	CJKay	Why has it taken more than 6 years so to standardise concepts?
2014-11-27 05:03:55	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-27 05:04:08	PlasmaHH	they are not standardized
2014-11-27 05:04:09	CJKay	s/so//
2014-11-27 05:04:16	CJKay	That's my point
2014-11-27 05:04:18	CJKay	Why? Lol
2014-11-27 05:04:24	PlasmaHH	have you ever read the proposals?
2014-11-27 05:04:26	Adrinael	CJKay, are you able to specify them faster?
2014-11-27 05:04:31	CJKay	No, that's why I'm asking
2014-11-27 05:04:33	Adrinael	Considering all the concerns stated
2014-11-27 05:04:38	PlasmaHH	read them. thats the only way to answer
2014-11-27 05:04:46	PlasmaHH	its a bit like the matrix
2014-11-27 05:04:47	Adrinael	npaperbot, search concepts
2014-11-27 05:04:48	npaperbot	N4205: [Core] Working Draft, C++ Extensions for Concepts <http://bit.ly/1EdMRXc> (by Andrew Sutton)
2014-11-27 05:04:48	npaperbot	Also: N4040, N3929, N3889, N3878, N3819, N3701, N3700, N3629, N3613, N3580, N3576, N2982, N2946, N2943, N2930, N2929, N2906, N2887, N2840, N2832, N2829, N2810, N2781, N2780, ...
2014-11-27 05:04:57	egoldsten_	It's a kind of administration...
2014-11-27 05:05:31	egoldsten_	They to do meetings to talk every 3 month I think
2014-11-27 05:06:14	Adrinael	Where are the concerns? They're not in the paper itself, for reasons
2014-11-27 05:06:29	egoldsten_	I've met someone going to these meeting He wants add SIMD and SEE stuff in the STL
2014-11-27 05:06:51	<--	LongCatTH (~LongCatTH@unaffiliated/longcatth) has quit (Remote host closed the connection)
2014-11-27 05:07:06	egoldsten_	SSE
2014-11-27 05:07:37	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-27 05:07:56	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-27 05:08:21	egoldsten_	The silver bullet we need for CC++ is a macro system allowing the whole language inside like in D and Lisp so we could these things with that
2014-11-27 05:08:51	egoldsten_	without waiting them to meet
2014-11-27 05:09:38	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 05:09:55	TinoDidriksen	You mean like constexpr ?
2014-11-27 05:09:55	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-27 05:10:35	-->	komarov (~komarov@46.227.191.109) has joined ##c++
2014-11-27 05:10:50	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-27 05:10:59	PlasmaHH	egoldsten_: for that he needs to add something to the standard that is called STL first
2014-11-27 05:11:38	egoldsten_	No I don't thing so Image a function with something like a "define" keyword before witch you call anywhere and insert the it returns at compile time
2014-11-27 05:11:48	Eelis	V-ille: cool, thanks
2014-11-27 05:12:18	<--	Meway-Desktop_ (~quassel@24-240-92-224.dhcp.mdsn.wi.charter.com) has left ##c++
2014-11-27 05:12:24	Eelis	V-ille: hm, many 'missing's, that's unusual
2014-11-27 05:12:27	egoldsten_	What do you mean PlasmaHH ? It's not in the sandart?
2014-11-27 05:12:46	-->	altin (~altin@46.99.13.26) has joined ##c++
2014-11-27 05:12:46	<--	altin (~altin@46.99.13.26) has quit (Changing host)
2014-11-27 05:12:46	-->	altin (~altin@flossk/altin) has joined ##c++
2014-11-27 05:13:00	PlasmaHH	egoldsten_: the last time I had a look the standard never contained or defined a term STL
2014-11-27 05:13:01	-->	Gama11 (~quassel@p57967272.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 05:13:22	<--	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2014-11-27 05:13:37	hdon	hi all :) i'm using gcc. how should i handle notionally uncaught exceptions? (exceptions that propagate all the way up to main, and which i consider fatal.) how can i print out as much info as possible? portable techniques welcome :)
2014-11-27 05:13:42	hdon	also using C++11
2014-11-27 05:13:52	egoldsten_	fore exemple "define string regexp(string& s)" returns the static C++ code of the given regexp It is the example of Alexendrei about the mixin() in D
2014-11-27 05:14:00	PlasmaHH	hdon: catch them, print e.what()
2014-11-27 05:14:13	V-ille	Eelis: yeah, that caught my attention too, quite many missing papers
2014-11-27 05:14:16	hdon	PlasmaHH, is what() a method of some base class i should use for exceptions?
2014-11-27 05:14:24	PlasmaHH	hdon: std::exception
2014-11-27 05:14:33	hdon	PlasmaHH, thanks very much!
2014-11-27 05:14:39	jeaye	hdon: what() is a virtual member function of std::exception, from which stdlib exceptions inherit
2014-11-27 05:14:51	egoldsten_	ok PlasmaHH some people here like to say that it is "ine the standart" I don not care to much about that...
2014-11-27 05:15:00	hdon	oh, i see. *looks for what() signature*
2014-11-27 05:15:09	hdon	returns const char*. simple enough :)
2014-11-27 05:15:36	PlasmaHH	egoldsten_: yeah, facts are overrated, especially in such an field as cs and language standardization, where logic is totally at the wrong place
2014-11-27 05:15:57	jeaye	!grab PlasmaHH
2014-11-27 05:15:58	nolyc	By your command.
2014-11-27 05:16:01	jeaye	snarky snark
2014-11-27 05:16:19	egoldsten_	There tricks to get the stack hdon with a command line like "addr" but it's not that. Personnaly I display the strerrno(errno)
2014-11-27 05:16:35	jeaye	Ok, now he's actually doing harm.
2014-11-27 05:16:39	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-27 05:16:49	jeaye	hdon: Ignore the fool.
2014-11-27 05:16:59	PlasmaHH	egoldsten_: yes, because errno is alway set when you catch an exception
2014-11-27 05:17:06	TinoDidriksen	egoldsten_, an exception doesn't set errno.
2014-11-27 05:17:23	egoldsten_	I'me happy to read you ! PlasmaHH I agree a lot with that
2014-11-27 05:17:37	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-27 05:17:37	TinoDidriksen	This is C++. Your C tricks are no good here.
2014-11-27 05:17:44	jeaye	!grab TinoDidriksen
2014-11-27 05:17:45	nolyc	By your command.
2014-11-27 05:17:51	jeaye	This is getting good.
2014-11-27 05:17:54	egoldsten_	C++ is a subste of C
2014-11-27 05:17:58	egoldsten_	subset
2014-11-27 05:18:00	<--	blipped (~quassel@119.130.113.27) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2014-11-27 05:18:01	PlasmaHH	rofl
2014-11-27 05:18:05	PlasmaHH	what a bullshit
2014-11-27 05:18:15	egoldsten_	he is stupid
2014-11-27 05:18:20	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-27 05:18:42	TinoDidriksen	egoldsten_, no, C++ is not a superset of C. Not all C is valid C++.
2014-11-27 05:18:46	PlasmaHH	so you say C has exceptions too? thats news to me. please enlighten me
2014-11-27 05:18:48	hdon	egoldsten_, that sounds like C to me... i would think you should be checking errno when handling C standard library errors, and throwing exceptions that reflect errno
2014-11-27 05:19:21	PlasmaHH	hdon: are you really going to seriously talk with someone who claims that c++ is a subset of c?
2014-11-27 05:19:26	egoldsten_	I think they beginners beginners They think there is a big highway and no other roads
2014-11-27 05:19:34	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-27 05:19:38	hdon	PlasmaHH, i... try to be constructive when i can
2014-11-27 05:19:47	hdon	thanks for the help everyone :)
2014-11-27 05:19:54	PlasmaHH	hdon: does the term "polishing a turd" mean anything to you?
2014-11-27 05:20:08	egoldsten_	It comes from the systm hdon You should look at the source code of STL they this kind of thing
2014-11-27 05:20:25	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-27 05:20:29	egoldsten_	https://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/
2014-11-27 05:21:10	egoldsten_	Nothing is "verbotten" We are free? Do you live in soviet union?
2014-11-27 05:21:23	egoldsten_	I don't understand
2014-11-27 05:21:24	hdon	do you throw exceptions as a value or as a pointer?
2014-11-27 05:21:35	TinoDidriksen	Value
2014-11-27 05:21:37	hdon	i mean, i heap allocated it with new
2014-11-27 05:21:39	jeaye	hdon: Throw by value, catch by reference.
2014-11-27 05:21:40	hdon	but based on the output
2014-11-27 05:21:42	hdon	i think it was a mistake
2014-11-27 05:21:43	hdon	thanks jeaye
2014-11-27 05:21:46	hdon	thanks also TinoDidriksen
2014-11-27 05:21:47	hdon	:)
2014-11-27 05:21:50	hdon	you guys are awesome
2014-11-27 05:21:58	egoldsten_	the sdt is ok with what parameter
2014-11-27 05:21:58	 *	hdon hasn't C++'d in a while
2014-11-27 05:22:20	PlasmaHH	hdon: throw by value, catch by ref to const is the norm I think
2014-11-27 05:22:31	egoldsten_	Explain what kind of error you will throw?
2014-11-27 05:22:45	egoldsten_	What will you do when you catch the error?
2014-11-27 05:22:47	hdon	PlasmaHH, how do i qualify as const reference? foo& const ?
2014-11-27 05:22:50	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 05:22:52	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-27 05:22:54	egoldsten_	lol
2014-11-27 05:22:56	jeaye	hdon: ref to const
2014-11-27 05:22:58	--	Mode ##c++ [+o Adrinael] by ChanServ
2014-11-27 05:23:02	jeaye	hdon: foo const &
2014-11-27 05:23:04	--	Mode ##c++ [+q $a:egoldsten] by Adrinael
2014-11-27 05:23:04	PlasmaHH	I will now go and get some food, ville should be here to handle the inevitable consequences...
2014-11-27 05:23:07	hdon	ah right, thanks jeaye
2014-11-27 05:23:09	--	Mode ##c++ [-o Adrinael] by Adrinael
2014-11-27 05:23:10	TinoDidriksen	const T& is also fine.
2014-11-27 05:23:11	jeaye	Adrinael: cheers
2014-11-27 05:23:49	hdon	hmm...
2014-11-27 05:24:22	<--	altin (~altin@flossk/altin) has quit (Quit: Ex-Chat)
2014-11-27 05:24:47	<--	snyp (~Snyp@150.129.132.81) has quit (Quit: WeeChat 1.0.1)
2014-11-27 05:24:59	<--	zwer_p (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-27 05:25:00	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-27 05:25:15	-->	zwer_p (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-27 05:26:20	hdon	http://pastebin.mozilla.org/7582853 <-- what kind of dumb am i guilty of?
2014-11-27 05:26:36	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-27 05:26:42	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-27 05:26:55	jeaye	hdon: Why did you make p a pointer?
2014-11-27 05:27:04	jeaye	!give hdon nopointers
2014-11-27 05:27:06	nolyc	hdon: http://klmr.me/slides/modern-cpp.pdf
2014-11-27 05:27:13	hdon	jeaye, i didn't write that code
2014-11-27 05:27:18	hdon	jeaye, i just put it in try {}
2014-11-27 05:27:20	Eelis	hdon: std::exception must be derived from publicly for it to work
2014-11-27 05:27:29	hdon	nolyc, thanks i will save this :)
2014-11-27 05:27:37	jeaye	!bot
2014-11-27 05:27:38	nolyc	Whoah, did I just pass the Turing test?
2014-11-27 05:28:05	hdon	shit
2014-11-27 05:28:07	hdon	lol
2014-11-27 05:28:11	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-27 05:28:12	hdon	thanks jeaye i saved it
2014-11-27 05:28:13	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 05:28:20	hdon	Eelis, oh yes
2014-11-27 05:28:58	jeaye	hdon: You might also consider a trailing catch(...) which will catch anything other than std::exceptions. At least you might, in some cases, be able to get some logging in.
2014-11-27 05:29:18	hdon	jeaye, hmm, good idea. i will add this.
2014-11-27 05:29:42	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-27 05:29:52	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-27 05:29:59	hdon	you know, it is dumping core, i guess i could just ask gdb for the stack trace... still, i'd like my error message to be spat out to stderr
2014-11-27 05:30:04	-->	DLSteve (~textual@ip-64-134-51-54.public.wayport.net) has joined ##c++
2014-11-27 05:30:36	Eelis	then make a /proper/ testcase that actually reproduces the problem and doesn't depend on unshown code
2014-11-27 05:30:39	Eelis	!testcase
2014-11-27 05:30:41	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-27 05:30:44	<--	immibis (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has quit (Ping timeout: 250 seconds)
2014-11-27 05:30:54	hdon	jeaye, i qualified my base class std::exception with "public" but i still have the same result from output. here is only that line i changed: class ShaderBuildException : public std::exception
2014-11-27 05:31:26	hdon	Eelis, mm, yes... i will have to do that if this game of cat and mouse proceeds beyond another three minutes
2014-11-27 05:31:42	hdon	actually... it shouldn't be that hard...
2014-11-27 05:31:45	 *	hdon tries
2014-11-27 05:32:15	Eelis	{ try{throw X();}catch(exception const&e){cout<<"error: "<<e.what();}} class X: public exception{char const*what()const noexcept override{return "X!!!";}};
2014-11-27 05:32:15	geordi	error: X!!!
2014-11-27 05:32:27	Eelis	(you also forgot the "const noexcept override")
2014-11-27 05:33:21	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-27 05:34:14	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-27 05:34:36	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: rthrthrth)
2014-11-27 05:35:43	Eelis	but that shouldn't cause a segfault
2014-11-27 05:35:48	Eelis	geordi, erase const noexcept override
2014-11-27 05:35:49	<--	DLSteve (~textual@ip-64-134-51-54.public.wayport.net) has quit (Ping timeout: 258 seconds)
2014-11-27 05:35:56	geordi	error: exception
2014-11-27 05:36:13	hdon	http://ideone.com/DjbMjn <-- not what i expected at all!
2014-11-27 05:36:22	 *	hdon reads PDF from jeaye 
2014-11-27 05:36:28	Eelis	no, read waht i just wrote
2014-11-27 05:37:11	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-27 05:37:14	hdon	oh right, this presentation was not about exceptions..
2014-11-27 05:37:17	 *	hdon reads
2014-11-27 05:37:22	<--	egoldsten_ (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141113113219])
2014-11-27 05:37:45	hdon	Eelis, so i failed to override the correct virtual function by failing to qualify it properly?
2014-11-27 05:37:51	Eelis	yes
2014-11-27 05:37:57	Eelis	and so the base what() gets called
2014-11-27 05:38:24	hdon	Eelis, well it didn't SIGSEGV, it SIGABRTed
2014-11-27 05:38:34	Eelis	that had nothign to do with the code you showed, as i said before
2014-11-27 05:38:45	Eelis	that must've been in code you didn't even show.
2014-11-27 05:38:51	Adrinael	Since you're using std::strings anyway, you could rather just inherit from std::runtime_error or std::logic_error, and you wouldn't have to provide what()
2014-11-27 05:38:52	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 05:38:53	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 258 seconds)
2014-11-27 05:38:56	hdon	sorry,i thought you were referring to earlier pasted code Eelis :(
2014-11-27 05:39:18	<--	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has quit (Ping timeout: 245 seconds)
2014-11-27 05:39:47	Eelis	it's a good idea to /always/ use 'override' whenever you intend to override, so that the compiler will tell you when (due to qualification problems for example) you accidentally fail to override
2014-11-27 05:39:48	hdon	Adrinael, well in this case, i want to be able to discriminate which errors i am catching. only one type of exception can be handled gracefully in the program i'm working on. other types of exceptions should propagate up to main() and end the program
2014-11-27 05:39:59	hdon	Eelis, ahhh, very good idea !
2014-11-27 05:40:27	hdon	where do i place the override qualifier?
2014-11-27 05:40:39	Eelis	after the parameters
2014-11-27 05:40:46	-->	DLSteve (~textual@ip-64-134-51-54.public.wayport.net) has joined ##c++
2014-11-27 05:41:08	hdon	Eelis, my compiler gave me a very nice error. thanks Eelis this is great :)
2014-11-27 05:41:08	Eelis	geordi -c struct A:exception{char const*what()const noexcept override;};
2014-11-27 05:41:08	geordi	Success
2014-11-27 05:41:10	Adrinael	hdon, and you'll still be able to do it.
2014-11-27 05:41:15	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-27 05:41:16	Eelis	geordi, replace const noexcept override with override const noexcept
2014-11-27 05:41:17	geordi	error: expected ';' at end of member declaration
2014-11-27 05:41:21	hdon	Adrinael, how so?
2014-11-27 05:41:27	Eelis	guess there's some rules abot how those words have to be ordered, lol
2014-11-27 05:41:34	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-27 05:41:49	Eelis	geordi, show
2014-11-27 05:41:50	geordi	-c struct A:exception{char const*what()override const noexcept;};
2014-11-27 05:41:56	PlasmaHH	hm, I wonder if one could modify geordi to create a c+ code fuzzer generator to generate examples for grammar elements...
2014-11-27 05:42:00	Eelis	maybe it has to be at the end
2014-11-27 05:42:10	lh_mouse	override is not a qualifier I think.
2014-11-27 05:42:14	Eelis	PlasmaHH: that wouldn't be too hard. i already have the data types
2014-11-27 05:42:24	Eelis	PlasmaHH: and can do generic passes over them
2014-11-27 05:42:35	-->	BlaXpirit (~blaxpirit@137-28-132-95.pool.ukrtel.net) has joined ##c++
2014-11-27 05:42:52	Eelis	PlasmaHH: it's an interesting idea
2014-11-27 05:42:57	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-27 05:43:20	<--	DarkArcher (~darkarche@162.253.129.218) has quit (Quit: Leaving)
2014-11-27 05:43:28	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Ping timeout: 258 seconds)
2014-11-27 05:43:33	hdon	it worked!
2014-11-27 05:43:38	jeaye	!works
2014-11-27 05:43:40	nolyc	It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
2014-11-27 05:43:42	-->	tdc (~tdc@224.Red-88-30-120.staticIP.rima-tde.net) has joined ##c++
2014-11-27 05:43:46	hdon	Adrinael, Eelis plash jeaye: all thanks for your help :)
2014-11-27 05:43:57	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-27 05:44:02	hdon	:P
2014-11-27 05:44:02	PlasmaHH	it should proabably be random enough to have different examples, but should not add too much fluff...
2014-11-27 05:44:53	Eelis	PlasmaHH: i wonder if one could make a snippet with every grammar element in it. then you could just put that in a factoid and ask geordi to 'show' things in it :)
2014-11-27 05:45:26	Adrinael	hdon, class yourthing : public std::runtime_error { yourthing(std:string x) : std::runtime_error(x) {} };   .... throw yourthing("oh you naughty");
2014-11-27 05:45:33	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-11-27 05:45:49	lh_mouse	const std::string & ...
2014-11-27 05:45:58	Adrinael	hdon, catch (yourthing& a) is still what you use to catch that, and catch (std::exception& e) in main catches it too, and e.what() works.
2014-11-27 05:46:05	PlasmaHH	Eelis: I think it would be hard to get that to fit into the irc message limit though... there once was this "challenge" to get the most number of consecutive c++ keywods into one expression... I wonder if that has changed with recent c++
2014-11-27 05:46:06	Eelis	lh_mouse: you're missing the point
2014-11-27 05:46:17	lh_mouse	o.o
2014-11-27 05:46:38	Elirips	If I have declared 'class A { public: operator int() const; };' in my .h file, what is the syntax to define it in the cpp? Where to put the class name?
2014-11-27 05:46:45	Eelis	PlasmaHH: i think i will give it a try
2014-11-27 05:46:52	hdon	Adrinael, oh i see.. what does runtime_error add to exception?
2014-11-27 05:47:14	V-ille	Elirips: A::operator int() const {return whatever;}
2014-11-27 05:47:18	PlasmaHH	Eelis: give that you created that dotty graph, you seem to be the best candidate for a success here ;)
2014-11-27 05:47:21	jeaye	Elirips: A::operator int() const { }
2014-11-27 05:47:27	Adrinael	hdon, constructor that takes std::string. And the convention that follows for using std::runtime_error and std::logic_error separately.
2014-11-27 05:47:39	jeaye	Elirips: Just like a ctor/dtor, really.
2014-11-27 05:47:49	Eelis	PlasmaHH: :)
2014-11-27 05:48:46	Adrinael	PlasmaHH, afl-fuzzer might be able to do it.
2014-11-27 05:49:04	hdon	Adrinael, oh... that first part sounds good. the latter detail i will have to learn more about before i understand it
2014-11-27 05:49:08	jeaye	hdon: In type-rich programming, you use can types to describe intentions. In this case, the different exception types in <exception> allow for classifications of errors. The idea is not to add functionality in any of the classes, but to compose the ideas into something the compiler understands: types.
2014-11-27 05:49:22	PlasmaHH	Adrinael: thats what I had in mind originally, but I dont know if it would not take too long because some grammar elements are deeply nested
2014-11-27 05:49:27	Elirips	V-ille, jeaye: Thank you
2014-11-27 05:50:43	jeaye	<stdexcept> that is
2014-11-27 05:50:48	Adrinael	Now for an experiment: take a project with unit tests, some of them failing. Fuzz the source code until all tests pass.
2014-11-27 05:51:06	Adrinael	It's what programmers do anyway, right?
2014-11-27 05:51:10	jeaye	target: linux
2014-11-27 05:51:39	hdon	jeaye, ah, yeah... i've seen a familiar pattern in Python. but the benefit i got in practice was theoretical at best, i always thought, at least with respect to inheriting from these other exception classes
2014-11-27 05:52:20	jeaye	hdon: Such type-rich programming in C++ is _very_ practical, considering C++ is statically typed.
2014-11-27 05:52:36	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-27 05:54:05	hdon	jeaye, well the exception mechanisms in python support typed catch clauses as well, but in practice if it isn't documented what kind of exception might be thrown by a particular function, inheriting from exception bases that are only different by convention seemed like a way to get more confusing code
2014-11-27 05:54:27	hdon	jeaye, probably a project would have to be very hygienic about exceptions before that shows a benefit.. imho
2014-11-27 05:55:03	jeaye	Python is my least favorite language in the world. Let's talk about something else.
2014-11-27 05:55:12	pi-	Wouldn't it be nice to have the keyword 'This' which could be used to refer to the class type? So the constructor would become This(){...}, and 'this' would be of type This*?
2014-11-27 05:55:19	-->	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has joined ##c++
2014-11-27 05:55:19	<--	pappa (~pappa@77.119.133.3.wireless.dyn.drei.com) has quit (Ping timeout: 265 seconds)
2014-11-27 05:55:33	PlasmaHH	decltype(*this) ?
2014-11-27 05:55:37	hdon	when i approach the gates of C++ heaven and beseech saint stroustrup for entry, i will be sure to carry your advice with me :)
2014-11-27 05:55:40	-->	hesperos (~tomasz@90.216.134.198) has joined ##c++
2014-11-27 05:55:44	Eelis	PlasmaHH: i think it may have to be split up. for example, one snippet devoted to expressions, one to declarations
2014-11-27 05:55:58	jeaye	pi-: using This = T; in your class
2014-11-27 05:56:00	lh_mouse	PlasmaHH, unusable in non-non-static-member-function scope.
2014-11-27 05:56:11	jeaye	Wouldn't work for ctors though.
2014-11-27 05:56:16	pi-	jeaye: unfortunately that doesn't work for constructors
2014-11-27 05:57:02	hesperos	hi, can I use ostreambuf_iterator to output integers from vector as single number in a line ? Something like data will produce a binary output: std::copy(vector.begin(), vector.end(), std::ostreambuf_iterator<unsigned>(file));
2014-11-27 05:57:23	hesperos	s/data/that/
2014-11-27 05:57:54	jeaye	{ vector<int> v{ 0, 1, 2 }; copy(v.begin(), v.end(), ostream_iterator<int>(cout)); }
2014-11-27 05:57:55	geordi	012
2014-11-27 05:58:00	<--	sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-27 05:58:10	jeaye	Instead of cout, give it your ostream.
2014-11-27 05:58:16	<--	komarov (~komarov@46.227.191.109) has quit (Read error: Connection reset by peer)
2014-11-27 05:58:30	hesperos	jeaye: yeah ok, but I want only one number per line
2014-11-27 05:58:40	jeaye	{ vector<int> v{ 0, 1, 2 }; copy(v.begin(), v.end(), ostream_iterator<int>(cout, "|")); }
2014-11-27 05:58:41	geordi	0|1|2|
2014-11-27 05:58:45	jeaye	Use \n instead of |
2014-11-27 05:58:50	hesperos	ahh, ok
2014-11-27 05:58:52	hesperos	thanks
2014-11-27 05:58:56	jeaye	sure thing
2014-11-27 05:59:17	jeaye	Watch out for the trailing line, if it's going to be an issue.
2014-11-27 05:59:41	-->	sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has joined ##c++
2014-11-27 06:00:24	-->	ikrima_ (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has joined ##c++
2014-11-27 06:00:46	-->	komarov (~komarov@46.227.191.81) has joined ##c++
2014-11-27 06:00:52	<--	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-11-27 06:03:25	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 06:03:58	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 06:04:50	<--	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-27 06:05:04	-->	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 06:08:19	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-27 06:08:57	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit (Read error: Connection reset by peer)
2014-11-27 06:09:41	<--	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-27 06:13:21	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 06:15:17	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-27 06:15:47	-->	pappa (~pappa@91.141.5.101.wireless.dyn.drei.com) has joined ##c++
2014-11-27 06:16:33	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 06:17:14	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-11-27 06:17:30	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-27 06:20:27	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Ping timeout: 250 seconds)
2014-11-27 06:20:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 06:20:38	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-27 06:21:30	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-27 06:22:22	<--	Christian86 (Administra@185.66.140.51) has left ##c++
2014-11-27 06:23:46	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 06:24:09	<--	esperegu (~quassel@ip-213-124-221-127.ip.prioritytelecom.net) has quit (Remote host closed the connection)
2014-11-27 06:24:15	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 06:25:50	-->	gelignite (~gelignite@i528C3F80.versanet.de) has joined ##c++
2014-11-27 06:28:27	<--	Guest63820 (~Olipro@95.147.72.186) has quit (Quit: Leaving)
2014-11-27 06:29:04	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2014-11-27 06:30:50	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-27 06:34:01	-->	rriemann_ (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has joined ##c++
2014-11-27 06:34:36	<--	zwer_p (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-27 06:34:43	-->	zwer_p_y (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-27 06:35:35	-->	thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-11-27 06:36:07	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-27 06:36:42	<--	DLSteve (~textual@ip-64-134-51-54.public.wayport.net) has quit (Max SendQ exceeded)
2014-11-27 06:36:59	-->	kaffeetrauma (~Thunderbi@n58.informatik.fh-dortmund.de) has joined ##c++
2014-11-27 06:37:00	<--	Thomas65 (~Thomas65@xdsl-85-197-46-106.netcologne.de) has left ##c++
2014-11-27 06:37:03	<--	komarov (~komarov@46.227.191.81) has quit (Ping timeout: 255 seconds)
2014-11-27 06:37:26	thecha	can you call upon an object with a funciton you define before main?
2014-11-27 06:37:31	-->	sgflt (~mbr@artem.olf.sgsnet.se) has joined ##c++
2014-11-27 06:37:45	thecha	inbetwixt the preprocessor stuff and the main fucniton?
2014-11-27 06:38:06	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-27 06:38:54	sgflt	what's the go-to reference to read for basic best practices questions these days (basic stuff like when to pass by reference/value, etc)?
2014-11-27 06:41:11	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 06:41:33	<--	kaffeetrauma (~Thunderbi@n58.informatik.fh-dortmund.de) has quit (Ping timeout: 255 seconds)
2014-11-27 06:41:37	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-11-27 06:41:38	quaz0r	!books
2014-11-27 06:41:39	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-27 06:41:44	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-27 06:42:17	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2014-11-27 06:42:25	-->	einball (einball@gateway/shell/c-base/x-rbrlyelabevcyzgv) has joined ##c++
2014-11-27 06:42:32	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-27 06:42:54	<--	DrBenway (~DrBenway@235-250-126-200.fibertel.com.ar) has quit (Ping timeout: 255 seconds)
2014-11-27 06:43:06	-->	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has joined ##c++
2014-11-27 06:43:27	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-27 06:43:40	sgflt	thank you
2014-11-27 06:44:16	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-27 06:44:17	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 06:45:14	einball	Hello! I'm having a piece of code which gives me problems. I created a vector and filles it with data. Now I want to make the vector size even numbered. The following line however gives me a "vector erase iterator out of range" .. How can this be? It should fetch and pass the iterator before it erases the element, shouldn't it? Code: http://pastebin.com/Hh7BK7Vn
2014-11-27 06:45:28	einball	s/I'm having/I have
2014-11-27 06:46:00	Eelis	PlasmaHH: work in progress:
2014-11-27 06:46:03	Eelis	geordi -w class X:public string{virtual void f(int*i);};void X::f(int i[4]){  auto u={[=,&i](){ for (register const char c:"") switch(c){ case 0: for(;;) new (nullptr) int*(i=+0); delete (int*)nullptr; break; try{}catch(...){} } }}; }
2014-11-27 06:46:04	geordi	Success
2014-11-27 06:46:10	PlasmaHH	*jeopardy sound*
2014-11-27 06:46:11	Eelis	think i'm at about 30%
2014-11-27 06:46:15	TinoDidriksen	einball, the end() iterator is 1 past the final element.
2014-11-27 06:46:24	TinoDidriksen	einball, just use vector.pop_back()
2014-11-27 06:46:28	Eelis	this already contains pretty much all statements and expressions
2014-11-27 06:46:39	Eelis	and a LOT of declarations/declarators
2014-11-27 06:46:58	einball	TinoDidriksen: Well, that was unexpected .. thank you!
2014-11-27 06:47:22	TinoDidriksen	einball, in C++, all end iterators are past the final element, so get used to it.
2014-11-27 06:47:27	Eelis	PlasmaHH: of course, what i didn't foresee is that the result is absolutely not demonstration-friendly
2014-11-27 06:47:27	<--	sgflt (~mbr@artem.olf.sgsnet.se) has quit (Quit: Leaving)
2014-11-27 06:47:36	Eelis	the examples are all gross examples
2014-11-27 06:47:47	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 06:47:50	<--	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has quit (Ping timeout: 255 seconds)
2014-11-27 06:47:57	einball	TinoDidriksen: Is there a specific reason for it?
2014-11-27 06:48:07	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-27 06:48:08	<--	kriskrop1 (~kris@108-81-178-201.lightspeed.gnvlsc.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-11-27 06:48:08	Eelis	i just went through the grammar top to bottom and added the minimum amount of code for each new thing
2014-11-27 06:48:14	PlasmaHH	we might be able to use them as a starting point though
2014-11-27 06:48:28	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Ping timeout: 240 seconds)
2014-11-27 06:48:38	TinoDidriksen	einball, it allows for loop conditions to test != end() and ensure all elements are visited. It's just cleaner in algorithms.
2014-11-27 06:48:41	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 06:48:59	Eelis	i also alread found a bunch of missing things in geordi's parser, so i'll fix those, too
2014-11-27 06:49:09	Eelis	like class-virt-specifiers
2014-11-27 06:49:11	Eelis	didn't even know those existed
2014-11-27 06:49:18	-->	komarov (~komarov@46.227.191.45) has joined ##c++
2014-11-27 06:49:23	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-27 06:49:45	einball	TinoDidriksen: Right .. Haven't thought about the code readability. Thanks!
2014-11-27 06:49:52	Eelis	i've never declared a class final in my life
2014-11-27 06:49:58	Eelis	class A final{};
2014-11-27 06:50:01	Eelis	geordi: ^
2014-11-27 06:50:01	geordi	Success
2014-11-27 06:50:02	Eelis	ah now i have
2014-11-27 06:50:12	PlasmaHH	do you think while you are at it you can fix digit separator hadnling?
2014-11-27 06:50:24	Eelis	maybe
2014-11-27 06:50:28	 *	PlasmaHH finds that final feature useless
2014-11-27 06:51:18	Eelis	doesn't it permit some optimization? like if A had a virtual function, then if you had  void f(A&a){a.f();}  it wouldn't have to be a virtual call
2014-11-27 06:51:28	Eelis	but maybe you can achieve the same by marking A's f as final
2014-11-27 06:51:38	Eelis	before just now i'd never used final ever
2014-11-27 06:52:00	Eelis	!final
2014-11-27 06:52:02	nolyc	`final` is a virt-specifier used to specify that a given virtual function in a base class cannot be overriden in any class derived (directly or indirectly) from that base; if such an override exists the program is ill-formed (std-ref: [class.virtual], 10.3/4).
2014-11-27 06:52:13	Eelis	yeah but...
2014-11-27 06:52:14	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-27 06:52:17	Eelis	what about class final?
2014-11-27 06:53:29	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-27 06:53:37	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-27 06:53:50	lh_mouse	geordi, using foo = class { }; // this ?
2014-11-27 06:53:50	geordi	Success
2014-11-27 06:53:57	lh_mouse	geordi, insert  final after class
2014-11-27 06:53:57	geordi	Success
2014-11-27 06:54:12	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 264 seconds)
2014-11-27 06:54:29	ville	gcc 5 will have hints that tell you to put finals which would enable an optimization to take place
2014-11-27 06:55:06	lh_mouse	de-virtualization?
2014-11-27 06:55:45	PlasmaHH	ville: I take bets on how often this will happen in my code
2014-11-27 06:56:46	ville	PlasmaHH: if you don't have any virtuals i would guess not that often
2014-11-27 06:57:04	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-27 06:57:26	PlasmaHH	ville: I have some. but the point is that wherever I have them, I use them for their interface, that is, for foo(A& a) I would never pass an A, but always something derived from it.
2014-11-27 06:57:39	<--	einball (einball@gateway/shell/c-base/x-rbrlyelabevcyzgv) has left ##c++ ("WeeChat 0.3.8")
2014-11-27 06:57:41	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2014-11-27 06:57:53	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 06:58:09	ville	lh_mouse: i guess it helps with devirtualization. there was a pretty good blog post about it...
2014-11-27 06:58:37	Eelis	PlasmaHH: they ran the prototype on firefox. they found LOTS of places where it kicked in, but not in any super hot code paths.
2014-11-27 06:58:53	ville	Eelis: do you have the link? that's the blog i had in mind but can't find it
2014-11-27 06:59:18	Eelis	it's this series: http://hubicka.blogspot.nl/2014/04/devirtualization-in-c-part-5-feedback.html
2014-11-27 06:59:18	PlasmaHH	Eelis: firefox isn't exactly representative well designed code... it is still full of memory leaks and hogs :(
2014-11-27 06:59:32	zap0	a runtime cache issue can make any of these micro optimz irrelevant.
2014-11-27 06:59:32	-->	herocoder (~herocoder@68.83.210.114) has joined ##c++
2014-11-27 06:59:36	Eelis	PlasmaHH: but their use of polymorphism is not atypical
2014-11-27 07:00:15	PlasmaHH	probably not, but the cases gcc found, its the question whether they are typical or not.
2014-11-27 07:00:44	Eelis	zap0: compilers are supposed to do micro optimizations wherever possible. the bad connotations of micro optimizations are when /programmers/ spend a lot of time adjusting their program to get very small gains
2014-11-27 07:00:57	Eelis	zap0: know the difference between the goals of compiler writers and application programmers :)
2014-11-27 07:01:20	-->	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has joined ##c++
2014-11-27 07:01:27	ville	another interesting one was odr violation detection
2014-11-27 07:01:46	-->	mun (~mun@unaffiliated/mun) has joined ##c++
2014-11-27 07:01:48	<--	mun (~mun@unaffiliated/mun) has left ##c++ ("Textual IRC Client: www.textualapp.com")
2014-11-27 07:02:48	Eelis	zap0: and the whole point of devirtualization is to reduce memory accesses, which is the most important thing you can do for cache effectiveness
2014-11-27 07:02:54	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-27 07:03:35	batbird	a=00100 <-- is there a simple operation I can use to return its bit index? it's 2 in this case
2014-11-27 07:03:47	-->	basic6 (~basic6@p4FCB5F81.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 07:04:15	ville	Eelis: unfortunately often the fact you've base classes means your objects are scattered all over the place too.
2014-11-27 07:04:20	Adrinael	batbird, http://stackoverflow.com/questions/671815/what-is-the-fastest-most-efficient-way-to-find-the-highest-set-bit-msb-in-an-i
2014-11-27 07:04:22	nolyc	<http://tinyurl.com/me44knf> (at stackoverflow.com)
2014-11-27 07:04:26	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 255 seconds)
2014-11-27 07:04:45	<--	basic6_ (~basic6@p4FCB6CDA.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-27 07:04:47	Adrinael	log2() maybe?
2014-11-27 07:05:11	<--	kkh (~duracrisi@unaffiliated/duracrisis) has quit (Read error: Connection reset by peer)
2014-11-27 07:05:13	zap0	batbird, there is a "intrinsic" function many x86 platforms have that can perform this for you.
2014-11-27 07:05:13	Eelis	<< 16 - bitset<16>(0b1000).to_string().rfind('1')
2014-11-27 07:05:14	geordi	4
2014-11-27 07:05:51	Eelis	ville: accessing objects that are scattered all over the place is better than accessing objects that are scattered all over the place AND accessing their vtables as well
2014-11-27 07:06:40	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2014-11-27 07:07:04	-->	kkh (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-11-27 07:07:05	-->	luny (~luny@unaffiliated/luny) has joined ##c++
2014-11-27 07:07:20	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-27 07:09:40	batbird	zap0: hardware implemented?
2014-11-27 07:11:09	zap0	batbird, what?
2014-11-27 07:11:53	zap0	batbird, it's like  GetMeTheBitIndex()  function.   but at compile time, on x86, it boils down to a single asm instruction.
2014-11-27 07:12:03	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 07:12:05	batbird	zap0: "intrinsic" "x86", sounded like you were talking about some x86 instruction for that
2014-11-27 07:12:18	zap0	yes.
2014-11-27 07:12:21	batbird	kk :)
2014-11-27 07:13:15	zap0	the function when compiled to target a Comodore64 is probably a routine, not a single instruction ;)
2014-11-27 07:14:01	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 07:16:09	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Quit: Leaving)
2014-11-27 07:16:19	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-27 07:16:20	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Quit: Leaving.)
2014-11-27 07:16:21	-->	GrayArea (~GrayArea@cpc5-dals19-2-0-cust506.hari.cable.virginm.net) has joined ##c++
2014-11-27 07:19:42	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-27 07:19:43	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 07:21:00	batbird	:)
2014-11-27 07:21:07	-->	mimon (~mimon@130.225.98.242) has joined ##c++
2014-11-27 07:22:08	<--	herocoder (~herocoder@68.83.210.114) has quit (Ping timeout: 258 seconds)
2014-11-27 07:22:21	-->	RangerBob (~bmaddox@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-11-27 07:22:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 07:24:07	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2014-11-27 07:24:13	-->	saedelaere (~quassel@unaffiliated/saedelaere) has joined ##c++
2014-11-27 07:24:25	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-27 07:24:50	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 07:25:09	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-27 07:25:20	-->	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 07:26:24	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-27 07:27:17	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-27 07:27:53	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Quit: zwf)
2014-11-27 07:29:28	PlasmaHH	the C65 will fix that
2014-11-27 07:29:47	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-27 07:32:48	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 07:34:30	hesperos	does istreambuf_iterator accept anything else besides char as a template parameter ? std::istreambuf_iterator<char16_t> doesn't compile
2014-11-27 07:34:30	<--	mimon (~mimon@130.225.98.242) has quit (Remote host closed the connection)
2014-11-27 07:34:36	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-27 07:34:41	-->	kez (~quassel@inet2.evalesco.com) has joined ##c++
2014-11-27 07:35:17	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-27 07:36:35	hesperos	ahh sorry, invalid conversion from ifstream
2014-11-27 07:37:22	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-27 07:38:09	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 07:38:24	--	zwer_p_y is now known as zwer
2014-11-27 07:40:27	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-27 07:40:29	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 272 seconds)
2014-11-27 07:41:14	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-27 07:41:34	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-27 07:42:24	-->	guardian (~guardian@planet-d.net) has joined ##c++
2014-11-27 07:43:16	-->	mimon (~mimon@130.225.98.242) has joined ##c++
2014-11-27 07:43:18	guardian	hello, am I supposed to be able to write new foo()->bar(); as a oneliner in C++? where bar() returns a pointer
2014-11-27 07:44:53	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-27 07:44:58	hesperos	guardian: what would that suppose to do ?
2014-11-27 07:45:29	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-27 07:45:29	guardian	invoke bar() on a newly allocated foo instance, as a oneliner
2014-11-27 07:45:58	guardian	hmm (new foo)->bar() works
2014-11-27 07:46:03	Gvidon	guardian: And who will delete it?
2014-11-27 07:46:31	<--	DLSteve (~textual@50.248.248.108) has quit (Read error: Connection reset by peer)
2014-11-27 07:46:43	guardian	Gvidon: I'm handling it, obviously my question is about syntax only
2014-11-27 07:47:36	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 07:49:13	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-27 07:49:33	<--	proteusguy (~proteusgu@180.183.139.197) has quit (Remote host closed the connection)
2014-11-27 07:51:02	-->	Malsasa_ (~Malsasa@36.73.230.167) has joined ##c++
2014-11-27 07:51:38	hesperos	I guess you could do (std::make_shared<foo>())->bar() - but the instance will dissapear after the call
2014-11-27 07:53:01	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-27 07:53:15	--	Malsasa_ is now known as Malsasa
2014-11-27 07:53:32	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-27 07:53:48	ppf	what's wrong with for()->bar()?
2014-11-27 07:54:32	cbreak	for's a keyword
2014-11-27 07:55:07	<--	BillyPilgrim (~siriuss@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has quit (Quit: A little boy who had a big hallucination)
2014-11-27 07:56:06	hesperos	ppf: there's no way to delete it unless you provide a method to return the "this" pointer afterwards
2014-11-27 07:56:27	-->	rob`` (~rob@rmartinjak.de) has joined ##c++
2014-11-27 07:58:21	ppf	cbreak: that should have read foo
2014-11-27 07:58:39	ppf	hesperos: notice the missing new
2014-11-27 07:59:01	-->	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has joined ##c++
2014-11-27 07:59:03	ppf	that's a temporary whose life will end at the end of the expression
2014-11-27 07:59:11	-->	Tazmain (~Taz@31.221.54.34) has joined ##c++
2014-11-27 07:59:34	Tazmain	Hi all which would be a better book to get the http://www.amazon.com/Jamsas-C-Programmers-Bible/dp/1884133258 or http://www.stroustrup.com/4th.html ?
2014-11-27 07:59:35	<--	DrSkyLizard (~quassel@unaffiliated/shiningthrough) has quit (Read error: Connection reset by peer)
2014-11-27 07:59:41	cbreak	hesperos: why bother deleting anything you didn't new?
2014-11-27 08:00:19	hesperos	ppf: in that case shouldn't be foo().bar() ?
2014-11-27 08:00:40	-->	Imek (~imek@mailgate.team17.com) has joined ##c++
2014-11-27 08:01:07	<--	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-27 08:01:13	ppf	you're right
2014-11-27 08:01:25	Gvidon	Tazmain: Anything that contains "C/C++" in its title should be immediately put into a trash bin
2014-11-27 08:01:36	Tazmain	How so ?
2014-11-27 08:01:44	ppf	my bad, i'm really tired
2014-11-27 08:01:53	Gvidon	Because C and C++ are two different languages
2014-11-27 08:02:00	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has left ##c++ ("Leaving")
2014-11-27 08:02:04	ppf	Tazmain: there is no way it's able to teach you both C and C++ in one book
2014-11-27 08:02:05	cbreak	<< C/C++; int C = 99;
2014-11-27 08:02:06	geordi	warning: operation on 'C' may be undefined
2014-11-27 08:02:09	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-27 08:02:18	cbreak	Tazmain: that's why
2014-11-27 08:02:32	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-27 08:02:44	<--	wojciak (~wojciak@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:02:59	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 08:03:05	ppf	this might be slightly off topic: http://ideone.com/kUBrRX
2014-11-27 08:03:25	ppf	since recently, this code results in "no matching function for call to 'boost::adjacency_list<...>::adjacency_list(const boost::directed_graph<...>&)"
2014-11-27 08:03:35	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-27 08:03:46	ppf	i have no idea what's wrong, plus it works find on my ubuntu machine
2014-11-27 08:03:55	-->	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has joined ##c++
2014-11-27 08:03:57	ppf	(the trouble is with centos)
2014-11-27 08:04:21	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-27 08:04:31	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Remote host closed the connection)
2014-11-27 08:04:53	ppf	anyone got an idea?
2014-11-27 08:04:58	<--	komarov (~komarov@46.227.191.45) has quit (Read error: Connection reset by peer)
2014-11-27 08:05:09	Tazmain	Well the book is not to teach you the code, its just like this is how you do this kind of thing
2014-11-27 08:05:10	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 08:05:21	-->	reynard (~reynard@192.210.214.197) has joined ##c++
2014-11-27 08:05:27	-->	deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has joined ##c++
2014-11-27 08:05:31	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 08:06:04	-->	komarov (~komarov@46.227.191.96) has joined ##c++
2014-11-27 08:06:16	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 240 seconds)
2014-11-27 08:06:51	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 08:06:55	-->	phinxy_ (~tehhhd@212.3.19.144) has joined ##c++
2014-11-27 08:07:11	<--	SiN_Bizkit (~SiN_Bizki@host-94-251-111-51.bbcustomer.zsttk.net) has quit (Quit: SiN_Bizkit)
2014-11-27 08:07:18	-->	Leftas (~leftas@91.228.84.180) has joined ##c++
2014-11-27 08:07:19	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 08:07:30	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 08:07:40	<--	RangerBob (~bmaddox@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help Help I'm being repressed!)
2014-11-27 08:07:58	ville	ppf: i would guess centos has dead-old compiler that just isn't upto par
2014-11-27 08:08:06	<--	reynard (~reynard@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:08:42	ppf	ville: 4.7
2014-11-27 08:09:04	ppf	my ubuntu came with 4.8
2014-11-27 08:09:19	ville	also what line is it that produces the error?
2014-11-27 08:09:21	quaz0r	s/compiler/everything/
2014-11-27 08:09:23	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-27 08:10:21	ppf	it's on line 18, sorry
2014-11-27 08:10:41	ville	ppf: is it the assignment or will simply calling map[0] cause it?
2014-11-27 08:10:42	-->	enderlin (~enderlin@192.210.214.197) has joined ##c++
2014-11-27 08:11:05	<--	enderlin (~enderlin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:11:07	ppf	map[0]
2014-11-27 08:11:09	ville	anyway builds fine here with newer g++ and clang++
2014-11-27 08:11:26	ville	probably safe to say 4.7 is just b0rked
2014-11-27 08:11:41	ppf	maybe
2014-11-27 08:11:47	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-27 08:11:49	ppf	this code worked like a month ago
2014-11-27 08:11:52	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 08:12:01	Gvidon	On the same machine?
2014-11-27 08:12:03	ppf	i can't really trace what's happened since then
2014-11-27 08:12:03	-->	reVrost (~reVrost@CPE-58-172-99-21.mqzo1.cht.bigpond.net.au) has joined ##c++
2014-11-27 08:12:05	ppf	Gvidon: yes
2014-11-27 08:12:22	Gvidon	Weird
2014-11-27 08:12:45	ppf	i tried it with both the repo version (1.41) of boost as well as the current release
2014-11-27 08:12:59	ppf	(current is 1.57, ubuntu uses 1.54)
2014-11-27 08:13:46	-->	deis (~deis@192.210.214.197) has joined ##c++
2014-11-27 08:13:46	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-27 08:13:46	<--	deis (~deis@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 08:14:21	ville	boost 1.41 is also dead-old
2014-11-27 08:15:22	<--	jrolland-ubuntu (~jrolland@72.131.125.94) has quit (Ping timeout: 255 seconds)
2014-11-27 08:16:10	ppf	yes
2014-11-27 08:16:19	ppf	that's why i'm building against 1.57 now
2014-11-27 08:16:26	-->	hembre (~hembre@192.210.214.197) has joined ##c++
2014-11-27 08:17:50	<--	hembre (~hembre@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:17:57	-->	daNRG (~danny@e181230062.adsl.alicedsl.de) has joined ##c++
2014-11-27 08:18:29	<--	mimon (~mimon@130.225.98.242) has quit (Remote host closed the connection)
2014-11-27 08:18:58	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 08:19:21	ppf	i'm starting to think that this is not actually a boost issue
2014-11-27 08:19:33	-->	hinzundkunz (~hinzundku@145.253.75.89) has joined ##c++
2014-11-27 08:20:39	-->	glines (~glines@192.210.214.197) has joined ##c++
2014-11-27 08:20:43	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-27 08:20:54	<--	glines (~glines@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:21:25	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-27 08:21:29	<--	armyriad (~armyriad@104.207.136.75) has quit (Quit: Leaving)
2014-11-27 08:22:07	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: leaving)
2014-11-27 08:23:12	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-27 08:23:42	-->	galbreath (~galbreath@192.210.214.197) has joined ##c++
2014-11-27 08:23:43	<--	galbreath (~galbreath@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 08:24:35	-->	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has joined ##c++
2014-11-27 08:24:47	<--	deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has quit (Ping timeout: 265 seconds)
2014-11-27 08:25:25	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 08:26:23	-->	mulliniks (~mulliniks@192.210.214.197) has joined ##c++
2014-11-27 08:26:35	<--	mulliniks (~mulliniks@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:26:50	<--	GrayArea (~GrayArea@cpc5-dals19-2-0-cust506.hari.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-27 08:27:26	<--	hinzundkunz (~hinzundku@145.253.75.89) has quit (Quit: leaving)
2014-11-27 08:28:39	<--	mikroflops (~yogurt@178.174.137.62) has quit (Ping timeout: 240 seconds)
2014-11-27 08:28:46	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-27 08:29:15	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-27 08:29:26	-->	rashada (~rashada@192.210.214.197) has joined ##c++
2014-11-27 08:29:31	<--	rashada (~rashada@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:30:04	-->	mikroflops (~yogurt@178.174.137.62) has joined ##c++
2014-11-27 08:30:24	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit (Remote host closed the connection)
2014-11-27 08:31:18	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-27 08:31:21	mgaunard	can anyone recommend me a json parser library
2014-11-27 08:31:23	-->	karbofos (~vm-user@94.153.230.50) has joined ##c++
2014-11-27 08:32:07	-->	demyers (~demyers@192.210.214.197) has joined ##c++
2014-11-27 08:32:07	<--	demyers (~demyers@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 08:32:22	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-27 08:32:38	karbofos	what is the type of intermidiate calculations in c++, i.e.
2014-11-27 08:32:46	karbofos	short a = 65000
2014-11-27 08:32:49	karbofos	short b = 2
2014-11-27 08:32:59	karbofos	int c = a * b;
2014-11-27 08:32:59	mgaunard	karbofos: int
2014-11-27 08:33:03	karbofos	tnx
2014-11-27 08:33:10	mgaunard	in this case, at least
2014-11-27 08:33:35	mgaunard	arithmetic operations on types smaller than int are done with int
2014-11-27 08:33:44	mgaunard	with int and higher, it's done with those types exactly
2014-11-27 08:34:23	mgaunard	this has the undesirable effect that unsigned short * unsigned short can actually be undefined
2014-11-27 08:34:38	mgaunard	since what will happen is int*int
2014-11-27 08:34:39	<--	ShishKabab (~vincent@host171-246-static.58-79-b.business.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-27 08:34:46	mgaunard	which is undefined on overflow
2014-11-27 08:34:48	-->	crosslin (~crosslin@192.210.214.197) has joined ##c++
2014-11-27 08:34:52	Adrinael	<< TYPE(a*b); short a = 5, b = 2;
2014-11-27 08:34:52	geordi	rvalue int
2014-11-27 08:34:54	<--	crosslin (~crosslin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:35:35	Adrinael	<< TYPE(a*b); unsigned short a = 5, b = 2;
2014-11-27 08:35:36	geordi	rvalue int
2014-11-27 08:35:56	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-czvxlgpgsrmfedds) has joined ##c++
2014-11-27 08:36:12	<--	tdc (~tdc@224.Red-88-30-120.staticIP.rima-tde.net) has quit (Ping timeout: 260 seconds)
2014-11-27 08:36:55	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-27 08:37:06	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit (Remote host closed the connection)
2014-11-27 08:37:28	-->	keehan (~keehan@192.210.214.197) has joined ##c++
2014-11-27 08:37:50	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-27 08:37:50	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-27 08:37:50	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-27 08:38:07	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-27 08:38:19	<--	keehan (~keehan@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:38:33	<--	komarov (~komarov@46.227.191.96) has quit (Ping timeout: 264 seconds)
2014-11-27 08:38:49	-->	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2014-11-27 08:39:33	-->	deekej (~deekej@177-225.197-178.cust.bluewin.ch) has joined ##c++
2014-11-27 08:39:49	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-27 08:40:26	VladolfPutler	Is it correct practice to use stringstream for raw binary data?
2014-11-27 08:40:40	Eelis	depends on what you want to do with it
2014-11-27 08:40:41	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-27 08:40:55	-->	fickle (~fickle@192.210.214.197) has joined ##c++
2014-11-27 08:40:59	<--	fickle (~fickle@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:41:02	VladolfPutler	I need to read in some binary data to a block or stream, to be processed by another class or function
2014-11-27 08:41:10	VladolfPutler	I wonder what container is best to use
2014-11-27 08:41:12	Eelis	std::string then
2014-11-27 08:41:16	Eelis	or vector<char>
2014-11-27 08:41:21	Eelis	or array<char,N>
2014-11-27 08:41:29	Eelis	or string_view
2014-11-27 08:41:29	cbreak	or vector<uint8_t>
2014-11-27 08:41:40	VladolfPutler	vector<uint8_t> I would do actually
2014-11-27 08:42:16	Eelis	stringstream should be pretty low on the list, only to be used if you actually need streamy functionality
2014-11-27 08:42:24	Eelis	or formatty
2014-11-27 08:42:42	<--	kralyk (~kralyk@kaj-0819.koleje.cuni.cz) has quit (Ping timeout: 244 seconds)
2014-11-27 08:42:58	-->	CobaltHex (CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has joined ##c++
2014-11-27 08:43:00	VladolfPutler	no, and I know the size beforehand, so that means array is the better choice?
2014-11-27 08:43:06	Eelis	you mean at compile-time?
2014-11-27 08:43:15	VladolfPutler	no, runtime
2014-11-27 08:43:20	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 08:43:23	Eelis	N needs to be a compile-time constant in array<char,N>
2014-11-27 08:43:35	-->	schones (~schones@192.210.214.197) has joined ##c++
2014-11-27 08:43:58	<--	schones (~schones@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:44:11	<--	Tazmain (~Taz@31.221.54.34) has quit (Quit: Leaving)
2014-11-27 08:44:38	<--	mikroflops (~yogurt@178.174.137.62) has quit (Ping timeout: 255 seconds)
2014-11-27 08:45:28	--	RazielZ is now known as Raziel
2014-11-27 08:45:32	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 08:45:32	Eelis	which type is appropriate depends on various factors
2014-11-27 08:46:19	Eelis	for example, on the lifetime requirements of the sender's and receiver's data
2014-11-27 08:46:35	-->	mikroflops (~yogurt@178.174.137.62) has joined ##c++
2014-11-27 08:46:35	Eelis	does the thing that produce the data still need it after handing if off?
2014-11-27 08:46:39	-->	shirley (~shirley@192.210.214.197) has joined ##c++
2014-11-27 08:46:57	Eelis	does the thing that receives the data still need it after immediate processing?
2014-11-27 08:47:08	<--	shirley (~shirley@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:47:16	<--	mangekyo (mangekyo@14-201-217-28.tpgi.com.au) has quit
2014-11-27 08:47:17	<--	KarolisK (~karolis@194.28.233.64) has quit (Quit: Konversation terminated!)
2014-11-27 08:47:46	Eelis	are the production and consumption events synchronized? or does there need to be storage in between?
2014-11-27 08:47:55	<--	kurahaupo (~kurahaupo@118.148.229.185) has quit (Ping timeout: 264 seconds)
2014-11-27 08:48:17	<--	prime (~prime@unaffiliated/primex) has quit (Remote host closed the connection)
2014-11-27 08:48:40	Eelis	you can only meaningfully decide on how you're going to represent resources if you know the answers to these questions.
2014-11-27 08:49:31	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 08:49:42	-->	morganti (~morganti@192.210.214.197) has joined ##c++
2014-11-27 08:49:49	Eelis	and other questions such as: how much data are we talking about?
2014-11-27 08:49:54	<--	morganti (~morganti@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:49:57	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-27 08:50:04	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-27 08:50:25	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-27 08:50:34	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-27 08:50:46	VladolfPutler	a few Kb on average, up to 100kb or something
2014-11-27 08:50:51	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 258 seconds)
2014-11-27 08:51:05	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-wmjfvmaccvdyzpun) has joined ##c++
2014-11-27 08:51:28	VladolfPutler	actually up to 200kb perhaps or even more
2014-11-27 08:52:46	-->	nickelsto (~nickelsto@192.210.214.197) has joined ##c++
2014-11-27 08:52:57	<--	nickelsto (~nickelsto@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:53:05	-->	tdc (~tdc@195.Red-95-127-91.staticIP.rima-tde.net) has joined ##c++
2014-11-27 08:53:16	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-27 08:55:10	<--	pappa (~pappa@91.141.5.101.wireless.dyn.drei.com) has quit (Ping timeout: 265 seconds)
2014-11-27 08:55:50	-->	weinzierl (~weinzierl@192.210.214.197) has joined ##c++
2014-11-27 08:55:50	<--	weinzierl (~weinzierl@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 08:58:30	-->	tones (~tones@192.210.214.197) has joined ##c++
2014-11-27 08:58:34	<--	tones (~tones@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 08:58:45	-->	usrJayRay_mbp (~usrJayRay@150.200.229.74) has joined ##c++
2014-11-27 09:00:17	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection timed out)
2014-11-27 09:01:11	-->	rehnert (~rehnert@192.210.214.197) has joined ##c++
2014-11-27 09:01:13	<--	rehnert (~rehnert@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:02:11	<--	LBV_User (~leonardo@177.2.128.75) has quit (Quit: done with this Instant Ramen Cup)
2014-11-27 09:03:05	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 258 seconds)
2014-11-27 09:03:34	<--	hyperboreean (~none@unaffiliated/hyperboreean) has quit (Remote host closed the connection)
2014-11-27 09:03:51	-->	ziemski (~ziemski@192.210.214.197) has joined ##c++
2014-11-27 09:03:58	<--	ziemski (~ziemski@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:05:22	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-27 09:05:22	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-27 09:05:23	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-27 09:06:13	-->	pappa (~pappa@91.141.5.101.wireless.dyn.drei.com) has joined ##c++
2014-11-27 09:06:32	-->	rella (~rella@192.210.214.197) has joined ##c++
2014-11-27 09:06:40	<--	rella (~rella@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:08:05	<--	reVrost (~reVrost@CPE-58-172-99-21.mqzo1.cht.bigpond.net.au) has quit (Quit: Leaving)
2014-11-27 09:08:16	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-27 09:08:53	-->	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has joined ##c++
2014-11-27 09:08:56	kafor7	Hi
2014-11-27 09:09:13	-->	bonadio (~bonadio@192.210.214.197) has joined ##c++
2014-11-27 09:09:15	kafor7	Suppose I have this operator
2014-11-27 09:09:15	<--	bonadio (~bonadio@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 09:09:40	kafor7	does anybody know why this code : Vector3 v1 = Vector3(1, 2, 3); Vector3 v2 = Vector3(1, 2, 3); Vector3 tmp = v1 + v2; doesnt compile ?
2014-11-27 09:10:16	Adrinael	What operator
2014-11-27 09:10:27	Adrinael	!doesnotwork
2014-11-27 09:10:28	nolyc	Does not work isn't very helpful. What doesn't work? Do you have an error? You need to provide more detailed information. We are not telepathic, you know. Try saying !testcase.
2014-11-27 09:10:57	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-27 09:11:02	kafor7	Error 4 error C2678: binary '+' : no operator found which takes a left-hand operand of type 'MCRendererEngine::Vector3' (or there is no acceptable conversion) C:\Users\NorbertG\Documents\ZPP_Repositories\MCRenderer\Source\MCRenderer\main.cpp 32 1 MainApp
2014-11-27 09:11:02	kafor7	Error 4 error C2678: binary '+' : no operator found which takes a left-hand operand of type 'MCRendererEngine::Vector3' (or there is no acceptable conversion) C:\Users\NorbertG\Documents\ZPP_Repositories\MCRenderer\Source\MCRenderer\main.cpp 32 1 MainApp
2014-11-27 09:11:02	kafor7	that + operator is undefinied
2014-11-27 09:11:18	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-27 09:11:27	C0MPAQ	it says you did not define the operator
2014-11-27 09:11:29	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 255 seconds)
2014-11-27 09:11:36	C0MPAQ	that makes sense
2014-11-27 09:11:41	Adrinael	You did not declare it
2014-11-27 09:11:44	Adrinael	Properly
2014-11-27 09:11:48	-->	kszatan_ (~kszatan@94.42.137.2) has joined ##c++
2014-11-27 09:11:48	kafor7	yes, but I though that using a move semanticswill do the thing
2014-11-27 09:11:53	-->	covington (~covington@192.210.214.197) has joined ##c++
2014-11-27 09:11:59	<--	covington (~covington@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:12:07	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-27 09:12:11	Adrinael	The error is right there in your declaration *points with finger*
2014-11-27 09:12:13	kafor7	Vector3 = Vecto3::Zero + Vector3::One; works fine
2014-11-27 09:12:26	C0MPAQ	Vecto3::Zero?
2014-11-27 09:12:38	kafor7	is just vector3(0,0,0)
2014-11-27 09:12:48	Adrinael	As in: Cannot tell what's wrong with code we haven't seen
2014-11-27 09:13:02	kafor7	it works with rvalues but with normal variables no
2014-11-27 09:13:25	<--	w66 (AH3e@null.firrre.com) has quit (Ping timeout: 258 seconds)
2014-11-27 09:13:38	Adrinael	You only have an rvalue reference overload, and lvalues don't go into those without fighting back
2014-11-27 09:14:20	kafor7	hmm I thought that a compiler will deduce a type in compile time
2014-11-27 09:14:34	-->	dersch (~dersch@192.210.214.197) has joined ##c++
2014-11-27 09:14:37	<--	dersch (~dersch@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 09:14:40	Adrinael	It does
2014-11-27 09:14:45	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-27 09:14:47	ppf	ville: i pulled in gcc 4.9, now this stuff is working
2014-11-27 09:14:53	ppf	no idea what broke it ...
2014-11-27 09:14:56	Adrinael	I still don't know what code you have
2014-11-27 09:14:57	ppf	but thanks for the hint!
2014-11-27 09:15:02	<--	kszatan (~kszatan@94.42.137.2) has quit (Ping timeout: 240 seconds)
2014-11-27 09:15:27	kafor7	Vector3 tmp = v1.operator+(forward<Vector3>(v2)); works Vector3 tmp = v1.operator+(v2); doesn't, sstrange for me..
2014-11-27 09:15:52	 *	Adrinael gives up
2014-11-27 09:17:15	-->	mericle (~mericle@192.210.214.197) has joined ##c++
2014-11-27 09:17:17	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-27 09:17:17	-->	dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-27 09:17:25	<--	mericle (~mericle@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:17:26	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-11-27 09:18:02	kafor7	Should I always use forward ?
2014-11-27 09:18:06	kafor7	with forward works fine
2014-11-27 09:18:40	TinoDidriksen	kafor7, you should overload your op+ for lvalues
2014-11-27 09:18:49	-->	w66 (AH3e@null.firrre.com) has joined ##c++
2014-11-27 09:19:22	-->	oleo (~oleo@xdsl-84-44-179-10.netcologne.de) has joined ##c++
2014-11-27 09:19:24	kafor7	TinoDidriksen what about a situation where I have a function that takes n parameters ? WIll I have to create 2^n overloaded functions ?
2014-11-27 09:19:28	cbreak	kafor7: nah, don't bother with forward unless you use "universal" references
2014-11-27 09:19:34	cbreak	kafor7: they are pointless
2014-11-27 09:19:57	pi-	Wouldn't it be rather nice to allow {public, protected, private} access specifiers for one particular function or variable?
2014-11-27 09:20:06	<--	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-27 09:20:06	pi-	Just by not having the :
2014-11-27 09:20:16	cbreak	pi-: you can make as many groups as you want.
2014-11-27 09:20:18	-->	stayter (~stayter@192.210.214.197) has joined ##c++
2014-11-27 09:20:30	<--	stayter (~stayter@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:20:46	-->	Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-11-27 09:20:49	pi-	cbreak: I know, but often I want to change the access just for one item, and it is a bit clunky to have to change back.
2014-11-27 09:20:52	-->	rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-27 09:21:11	kafor7	Is it a good practice to use universal references ?
2014-11-27 09:21:28	cbreak	pi-: then use a different order
2014-11-27 09:21:32	kafor7	I looks funny when I have to add forward function for all my parameters
2014-11-27 09:21:36	kafor7	it looks*
2014-11-27 09:21:46	cbreak	kafor7: it's usually pointless
2014-11-27 09:21:50	cbreak	unless you forward
2014-11-27 09:22:10	pi-	cbreak: but then that destroys the natural grouping.  I have a bunch of public methods that each use a private helper.
2014-11-27 09:22:23	kafor7	cbreak: so it's a bad practice to use T&& for function parameters ?
2014-11-27 09:22:33	cbreak	pi-: private helpers should go to the end
2014-11-27 09:22:39	-->	pnbeast (~pnbeast@70.15.185.27.res-cmts.pnt.ptd.net) has joined ##c++
2014-11-27 09:22:42	cbreak	pi-: because naturally, those are irrelevant for users
2014-11-27 09:22:48	TinoDidriksen	kafor7, your op+ should probably just take const T& which will handle both cases nicely.
2014-11-27 09:23:07	cbreak	kafor7: it depends.
2014-11-27 09:23:08	<--	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-27 09:23:18	kafor7	But how about other functions ?
2014-11-27 09:23:20	cbreak	kafor7: do you not know what you're doing?
2014-11-27 09:23:22	-->	ramelli (~ramelli@192.210.214.197) has joined ##c++
2014-11-27 09:23:29	<--	ramelli (~ramelli@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:23:30	cbreak	kafor7: have you no clue what your code does?
2014-11-27 09:23:35	cbreak	or do you have a hint?
2014-11-27 09:23:48	cbreak	kafor7: if you know for example that you don't need your own copy, then a const ref is enough
2014-11-27 09:23:58	pi-	cbreak: one thing I did like about ObjC was clear separation of Public interface from private interface. It meant that all implementation details were encapsulated i.e. hidden from the consumer.
2014-11-27 09:24:01	cbreak	kafor7: if you want to modify the original, then a non-const lvalue ref is needed
2014-11-27 09:24:12	cbreak	kafor7: if you want to own the thing, then pass by value
2014-11-27 09:24:29	cbreak	pi-: in C++ you can do that too
2014-11-27 09:24:32	kafor7	but isn't it expensive ?
2014-11-27 09:24:32	<--	DLSteve (~textual@50.248.248.108) has quit (Read error: Connection reset by peer)
2014-11-27 09:24:36	<--	deekej (~deekej@177-225.197-178.cust.bluewin.ch) has quit (Ping timeout: 245 seconds)
2014-11-27 09:24:38	cbreak	pi-: put them at the end, or just into the implementation
2014-11-27 09:24:42	cbreak	kafor7: what?! why?
2014-11-27 09:24:54	kafor7	passing by value, making a new copy ?
2014-11-27 09:24:59	cbreak	?!
2014-11-27 09:25:12	cbreak	why make a new copy?
2014-11-27 09:25:13	-->	DLSteve (~textual@50.248.248.108) has joined ##c++
2014-11-27 09:25:14	kafor7	So I didn't get it
2014-11-27 09:25:15	TinoDidriksen	kafor7, const T& is cheap/free. Only copy if you need a copy...only use ref if you need to modify the original.
2014-11-27 09:25:48	cbreak	kafor7: passing by value only makes a new copy if you need one
2014-11-27 09:26:02	-->	lyter (~lyter@192.210.214.197) has joined ##c++
2014-11-27 09:26:11	<--	lyter (~lyter@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:26:30	kafor7	so when should I use universal references then ?
2014-11-27 09:26:44	cbreak	kafor7: when you have no clue
2014-11-27 09:26:47	cbreak	as I said above
2014-11-27 09:26:48	-->	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-27 09:26:48	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Ping timeout: 258 seconds)
2014-11-27 09:27:11	<--	MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 258 seconds)
2014-11-27 09:27:19	pi-	I love the style freedom C++ offers. If you give 10 C# & C++ programmers a challenge I reckon there will be much more variety from the C++ group, because the language structure encourages diversity.
2014-11-27 09:27:25	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 09:27:38	cbreak	kafor7: universal references are used together with forward to just forward things without needing to have a clue about the semantics
2014-11-27 09:28:39	kafor7	I thought it's cool to use them everywhere
2014-11-27 09:28:43	-->	oldroyd (~oldroyd@192.210.214.197) has joined ##c++
2014-11-27 09:28:50	kafor7	But I don't like to write forward for all my arguments
2014-11-27 09:28:53	<--	oldroyd (~oldroyd@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:29:03	Gvidon	pi-: They you'll love Perl even more
2014-11-27 09:29:06	Gvidon	*then
2014-11-27 09:29:14	-->	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has joined ##c++
2014-11-27 09:29:43	-->	MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-27 09:31:23	<--	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has quit (Ping timeout: 258 seconds)
2014-11-27 09:31:46	-->	tayag (~pepito@192.210.214.197) has joined ##c++
2014-11-27 09:32:02	<--	tayag (~pepito@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:34:34	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-11-27 09:34:50	-->	ruhn (~ruhn@192.210.214.197) has joined ##c++
2014-11-27 09:35:05	<--	ruhn (~ruhn@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:36:07	-->	snyp (~Snyp@150.129.132.81) has joined ##c++
2014-11-27 09:36:42	snyp	aw why does c++ not have designated array initializers?
2014-11-27 09:37:00	snyp	like {[1] = 99; [2] = 100}
2014-11-27 09:37:07	snyp	s/;/,
2014-11-27 09:37:09	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 09:37:13	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-27 09:37:53	digitalsurgeon	same reason why sun rises from the east.
2014-11-27 09:37:54	-->	petrosky (~petrosky@192.210.214.197) has joined ##c++
2014-11-27 09:38:10	<--	petrosky (~petrosky@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:38:35	snyp	is it 'unsafe' in any way that c++ chose not to add it?
2014-11-27 09:39:21	digitalsurgeon	depends on which version of c++ you are talking about and then they people who decided that version features can answer that
2014-11-27 09:39:38	snyp	ok
2014-11-27 09:39:44	Eelis	maybe there was never a decision not to add. maybe nobody bothered to propose it
2014-11-27 09:40:04	Eelis	things don't get auto-added
2014-11-27 09:40:08	Eelis	someone has to propose the addition
2014-11-27 09:40:25	digitalsurgeon	perhaps. this is not an implementation issue, you could modify gcc urself to add this feature if you really want it
2014-11-27 09:40:40	snyp	>modify gcc
2014-11-27 09:40:54	snyp	shouldn't be a problem
2014-11-27 09:40:57	snyp	brb
2014-11-27 09:40:57	-->	bedward (~bedward@192.210.214.197) has joined ##c++
2014-11-27 09:40:59	<--	bedward (~bedward@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 09:41:04	-->	oleo__ (~oleo@xdsl-78-35-169-184.netcologne.de) has joined ##c++
2014-11-27 09:41:27	--	oleo is now known as Guest30560
2014-11-27 09:41:48	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-11-27 09:42:36	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 09:42:42	-->	hinzundkunz (~hinzundku@145.253.75.89) has joined ##c++
2014-11-27 09:42:54	<--	Guest30560 (~oleo@xdsl-84-44-179-10.netcologne.de) has quit (Ping timeout: 265 seconds)
2014-11-27 09:43:38	-->	lorden (~lorden@192.210.214.197) has joined ##c++
2014-11-27 09:43:50	<--	lorden (~lorden@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 09:44:08	<--	phillips1012 (~phillips1@72.42.104.172) has quit (Ping timeout: 245 seconds)
2014-11-27 09:44:10	<--	astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-27 09:44:32	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-27 09:44:49	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 09:45:58	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Remote host closed the connection)
2014-11-27 09:47:29	-->	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-27 09:48:14	<--	DLSteve (~textual@50.248.248.108) has quit (Read error: Connection reset by peer)
2014-11-27 09:48:14	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-27 09:48:29	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-27 09:49:49	<--	oleo__ (~oleo@xdsl-78-35-169-184.netcologne.de) has quit (Quit: Verlassend)
2014-11-27 09:50:13	<--	soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (Quit: Return to innocence)
2014-11-27 09:50:18	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-27 09:50:29	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-27 09:50:33	-->	luny` (~luny@unaffiliated/luny) has joined ##c++
2014-11-27 09:51:17	<--	snyp (~Snyp@150.129.132.81) has quit (Quit: WeeChat 1.0.1)
2014-11-27 09:53:02	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-27 09:53:28	<--	Elirips (~Elirips@84-74-177-218.dclient.hispeed.ch) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-27 09:53:34	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Quit: Leaving...)
2014-11-27 09:54:03	<--	luny (~luny@unaffiliated/luny) has quit (Ping timeout: 265 seconds)
2014-11-27 09:54:05	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-27 09:55:41	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:a4cc:8407:ebd7:40c9) has quit (Ping timeout: 272 seconds)
2014-11-27 09:56:10	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-27 09:56:55	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-27 09:57:09	batbird	since people in here have more insight into C++: I use C++ for everything, even tasks I could imagine would be more convenient to do with Haskell. Any reason to stay on that path?
2014-11-27 09:57:26	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 09:57:33	PlasmaHH	no
2014-11-27 09:57:46	PlasmaHH	always use the language that suits the situation best
2014-11-27 09:58:38	batbird	:(. Then I'll have to come to terms with my nemesis: I suck at haskell and I don't want to learn it.
2014-11-27 09:59:29	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-27 10:00:15	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-27 10:00:52	PlasmaHH	then don't. I explicitly said "situation". this includes your skill in that language. if using haskell takes you days instead of hours and does nightmares to you, then dont use it.
2014-11-27 10:01:14	PlasmaHH	if its a language that fits,y ou want to learn/improve in, and you have the time, then do it.
2014-11-27 10:01:30	PlasmaHH	dont learn any language if there is no reason to do so
2014-11-27 10:01:45	digitalsurgeon	always use best tool for the job
2014-11-27 10:01:51	cbreak	-> C++ :)
2014-11-27 10:01:53	digitalsurgeon	will u use a hammer to make pancakes ?
2014-11-27 10:02:01	<--	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-27 10:02:03	PlasmaHH	wait, you dont?
2014-11-27 10:02:22	Eelis	don't try to learn a language you don't want to learn
2014-11-27 10:02:40	Eelis	but realize that not wanting to learn inhibits your development
2014-11-27 10:03:01	Eelis	including as a C++ programmer
2014-11-27 10:03:04	-->	luny`` (~luny@unaffiliated/luny) has joined ##c++
2014-11-27 10:03:04	PlasmaHH	depends. there are more than 8500 programmingl anguages out there, there is much redundancy
2014-11-27 10:03:14	Eelis	you don't have to learn them all
2014-11-27 10:03:16	Eelis	you have to learn a bunch
2014-11-27 10:05:20	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-27 10:05:29	-->	tsimpson_ (b903a4c7@ubuntu/member/stdin) has joined ##c++
2014-11-27 10:06:04	-->	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-27 10:06:29	<--	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Killed (idoru (Spam is off topic on freenode.)))
2014-11-27 10:06:35	<--	luny` (~luny@unaffiliated/luny) has quit (Ping timeout: 265 seconds)
2014-11-27 10:07:26	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-27 10:07:31	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-27 10:08:20	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 10:08:34	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-27 10:08:38	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 10:10:30	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-27 10:10:33	-->	DarkArcher (~darkarche@162.253.129.218) has joined ##c++
2014-11-27 10:12:24	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 10:12:47	-->	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has joined ##c++
2014-11-27 10:13:14	<--	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has left ##c++
2014-11-27 10:13:18	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-27 10:13:21	-->	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has joined ##c++
2014-11-27 10:13:42	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 10:14:08	-->	deekej (~deekej@177-225.197-178.cust.bluewin.ch) has joined ##c++
2014-11-27 10:17:30	<--	boblehest (~boblehest@229.79-160-100.customer.lyse.net) has quit (Quit: ZNC - http://znc.in)
2014-11-27 10:18:00	-->	mimon (~mimon@130.225.98.242) has joined ##c++
2014-11-27 10:18:42	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 10:19:20	<--	mimon (~mimon@130.225.98.242) has quit (Remote host closed the connection)
2014-11-27 10:19:22	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 10:19:29	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 10:19:47	<--	TheHackOps (~TheHackOp@203-158-39-145.dyn.iinet.net.au) has quit (Quit: Leaving)
2014-11-27 10:20:50	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Read error: Connection reset by peer)
2014-11-27 10:20:55	-->	DexterLB (~dex@77-85-7-19.btc-net.bg) has joined ##c++
2014-11-27 10:21:07	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-27 10:21:18	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-27 10:21:25	-->	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has joined ##c++
2014-11-27 10:21:30	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 10:22:02	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 10:22:27	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Client Quit)
2014-11-27 10:22:49	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-27 10:23:12	-->	Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined ##c++
2014-11-27 10:27:43	-->	eleve (~eleve@88.125.178.138) has joined ##c++
2014-11-27 10:27:59	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2014-11-27 10:29:23	-->	oleo__ (~oleo@xdsl-78-35-169-184.netcologne.de) has joined ##c++
2014-11-27 10:29:48	<--	losh (~losh@staff-fr.corp.dailymotion.com) has quit (Quit: Leaving)
2014-11-27 10:30:28	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-27 10:32:32	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit
2014-11-27 10:32:53	-->	lamefun (~lamefun2@5.166.246.128) has joined ##c++
2014-11-27 10:35:54	-->	King_Hual` (~Hual@94.26.28.68) has joined ##c++
2014-11-27 10:36:40	<--	hinzundkunz (~hinzundku@145.253.75.89) has quit (Quit: Lost terminal)
2014-11-27 10:36:47	<--	lllshamanlll (~lllshaman@146.66.164.249) has quit (Ping timeout: 255 seconds)
2014-11-27 10:37:05	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-27 10:38:10	<--	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has quit (Quit: Ex-Chat)
2014-11-27 10:38:28	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 10:38:49	<--	eleve (~eleve@88.125.178.138) has quit (Read error: Connection reset by peer)
2014-11-27 10:39:02	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-27 10:39:11	<--	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 244 seconds)
2014-11-27 10:39:14	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 10:39:16	-->	eleve (~eleve@88.125.178.138) has joined ##c++
2014-11-27 10:39:42	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 10:40:12	<--	lllshamanlll (~lllshaman@146.66.164.249) has quit (Remote host closed the connection)
2014-11-27 10:41:07	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-27 10:41:21	<--	eleve (~eleve@88.125.178.138) has quit (Client Quit)
2014-11-27 10:41:44	Gvidon	So, this http://ideone.com/qZNsLj compiles in gcc but doesn't compile in clang. Who's right?
2014-11-27 10:42:07	<--	usrJayRay_mbp (~usrJayRay@150.200.229.74) has quit (Quit: usrJayRay_mbp)
2014-11-27 10:42:11	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 10:42:43	-->	system42 (~androirc@adsl-98-95-89-78.jan.bellsouth.net) has joined ##c++
2014-11-27 10:43:12	<--	system42 (~androirc@adsl-98-95-89-78.jan.bellsouth.net) has left ##c++
2014-11-27 10:43:52	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 10:43:53	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 10:44:13	tsimpson_	I think you've found a bug in clang
2014-11-27 10:44:52	<--	karbofos (~vm-user@94.153.230.50) has quit (Ping timeout: 255 seconds)
2014-11-27 10:45:15	V-ille	no, clang is right
2014-11-27 10:45:18	V-ille	gcc is wrong
2014-11-27 10:45:47	-->	critias (critias@53558706.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2014-11-27 10:45:48	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-27 10:45:49	V-ille	[over.oper]/6: "An operator function shall either be a non-static member function or be a non-member function that has at least one parameter whose type is a class, a reference to a class, an enumeration, or a reference to an enumeration. "
2014-11-27 10:46:05	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-27 10:46:15	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 10:46:17	critias	can I auto-translate c# to c++ ? t.i., with a converter program?
2014-11-27 10:46:31	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2014-11-27 10:46:32	Gvidon	V-ille: But the invalid version isn't used in the code
2014-11-27 10:46:43	V-ille	Gvidon: all of the operators are invalid
2014-11-27 10:47:14	Gvidon	V-ille: S is a struct
2014-11-27 10:47:28	V-ille	oops, fuck, I didn't notice that :P
2014-11-27 10:47:46	lamefun	How do I shorten this? http://ideone.com/3A60ty
2014-11-27 10:47:52	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 258 seconds)
2014-11-27 10:48:07	zagabar	hello. I am trying to declare a template function using a decltype evaluation for the return type. but I am getting the error "template argument 1 is invalid" but I can't see how it is invalid. Error and code can be seen here: http://ideone.com/7YfCiS any ideas on what is wrong?
2014-11-27 10:48:25	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-27 10:48:33	V-ille	Gvidon: well, it looks like clang instantiates the wrong template for sure. So forget my earlier suggestion, that looks like a clang bug.
2014-11-27 10:49:40	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-27 10:49:42	Gvidon	Ok, thanks
2014-11-27 10:50:06	V-ille	Gvidon: would you like to report the bug?
2014-11-27 10:51:49	<--	pappa (~pappa@91.141.5.101.wireless.dyn.drei.com) has quit (Ping timeout: 264 seconds)
2014-11-27 10:52:14	V-ille	zagabar: your stars are on the wrong side
2014-11-27 10:52:15	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 10:52:18	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-27 10:52:22	V-ille	zagabar: see http://ideone.com/lBbng2
2014-11-27 10:52:38	Gvidon	V-ille: It's a colleague of mine who found it, I think, he'll report it
2014-11-27 10:52:40	zagabar	V-ille: eurgh... i'm too tired to code today. thanks lol
2014-11-27 10:52:49	-->	dogukan (~dogukan@unaffiliated/dogukan) has joined ##c++
2014-11-27 10:53:08	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:2cb0:795:90a6:3c) has joined ##c++
2014-11-27 10:53:23	<--	lamefun (~lamefun2@5.166.246.128) has quit (Quit: Leaving)
2014-11-27 10:53:25	V-ille	Gvidon: if so, I'd like to see how that bug proceeds, so if you can send me a link to the bug once it's been reported, I'd appreciate that
2014-11-27 10:53:36	Gvidon	V-ille: Ok
2014-11-27 10:53:57	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 10:54:25	-->	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-11-27 10:55:06	<--	Gvidon (~gvidon@unaffiliated/gvidon) has quit (Quit: Leaving.)
2014-11-27 10:55:10	yates	using a std::map, is there a way to retrieve the nth key and value?
2014-11-27 10:56:36	tsimpson_	iterate over the map
2014-11-27 10:57:26	yates	there is no way to directly access the nth element?
2014-11-27 10:57:33	yates	without the key?
2014-11-27 10:57:49	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 258 seconds)
2014-11-27 10:57:59	tsimpson_	it's a map of key->value, numeric indexes don't really mean much
2014-11-27 10:58:06	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-27 10:59:07	yates	so the answer is "no"?
2014-11-27 11:00:17	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-27 11:00:41	<--	Burgundy (~burgundy@188.26.254.244) has quit (Remote host closed the connection)
2014-11-27 11:00:44	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-27 11:01:17	yates	it is a finite set of N (key, value) pairs. there is no way those elements can be indexed?
2014-11-27 11:01:37	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 264 seconds)
2014-11-27 11:02:14	RlyDontKnow	you can use next(begin(map)), but not access them directly
2014-11-27 11:02:24	-->	Burgundy (~burgundy@5-12-201-222.residential.rdsnet.ro) has joined ##c++
2014-11-27 11:02:25	-->	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has joined ##c++
2014-11-27 11:03:07	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-27 11:03:10	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-27 11:03:16	yates	ok, thanks.
2014-11-27 11:03:45	darkswordchris	Hello. I am currently working on a dll. I am using code::blocks and have set up a host program. When I compile and run, all is fine. However, when I choose debug, I get a segmentation fault almost immediatly.
2014-11-27 11:03:46	RlyDontKnow	erm, next(begin(map), index)
2014-11-27 11:04:12	V-ille	!give darkswordchris general
2014-11-27 11:04:14	nolyc	darkswordchris: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-27 11:04:15	-->	komarov (~komarov@46.227.191.76) has joined ##c++
2014-11-27 11:04:15	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-27 11:04:21	V-ille	this is not a code::blocks help channel
2014-11-27 11:04:23	darkswordchris	oh, thanks
2014-11-27 11:04:31	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-27 11:06:09	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 11:06:14	--	oleo__ is now known as oleo
2014-11-27 11:06:24	yates	darkswordchris: try the general group - folks there are most helpful.
2014-11-27 11:06:26	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 11:06:45	darkswordchris	yates: Yep, just asked there. Thanks
2014-11-27 11:06:50	-->	newbiz (~newbiz@116-166-190-90.dyn.estpak.ee) has joined ##c++
2014-11-27 11:07:03	-->	scai (~scai@pD9EA6D3F.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 11:07:34	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined ##c++
2014-11-27 11:09:51	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 256 seconds)
2014-11-27 11:10:00	<--	komarov (~komarov@46.227.191.76) has quit (Ping timeout: 255 seconds)
2014-11-27 11:10:37	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Client Quit)
2014-11-27 11:10:42	-->	komarov (~komarov@46.227.191.61) has joined ##c++
2014-11-27 11:11:15	-->	JacobMason (~jacobmaso@166.170.55.130) has joined ##c++
2014-11-27 11:11:23	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 250 seconds)
2014-11-27 11:11:27	--	Ulrike_Rayne is now known as Ulrike_Payne
2014-11-27 11:11:49	<--	JacobMason (~jacobmaso@166.170.55.130) has quit (Client Quit)
2014-11-27 11:12:21	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-27 11:13:05	<--	jagob (~jacob@h195.natout.aau.dk) has quit (Ping timeout: 245 seconds)
2014-11-27 11:13:52	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-27 11:13:53	<--	tarruda (~tarruda@191.33.49.40) has quit (Ping timeout: 258 seconds)
2014-11-27 11:14:29	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-27 11:14:31	<--	blut (~blut@ersc147.goemobile.de) has quit (Ping timeout: 265 seconds)
2014-11-27 11:15:30	<--	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-11-27 11:15:35	-->	mimon (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 11:15:57	<--	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-27 11:16:39	<--	timj1 (~timj@p5DDB166C.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-27 11:18:04	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 11:18:33	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Quit: Leaving.)
2014-11-27 11:18:41	<--	ravior (~ravior@89.121.200.106) has quit (Remote host closed the connection)
2014-11-27 11:18:51	<--	hypebeast (pi@g231047172.adsl.alicedsl.de) has quit (Ping timeout: 265 seconds)
2014-11-27 11:18:57	-->	Tenju (~rayston@ip68-106-242-42.ph.ph.cox.net) has joined ##c++
2014-11-27 11:19:05	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-27 11:19:20	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 11:20:00	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 11:20:14	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 240 seconds)
2014-11-27 11:20:51	-->	hypebeast (pi@g231047172.adsl.alicedsl.de) has joined ##c++
2014-11-27 11:21:19	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-27 11:22:15	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Ping timeout: 272 seconds)
2014-11-27 11:23:27	<--	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-27 11:23:44	<--	grayshade (~grayshade@86.122.135.130) has quit (Quit: WeeChat 1.1-dev)
2014-11-27 11:24:16	<--	dogukan (~dogukan@unaffiliated/dogukan) has quit (Quit: Konversation terminated!)
2014-11-27 11:24:27	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 255 seconds)
2014-11-27 11:27:25	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-27 11:27:39	<--	hypebeast (pi@g231047172.adsl.alicedsl.de) has quit (Ping timeout: 258 seconds)
2014-11-27 11:28:11	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2014-11-27 11:28:18	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 11:28:27	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 11:30:20	-->	hypebeast (pi@g231047172.adsl.alicedsl.de) has joined ##c++
2014-11-27 11:30:58	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 11:31:06	<--	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has quit (Ping timeout: 272 seconds)
2014-11-27 11:31:35	<--	critias (critias@53558706.cm-6-6c.dynamic.ziggo.nl) has quit
2014-11-27 11:32:49	-->	kaffeetrauma (~Thunderbi@2a02:908:eb31:5180:85c1:55cc:bc19:b50e) has joined ##c++
2014-11-27 11:33:29	-->	seishun (~Kakera@84.237.206.239) has joined ##c++
2014-11-27 11:35:30	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-11-27 11:35:31	<--	teraliv_ (~chatzilla@192.198.151.44) has quit (Quit: ChatZilla 0.9.91 [Firefox 31.0/20140715214327])
2014-11-27 11:35:48	-->	huhze (~quassel@dslb-178-005-215-041.178.005.pools.vodafone-ip.de) has joined ##c++
2014-11-27 11:36:37	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 11:37:11	<--	tsimpson_ (b903a4c7@ubuntu/member/stdin) has quit
2014-11-27 11:37:40	<--	kaffeetrauma (~Thunderbi@2a02:908:eb31:5180:85c1:55cc:bc19:b50e) has quit (Ping timeout: 265 seconds)
2014-11-27 11:38:03	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-27 11:39:25	-->	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has joined ##c++
2014-11-27 11:40:28	-->	dogukan (~dogukan@unaffiliated/dogukan) has joined ##c++
2014-11-27 11:41:47	<--	hypebeast (pi@g231047172.adsl.alicedsl.de) has quit (Quit: leaving)
2014-11-27 11:41:57	-->	hypebeast (pi@g231047172.adsl.alicedsl.de) has joined ##c++
2014-11-27 11:42:24	<--	ericP (~eric@ssh.w3.org) has quit (Ping timeout: 255 seconds)
2014-11-27 11:42:41	-->	ericP (~eric@ssh.w3.org) has joined ##c++
2014-11-27 11:43:04	<--	nilsi (~nilsi@183.101.241.130) has quit (Remote host closed the connection)
2014-11-27 11:45:00	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-27 11:45:33	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-27 11:45:59	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-27 11:46:03	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 11:46:18	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Client Quit)
2014-11-27 11:47:33	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 11:47:51	-->	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has joined ##c++
2014-11-27 11:48:00	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 11:48:54	-->	[DarkArcher] (~darkarche@162.253.129.218) has joined ##c++
2014-11-27 11:49:02	-->	tehhd (~tehhhd@212.3.19.144) has joined ##c++
2014-11-27 11:49:53	<--	phinxy_ (~tehhhd@212.3.19.144) has quit (Ping timeout: 264 seconds)
2014-11-27 11:51:05	<--	DarkArcher (~darkarche@162.253.129.218) has quit (Ping timeout: 264 seconds)
2014-11-27 11:51:20	<--	hesperos (~tomasz@90.216.134.198) has quit (Quit: Lost terminal)
2014-11-27 11:51:40	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-27 11:52:36	<--	TheAncientGoat (~quassel@175.136.59.214) has quit (Remote host closed the connection)
2014-11-27 11:52:40	-->	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has joined ##c++
2014-11-27 11:53:25	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-27 11:53:42	-->	kaffeetrauma (~Thunderbi@2a02:908:eb31:5180:85c1:55cc:bc19:b50e) has joined ##c++
2014-11-27 11:54:15	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 11:55:04	<--	illerucis (~illerucis@2604:2000:1403:e0cc:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2014-11-27 11:55:06	<--	tehhd (~tehhhd@212.3.19.144) has quit (Ping timeout: 272 seconds)
2014-11-27 11:55:11	-->	TheGun (~ronnyma@89.10.253.157) has joined ##c++
2014-11-27 11:55:14	<--	TheGun (~ronnyma@89.10.253.157) has quit (Client Quit)
2014-11-27 11:55:37	-->	TheGun (~ronnyma@157.89-10-253.nextgentel.com) has joined ##c++
2014-11-27 11:56:26	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-27 11:57:00	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Remote host closed the connection)
2014-11-27 11:57:46	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-27 11:58:46	<--	paul424 (~chatzilla@91.207.69.217) has quit (Remote host closed the connection)
2014-11-27 11:58:48	<--	kaffeetrauma (~Thunderbi@2a02:908:eb31:5180:85c1:55cc:bc19:b50e) has quit (Read error: Connection reset by peer)
2014-11-27 11:58:59	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-27 11:59:23	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-27 11:59:56	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-11-27 12:01:39	<--	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has quit (Quit: rcirc on GNU Emacs 24.3.1)
2014-11-27 12:03:05	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-27 12:05:40	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 12:06:32	<--	Imek (~imek@mailgate.team17.com) has quit (Quit: Leaving)
2014-11-27 12:07:15	-->	Nando_k (~Nando_k@dslb-092-077-093-095.092.077.pools.vodafone-ip.de) has joined ##c++
2014-11-27 12:07:57	<--	deekej (~deekej@177-225.197-178.cust.bluewin.ch) has quit (Remote host closed the connection)
2014-11-27 12:08:26	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Ping timeout: 264 seconds)
2014-11-27 12:10:20	<--	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has quit (Quit: Leaving.)
2014-11-27 12:11:02	-->	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has joined ##c++
2014-11-27 12:11:43	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-27 12:11:53	--	Ulrike_Payne is now known as Ulrike_Rayne
2014-11-27 12:12:35	-->	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-27 12:12:40	<--	Hastouki (~Adium@CPEbcc810142394-CMbcc810142391.cpe.net.cable.rogers.com) has quit (Client Quit)
2014-11-27 12:13:14	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-11-27 12:13:16	LBV_User	is there a way I can make a template that wrap static_cast and dynamic_cast, to do the second if the first fails?
2014-11-27 12:13:38	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 250 seconds)
2014-11-27 12:13:50	-->	Exclusive (~quassel@2001:41d0:a:74f::1) has joined ##c++
2014-11-27 12:14:25	-->	kriskropd (~kris@unaffiliated/kriskropd) has joined ##c++
2014-11-27 12:15:00	<--	A1T (~bepi_admi@test-centre4-gw.estec.esa.int) has quit (Remote host closed the connection)
2014-11-27 12:15:24	-->	A1T (~bepi_admi@test-centre4-gw.estec.esa.int) has joined ##c++
2014-11-27 12:15:26	<--	dogukan (~dogukan@unaffiliated/dogukan) has quit (Quit: Konversation terminated!)
2014-11-27 12:15:29	o]	LBV_User: yes
2014-11-27 12:15:31	o]	!next
2014-11-27 12:15:32	-->	leeN (~leeN@g227200184.adsl.alicedsl.de) has joined ##c++
2014-11-27 12:15:32	nolyc	Another satisfied customer, next!
2014-11-27 12:15:34	LBV_User	\o/
2014-11-27 12:15:47	o]	pretty dumb and useless, though
2014-11-27 12:15:51	-->	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-11-27 12:16:07	<--	Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 240 seconds)
2014-11-27 12:16:27	-->	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has joined ##c++
2014-11-27 12:16:34	LBV_User	why?
2014-11-27 12:16:54	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 255 seconds)
2014-11-27 12:17:04	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 12:17:28	-->	lamefun (~lamefun2@5.166.246.128) has joined ##c++
2014-11-27 12:17:41	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-27 12:17:56	<--	darkswordchris (4305a6a7@gateway/web/freenode/ip.67.5.166.167) has quit (Quit: Page closed)
2014-11-27 12:18:02	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-27 12:18:23	kalven	LBV_User: how would you detect that static_cast fails?
2014-11-27 12:19:24	LBV_User	there is no 'is_static_castable' type trait?
2014-11-27 12:19:24	joel_falcou	the other way aroudn I can see, but static_cast fails by not compiling basically
2014-11-27 12:19:33	joel_falcou	you can make one
2014-11-27 12:19:34	LBV_User	^ kalven
2014-11-27 12:19:39	joel_falcou	is_convertible is probably the closest
2014-11-27 12:20:28	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-27 12:20:38	<--	[DarkArcher] (~darkarche@162.253.129.218) has quit (Ping timeout: 264 seconds)
2014-11-27 12:20:51	<--	rriemann_ (~rriemann@dhcp-67-112.ixxi.ens-lyon.fr) has quit (Ping timeout: 245 seconds)
2014-11-27 12:21:01	kalven	LBV_User: ^ what?
2014-11-27 12:21:14	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-27 12:21:16	-->	[DarkArcher] (~darkarche@2601:d:ae00:529:754f:d3e8:58f:c7e3) has joined ##c++
2014-11-27 12:21:23	LBV_User	kalven: what joel_falcou said about static_cast failing at compile time
2014-11-27 12:21:38	<--	Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has quit (Remote host closed the connection)
2014-11-27 12:21:51	kalven	LBV_User: can you think of a situation where static_cast fails and dynamic_cast works?
2014-11-27 12:22:04	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-27 12:22:13	LBV_User	kalven: virtual inheritance
2014-11-27 12:22:51	joel_falcou	he
2014-11-27 12:24:50	-->	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has joined ##c++
2014-11-27 12:25:20	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-27 12:25:48	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-27 12:25:52	<--	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-27 12:26:17	-->	Cirus (~Cirus@2601:9:80:101c:42e:106a:384c:b44b) has joined ##c++
2014-11-27 12:26:23	b_jonas	what I'd like is a cast that behaves sort of like static_cast but doesn't allow casting from a pointer to a superclass to a pointer to a subclass.
2014-11-27 12:26:46	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 255 seconds)
2014-11-27 12:27:03	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-27 12:27:49	b_jonas	I wonder if something like this could work: template<typename To, typename From> inline To value_cast(From &&x) { return std::forward<From>(x); }
2014-11-27 12:27:51	-->	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 12:27:56	LBV_User	b_jonas: is_convertible will give you that...
2014-11-27 12:27:58	<--	Cirus (~Cirus@2601:9:80:101c:42e:106a:384c:b44b) has quit (Client Quit)
2014-11-27 12:28:11	b_jonas	LBV_User: but I'd like a cast function, not a check
2014-11-27 12:28:21	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 12:28:23	LBV_User	b_jonas: SFINAE ftw :)
2014-11-27 12:29:38	<--	Anodl (~Anodl@p5B355624.dip0.t-ipconnect.de) has quit (Client Quit)
2014-11-27 12:29:44	-->	snyp (~Snyp@150.129.132.186) has joined ##c++
2014-11-27 12:29:48	-->	Cirus (~Cirus@2601:9:80:101c:42e:106a:384c:b44b) has joined ##c++
2014-11-27 12:31:30	b_jonas	does this kind of cast perhaps already have a name and an implementation in a library?
2014-11-27 12:31:31	-->	cullum (~bertie@192.210.214.197) has joined ##c++
2014-11-27 12:32:10	<--	snyp (~Snyp@150.129.132.186) has quit (Client Quit)
2014-11-27 12:32:27	-->	snyp (~Snyp@150.129.132.186) has joined ##c++
2014-11-27 12:32:30	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 245 seconds)
2014-11-27 12:32:56	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Ping timeout: 245 seconds)
2014-11-27 12:33:17	-->	g1_james1 (~jiwanrai@ip5b405e06.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-27 12:33:52	-->	kurahaupo (~kurahaupo@118.148.185.186) has joined ##c++
2014-11-27 12:34:01	<--	cullum (~bertie@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:34:49	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-27 12:35:16	-->	Slereah (~jackal@176.222.51.233) has joined ##c++
2014-11-27 12:35:46	<--	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has quit (Remote host closed the connection)
2014-11-27 12:35:47	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 12:36:13	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-27 12:36:15	Slereah	Hey, is it possible to pass a variable argument list to another function that takes a variable argument list?
2014-11-27 12:36:52	-->	lamarre (~lamarre@192.210.214.197) has joined ##c++
2014-11-27 12:37:00	<--	lamarre (~lamarre@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:37:01	Slereah	Sort of like function(int i, ...) { function2(...); }
2014-11-27 12:37:25	Slereah	Passing the va_list directly does not work out so well
2014-11-27 12:37:29	<--	kriskropd (~kris@unaffiliated/kriskropd) has quit (Ping timeout: 256 seconds)
2014-11-27 12:37:58	davek_	If you use a variadic template you can unpack the arguments list in the second function, yeah.
2014-11-27 12:38:12	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Remote host closed the connection)
2014-11-27 12:38:17	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 250 seconds)
2014-11-27 12:38:37	<--	allyourcodebase (~allyourco@182.18.211.254) has quit (Quit: quit)
2014-11-27 12:38:54	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2014-11-27 12:38:56	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-27 12:39:02	Slereah	What is the way to do it?
2014-11-27 12:39:32	-->	goin (~goin@192.210.214.197) has joined ##c++
2014-11-27 12:39:40	Slereah	Oh, there's a template specifically for this
2014-11-27 12:39:45	Slereah	Let's look into it
2014-11-27 12:40:04	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Ping timeout: 240 seconds)
2014-11-27 12:40:36	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-27 12:40:43	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-27 12:40:46	<--	komarov (~komarov@46.227.191.61) has quit (Ping timeout: 255 seconds)
2014-11-27 12:40:54	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 12:41:10	-->	komarov (~komarov@46.227.191.61) has joined ##c++
2014-11-27 12:43:02	<--	goin (~goin@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:43:42	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Ping timeout: 256 seconds)
2014-11-27 12:44:01	-->	bgamari_ (~bgamari@2001:470:e438::1) has joined ##c++
2014-11-27 12:44:18	-->	kriskropd (~kris@unaffiliated/kriskropd) has joined ##c++
2014-11-27 12:45:40	-->	siena (~siena@192.210.214.197) has joined ##c++
2014-11-27 12:46:06	Slereah	Hm, I get "this declaration has no storage class or specifier"
2014-11-27 12:46:34	<--	siena (~siena@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 12:46:44	Slereah	From something like template<typename ... Types> void  Graphics::display_data(int x, int y, char* msg, Types ... var) { [things] 	sprintf_s(data, msg, var...); }
2014-11-27 12:46:48	-->	ath1 (~mike@ppp-83-171-159-10.dynamic.mnet-online.de) has joined ##c++
2014-11-27 12:46:55	<--	vokimon (~quassel@75.Red-95-120-180.dynamicIP.rima-tde.net) has quit (Ping timeout: 272 seconds)
2014-11-27 12:49:02	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-27 12:49:04	<--	SiN_Bizkit (~SiN_Bizki@188.234.161.7) has quit (Quit: SiN_Bizkit)
2014-11-27 12:49:06	-->	mensik (~mensik@192.210.214.197) has joined ##c++
2014-11-27 12:49:15	<--	mensik (~mensik@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:49:45	<--	Nando_k (~Nando_k@dslb-092-077-093-095.092.077.pools.vodafone-ip.de) has quit (Ping timeout: 255 seconds)
2014-11-27 12:50:33	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-27 12:50:53	<--	tarruda (~tarruda@191.33.49.40) has quit (Read error: Connection reset by peer)
2014-11-27 12:51:47	-->	seidt (~seidt@192.210.214.197) has joined ##c++
2014-11-27 12:52:31	ath1	I have a general OOP question, I hope this is ok: When I derive public from a base class, is it obligatory to obey liskov's substitution principle?
2014-11-27 12:52:32	<--	seidt (~seidt@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:52:33	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 12:53:20	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-27 12:53:53	ath1	or maybe just good style?
2014-11-27 12:54:17	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 12:54:23	-->	inad922 (~inad925@193.61.9.8) has joined ##c++
2014-11-27 12:55:04	-->	Rutix (~rutix@77-175-88-246.FTTH.ispfabriek.nl) has joined ##c++
2014-11-27 12:55:04	<--	Rutix (~rutix@77-175-88-246.FTTH.ispfabriek.nl) has quit (Changing host)
2014-11-27 12:55:04	-->	Rutix (~rutix@april-fools/2013/runnerup/Rutix) has joined ##c++
2014-11-27 12:55:13	-->	herkenrat (~herkenrat@192.210.214.197) has joined ##c++
2014-11-27 12:55:40	<--	herkenrat (~herkenrat@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 12:56:10	<--	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has quit (Quit: Sto andando via)
2014-11-27 12:56:31	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-27 12:56:54	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit
2014-11-27 12:56:56	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-27 12:57:44	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 264 seconds)
2014-11-27 12:58:05	<--	batbird (~lolwhat@gateway/tor-sasl/lolwhat) has quit (Ping timeout: 250 seconds)
2014-11-27 12:58:17	-->	mangham (~mangham@192.210.214.197) has joined ##c++
2014-11-27 12:58:39	-->	rnickb (~rnburn@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-27 12:58:41	<--	snyp (~Snyp@150.129.132.186) has quit (Quit: WeeChat 1.0.1)
2014-11-27 12:59:21	<--	mangham (~mangham@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:01:04	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-27 13:01:44	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 13:01:52	<--	mimon (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Remote host closed the connection)
2014-11-27 13:02:06	-->	atilano (~atilano@192.210.214.197) has joined ##c++
2014-11-27 13:02:34	<--	atilano (~atilano@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:05:10	-->	slentz (~slentz@192.210.214.197) has joined ##c++
2014-11-27 13:05:23	<--	slentz (~slentz@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:05:47	-->	boblehest (~boblehest@229.79-160-100.customer.lyse.net) has joined ##c++
2014-11-27 13:06:23	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 265 seconds)
2014-11-27 13:06:32	<--	boblehest (~boblehest@229.79-160-100.customer.lyse.net) has quit (Client Quit)
2014-11-27 13:06:36	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 13:07:34	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 13:08:13	-->	gienger (~gienger@192.210.214.197) has joined ##c++
2014-11-27 13:09:14	<--	gienger (~gienger@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:10:13	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 244 seconds)
2014-11-27 13:10:21	<--	_christoph_ (~christoph@8d3a052d.hlrs.de) has quit (Quit: Leaving)
2014-11-27 13:10:32	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 13:11:07	-->	aggn (~irc@a0319.ipv6.tum.vpn.lrz.de) has joined ##c++
2014-11-27 13:11:14	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-11-27 13:11:35	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-27 13:12:03	-->	khatri (~khatri@192.210.214.197) has joined ##c++
2014-11-27 13:12:10	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Read error: Connection reset by peer)
2014-11-27 13:12:11	<--	Rafaelfsilva (~Rafaelfsi@201.162.80.156) has quit (Ping timeout: 255 seconds)
2014-11-27 13:12:12	-->	mehrdad (4b62c3be@gateway/web/cgi-irc/kiwiirc.com/ip.75.98.195.190) has joined ##c++
2014-11-27 13:12:24	<--	komarov (~komarov@46.227.191.61) has quit (Ping timeout: 245 seconds)
2014-11-27 13:12:35	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 13:12:40	<--	khatri (~khatri@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:12:53	<--	mehrdad (4b62c3be@gateway/web/cgi-irc/kiwiirc.com/ip.75.98.195.190) has left ##c++
2014-11-27 13:13:44	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-27 13:13:56	<--	g1_james1 (~jiwanrai@ip5b405e06.dynamic.kabel-deutschland.de) has left ##c++
2014-11-27 13:14:02	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-27 13:14:22	-->	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-11-27 13:14:22	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 13:15:10	-->	vokimon (~quassel@89.7.86.173) has joined ##c++
2014-11-27 13:15:29	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-27 13:15:29	-->	tessner (~tessner@192.210.214.197) has joined ##c++
2014-11-27 13:15:58	<--	tessner (~tessner@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:16:14	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 13:18:32	<--	disappointment (~disappoin@87-206-190-49.dynamic.chello.pl) has quit (Remote host closed the connection)
2014-11-27 13:18:33	-->	zigler (~zigler@192.210.214.197) has joined ##c++
2014-11-27 13:18:46	<--	zigler (~zigler@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:20:03	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 13:20:30	-->	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has joined ##c++
2014-11-27 13:20:48	-->	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has joined ##c++
2014-11-27 13:21:36	-->	margot (~margot@192.210.214.197) has joined ##c++
2014-11-27 13:21:50	<--	margot (~margot@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:22:42	Ploppz	http://www.learncpp.com/cpp-tutorial/86-destructors/ - The constructur of MyString takes a const char *. In the example of usage, it's called like this: MyString cMyName("Alex");. But how is that allowed? Does the string "Alex" get allocated in memory?
2014-11-27 13:23:58	-->	Rafaelfsilva (~Rafaelfsi@3.ip-198-50-147.net) has joined ##c++
2014-11-27 13:24:37	doug64k	Ploppz: Yes, "Alex" is essentially a statically allocated array of characters with no name, whose value is a pointer to the first character
2014-11-27 13:24:38	<--	newbiz (~newbiz@116-166-190-90.dyn.estpak.ee) has quit (Remote host closed the connection)
2014-11-27 13:24:40	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-27 13:24:40	-->	delgadill (~delgadill@192.210.214.197) has joined ##c++
2014-11-27 13:24:51	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-27 13:24:52	-->	maroloccio (~marolocci@tmo-098-186.customers.d1-online.com) has joined ##c++
2014-11-27 13:24:52	Ploppz	Oh, I see. Thanks
2014-11-27 13:25:14	<--	delgadill (~delgadill@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:25:45	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-27 13:26:08	doug64k	Usually string literals like those are stored at addresses that are setup to be read only when loading the program
2014-11-27 13:27:12	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 13:27:23	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 13:28:07	-->	goffredo (~goffredo@192.210.214.197) has joined ##c++
2014-11-27 13:28:15	<--	goffredo (~goffredo@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:29:14	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 13:30:35	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Client Quit)
2014-11-27 13:30:47	-->	bandasak (~bandasak@192.210.214.197) has joined ##c++
2014-11-27 13:31:09	<--	bandasak (~bandasak@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:33:11	-->	ducklobster (~ducklobst@75.127.3.149) has joined ##c++
2014-11-27 13:33:51	-->	cakanic (~cakanic@192.210.214.197) has joined ##c++
2014-11-27 13:33:52	<--	cakanic (~cakanic@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:33:52	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-27 13:34:13	-->	xissburg (~xissburg@177.97.230.39) has joined ##c++
2014-11-27 13:34:17	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-27 13:34:46	<--	heiner (~heiner@p50856593.dip0.t-ipconnect.de) has quit (Disconnected by services)
2014-11-27 13:34:50	-->	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has joined ##c++
2014-11-27 13:34:50	-->	heiner_ (~heiner@p508563C5.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 13:35:29	-->	basic6_ (~basic6@p3E9EEFB5.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 13:35:54	<--	rendar (~I@host140-177-dynamic.251-95-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2014-11-27 13:36:26	<--	basic6 (~basic6@p4FCB5F81.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-27 13:36:31	-->	berhow (~berhow@192.210.214.197) has joined ##c++
2014-11-27 13:36:37	<--	berhow (~berhow@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:36:54	-->	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has joined ##c++
2014-11-27 13:38:21	-->	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-11-27 13:38:55	<--	Nik05 (~Nik05@unaffiliated/nik05) has quit (Remote host closed the connection)
2014-11-27 13:39:10	<--	clincher (~quassel@cpe-76-168-138-8.socal.res.rr.com) has quit (Remote host closed the connection)
2014-11-27 13:39:12	-->	normann (~normann@192.210.214.197) has joined ##c++
2014-11-27 13:39:15	<--	normann (~normann@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:39:30	<--	ikrima_ (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-27 13:39:40	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-27 13:39:59	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 272 seconds)
2014-11-27 13:40:09	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-27 13:41:43	-->	Nik05 (~Nik05@unaffiliated/nik05) has joined ##c++
2014-11-27 13:41:48	--	syncrow is now known as syncrowblazeit42
2014-11-27 13:41:53	-->	frohwein (~frohwein@192.210.214.197) has joined ##c++
2014-11-27 13:42:01	<--	frohwein (~frohwein@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:42:07	-->	rendar (~I@host140-177-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 13:42:25	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 240 seconds)
2014-11-27 13:42:48	<--	contempt (~contempt@unaffiliated/contempt) has quit (Read error: Connection reset by peer)
2014-11-27 13:43:20	--	syncrowblazeit42 is now known as syncrow
2014-11-27 13:43:27	<--	maroloccio (~marolocci@tmo-098-186.customers.d1-online.com) has quit (Quit: WeeChat 1.0)
2014-11-27 13:43:42	<--	huhze (~quassel@dslb-178-005-215-041.178.005.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-11-27 13:44:33	-->	hallgren (~hallgren@192.210.214.197) has joined ##c++
2014-11-27 13:44:40	<--	hallgren (~hallgren@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:45:27	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 13:46:32	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-27 13:46:35	<--	tarruda (~tarruda@191.33.49.40) has quit (Client Quit)
2014-11-27 13:46:56	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 13:47:01	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 13:47:14	-->	lusty (~lusty@192.210.214.197) has joined ##c++
2014-11-27 13:47:18	<--	lusty (~lusty@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:47:19	<--	anders0 (~anders0@213.47.181.68) has quit (Read error: Connection reset by peer)
2014-11-27 13:47:42	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-27 13:47:43	<--	vokimon (~quassel@89.7.86.173) has quit (Read error: Connection reset by peer)
2014-11-27 13:48:13	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-27 13:49:01	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-27 13:49:54	-->	wiman (~wiman@192.210.214.197) has joined ##c++
2014-11-27 13:50:00	<--	wiman (~wiman@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:51:01	-->	Unscrupulous (~unscrupt@172.56.32.154) has joined ##c++
2014-11-27 13:51:50	-->	endomancer_ (~endomance@2001:8003:2e3b:e301:ac16:f14f:f07f:1441) has joined ##c++
2014-11-27 13:51:59	<--	endomancer_ (~endomance@2001:8003:2e3b:e301:ac16:f14f:f07f:1441) has quit (Client Quit)
2014-11-27 13:52:18	-->	anders0 (~anders0@213.47.181.68) has joined ##c++
2014-11-27 13:52:35	-->	exilus (~exilus@192.210.214.197) has joined ##c++
2014-11-27 13:52:53	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Remote host closed the connection)
2014-11-27 13:52:53	<--	exilus (~exilus@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 13:52:55	-->	Unscrup55 (~unscrupt@172.56.32.154) has joined ##c++
2014-11-27 13:53:09	<--	Unscrup43 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-27 13:53:23	<--	Unscrupulous (~unscrupt@172.56.32.154) has quit (Read error: Connection reset by peer)
2014-11-27 13:53:35	-->	MrSavage (~SteveTheC@134.117.249.50) has joined ##c++
2014-11-27 13:53:45	-->	vokimon (~quassel@89.7.86.173) has joined ##c++
2014-11-27 13:54:19	<--	yeticry_ (~yeticry@60.168.89.165) has quit (Ping timeout: 255 seconds)
2014-11-27 13:54:25	MrSavage	Why is my compiler complaining there's no default constructor? I want it to be implicit. Can you not have an implicit default constructor when you have another constructor?
2014-11-27 13:54:38	MrSavage	Such as Foo(int, int, int);?
2014-11-27 13:55:39	-->	profancik (~profancik@192.210.214.197) has joined ##c++
2014-11-27 13:55:42	<--	profancik (~profancik@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 13:56:07	-->	yeticry (~yeticry@60.168.85.103) has joined ##c++
2014-11-27 13:56:43	imMute	MrSavage: you only get an implicit constructor (with no arguments) when you dont' define *any* other constructors.
2014-11-27 13:56:47	hs_	either provide default values for those parameters or do Foo() = default;
2014-11-27 13:56:57	MrSavage	imMute: i see
2014-11-27 13:57:05	imMute	or what hs_ said.
2014-11-27 13:57:12	MrSavage	what does Foo() = default; do?
2014-11-27 13:57:21	M-ou-se	what do you think it does?
2014-11-27 13:57:21	hs_	makes you a default ctor
2014-11-27 13:58:09	MrSavage	but why isnt that on by default when you have definted other constructors?
2014-11-27 13:58:19	-->	lanzer (~lanzer@192.210.214.197) has joined ##c++
2014-11-27 13:58:44	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 13:58:53	hs_	the rationale is simple: if you have defined another constructor then your object might require it to be validly specified
2014-11-27 13:58:56	<--	tarruda (~tarruda@191.33.49.40) has quit (Quit: WeeChat 0.4.2)
2014-11-27 13:59:48	hs_	e.g., suppose your fields are const
2014-11-27 14:01:44	<--	lanzer (~lanzer@192.210.214.197) has quit (Read error: Connection reset by peer)
2014-11-27 14:02:47	<--	Unscrup55 (~unscrupt@172.56.32.154) has quit (Ping timeout: 244 seconds)
2014-11-27 14:03:22	<--	vokimon (~quassel@89.7.86.173) has quit (Ping timeout: 264 seconds)
2014-11-27 14:03:50	-->	vokimon (~quassel@89.7.86.173) has joined ##c++
2014-11-27 14:04:26	-->	nichelson (~nichelson@192.210.214.197) has joined ##c++
2014-11-27 14:04:32	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit (Ping timeout: 256 seconds)
2014-11-27 14:05:05	-->	Lencl (Lencl@ip68-106-223-14.oc.oc.cox.net) has joined ##c++
2014-11-27 14:05:10	-->	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has joined ##c++
2014-11-27 14:05:10	-->	sitraka (~sitraka@static-110-58.blueline.mg) has joined ##c++
2014-11-27 14:05:13	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-27 14:05:18	<--	Lencl (Lencl@ip68-106-223-14.oc.oc.cox.net) has quit (Client Quit)
2014-11-27 14:05:40	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2014-11-27 14:06:19	-->	Lencl (446adf0e@gateway/web/cgi-irc/kiwiirc.com/ip.68.106.223.14) has joined ##c++
2014-11-27 14:07:15	Lencl	What does this mean? currentTime = (time_t*)0; Assuming currentTime is a time_t type
2014-11-27 14:07:29	Lencl	I understand what it returns
2014-11-27 14:07:47	<--	sitraka (~sitraka@static-110-58.blueline.mg) has left ##c++
2014-11-27 14:07:49	Lencl	but what's the difference between (time*t)0 or (time_t)-1... what's the number for?
2014-11-27 14:09:18	-->	sitraka (~sitraka@static-110-58.blueline.mg) has joined ##c++
2014-11-27 14:09:35	M-ou-se	it's a c-style cast
2014-11-27 14:09:36	hs_	it is a c cast; but it is like having "time_t* t = 0; currentTime = t;" or "time_t t = -1; currentTime = t;"
2014-11-27 14:09:37	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-27 14:09:38	M-ou-se	(type) expression;
2014-11-27 14:09:40	<--	Sausage (sausage@tehsausage.com) has quit (Quit: Goodbye)
2014-11-27 14:09:47	M-ou-se	it casts 0 to a type_t pointer
2014-11-27 14:09:55	-->	Sausage (sausage@tehsausage.com) has joined ##c++
2014-11-27 14:10:10	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-27 14:10:14	hs_	use the new casts
2014-11-27 14:10:16	M-ou-se	which is kinda weird. because currentTime = nullptr; or currentTime = NULL; or currentTime = 0; would also work.
2014-11-27 14:10:24	hs_	yeah, hehe
2014-11-27 14:10:31	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-27 14:10:37	hs_	extra complication = muchbetterer
2014-11-27 14:10:57	<--	vokimon (~quassel@89.7.86.173) has quit (Ping timeout: 272 seconds)
2014-11-27 14:11:19	Oxyd	Or just time_t* t{}; :P
2014-11-27 14:12:18	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-27 14:12:23	Lencl	ah thank you
2014-11-27 14:13:28	<--	nichelson (~nichelson@192.210.214.197) has quit (Remote host closed the connection)
2014-11-27 14:13:40	Lencl	so how come this doesn't work cout << time((time_t*)-1);
2014-11-27 14:14:04	Lencl	oh nvm I got it ^_^
2014-11-27 14:14:11	<--	ath1 (~mike@ppp-83-171-159-10.dynamic.mnet-online.de) has quit (Quit: Verlassend)
2014-11-27 14:14:18	<--	unreal (~unreal@unaffiliated/unreal) has quit (Quit: Very funny Scotty. Now beam down my clothes!)
2014-11-27 14:14:32	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Remote host closed the connection)
2014-11-27 14:14:39	-->	Unscrupulous (~unscrupt@2607:fb90:2c1b:c43b:0:c:97bd:4e01) has joined ##c++
2014-11-27 14:15:08	-->	vokimon (~quassel@89.7.86.173) has joined ##c++
2014-11-27 14:15:45	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-27 14:15:46	--	MrFlibble is now known as LunarJetman
2014-11-27 14:15:47	--	LunarJetman is now known as MrFlibble
2014-11-27 14:16:18	-->	goolia (~goolia@192.210.214.197) has joined ##c++
2014-11-27 14:16:19	-->	unreal (~unreal@unaffiliated/unreal) has joined ##c++
2014-11-27 14:20:14	-->	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-27 14:21:00	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 14:23:30	-->	csotelo (~csotelo@190.41.210.210) has joined ##c++
2014-11-27 14:23:35	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit (Ping timeout: 272 seconds)
2014-11-27 14:24:51	<--	riksteri (~purple@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-11-27 14:25:37	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 14:25:42	<--	garFF (~garFF@x1-6-28-c6-8e-30-d5-72.cpe.webspeed.dk) has quit (Quit: Leaving...)
2014-11-27 14:25:57	-->	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-27 14:26:43	<--	vokimon (~quassel@89.7.86.173) has quit (Ping timeout: 264 seconds)
2014-11-27 14:27:01	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 244 seconds)
2014-11-27 14:27:27	<--	endomancer (~endomance@2001:8003:2e3b:e301:687f:cbda:82b8:95cd) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-27 14:27:42	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 240 seconds)
2014-11-27 14:29:31	-->	Sc0tty- (~Scottyyy@86.53.112.194) has joined ##c++
2014-11-27 14:29:45	<--	lamefun (~lamefun2@5.166.246.128) has quit (Quit: Leaving)
2014-11-27 14:30:41	-->	endomancer (~endomance@2001:8003:2e3b:e301:b106:50ab:70be:a7b) has joined ##c++
2014-11-27 14:30:56	<--	endomancer (~endomance@2001:8003:2e3b:e301:b106:50ab:70be:a7b) has quit (Client Quit)
2014-11-27 14:31:25	-->	endomancer (~endomance@2001:8003:2e3b:e301:683c:4850:98e0:dd65) has joined ##c++
2014-11-27 14:33:45	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-27 14:37:28	-->	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has joined ##c++
2014-11-27 14:37:52	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-27 14:38:59	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-27 14:39:04	<--	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-27 14:39:30	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2014-11-27 14:41:17	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-27 14:42:30	-->	bromitri (gabi@taurine.csclub.uwaterloo.ca) has joined ##c++
2014-11-27 14:42:47	-->	Matthias|PC (~Matthias@78-20-27-16.access.telenet.be) has joined ##c++
2014-11-27 14:43:38	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-27 14:44:12	-->	f00dWorksta (~f00dWorks@68.232.68.242) has joined ##c++
2014-11-27 14:44:51	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-27 14:45:10	-->	torei (~torei@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-11-27 14:46:51	-->	PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-11-27 14:47:22	<--	admg (~admg@host86-139-124-204.range86-139.btcentralplus.com) has quit (Max SendQ exceeded)
2014-11-27 14:47:25	-->	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-27 14:48:50	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-11-27 14:49:00	-->	N1cXP8ChUBFe3 (~95E6Y24ak@S01067cb21b32bee4.ed.shawcable.net) has joined ##c++
2014-11-27 14:49:29	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 272 seconds)
2014-11-27 14:51:12	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 14:51:26	<--	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-27 14:51:44	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-27 14:52:02	<--	Rafaelfsilva (~Rafaelfsi@3.ip-198-50-147.net) has quit (Ping timeout: 256 seconds)
2014-11-27 14:53:15	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-27 14:53:46	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 14:53:58	--	Praise- is now known as Praise
2014-11-27 14:54:10	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-27 14:54:15	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-27 14:54:57	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 14:55:22	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 14:55:48	-->	safinaskar (~user@188.234.20.9) has joined ##c++
2014-11-27 14:56:33	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 256 seconds)
2014-11-27 14:56:43	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 14:57:06	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 14:59:29	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Ping timeout: 244 seconds)
2014-11-27 15:00:27	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-27 15:00:29	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-11-27 15:00:34	<--	safinaskar (~user@188.234.20.9) has quit (Read error: Connection reset by peer)
2014-11-27 15:01:04	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-27 15:01:32	-->	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has joined ##c++
2014-11-27 15:02:06	-->	krad (~cyber_fun@182.66.26.188) has joined ##c++
2014-11-27 15:03:23	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-27 15:04:01	<--	aggn (~irc@a0319.ipv6.tum.vpn.lrz.de) has quit (Ping timeout: 272 seconds)
2014-11-27 15:04:35	-->	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2014-11-27 15:05:07	<--	torei (~torei@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Quit: Leaving)
2014-11-27 15:05:12	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-27 15:05:18	PSvils	Hey everyone! :)
2014-11-27 15:05:25	PSvils	Can someone help me with this function?
2014-11-27 15:05:25	PSvils	http://pastebin.com/AU0tAmfe
2014-11-27 15:05:34	PSvils	I need to iterate/call a function for each template parameter passed.
2014-11-27 15:05:55	PSvils	But I can't compile this, it says it can't deduce the type of TComponentType on the recursive call.
2014-11-27 15:06:31	PSvils	(which doesn't make much sense to me...shouldn't it be directly passing it already?
2014-11-27 15:06:33	<--	p|q (~plq@78.189.180.67) has quit (Ping timeout: 250 seconds)
2014-11-27 15:07:00	V-ille	it doesn't handle the empty pack case
2014-11-27 15:07:15	PlasmaHH	static if!
2014-11-27 15:07:18	PlasmaHH	just sayin
2014-11-27 15:07:20	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-27 15:07:29	PSvils	static if?
2014-11-27 15:07:36	PSvils	(I'm quite new to C++ :) )
2014-11-27 15:07:53	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-27 15:08:07	PSvils	V-ille: empty pack case - when it passes no template arguments?
2014-11-27 15:08:26	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-27 15:08:35	V-ille	no, but the case where TComponentTypes... is empty
2014-11-27 15:08:41	<--	joel_falcou (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 258 seconds)
2014-11-27 15:08:42	V-ille	so yes, kinda
2014-11-27 15:08:56	<--	Joel__ (~Joel@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2014-11-27 15:09:05	PSvils	aha, ye :) how would you suggest I handle that?
2014-11-27 15:10:07	V-ille	what you have is this
2014-11-27 15:10:09	V-ille	geordi: template <class T, class... Rest> void f() {f<Rest...>();} int main() {f<int, int, int, int>();}
2014-11-27 15:10:10	geordi	error: no matching function for call to 'f()'
2014-11-27 15:10:22	V-ille	one way to fix it is like
2014-11-27 15:10:24	V-ille	geordi: template <class T> void f() {} template <class T, class... Rest> typename enable_if<sizeof...(Rest)>::type f() {f<Rest...>();} int main() {f<int, int, int, int>();}
2014-11-27 15:10:25	geordi	<no output>
2014-11-27 15:10:40	<--	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-27 15:11:44	PSvils	now it says ambiguous call :(
2014-11-27 15:11:55	V-ille	no it doesn't, you're not using the enable_if
2014-11-27 15:11:58	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-11-27 15:12:03	V-ille	geordi: template <class T> void f() {cout << " register one "; } template <class T, class... Rest> typename enable_if<sizeof...(Rest)>::type f() {cout << " register " << sizeof...(Rest) << " "; f<Rest...>();} int main() {f<int, int, int, int>();}
2014-11-27 15:12:05	geordi	 register 3  register 2  register 1  register one
2014-11-27 15:12:22	doug64k	is std::max(minallowed, std::min(maxallowed, value)) the only way to clamp a value? I have wanted std::clamp a thousand times
2014-11-27 15:12:38	V-ille	I don't recall seeing a proposal for std::clamp
2014-11-27 15:12:46	-->	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-27 15:13:10	<--	Cirus (~Cirus@2601:9:80:101c:42e:106a:384c:b44b) has quit (Read error: Connection reset by peer)
2014-11-27 15:13:11	<--	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has quit (Quit: qwertzui11)
2014-11-27 15:13:30	<--	zeitue (~z@67.221.139.166) has quit (Ping timeout: 272 seconds)
2014-11-27 15:13:36	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-27 15:13:37	doug64k	V-ille: thought so. thanks
2014-11-27 15:14:39	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-27 15:14:49	<--	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has quit (Quit: WeeChat 1.0.1)
2014-11-27 15:16:37	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2014-11-27 15:16:41	<--	krad (~cyber_fun@182.66.26.188) has quit (Ping timeout: 245 seconds)
2014-11-27 15:17:25	-->	MetalHead77 (~MetalHead@72.27.72.41) has joined ##c++
2014-11-27 15:19:04	Oxyd	It shouldn't be terribly difficult to write your own clamp.
2014-11-27 15:19:04	<--	imMute (~immute@about/networking/240.255.255.0/imMute) has quit (Ping timeout: 244 seconds)
2014-11-27 15:20:00	-->	imMute (~immute@about/networking/240.255.255.0/imMute) has joined ##c++
2014-11-27 15:20:58	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 15:21:09	nido	4ffffwhoes twutter?
2014-11-27 15:21:47	<--	m477_ (~quassel@agrq32.neoplus.adsl.tpnet.pl) has quit (Remote host closed the connection)
2014-11-27 15:22:40	nido	apologies for that comment
2014-11-27 15:23:16	quaz0r	!stdcpp 4ffffwhoes twutter
2014-11-27 15:23:16	nolyc	Standard C++ has no notion of `4ffffwhoes twutter', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-11-27 15:23:46	-->	m477 (~quassel@agrq32.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-27 15:23:57	<--	scai (~scai@pD9EA6D3F.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-27 15:24:15	PSvils	V-ille: Super duper thanks! :)
2014-11-27 15:24:30	PSvils	std::enable_if() was my problem. will now look up what it even does :D
2014-11-27 15:25:03	V-ille	there have been suggestions to apply partial ordering for functions with no parameters, based on the template parameters
2014-11-27 15:25:10	V-ille	but that idea was rejected the last time
2014-11-27 15:25:10	-->	BinaryAddicted (~BinaryAdd@194.230.155.227) has joined ##c++
2014-11-27 15:25:20	V-ille	the SFINAE trick does provide a work-around
2014-11-27 15:25:23	V-ille	geordi: template <class T, class U> void f() {cout << "two!";}  template <class... Args> typename enable_if<sizeof...(Args)!=2>::type f() {cout << sizeof...(Args) << "!";} int main() {f<>(); f<int, int>(); f<int, int, int, int>();}
2014-11-27 15:25:23	geordi	0!two!4!
2014-11-27 15:25:33	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-27 15:26:08	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 15:26:49	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 15:26:52	PSvils	geordi: int main() { std::cout << "hello?" << std::endl; }
2014-11-27 15:26:53	geordi	hello?
2014-11-27 15:26:56	PSvils	cool!
2014-11-27 15:27:01	-->	zeitue (~z@67.221.139.166) has joined ##c++
2014-11-27 15:28:04	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-27 15:28:11	-->	LickPlusPlus (~LickPytho@58.166.109.179) has joined ##c++
2014-11-27 15:28:49	<--	inad922 (~inad925@193.61.9.8) has quit (Quit: Leaving)
2014-11-27 15:30:45	<--	code_zombie (~code_zomb@c-174-58-144-184.hsd1.ks.comcast.net) has quit (Quit: Leaving)
2014-11-27 15:31:07	<--	sitraka (~sitraka@static-110-58.blueline.mg) has quit (Quit: Lost terminal)
2014-11-27 15:31:16	<--	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has quit (Quit: Sto andando via)
2014-11-27 15:31:38	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 15:32:30	<--	Garner (uid38417@gateway/web/irccloud.com/x-zdwyssimxdurwesy) has quit (Quit: Connection closed for inactivity)
2014-11-27 15:33:39	-->	jrvlima (~textual@c-98-207-173-60.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 15:35:15	-->	clincher (~quassel@cpe-76-168-138-8.socal.res.rr.com) has joined ##c++
2014-11-27 15:35:24	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-11-27 15:35:52	<--	Leftas (~leftas@91.228.84.180) has quit (Ping timeout: 240 seconds)
2014-11-27 15:36:09	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-27 15:36:11	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 15:38:22	<--	tdc (~tdc@195.Red-95-127-91.staticIP.rima-tde.net) has quit (Quit: Leaving)
2014-11-27 15:38:23	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-27 15:38:59	V-ille	!geordi
2014-11-27 15:39:01	nolyc	geordi is a bot (http://eel.is/geordi/) that compiles and executes c++ code. Snippets not related to the ongoing discussion are to be tested in #geordi (or /msg geordi <code>) NOT in ##c++.
2014-11-27 15:39:40	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-27 15:39:40	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-27 15:39:40	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-27 15:39:50	<--	LBV_User (~leonardo@177.2.128.75) has quit (Quit: done with this Instant Ramen Cup)
2014-11-27 15:40:22	<--	rpag (~rg4@unaffiliated/rg4) has quit (Quit: Leaving)
2014-11-27 15:41:32	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 264 seconds)
2014-11-27 15:41:51	<--	pfo__ (~pfo@tworkow.imba.oeaw.ac.at) has quit (Ping timeout: 240 seconds)
2014-11-27 15:41:54	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-27 15:42:26	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-27 15:42:43	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 258 seconds)
2014-11-27 15:43:09	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 15:45:25	-->	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-11-27 15:46:03	-->	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2014-11-27 15:46:58	-->	pfo_ (~pfo@tworkow.imba.oeaw.ac.at) has joined ##c++
2014-11-27 15:48:18	-->	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-11-27 15:48:33	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 15:49:24	-->	Garner (uid38417@gateway/web/irccloud.com/x-ntpydklrjvtunxoh) has joined ##c++
2014-11-27 15:49:41	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 15:50:26	-->	pzsh (~pzsh@x2f1a7a2.dyn.telefonica.de) has joined ##c++
2014-11-27 15:51:20	<--	MrSavage (~SteveTheC@134.117.249.50) has quit (Ping timeout: 264 seconds)
2014-11-27 15:51:28	-->	de-vri-es (~de-vri-es@voyager.de-vri.es) has joined ##c++
2014-11-27 15:51:53	<--	proteusguy (~proteusgu@ppp-110-168-229-217.revip5.asianet.co.th) has quit (Remote host closed the connection)
2014-11-27 15:53:26	<--	FabTG__ (~ftg@142.ip-37-59-108.eu) has quit (Ping timeout: 258 seconds)
2014-11-27 15:53:53	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 15:54:10	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 255 seconds)
2014-11-27 15:54:13	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2014-11-27 15:56:07	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-27 15:56:19	micom	Coca cola and pizza please.
2014-11-27 15:56:37	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit (Quit: My iMac has gone to sleep. ZZZzzz?)
2014-11-27 15:56:39	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-11-27 15:57:25	micom	thanks commission! now my next weekend is totally wasted http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/#mailing2014-11
2014-11-27 15:57:32	-->	timj (~timj@2a00:1328:e100:cc42:8e0:4c85:684:f5b9) has joined ##c++
2014-11-27 15:59:13	-->	FabTG (~ftg@142.ip-37-59-108.eu) has joined ##c++
2014-11-27 15:59:22	-->	SpikeMaster (~user@pool-71-176-188-41.hgrtmd.east.verizon.net) has joined ##c++
2014-11-27 15:59:55	<--	SpikeMaster (~user@pool-71-176-188-41.hgrtmd.east.verizon.net) has left ##c++ ("ERC Version 5.3 (IRC client for Emacs)")
2014-11-27 16:00:00	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-27 16:00:35	V-ille	my commiserations on behalf of the "commission"
2014-11-27 16:01:35	-->	m477_ (~quassel@adsi202.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-27 16:01:54	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 265 seconds)
2014-11-27 16:02:20	Eelis	thanks commissioner
2014-11-27 16:03:12	micom	yesterday there was a c++ meeting in my city, free pizza and Andrzej Krzemienski .  geek level + 10;)
2014-11-27 16:03:26	<--	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-27 16:03:32	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-27 16:03:34	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2014-11-27 16:03:52	micom	krzeminski*
2014-11-27 16:04:34	<--	m477 (~quassel@agrq32.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2014-11-27 16:04:49	micom	how often do you have c++meetings in your cities?
2014-11-27 16:04:55	<--	_5kg (~zifeitong@60.191.2.238) has quit (Ping timeout: 250 seconds)
2014-11-27 16:07:09	-->	justinas (~james@78-60-186-6.static.zebra.lt) has joined ##c++
2014-11-27 16:07:13	justinas	Morning.
2014-11-27 16:07:31	micom	Evening.
2014-11-27 16:07:46	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:2cb0:795:90a6:3c) has quit (Read error: Connection reset by peer)
2014-11-27 16:08:14	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 16:09:04	PSvils	I've been reading that containers shouldn't contain pointers, but the actual objects.
2014-11-27 16:09:10	PSvils	is this true?
2014-11-27 16:09:22	micom	generally yes PSvils
2014-11-27 16:09:23	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-27 16:09:33	V-ille	krzeminski? krzemienski seems right to me.
2014-11-27 16:10:11	micom	hmm ok you are right
2014-11-27 16:10:18	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 16:10:37	PSvils	I have a situation where I want to copy a vector, but have the new vector point to the same objects that are contained by the first vector.
2014-11-27 16:10:53	-->	_5kg (~zifeitong@60.191.2.238) has joined ##c++
2014-11-27 16:10:57	PSvils	sort of like a "master" vector holding actual data, and then create a bunch of "slave" or "child" vectors.
2014-11-27 16:11:06	PSvils	ok, those 2 words so close seems awkward.
2014-11-27 16:11:07	micom	you just copied the pointers...
2014-11-27 16:11:19	micom	boost::ptr_vector for the fastest solution
2014-11-27 16:11:19	roxfan	so you want a view
2014-11-27 16:11:27	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 240 seconds)
2014-11-27 16:11:32	<--	tarruda (~tarruda@191.33.49.40) has quit (Quit: WeeChat 0.4.2)
2014-11-27 16:11:34	PSvils	yeah, a view
2014-11-27 16:11:47	PSvils	micom: a pointer to the vector?
2014-11-27 16:12:06	micom	ok nvm missunderstand from my side
2014-11-27 16:12:14	roxfan	http://scarvenger.wordpress.com/2008/11/14/c-container-view/
2014-11-27 16:12:15	PSvils	because the vectors will be modified individually, so they can't be the same object.
2014-11-27 16:12:30	<--	jrvlima (~textual@c-98-207-173-60.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-27 16:13:04	V-ille	geordi: {vector<int> v{1,2,3}; vector<int*> v2; for (auto& x : v) v2.push_back(&x);}
2014-11-27 16:13:05	geordi	<no output>
2014-11-27 16:13:21	-->	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-11-27 16:13:22	MrFlibble	or a vector of iterators
2014-11-27 16:13:34	PSvils	V-ille: yeah, that should work :)
2014-11-27 16:13:52	PSvils	btw, would a vector of references work?
2014-11-27 16:13:54	-->	tarruda (~tarruda@191.33.49.40) has joined ##c++
2014-11-27 16:13:56	V-ille	no
2014-11-27 16:14:09	V-ille	references are not objects, they can't be stored in containers
2014-11-27 16:14:20	V-ille	a vector of std::reference_wrappers would work
2014-11-27 16:14:32	MrFlibble	but reference_wrappers wrap pointers
2014-11-27 16:14:36	MrFlibble	so you not gaining much
2014-11-27 16:14:59	V-ille	{vector<int> v{1,2,3}; vector<reference_wrapper<int>> v2; for (auto& x : v) v2.push_back(x); }
2014-11-27 16:15:00	geordi	<no output>
2014-11-27 16:15:16	PSvils	hmm, then I'll just use pointers :)
2014-11-27 16:15:23	MrFlibble	I would have a vector of iterators personally
2014-11-27 16:15:49	micom	interesting there is no boost library like ContainerView?
2014-11-27 16:15:53	<--	crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit (Client Quit)
2014-11-27 16:16:00	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-27 16:16:02	V-ille	look at boost::range
2014-11-27 16:16:28	<--	kez (~quassel@inet2.evalesco.com) has quit (Ping timeout: 264 seconds)
2014-11-27 16:17:19	V-ille	or just fetch Eric Niebler's new range library and use it
2014-11-27 16:17:59	PSvils	MrFlibble: I'm the new guy. :) What do you mean?
2014-11-27 16:18:40	<--	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has quit (Ping timeout: 258 seconds)
2014-11-27 16:19:02	MrFlibble	vector<vector<int>::iterator>
2014-11-27 16:19:51	hs_	PSvils, why do you want a vector that points to the same objects as another?
2014-11-27 16:19:58	MrFlibble	hs_: why not?
2014-11-27 16:20:35	hs_	I suspect it would be faster to copy a vector of objects than it would be to dig through a vector of pointers
2014-11-27 16:20:43	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-27 16:20:52	MrFlibble	depends on size of object mate
2014-11-27 16:20:56	MrFlibble	how expensive copying is
2014-11-27 16:21:01	hs_	yes it does
2014-11-27 16:21:04	hs_	which is why I asked a question
2014-11-27 16:21:08	PSvils	hs_: the vector will be able to be pretty big
2014-11-27 16:21:16	PSvils	this is for an entity component system.
2014-11-27 16:21:22	MrFlibble	your question wasn't about element type
2014-11-27 16:21:23	-->	MadArab (4c6906d9@gateway/web/freenode/ip.76.105.6.217) has joined ##c++
2014-11-27 16:21:37	-->	awesomess3 (~xubuntu@2001:558:6025:28:20cc:1c3a:9395:34b9) has joined ##c++
2014-11-27 16:21:37	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Remote host closed the connection)
2014-11-27 16:21:39	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 16:21:40	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 16:21:43	-->	lisacvuk_ (~quassel@109-92-45-188.dynamic.isp.telekom.rs) has joined ##c++
2014-11-27 16:21:52	awesomess3	is there any need to use C strings in a genuine C++ program?
2014-11-27 16:21:52	<--	MadArab (4c6906d9@gateway/web/freenode/ip.76.105.6.217) has quit (Client Quit)
2014-11-27 16:22:00	MrFlibble	awesomess3: sometimes.
2014-11-27 16:22:04	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 16:22:04	hs_	PSvils, why can't you just use the same vector in those different places?
2014-11-27 16:22:14	micom	http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4173.pdf oh my godness , smart pointers, smart functions and now smart references?!   what a smart c++
2014-11-27 16:22:16	MrFlibble	awesomess3: most times in fact.
2014-11-27 16:22:16	awesomess3	Because my C++ For Dummies book uses C strings instead of C++ strings. MrFlibble
2014-11-27 16:22:18	PSvils	threading issues then.
2014-11-27 16:22:30	PSvils	:)
2014-11-27 16:22:48	-->	luriv_ (~magic@p57B156E0.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 16:22:49	MrFlibble	awesomess3: quite often you construct a C++ string from a C string
2014-11-27 16:22:56	MrFlibble	awesomess3: std::string s("c string");
2014-11-27 16:23:12	Stryyker	awesomess3: I suggest a better book
2014-11-27 16:24:45	hs_	PSvils, I don't follow.. you are going to use a vector of what? pointers to atomic types?
2014-11-27 16:25:06	PSvils	no, but the types will be immutable.
2014-11-27 16:25:17	hs_	PSvils, the objects are immutable?
2014-11-27 16:25:20	PSvils	yep.
2014-11-27 16:25:23	hs_	are they volatile?
2014-11-27 16:25:30	PSvils	volatile?
2014-11-27 16:25:39	o]	arfle barfle gloop?
2014-11-27 16:25:40	hs_	guess not.. then you won't have threading issues anyway
2014-11-27 16:25:42	pzsh	Is someone able to explain that? clang vs gcc https://stackoverflow.com/questions/27178661/boostvariant-vs-polymorphism-very-different-performance-results-with-clang-a
2014-11-27 16:25:49	nolyc	<http://tinyurl.com/ourea4p> (at stackoverflow.com)
2014-11-27 16:25:50	<--	luriv (~magic@p57BBFA99.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 16:25:57	hs_	so why not pass your "read only vector" around by reference?
2014-11-27 16:26:03	<--	davek_ (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 255 seconds)
2014-11-27 16:26:17	PSvils	because the vector itself will change differently.
2014-11-27 16:26:28	PSvils	the rate at which the views update themselves to the larger view will be different.
2014-11-27 16:26:48	PSvils	larger view: read: main vector
2014-11-27 16:27:00	<--	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-11-27 16:27:19	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 16:27:37	hs_	I still don't understand.. if the issue is access to the vector itself, how does using a vector of pointers fix that?
2014-11-27 16:28:10	MrFlibble	pzsh: have you checked you are defeating the optimizer?
2014-11-27 16:28:19	PSvils	the issue is access to the elements of that vector, not the vector itself.
2014-11-27 16:28:28	<--	rendar (~I@host140-177-dynamic.251-95-r.retail.telecomitalia.it) has quit
2014-11-27 16:28:30	hs_	"because the vector itself with change differently" -- means what then?
2014-11-27 16:28:38	hs_	"will"
2014-11-27 16:28:41	o]	:DDDDDDDDDDDDDDDD
2014-11-27 16:28:49	o]	it is DIFFERENT
2014-11-27 16:28:55	hs_	hehe
2014-11-27 16:28:56	o]	we despise the different
2014-11-27 16:29:02	PSvils	master vector will be different than a view vector in their elements.
2014-11-27 16:29:11	o]	obey thy master
2014-11-27 16:29:31	MrFlibble	anyone want to see my C++ colour gradient control?
2014-11-27 16:29:36	o]	no
2014-11-27 16:29:37	o]	!next
2014-11-27 16:29:38	hs_	say what?
2014-11-27 16:29:38	nolyc	Another satisfied customer, next!
2014-11-27 16:29:40	MrFlibble	:(
2014-11-27 16:29:43	o]	!give MrFlibble general
2014-11-27 16:29:45	nolyc	MrFlibble: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-27 16:29:54	hs_	link it MrFlibble
2014-11-27 16:30:00	o]	show us in !general
2014-11-27 16:30:03	hs_	ya
2014-11-27 16:30:03	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-11-27 16:30:05	MrFlibble	http://i42.io/gradient.png
2014-11-27 16:30:05	o]	*to*
2014-11-27 16:30:07	MrFlibble	oops
2014-11-27 16:30:58	pzsh	@mrflibble: what do you me defeating? How could I?
2014-11-27 16:31:21	MrFlibble	sometimes optimizers can determine that there are no side effects so completely remove blocks of code
2014-11-27 16:31:44	MrFlibble	it is sometimes quite hard to defeat optimizedr
2014-11-27 16:31:54	micom	pzsh, have you tried it with a) reserved memory for vector,  have you checked different values than  900000 maybe you are hitting cache in really bad way somehow .
2014-11-27 16:32:00	hs_	the optimizer knows your code is pointless
2014-11-27 16:32:02	hs_	well before you do
2014-11-27 16:32:33	MrFlibble	I had to go through hoops to defeat optimizer when benchmarking my uber container class
2014-11-27 16:33:30	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 16:33:32	-->	immibis (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has joined ##c++
2014-11-27 16:33:35	o]	self advertising sucks
2014-11-27 16:34:03	MrFlibble	final line of code to defeat optimizer: std::cout << std::endl << "-+"[defeatOptimizer % 2] << std::endl;
2014-11-27 16:34:24	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 245 seconds)
2014-11-27 16:34:42	o]	no one cares
2014-11-27 16:34:47	<--	surd (~surd@unaffiliated/surd) has quit (Quit: leaving)
2014-11-27 16:34:47	MrFlibble	all tests before it modified the variable defeatOptimizer in some way so could not be removed by optimizer
2014-11-27 16:34:59	MrFlibble	o]: pzsh might care
2014-11-27 16:35:09	o]	defeating optimizer is meaningless
2014-11-27 16:35:34	MrFlibble	pzsh ask a question which is related to defeating optimizer
2014-11-27 16:35:39	MrFlibble	so is not meaningless
2014-11-27 16:35:45	awesomess3	how do you create a class prototype?   class myClass; //doesn't work
2014-11-27 16:35:51	o]	!give awesomess3 book
2014-11-27 16:35:52	nolyc	awesomess3: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-27 16:36:04	andreyv	MrFlibble: to test your code, supply it input and receive its output
2014-11-27 16:36:04	o]	!give awesomess3 doesn't work
2014-11-27 16:36:06	nolyc	awesomess3: Look buddy, doesn't work is a vague statement. Does it sit on the couch all day long? Does it procrastinate doing the dishes? Does it beg on the street for change? Please be specific! Define 'it' and what it isn't doing. Give us more details so we can help you without needing to ask basic questions like what's the error message?
2014-11-27 16:36:06	-->	cranfield (~cranfield@109.77.12.98) has joined ##c++
2014-11-27 16:36:17	andreyv	it is kinda meaningless to "defeat the optimizer"
2014-11-27 16:36:32	o]	andreyv: yup! just fake nerdy wankery
2014-11-27 16:36:36	MrFlibble	andreyv: as long as that input gives 100% code coverage of what you are trying to instrument
2014-11-27 16:36:44	o]	wtf
2014-11-27 16:36:58	-->	licnep (uid4387@gateway/web/irccloud.com/x-yyozfyjgwgcrehmq) has joined ##c++
2014-11-27 16:37:10	o]	you are full of shit, as usual
2014-11-27 16:37:19	MrFlibble	optimizer might turn a for loop into a single assignment if you don't do things properly
2014-11-27 16:37:24	MrFlibble	hence need to defeat optimizer
2014-11-27 16:37:35	o]	o_O
2014-11-27 16:37:40	andreyv	Then maybe you really don't need that loop...
2014-11-27 16:37:46	o]	yeah
2014-11-27 16:37:54	MrFlibble	andreyv: we are talking about benchmarking
2014-11-27 16:37:58	micom	yes you can always write 100 lines instead of loop for 0 to 100
2014-11-27 16:38:04	o]	you are talking bs
2014-11-27 16:38:13	MrFlibble	if the optmizer removes code you are tryinh to benchmark you can't benchmark it
2014-11-27 16:38:25	o]	...
2014-11-27 16:38:36	o]	who cares? the code is removed
2014-11-27 16:38:42	<--	awesomess3 (~xubuntu@2001:558:6025:28:20cc:1c3a:9395:34b9) has quit (Quit: Leaving)
2014-11-27 16:38:55	MrFlibble	because you are trying to benchmark specific functionality you idiot
2014-11-27 16:39:02	o]	so do the right tests, you idiot
2014-11-27 16:39:11	MrFlibble	that is what I am suggesting idiot
2014-11-27 16:39:23	o]	you are only talking bs and calling names, as usual
2014-11-27 16:39:26	andreyv	So your test is "for (int i = 0; i < 10000; i++) { res = myFunc(); }", is that right?
2014-11-27 16:39:51	o]	andreyv: don't waste your time. he is already nervous and he will keep repeating the same bs
2014-11-27 16:39:59	MrFlibble	andreyv: to see the kind of problem I am talking about look at: http://i42.co.uk/stuff/segmented_array.htm
2014-11-27 16:40:28	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-27 16:40:30	o]	lol
2014-11-27 16:40:42	o]	andreyv: don't click that. it is his bs site
2014-11-27 16:40:56	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-27 16:40:58	micom	its hard to compare two solutions if one of them is vanished by optimizer;)
2014-11-27 16:41:10	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-27 16:41:12	o]	micom: you compare results, then
2014-11-27 16:41:15	MrFlibble	if you want to test the speed of iteration of a container without modifying the container the opimizer may take out the loop completely so you can't test its speed
2014-11-27 16:41:19	<--	HiggsPossum (~HiggsPoss@unaffiliated/higgspossum) has quit (Read error: Connection reset by peer)
2014-11-27 16:41:31	MrFlibble	hence need to defeat the optimizer
2014-11-27 16:41:35	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 16:41:39	o]	this is a non sequitur :D
2014-11-27 16:41:44	MrFlibble	you are an idiot
2014-11-27 16:41:44	<--	PSvils (~Owner@81.198.225.19) has quit (Read error: Connection reset by peer)
2014-11-27 16:41:46	micom	o], nah because in production application the use case is more complicated and optimizer will not vanish it
2014-11-27 16:41:46	MrFlibble	as usual
2014-11-27 16:41:48	-->	HiggsPossum (~HiggsPoss@unaffiliated/higgspossum) has joined ##c++
2014-11-27 16:41:54	o]	micom: so test it accordingly
2014-11-27 16:42:17	micom	its not always possible to run profiler on the production code
2014-11-27 16:42:39	o]	"the use case is more complicated" are meaningless words. if you know there are such corner cases that need to be cover, just test with them
2014-11-27 16:42:49	o]	you can't assume you are smarter than an optimizer. that is dumbfuck
2014-11-27 16:42:54	MrFlibble	o] is in troll mode it seems
2014-11-27 16:43:15	MrFlibble	either troll mode or stupidity mode
2014-11-27 16:43:25	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 16:43:32	o]	I really was not expecting optimizer FUD here. that is so 90's...
2014-11-27 16:43:39	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-27 16:43:48	micom	o],  ok in perfect word you may be right, but in pragmatic situation you dont have unlimited resources to make a big amount of wide tests in I&V.  At least in my case.
2014-11-27 16:44:03	MrFlibble	I am not suggesting defeating the optimizer for production code you tool; just for benchmarking specific operations
2014-11-27 16:44:33	o]	these specific operations mean nothing if the optimizer ends up removing them in production code ;D
2014-11-27 16:44:43	MrFlibble	wrong
2014-11-27 16:44:45	MrFlibble	as usual
2014-11-27 16:44:54	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-27 16:45:28	o]	don't be a moronic monowordy person. you can do better than that
2014-11-27 16:45:37	<--	SiGe (~SiGe@38.98.52.199) has quit (Read error: Connection reset by peer)
2014-11-27 16:45:39	MrFlibble	!ops
2014-11-27 16:45:41	nolyc	Adrinael V-ille ville wcstok LIM orbitz woggle PlasmaHH Eelis are ops in this channel
2014-11-27 16:45:55	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 16:45:58	o]	yeah! call them. you are calling names since the start of this conversation
2014-11-27 16:45:59	<--	tarruda (~tarruda@191.33.49.40) has quit (Quit: WeeChat 0.4.2)
2014-11-27 16:46:05	MrFlibble	because you are trolling
2014-11-27 16:46:13	o]	nope
2014-11-27 16:46:14	MrFlibble	or chatting shit about something you don't understand
2014-11-27 16:46:28	o]	what? so if you disagree, you have the right to call me an idiot?
2014-11-27 16:46:31	o]	you have issues :(
2014-11-27 16:46:38	MrFlibble	!ops
2014-11-27 16:46:40	nolyc	Adrinael V-ille ville wcstok LIM orbitz woggle PlasmaHH Eelis are ops in this channel
2014-11-27 16:46:41	o]	serious issues
2014-11-27 16:47:24	Adrinael	Sup
2014-11-27 16:47:25	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 16:47:36	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 264 seconds)
2014-11-27 16:47:37	micom	http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4025.pdf be calm guys and read about runtime size classes:D
2014-11-27 16:47:41	andreyv	MrFlibble: In your code you use srand(0), which the compiler can in theory figure out and predict the result anyway
2014-11-27 16:47:42	o]	micom: I really wanna see a valid use case that justifies 'defeating' an optimizer
2014-11-27 16:48:38	MrFlibble	Adrinael: o] does understand a basic point so has resorted to trolling rather than trying to understand the issues
2014-11-27 16:48:45	MrFlibble	andreyv: true.
2014-11-27 16:49:02	MrFlibble	andreyv: not on my implementation though. :)
2014-11-27 16:49:12	MrFlibble	Adrinael: *not understand
2014-11-27 16:49:14	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 16:49:23	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 16:49:24	o]	MrFlibble: your attempts are really desperate. I think Adrinael is perfectly capable of reading what was really happening here
2014-11-27 16:49:34	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-11-27 16:49:40	-->	32NAAJ6ZH (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 16:49:47	Adrinael	Both of you calm your tits
2014-11-27 16:50:20	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 16:50:33	andreyv	MrFlibble: The cleanest test would be to anchor the operations on some input data that the compiler can't know in advance. For example, prepare a list of instructions "INSERT at pos 1; ERASE at pos 2; ...", and then have both implementations execute these instructions
2014-11-27 16:50:34	o]	again, there is no valid reason to defeat optimizers. they are our friends
2014-11-27 16:50:54	MrFlibble	andreyv: even if you do that certain operations can be optimized out
2014-11-27 16:51:04	MrFlibble	andreyv: all operations have to mutate that data in some way
2014-11-27 16:51:07	o]	andreyv: exactly! use the right input data and the optimizer is no longer a concern
2014-11-27 16:51:10	MrFlibble	which is defeating the optimizer
2014-11-27 16:51:22	micom	offtopic ban them all
2014-11-27 16:51:29	o]	but writing code to deliberately defeating an optimizer is silly
2014-11-27 16:51:33	<--	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-27 16:51:36	MrFlibble	no it isn't
2014-11-27 16:51:41	MrFlibble	depends on what you are testing
2014-11-27 16:51:43	o]	it just demonstrates lack of domain knowledge
2014-11-27 16:51:54	MrFlibble	it is nothing to do with bloody domain knowledge
2014-11-27 16:52:00	MrFlibble	see Adrinael he is chatting crap
2014-11-27 16:52:00	o]	cover your tests right and there is no need to waste time with such ridiculous things
2014-11-27 16:52:08	andreyv	MrFlibble: if this can occur with an input file, then the same behavior can occur IRL too, thus the test is still valid even in presence of the optimizer
2014-11-27 16:52:14	-->	p|q (~plq@95.14.66.151) has joined ##c++
2014-11-27 16:52:30	o]	nope. this is backed up by lots of good books
2014-11-27 16:52:42	MrFlibble	one of my tests is just iteration over a container which without modification of some other state could be optimized out
2014-11-27 16:52:56	o]	tests should reflect what happens IRL
2014-11-27 16:53:04	Adrinael	Why is it important to optimize behaviour that doesn't do anything?
2014-11-27 16:53:09	MrFlibble	depends what you are testing in this case a generic container
2014-11-27 16:53:14	Adrinael	If it isn't, why is it important to benchmark it
2014-11-27 16:53:19	MrFlibble	nothting to do with "domain knowledge"
2014-11-27 16:53:26	<--	cnnsnts (~cnsnnts@80.82.65.248) has left ##c++
2014-11-27 16:53:29	o]	he won't explain
2014-11-27 16:53:36	o]	as usual
2014-11-27 16:53:37	MrFlibble	Adrinael: I was comparing my container against other containers
2014-11-27 16:53:38	andreyv	MrFlibble: print out elements when iterating :) This is what you need IRL, get the value and use it.
2014-11-27 16:53:46	o]	andreyv :)
2014-11-27 16:54:31	o]	it seems the problem is MrFlibble's crappy container is not optimizable
2014-11-27 16:54:57	MrFlibble	andreyv: the problem with that is the CPU ususage of the "printing out" skews the results
2014-11-27 16:55:03	Adrinael	The problem is that if he wants to benchmark no-ops, he's quite allowed to do that without namecalling and ranting
2014-11-27 16:55:13	o]	yeah
2014-11-27 16:55:13	Adrinael	Er, badly phrased
2014-11-27 16:55:19	Adrinael	You get the idea
2014-11-27 16:55:31	<--	32NAAJ6ZH (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 16:55:38	o]	but it seems i am idiot for disagreeing such benchmarkings
2014-11-27 16:55:44	<--	pzsh (~pzsh@x2f1a7a2.dyn.telefonica.de) has quit (Remote host closed the connection)
2014-11-27 16:55:46	o]	but it seems i am idiot for disagreeing with such benchmarkings
2014-11-27 16:57:06	Adrinael	Daily zen of Uncle Adrinael: Being the one who's right doesn't give you special rights
2014-11-27 16:57:12	andreyv	MrFlibble: true, here is how it could be improved: a) store the results in an array instead of printing them immediately; b) or run a dry pass that just prints out the same amount of data and subtract the time.
2014-11-27 16:57:16	Adrinael	And the judgement of the day is for both of you to drop the topic and agree to disagree
2014-11-27 16:57:18	MrFlibble	http://ideone.com/Jubuig B is no good because the time taken for the cout outweighs the time of what you are testing (the iteration); so A is preferable (you output "defeatOptimizer" once at end of program)
2014-11-27 16:57:37	o]	Adrinael: it seems that is not gonna happen
2014-11-27 16:57:40	<--	HerzogDeXtEr1 (~flex@88.130.183.59) has quit (Quit: Leaving.)
2014-11-27 16:57:53	MrFlibble	Adrinael: look at my post please
2014-11-27 16:57:59	MrFlibble	Adrinael: to understand what I have been saying
2014-11-27 16:58:20	o]	at least andreyv is sane enough to realize how silly is 'defeating' the optimizer
2014-11-27 16:58:44	-->	immibis_ (~ChatZill1@222-153-244-45.jetstream.xtra.co.nz) has joined ##c++
2014-11-27 16:58:49	<--	immibis (~ChatZill1@222-153-242-204.jetstream.xtra.co.nz) has quit (Ping timeout: 255 seconds)
2014-11-27 16:58:50	--	immibis_ is now known as immibis
2014-11-27 16:59:12	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 16:59:56	<--	Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-11-27 17:00:31	<--	N1cXP8ChUBFe3 (~95E6Y24ak@S01067cb21b32bee4.ed.shawcable.net) has quit (Quit: Leaving)
2014-11-27 17:02:04	andreyv	TBH, I/O can be emulated by reading from and writing to volatile variables, without the actual I/O overhead
2014-11-27 17:02:09	PSvils	can I have a vector of const object pointers?
2014-11-27 17:02:27	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 17:02:31	PSvils	reading online it says I can't, but...mmm...hmmm.
2014-11-27 17:02:33	o]	!give PSvils stdref vector
2014-11-27 17:02:35	nolyc	PSvils: http://en.cppreference.com/w/cpp/container/vector
2014-11-27 17:02:40	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 244 seconds)
2014-11-27 17:02:55	MrFlibble	andreyv: that may prevent other optimizations; the only aspec of the optimizer that I am trying to "defeat" is the remove of code the optimizer thinks has no side effects.
2014-11-27 17:03:02	MrFlibble	aspect*
2014-11-27 17:03:21	o]	because nothing
2014-11-27 17:03:29	MrFlibble	which is a dubious optimization in the first place
2014-11-27 17:03:36	o]	because nothing (again)
2014-11-27 17:03:42	MrFlibble	be quiet
2014-11-27 17:03:46	andreyv	MrFlibble: When you read your input from and write your output to volatile variables, there is a side effect, and your actual code isn't affected
2014-11-27 17:03:47	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 17:03:50	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-27 17:03:56	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Remote host closed the connection)
2014-11-27 17:04:24	MrFlibble	andreyv: VC++ optimizer optimizes code differently around volatile variables
2014-11-27 17:04:35	hs_	I think it is fair to say that providing a "good" test is a way of "defeating" potentially misleading benchmarks produced by an "optimization" effect
2014-11-27 17:04:46	o]	hs_: YEAH!
2014-11-27 17:04:50	o]	the data is what matters
2014-11-27 17:05:12	o]	if your code does right with the expected data in the target arch, why bother with other things?
2014-11-27 17:05:34	MrFlibble	because I am comparing my container with other containers for the same operations
2014-11-27 17:05:41	MrFlibble	the "data" is irrelevent
2014-11-27 17:05:47	o]	hs_: but the best part is MrFlibble still did not give a valid reason to defeat an optimizer
2014-11-27 17:05:57	MrFlibble	yes I did, multiple times.
2014-11-27 17:06:01	o]	he keeps repeating 'comparing' like it were a meaningful thing
2014-11-27 17:06:19	MrFlibble	welcome to /ignore
2014-11-27 17:06:26	o]	!give MrFlibble news
2014-11-27 17:06:28	nolyc	MrFlibble: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-11-27 17:06:36	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 272 seconds)
2014-11-27 17:06:59	o]	again, that is really 90's FUD
2014-11-27 17:07:07	o]	when the optimizers were crappy and broken
2014-11-27 17:09:46	-->	snakenerd (~Thunderbi@177.43.5.128) has joined ##c++
2014-11-27 17:10:05	<--	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-27 17:10:34	MrFlibble	I quite like that "Fractal Wrongness" MEME. :D
2014-11-27 17:10:39	MrFlibble	rather apt I think
2014-11-27 17:11:02	-->	andasver (8d465187@gateway/web/freenode/ip.141.70.81.135) has joined ##c++
2014-11-27 17:11:05	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Quit: Lost terminal)
2014-11-27 17:11:36	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-27 17:12:06	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-27 17:14:47	--	luny`` is now known as luny
2014-11-27 17:14:51	<--	andasver (8d465187@gateway/web/freenode/ip.141.70.81.135) has quit (Client Quit)
2014-11-27 17:15:52	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 17:16:38	<--	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2014-11-27 17:18:04	<--	Logan54 (~logan@84.237.53.101) has quit (Read error: Connection reset by peer)
2014-11-27 17:18:30	<--	King_Hual` (~Hual@94.26.28.68) has quit (Ping timeout: 264 seconds)
2014-11-27 17:18:42	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 17:19:01	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-27 17:19:50	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-27 17:22:29	<--	Iloiny (~Iloiny@unaffiliated/iloiny) has quit (Ping timeout: 265 seconds)
2014-11-27 17:23:11	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Remote host closed the connection)
2014-11-27 17:23:18	<--	de-vri-es (~de-vri-es@voyager.de-vri.es) has quit (Ping timeout: 258 seconds)
2014-11-27 17:23:51	-->	Iloiny (~Iloiny@unaffiliated/iloiny) has joined ##c++
2014-11-27 17:24:02	<--	naraku_9333 (~quassel@73.9.90.158) has quit (Ping timeout: 250 seconds)
2014-11-27 17:25:23	<--	seishun (~Kakera@84.237.206.239) has quit (Ping timeout: 255 seconds)
2014-11-27 17:25:50	<--	ivan\ (~ivan@unaffiliated/ivan/x-000001) has quit (Ping timeout: 255 seconds)
2014-11-27 17:25:53	-->	de-vri-es (~de-vri-es@voyager.de-vri.es) has joined ##c++
2014-11-27 17:27:29	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 264 seconds)
2014-11-27 17:27:36	-->	naraku9333 (~quassel@73.9.90.158) has joined ##c++
2014-11-27 17:27:38	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-27 17:27:41	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-27 17:27:51	<--	BlaXpirit (~blaxpirit@137-28-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-27 17:28:02	<--	gelignite (~gelignite@i528C3F80.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-27 17:28:28	-->	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has joined ##c++
2014-11-27 17:29:10	-->	ivan\ (~ivan@unaffiliated/ivan/x-000001) has joined ##c++
2014-11-27 17:30:20	<--	xissburg (~xissburg@177.97.230.39) has quit (Read error: No route to host)
2014-11-27 17:30:21	-->	aat (~alec@58-84-194-42.e-wire.net.au) has joined ##c++
2014-11-27 17:30:21	<--	aat (~alec@58-84-194-42.e-wire.net.au) has quit (Client Quit)
2014-11-27 17:30:21	--	dts is now known as dts|feasting
2014-11-27 17:30:41	-->	aat (~alec@58-84-194-42.e-wire.net.au) has joined ##c++
2014-11-27 17:31:29	<--	lisacvuk_ (~quassel@109-92-45-188.dynamic.isp.telekom.rs) has quit (Remote host closed the connection)
2014-11-27 17:32:19	<--	thecha (~cha@unaffiliated/thecha) has quit (Remote host closed the connection)
2014-11-27 17:32:21	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-27 17:32:28	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 17:34:09	<--	eckesicle (uid12692@gateway/web/irccloud.com/x-ldglntmqaqlldral) has quit (Quit: Connection closed for inactivity)
2014-11-27 17:34:39	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 17:35:15	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 240 seconds)
2014-11-27 17:35:39	<--	Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 272 seconds)
2014-11-27 17:36:18	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Ping timeout: 258 seconds)
2014-11-27 17:36:28	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Read error: Connection reset by peer)
2014-11-27 17:36:35	<--	Logan54 (~logan@84.237.53.101) has quit (Read error: Connection reset by peer)
2014-11-27 17:36:41	<--	batmoz (~quassel@foo.kassala.de) has quit (Ping timeout: 258 seconds)
2014-11-27 17:36:48	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 17:36:57	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-27 17:37:52	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 264 seconds)
2014-11-27 17:37:53	-->	Nnavd (~Nnavd@ip-192-68-68-10.ptr.bcit.ca) has joined ##c++
2014-11-27 17:38:15	cbreak	compilers can prove side-effect freenes
2014-11-27 17:38:18	-->	mimon__ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 17:38:28	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Read error: Connection reset by peer)
2014-11-27 17:39:09	<--	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has quit (Quit: Hejd?!)
2014-11-27 17:39:51	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-27 17:40:08	-->	vokimon (~quassel@75.Red-95-120-180.dynamicIP.rima-tde.net) has joined ##c++
2014-11-27 17:40:23	<--	snakenerd (~Thunderbi@177.43.5.128) has quit (Quit: snakenerd)
2014-11-27 17:41:19	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 245 seconds)
2014-11-27 17:43:03	<--	mimon__ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Ping timeout: 250 seconds)
2014-11-27 17:43:30	Mannn	how do you create a makefile?
2014-11-27 17:43:46	-->	regreg (~regreg@77.81.151.155) has joined ##c++
2014-11-27 17:44:41	-->	jzk (~jzk@ec2-54-219-250-249.us-west-1.compute.amazonaws.com) has joined ##c++
2014-11-27 17:44:50	Eelis	you will it into existence
2014-11-27 17:45:01	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 17:47:04	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 17:47:43	Chris	you type touch Makefile from the shell prompt.
2014-11-27 17:47:49	<--	LickPlusPlus (~LickPytho@58.166.109.179) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Nine out of ten l33t h4x0rz prefer it)
2014-11-27 17:47:51	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.0/2014101000])
2014-11-27 17:47:59	<--	DexterLB (~dex@77-85-7-19.btc-net.bg) has quit (Ping timeout: 245 seconds)
2014-11-27 17:48:02	<--	stakewinner00 (~stakewinn@113.122.15.37.dynamic.jazztel.es) has quit
2014-11-27 17:48:16	-->	frege (~frege@unaffiliated/frege) has joined ##c++
2014-11-27 17:48:48	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Read error: Connection reset by peer)
2014-11-27 17:48:49	frege	I'm calling syslog with 10 threads, that adds 100usec to each call
2014-11-27 17:49:06	frege	how can I reduce that and make it a constant of 10 to 40usec?
2014-11-27 17:49:42	Eelis	don't call syslog?
2014-11-27 17:50:08	-->	DexterLB (~dex@77-85-7-19.btc-net.bg) has joined ##c++
2014-11-27 17:50:14	frege	you are the wrong person to answer this apparently
2014-11-27 17:50:17	Mannn	Chris, touch just changes file timestamps, no?
2014-11-27 17:50:47	Chris	Mannn: well, it will create a Makefile if it doesn't exist.
2014-11-27 17:50:47	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-27 17:51:03	Chris	0 bytes in size. Nice and fresh with none of those pesky targets to cause havoc.
2014-11-27 17:51:29	Chris	If you already have a Makefile, you wouldn't need to create one, so touch Makefile is the correct answer.
2014-11-27 17:51:52	Mannn	I want to understand the syntax
2014-11-27 17:52:09	Mannn	Thanks for the very literal answer :)
2014-11-27 17:52:20	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-27 17:52:22	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 17:52:23	Chris	Plenty of docs on them. Work out which version of make you're using and read its docs.
2014-11-27 17:52:40	<--	Bigpet4 (~bigpet@i5E86AABE.versanet.de) has quit (Ping timeout: 244 seconds)
2014-11-27 17:52:48	Mannn	Should I google make documentation?
2014-11-27 17:52:59	Chris	That might be a good start.
2014-11-27 17:53:03	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-27 17:53:29	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-27 17:54:18	Mannn	"For  complete,  current documentation, refer to the Info file make.info" does anyone know where that file is
2014-11-27 17:55:19	dts|feasting	its like $info make i believe
2014-11-27 17:55:34	dts|feasting	of course you can always rtfm
2014-11-27 17:55:42	Mannn	Thats what Im trying to do
2014-11-27 17:55:44	Chris	Mannn: try typing info make
2014-11-27 17:56:05	dts|feasting	or man make
2014-11-27 17:56:15	Chris	And if you don't know how to use info, try typing info info. By the way, info is awful, so you could just use web documentation.
2014-11-27 17:56:37	dts|feasting	https://www.gnu.org/software/make/manual/make.pdf this is what i use
2014-11-27 17:56:44	dts|feasting	also, what chris said
2014-11-27 17:57:10	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-27 17:57:10	Mannn	Nice, thanks
2014-11-27 17:57:24	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-27 17:59:42	-->	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-11-27 18:00:24	<--	phantom__ (~phantom@88-83-35-183.customer.t3.se) has quit (Ping timeout: 255 seconds)
2014-11-27 18:00:42	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Ping timeout: 250 seconds)
2014-11-27 18:00:50	-->	phantom__ (~phantom@88-83-35-183.customer.t3.se) has joined ##c++
2014-11-27 18:01:07	<--	liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 250 seconds)
2014-11-27 18:03:50	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 258 seconds)
2014-11-27 18:04:22	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 18:04:22	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 255 seconds)
2014-11-27 18:04:36	<--	justinas (~james@78-60-186-6.static.zebra.lt) has quit (Quit: leaving)
2014-11-27 18:04:49	<--	cranfield (~cranfield@109.77.12.98) has quit (Remote host closed the connection)
2014-11-27 18:09:01	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2014-11-27 18:09:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 18:10:27	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-27 18:13:03	<--	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-27 18:16:02	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 18:17:12	<--	MetalHead77 (~MetalHead@72.27.72.41) has quit
2014-11-27 18:17:38	-->	d34df00d (~d34df00d@host31-50-231-247.range31-50.btcentralplus.com) has joined ##c++
2014-11-27 18:17:43	d34df00d	Hi!
2014-11-27 18:17:55	d34df00d	I have this marvellous piece of code:
2014-11-27 18:18:03	d34df00d	https://bpaste.net/show/8ff5d4456e80
2014-11-27 18:18:26	d34df00d	Do I understand correctly it's impossible to rewrite it in C++11 without auto return type deduction while avoiding type erasure in the deleter?
2014-11-27 18:19:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 18:20:17	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2014-11-27 18:21:21	<--	heiner_ (~heiner@p508563C5.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-27 18:21:35	-->	serses (~Se@94.52.74.185) has joined ##c++
2014-11-27 18:21:52	-->	Lewoco (~Lewoco@60-241-162-47.static.tpgi.com.au) has joined ##c++
2014-11-27 18:23:16	<--	det- (~chris@ip72-193-2-51.lv.lv.cox.net) has quit (Quit: Leaving)
2014-11-27 18:23:25	-->	det (~chris@unaffiliated/det) has joined ##c++
2014-11-27 18:23:49	serses	so what is the best way to treat this problem? finding a specific rgb value in 6mb of bmp file
2014-11-27 18:23:51	det	d34df00d, c++14 return type deduction is necessary to include a lambda in your return type without type erasure, yes
2014-11-27 18:24:16	cbreak	serses: search for it
2014-11-27 18:24:18	d34df00d	Cool.
2014-11-27 18:24:24	d34df00d	One more reason to troll C++14-haters.
2014-11-27 18:24:36	cbreak	decode it, then std::find or so
2014-11-27 18:25:22	serses	yeah well i did that
2014-11-27 18:25:39	serses	i need it to go faster
2014-11-27 18:25:42	det	d34df00d, your function is odd though
2014-11-27 18:25:46	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-27 18:25:49	d34df00d	det: why?
2014-11-27 18:25:54	det	d34df00d, or rather very hacky
2014-11-27 18:26:02	d34df00d	Why?? :)
2014-11-27 18:26:32	det	unique_ptr is not made for this :)
2014-11-27 18:26:39	-->	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-11-27 18:26:59	Lencl	is there a way to use time_t to get timestamp 88 days ago?
2014-11-27 18:27:08	d34df00d	Well, but how would you write something that does something else when going out of scope, and how would this be better?
2014-11-27 18:27:32	-->	heiner (~heiner@p5DC4ED09.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 18:27:39	MrFlibble	auto_ptr won't call the deleter though
2014-11-27 18:27:41	det	d34df00d, make a new class that is not unique_ptr
2014-11-27 18:27:41	MrFlibble	er
2014-11-27 18:27:41	Lewoco	Do exceptions propogate out of an extern "C" function?
2014-11-27 18:27:43	MrFlibble	unique_ptr
2014-11-27 18:27:52	d34df00d	MrFlibble: why?
2014-11-27 18:27:59	MrFlibble	nothing to delete
2014-11-27 18:28:00	Lewoco	propagate*
2014-11-27 18:28:28	serses	is there any way to split a binary file in 2 subregions and then iterate on them on 2 separate cpu threads?
2014-11-27 18:28:29	d34df00d	det: and what about the second part of the question, namely "how would this be better"? :)
2014-11-27 18:28:33	hs_	d34df00d, what is wrong with a custom deleter?
2014-11-27 18:28:50	det	d34df00d, your returned type offers an interface for a smart pointer
2014-11-27 18:29:13	det	d34df00d, and also lacks functionality expected of a scope guard class
2014-11-27 18:29:51	d34df00d	MrFlibble: hm, unique_ptr { nullptr } is considered empty?
2014-11-27 18:29:53	-->	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has joined ##c++
2014-11-27 18:29:54	d34df00d	That sucks pretty much.
2014-11-27 18:29:59	<--	serses (~Se@94.52.74.185) has left ##c++ ("Leaving")
2014-11-27 18:30:07	det	d34df00d, by offering the correct interface in your return type
2014-11-27 18:30:09	d34df00d	hs_: I didn't say there is something wrong :)
2014-11-27 18:30:21	d34df00d	det: okay, what is expected from a scope guard?
2014-11-27 18:30:27	Lencl	is there a way to use time_t to get timestamp 88 days ago?using time_t
2014-11-27 18:30:48	det	d34df00d, only a constructor/destructor and a dismiss member function
2014-11-27 18:31:09	d34df00d	MrFlibble: also, I would disagree. unique_ptr { p, d } seems to be always considered to be non-empty according to http://en.cppreference.com/w/cpp/memory/unique_ptr/unique_ptr
2014-11-27 18:31:30	-->	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has joined ##c++
2014-11-27 18:31:35	d34df00d	(which is sane, you only know the semantics of null in case of default deleter)
2014-11-27 18:31:45	d34df00d	det: I wouldn't expect a "dismiss".
2014-11-27 18:31:55	det	d34df00d, its very useful
2014-11-27 18:31:56	d34df00d	Also, I wouldn't care if it offers something extra.
2014-11-27 18:32:14	det	d34df00d, unique_ptr doesnt offer "something extra", it offers nonsense
2014-11-27 18:32:20	det	d34df00d, operator *, .get(), etc
2014-11-27 18:32:29	d34df00d	det: I typically capture some boolean or other state into the guard that checks if the action should actually be performed at the point of destruction.
2014-11-27 18:32:42	MrFlibble	d34df00d: stop reinventing wheels, see: http://stackoverflow.com/questions/10270328/the-simplest-and-neatest-c11-scopeguard
2014-11-27 18:32:51	det	d34df00d, why do this every time instead of once in the scope guard ?
2014-11-27 18:32:58	-->	bookmark (IceChat77@65.35.217.85) has joined ##c++
2014-11-27 18:33:27	d34df00d	det: because this way you just rely on the state that's explicitly provided already in your scope and don't do any explicit dismisses.
2014-11-27 18:33:33	d34df00d	Separation of concerns, that kind of thing.
2014-11-27 18:33:48	det	d34df00d, the scope guard is in your scope
2014-11-27 18:34:09	det	and guard.dismiss() is clearer than "somebool = false;"
2014-11-27 18:34:09	d34df00d	MrFlibble: I still don't get how it's better. Will try to re-read tomorrow with a fresh head, thanks.
2014-11-27 18:34:14	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-27 18:34:45	d34df00d	det: but what if the condition is not "somebool = false;" but "acquiredResourcesCount = 0; cacheInvalidated = false;" etc?
2014-11-27 18:34:56	d34df00d	You then put the check in the guarded action, not every place where you modify those.
2014-11-27 18:35:25	bookmark	how could i test wether reading to memory is slower or writing to it?
2014-11-27 18:35:41	det	bookmark, off-topic here
2014-11-27 18:36:04	bookmark	i said how not what would the results be
2014-11-27 18:36:19	det	yes, that is off-topic here
2014-11-27 18:36:23	bookmark	why?
2014-11-27 18:36:30	MrFlibble	bookmark: channels
2014-11-27 18:36:37	pi-	Can anyone help me understand the comment on this line: https://gist.github.com/p-i-/b6f822bb30ff9027a8e3#file-gistfile1-cpp-L623 ? "TMM: added this Proxy ctor for use with STL algorithms"
2014-11-27 18:36:38	det	d34df00d, whats wrong with: if (acquiredResourcesCount == 0) guard.dismiss();
2014-11-27 18:36:47	bookmark	?
2014-11-27 18:36:48	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Remote host closed the connection)
2014-11-27 18:36:53	det	!give bookmark topic
2014-11-27 18:36:54	MrFlibble	bookmark: channels have topics.
2014-11-27 18:36:54	nolyc	bookmark: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-11-27 18:37:07	d34df00d	det: cause it's only a part of the condition.
2014-11-27 18:37:10	d34df00d	Notice the second assignment.
2014-11-27 18:37:14	<--	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-27 18:37:23	bookmark	it doesn't say you can ask a question about how to benchmark hardware
2014-11-27 18:37:38	det	d34df00d, whatever your logic is, you can call dismiss
2014-11-27 18:37:38	MrFlibble	correct
2014-11-27 18:37:38	d34df00d	I won't argue that .dismiss() is useful, of course, it is, but I rather argue that it's not a general-case solution anyway.
2014-11-27 18:38:00	d34df00d	det: but I don't want to check and call dismiss in every point where I modify any of the variables on which my condition depends.
2014-11-27 18:38:07	det	d34df00d, you make a fair point, but I still think it should be part of a scope guard class
2014-11-27 18:38:12	bookmark	it doesn't say you can't : p
2014-11-27 18:38:19	MrFlibble	bookmark: yes it does
2014-11-27 18:38:35	det	d34df00d, anyways, if there is not scope guard, how can you prevent your unique_ptr from calling the deleter ?
2014-11-27 18:38:40	Stryyker	I'm not sure why you're debating it as you asked in a more suitable channel already
2014-11-27 18:38:41	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2014-11-27 18:38:42	<--	mgaunard (~mgaunard@bau91-1-82-239-246-60.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2014-11-27 18:38:45	det	I mean, if there is not dismiss
2014-11-27 18:38:45	d34df00d	det: I capture a bool :)
2014-11-27 18:38:48	bookmark	its in standard c++
2014-11-27 18:38:54	bookmark	mrflibble
2014-11-27 18:38:55	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 18:39:00	MrFlibble	it is not C++
2014-11-27 18:39:15	MrFlibble	faffing about with hardware is not part of the C++ language
2014-11-27 18:39:22	MrFlibble	this channel is about the C++ language
2014-11-27 18:39:33	bookmark	and are there not ctime functions
2014-11-27 18:39:34	det	d34df00d, ahh, so "[&]() { if (b) { ... } }" ?
2014-11-27 18:39:41	d34df00d	Kinda.
2014-11-27 18:39:55	MrFlibble	bookmark: ask in ##c++-general
2014-11-27 18:39:59	bookmark	i did
2014-11-27 18:40:03	Stryyker	bookmark: What is the issue? You asked in ##c++-general already which is where it belongs
2014-11-27 18:40:04	d34df00d	That smells somewhat, though.
2014-11-27 18:40:07	MrFlibble	stop going on about it here then
2014-11-27 18:40:12	bookmark	fine
2014-11-27 18:40:45	bookmark	i'd just like to know which is faster a read or a write jeez
2014-11-27 18:40:52	-->	crapp (~quassel@unaffiliated/saedelaere) has joined ##c++
2014-11-27 18:41:05	MrFlibble	you are being obtuse.
2014-11-27 18:41:46	bookmark	;p
2014-11-27 18:41:57	-->	thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-11-27 18:41:58	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 18:42:56	<--	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-27 18:42:58	det	d34df00d, anyways, http://ideone.com/0azGik
2014-11-27 18:43:46	d34df00d	det: why do you delete move?
2014-11-27 18:43:54	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Ping timeout: 272 seconds)
2014-11-27 18:43:57	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-27 18:44:39	det	d34df00d, because then it is no longer a "scope" guard :)
2014-11-27 18:44:45	<--	saedelaere (~quassel@unaffiliated/saedelaere) has quit (Ping timeout: 240 seconds)
2014-11-27 18:45:04	d34df00d	Yeah, fair enough :)
2014-11-27 18:45:08	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 258 seconds)
2014-11-27 18:45:53	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-27 18:46:19	-->	bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-27 18:47:09	<--	luriv_ (~magic@p57B156E0.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-11-27 18:48:27	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-27 18:50:22	<--	p|q (~plq@95.14.66.151) has quit (Read error: Connection reset by peer)
2014-11-27 18:51:05	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 18:51:39	<--	Lencl (446adf0e@gateway/web/cgi-irc/kiwiirc.com/ip.68.106.223.14) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-27 18:51:42	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 18:53:26	-->	maazu (~maazu@120.140.169.1) has joined ##c++
2014-11-27 18:53:35	<--	endomancer (~endomance@2001:8003:2e3b:e301:683c:4850:98e0:dd65) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-27 18:54:29	<--	csotelo (~csotelo@190.41.210.210) has quit (Remote host closed the connection)
2014-11-27 18:54:31	-->	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has joined ##c++
2014-11-27 18:56:03	-->	Syzygy (~Syzygy@91-115-173-88.adsl.highway.telekom.at) has joined ##c++
2014-11-27 18:56:16	<--	patteh (~patteh@unaffiliated/patteh) has quit (Quit: leaving)
2014-11-27 18:56:32	-->	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2014-11-27 18:56:37	-->	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has joined ##c++
2014-11-27 18:57:20	<--	MrFlibble (LunarJetma@2.124.188.136) has quit (Quit: MrFlibble)
2014-11-27 18:57:58	-->	greq (~ag@109.110.236.20) has joined ##c++
2014-11-27 18:58:12	pragma-	"A hand crafted IRC client" ... yeah, because all the others are procedurally generated out of randomness or something, right?
2014-11-27 18:58:56	<--	Matthias|PC (~Matthias@78-20-27-16.access.telenet.be) has quit
2014-11-27 19:00:18	Stryyker	the monkeys at keyboards got tired of trying to write Shakespear.
2014-11-27 19:00:22	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-27 19:00:54	roxfan	pragma-: maybe some of them are foot crafed
2014-11-27 19:01:03	<--	alza (~alza@167.88.36.237) has quit (Quit: WeeChat 0.4.3)
2014-11-27 19:03:58	<--	Malsasa (~Malsasa@36.73.230.167) has quit (Read error: Connection reset by peer)
2014-11-27 19:05:02	-->	NoCreativity (~quassel@179.177.48.139.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-27 19:05:22	<--	netj (~netj@naru.stanford.edu) has quit (Ping timeout: 240 seconds)
2014-11-27 19:05:52	-->	netj (~netj@naru.stanford.edu) has joined ##c++
2014-11-27 19:06:26	<--	greq (~ag@109.110.236.20) has quit (Quit: Leaving)
2014-11-27 19:08:47	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 19:09:23	maazu	g'bye
2014-11-27 19:09:24	<--	maazu (~maazu@120.140.169.1) has left ##c++ ("Konversation terminated!")
2014-11-27 19:09:59	<--	Gama11 (~quassel@p57967272.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-27 19:10:03	-->	p|q (~plq@95.14.66.151) has joined ##c++
2014-11-27 19:12:26	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-27 19:13:21	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-27 19:15:33	<--	Sc0tty- (~Scottyyy@86.53.112.194) has quit
2014-11-27 19:15:43	<--	timj (~timj@2a00:1328:e100:cc42:8e0:4c85:684:f5b9) has quit (Ping timeout: 258 seconds)
2014-11-27 19:16:50	-->	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has joined ##c++
2014-11-27 19:17:03	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-27 19:19:32	-->	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has joined ##c++
2014-11-27 19:21:09	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-27 19:21:16	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-27 19:21:20	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 240 seconds)
2014-11-27 19:21:54	Mannn	What does this mean inside of the class SortedInt2? SortedInt2(const SortedInt2& src);
2014-11-27 19:22:09	roxfan	copy constructor
2014-11-27 19:22:12	Mannn	It's like a constructor with a parameter that takes a pointer
2014-11-27 19:22:12	Mannn	oh
2014-11-27 19:22:57	-->	Rafaelfsilva (~Rafaelfsi@177.184.100.34) has joined ##c++
2014-11-27 19:23:46	Stryyker	it takes a reference
2014-11-27 19:24:31	-->	adek (~adek@199.201.64.2) has joined ##c++
2014-11-27 19:26:23	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-27 19:26:33	<--	timj (~timj@vdsl.fuckup.club.berlin.ccc.de) has quit (Quit: Leaving.)
2014-11-27 19:26:35	<--	thecha (~cha@unaffiliated/thecha) has quit (Quit: Ex-Chat)
2014-11-27 19:27:06	-->	rkreis_ (~robin@pD9EF1332.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 19:27:24	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-27 19:29:40	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 19:30:15	<--	rkreis (~robin@pD9EF1086.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-27 19:31:01	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-27 19:31:15	-->	ResidentBisquik (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2014-11-27 19:31:35	ResidentBisquik	I'm needing get a pointer of a c++ POD struct in a C function. It seems impossible
2014-11-27 19:32:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 19:32:47	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-27 19:33:11	roxfan	why?
2014-11-27 19:33:38	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-27 19:35:11	Oxyd	Use the & operator to take address.
2014-11-27 19:35:46	<--	wakd (~wakd@unaffiliated/wakd) has quit (Read error: Connection reset by peer)
2014-11-27 19:36:23	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 255 seconds)
2014-11-27 19:38:43	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-27 19:38:46	-->	saedelaere (~quassel@unaffiliated/saedelaere) has joined ##c++
2014-11-27 19:38:56	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-27 19:39:09	-->	NoCreativity_ (~quassel@177.206.211.233.dynamic.adsl.gvt.net.br) has joined ##c++
2014-11-27 19:39:29	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-27 19:40:03	-->	Dslegends (~Dslegends@blk-222-83-8.eastlink.ca) has joined ##c++
2014-11-27 19:40:24	-->	chinglish (~chinglish@42.49.160.142) has joined ##c++
2014-11-27 19:40:29	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-27 19:40:35	<--	NoCreativity (~quassel@179.177.48.139.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 264 seconds)
2014-11-27 19:41:03	<--	b0lt (r00t@unaffiliated/bolt) has quit (Ping timeout: 240 seconds)
2014-11-27 19:42:36	<--	crapp (~quassel@unaffiliated/saedelaere) has quit (Ping timeout: 256 seconds)
2014-11-27 19:43:15	<--	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Read error: Connection reset by peer)
2014-11-27 19:43:21	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 264 seconds)
2014-11-27 19:44:22	-->	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has joined ##c++
2014-11-27 19:44:30	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-27 19:44:41	<--	chinglish (~chinglish@42.49.160.142) has left ##c++
2014-11-27 19:48:04	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 19:48:44	<--	Extreme (extreme7@unaffiliated/extreme7) has quit (Quit: -)
2014-11-27 19:50:31	-->	Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-11-27 19:50:56	<--	adek (~adek@199.201.64.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 19:51:14	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 19:52:24	<--	NoCreativity_ (~quassel@177.206.211.233.dynamic.adsl.gvt.net.br) has quit (Read error: Connection reset by peer)
2014-11-27 19:52:47	-->	N1cXP8ChUBFe3 (~95E6Y24ak@S01067cb21b32bee4.ed.shawcable.net) has joined ##c++
2014-11-27 19:54:11	<--	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-11-27 19:54:17	-->	b0lt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-27 19:55:04	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-27 19:57:25	-->	jupiterant (~fireant@host-239.180-235-182.cable.dynamic.kbtelecom.net) has joined ##c++
2014-11-27 19:57:25	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 19:58:42	<--	bookmark (IceChat77@65.35.217.85) has left ##c++
2014-11-27 19:59:02	<--	PSvils (~Owner@81.198.225.19) has quit (Quit: Leaving.)
2014-11-27 20:00:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 20:02:29	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 20:02:42	<--	VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-11-27 20:05:59	<--	tuxdev_ (~tim@unaffiliated/tuxdev) has quit (Ping timeout: 240 seconds)
2014-11-27 20:07:54	<--	C0MPAQ (~l0rd@aftr-109-91-37-50.unity-media.net) has quit (Ping timeout: 264 seconds)
2014-11-27 20:09:15	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Remote host closed the connection)
2014-11-27 20:11:25	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 20:11:35	<--	vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-27 20:12:10	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-27 20:12:52	<--	Josef_K (~jeremy@124-168-103-252.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-27 20:14:12	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-11-27 20:14:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 20:14:37	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-27 20:16:36	<--	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Quit: ERR_SHUTDOWN)
2014-11-27 20:17:05	<--	bollullera (~ana@95.63.152.106) has left ##c++
2014-11-27 20:17:24	-->	Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-27 20:18:36	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-wmjfvmaccvdyzpun) has quit (Quit: Connection closed for inactivity)
2014-11-27 20:19:43	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-27 20:19:52	<--	ResidentBisquik (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 265 seconds)
2014-11-27 20:20:25	<--	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-27 20:21:11	<--	b0lt (r00t@unaffiliated/bolt) has quit (Quit: telnet irc.freenode.net 6667)
2014-11-27 20:22:33	-->	y00fie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-27 20:22:35	--	rocketeer is now known as liberal
2014-11-27 20:23:39	-->	lamefun (~lamefun2@5.166.246.128) has joined ##c++
2014-11-27 20:23:59	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Ping timeout: 255 seconds)
2014-11-27 20:27:34	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 20:29:32	<--	envi_un (kvirc@121.169.10.159) has quit (Ping timeout: 258 seconds)
2014-11-27 20:29:39	<--	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has quit (Quit: Leaving)
2014-11-27 20:29:55	-->	bolt (r00t@unaffiliated/bolt) has joined ##c++
2014-11-27 20:30:21	-->	mangekyo (~mangekyo@1.136.159.21) has joined ##c++
2014-11-27 20:30:41	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 20:30:41	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit (Read error: Connection reset by peer)
2014-11-27 20:31:09	-->	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has joined ##c++
2014-11-27 20:31:35	<--	licnep (uid4387@gateway/web/irccloud.com/x-yyozfyjgwgcrehmq) has quit (Quit: Connection closed for inactivity)
2014-11-27 20:33:48	-->	jrolland-ubuntu (~jrolland@CPE-72-131-125-94.wi.res.rr.com) has joined ##c++
2014-11-27 20:33:51	<--	y00fie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Ping timeout: 265 seconds)
2014-11-27 20:35:10	-->	envi_u (kvirc@121.169.10.159) has joined ##c++
2014-11-27 20:37:59	<--	Mannn (~Mannn____@cpe-70-113-106-32.austin.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-27 20:38:24	<--	FabTG_ (~ftg@AAnnecy-651-1-27-167.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-11-27 20:40:15	-->	FabTG_ (~ftg@AAnnecy-651-1-246-61.w86-209.abo.wanadoo.fr) has joined ##c++
2014-11-27 20:42:02	<--	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2014-11-27 20:44:34	<--	d34df00d (~d34df00d@host31-50-231-247.range31-50.btcentralplus.com) has quit (Ping timeout: 272 seconds)
2014-11-27 20:44:41	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-27 20:47:05	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-27 20:47:15	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2014-11-27 20:48:04	-->	deadcode (~deadcode@12.159.249.178) has joined ##c++
2014-11-27 20:50:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 20:50:59	<--	Tenju (~rayston@ip68-106-242-42.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2014-11-27 20:53:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 20:54:47	-->	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has joined ##c++
2014-11-27 20:54:52	<--	zima (zima@173.182.129.48) has quit (Quit: zima)
2014-11-27 20:55:05	<--	Tribeam (~Tribeam@108-199-158-223.lightspeed.nworla.sbcglobal.net) has left ##c++
2014-11-27 20:56:15	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-27 20:56:28	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Client Quit)
2014-11-27 20:57:50	-->	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has joined ##c++
2014-11-27 20:58:40	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-27 21:00:33	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-27 21:01:34	-->	SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-27 21:01:37	-->	suppahasrv (~mopmop@95.238.200.80) has joined ##c++
2014-11-27 21:01:44	-->	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-11-27 21:01:51	-->	italys__ (~adamr@71-34-89-64.ptld.qwest.net) has joined ##c++
2014-11-27 21:02:42	-->	HeTo_ (henkka@2002:5eed:4417:1::24) has joined ##c++
2014-11-27 21:03:00	-->	The_CooIest (~Arthur_Li@109.64.71.201) has joined ##c++
2014-11-27 21:03:00	<--	HeTo (henkka@2002:5eed:4417:1::24) has quit (Read error: Connection reset by peer)
2014-11-27 21:03:31	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Excess Flood)
2014-11-27 21:03:41	<--	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has quit (Excess Flood)
2014-11-27 21:03:55	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-27 21:04:13	-->	cnap_ (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has joined ##c++
2014-11-27 21:04:30	-->	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has joined ##c++
2014-11-27 21:04:42	<--	esas (~esas@unaffiliated/esas) has quit (Ping timeout: 265 seconds)
2014-11-27 21:04:42	<--	The_Coolest (~Arthur_Li@109.64.71.201) has quit (Ping timeout: 265 seconds)
2014-11-27 21:04:42	<--	SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:11	<--	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:11	<--	Internet13 (~chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:11	<--	suppahsrv (~mopmop@95.238.200.80) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:11	<--	italys (~adamr@71-34-89-64.ptld.qwest.net) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:11	<--	Lynxium (~Lonny@bzq-79-183-61-206.red.bezeqint.net) has quit (Ping timeout: 265 seconds)
2014-11-27 21:05:43	-->	Lynxium (~Lonny@bzq-79-183-61-206.red.bezeqint.net) has joined ##c++
2014-11-27 21:06:38	<--	cnap (~quassel@ip-2a02-2149-841a-0600-64a5-7118-1501-f354.ip6.forthnet.gr) has quit (Ping timeout: 265 seconds)
2014-11-27 21:08:10	-->	Internet13 (chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has joined ##c++
2014-11-27 21:08:52	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 255 seconds)
2014-11-27 21:09:06	<--	p|q (~plq@95.14.66.151) has quit (Ping timeout: 256 seconds)
2014-11-27 21:09:06	-->	timj (~timj@p5DDB166C.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 21:10:36	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 21:11:05	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-27 21:13:00	<--	ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 272 seconds)
2014-11-27 21:13:34	-->	gurwinder (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 21:15:05	-->	ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-11-27 21:15:41	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-27 21:16:13	<--	MYNICK (~MYNICK@203.69.196.37) has quit (Quit: Lost terminal)
2014-11-27 21:17:10	<--	gurwinder (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 21:17:35	-->	gurwinder (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 21:17:48	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-27 21:18:03	-->	TheAncientGoat (~quassel@175.136.59.214) has joined ##c++
2014-11-27 21:20:15	<--	BinaryAddicted (~BinaryAdd@194.230.155.227) has quit
2014-11-27 21:21:22	<--	Synchunk (Synchunk@unaffiliated/synchunk) has quit (Ping timeout: 240 seconds)
2014-11-27 21:21:55	<--	gurwinder (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 21:22:05	<--	aat (~alec@58-84-194-42.e-wire.net.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 21:23:03	-->	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 21:23:20	<--	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 21:23:41	-->	KTB (~KTB@cpe-74-79-123-138.twcny.res.rr.com) has joined ##c++
2014-11-27 21:23:42	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 21:24:02	-->	Synchunk (Synchunk@unaffiliated/synchunk) has joined ##c++
2014-11-27 21:27:44	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 21:28:41	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 21:30:02	<--	mimon_ (~mimon@ip114.amb360.cust.comxnet.dk) has quit
2014-11-27 21:31:30	-->	MYNICK (~MYNICK@203.69.196.37) has joined ##c++
2014-11-27 21:34:31	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-27 21:35:04	-->	feuGene (~Gene@99.197.244.200) has joined ##c++
2014-11-27 21:35:07	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-27 21:37:09	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 21:37:32	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2014-11-27 21:37:44	<--	kkh (~duracrisi@unaffiliated/duracrisis) has quit (Read error: Connection reset by peer)
2014-11-27 21:37:55	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 21:38:01	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-27 21:38:21	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-27 21:38:28	-->	kkh (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-11-27 21:38:41	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-27 21:40:33	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 21:41:01	<--	KTB (~KTB@cpe-74-79-123-138.twcny.res.rr.com) has quit (Quit: gtg)
2014-11-27 21:41:44	-->	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-11-27 21:42:26	<--	nilsi (~nilsi@183.101.241.130) has quit (Remote host closed the connection)
2014-11-27 21:42:28	<--	lamefun (~lamefun2@5.166.246.128) has quit (Remote host closed the connection)
2014-11-27 21:42:28	<--	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Max SendQ exceeded)
2014-11-27 21:42:29	feuGene	i want to do `class ScoredStory : public pair<Story,float> { Story& story; float& score; ScoredStory(Story s, float f) :pair<Story,float>(s,f), story(first), score(second) {} };` so that clients of the class can refer to scoredStory.score rather than the ambiguous-looking  scoredStory.second ... but I'm getting a bunch of compiler errors that i can't make sense of ... code @ http://pastebin.com/uNKpE84g , g++ output @ http://pastebin.com/6iAhnYmT ... is it poss
2014-11-27 21:42:48	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-27 21:44:33	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-27 21:44:38	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Remote host closed the connection)
2014-11-27 21:44:47	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-27 21:46:02	-->	joy_ (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 21:46:10	-->	aat (~alec@58-84-194-42.e-wire.net.au) has joined ##c++
2014-11-27 21:47:07	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-27 21:47:18	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-27 21:47:35	<--	leeN (~leeN@g227200184.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-27 21:49:27	--	btrace is now known as myyst
2014-11-27 21:49:39	feuGene	fwiw, on code lines 54 & 55, i don't really want to have "const" ... that was just a failed blind hack
2014-11-27 21:50:17	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-27 21:50:46	-->	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-27 21:50:47	-->	a_le_ (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 21:52:21	<--	Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 244 seconds)
2014-11-27 21:52:33	<--	myyst (~btrace@77.47.6.179.dynamic.cablesurf.de) has quit (Quit: Leaving)
2014-11-27 21:53:01	-->	myyst (~myst@2001:4c50:118:8100:10fb:60e4:1f6e:af88) has joined ##c++
2014-11-27 21:53:05	<--	nilsi (~nilsi@183.101.241.130) has quit (Remote host closed the connection)
2014-11-27 21:53:19	lh_mouse	geordi, -c struct foo : pair<int, int> { foo() : pair<int, int>(1, 2) { } };
2014-11-27 21:53:19	geordi	Success
2014-11-27 21:53:24	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-27 21:53:25	--	myyst is now known as Guest38208
2014-11-27 21:53:57	-->	oleo__ (~oleo@xdsl-78-35-164-209.netcologne.de) has joined ##c++
2014-11-27 21:54:04	<--	Guest38208 (~myst@2001:4c50:118:8100:10fb:60e4:1f6e:af88) has quit (Client Quit)
2014-11-27 21:54:19	--	oleo is now known as Guest38833
2014-11-27 21:54:35	lh_mouse	iirc old g++ versions have a bug that prevents the above code from compiling.
2014-11-27 21:54:37	<--	Guest38833 (~oleo@xdsl-78-35-169-184.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-11-27 21:54:57	<--	SiGe (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-27 21:55:18	lh_mouse	Yea g++ 4.9 refuses to compile it.
2014-11-27 21:55:43	lh_mouse	geordi, -c struct foo : pair<int, int> { using base = pair<int, int>; foo() : base(1, 2) { } }; // feuGene
2014-11-27 21:55:43	geordi	Success
2014-11-27 21:56:15	feuGene	thanks for the response... i was starting to think that it had something to do with my using it as the type contained by a priority queue and the requirement for immutability within that queue ... i'll upgrade my g++ and try again
2014-11-27 21:56:38	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-27 21:56:58	lh_mouse	geordi, << TYPE<typename priority_queue<int>::value_type>
2014-11-27 21:56:59	geordi	int
2014-11-27 21:57:16	lh_mouse	It doesn't seem to be const.
2014-11-27 21:57:32	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-27 21:57:34	feuGene	thanks again... hopefully upgrading g++ does the trick
2014-11-27 21:57:50	CalimeroTeknik	what's the notation for a constant reference to struct person*?
2014-11-27 21:58:35	-->	collincd (~collincd@unaffiliated/collincd) has joined ##c++
2014-11-27 21:59:36	<--	joy_ (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Quit: Page closed)
2014-11-27 22:00:23	-->	rayston (~rayston@ip68-106-242-42.ph.ph.cox.net) has joined ##c++
2014-11-27 22:00:32	CalimeroTeknik	wait, that's probably stupid.
2014-11-27 22:01:15	-->	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 22:01:23	<--	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 22:01:46	<--	K-ballo (~sonoio@181.228.126.42) has quit (Quit: Bye)
2014-11-27 22:01:53	-->	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 22:01:54	lh_mouse	geordi, --make-type constant reference to struct person*
2014-11-27 22:01:54	geordi	struct person*const &
2014-11-27 22:01:59	lh_mouse	CalimeroTeknik, ^
2014-11-27 22:02:11	<--	joy (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 22:02:17	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Ping timeout: 272 seconds)
2014-11-27 22:02:21	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-27 22:02:38	-->	james (75dc923f@gateway/web/freenode/ip.117.220.146.63) has joined ##c++
2014-11-27 22:03:00	<--	james (75dc923f@gateway/web/freenode/ip.117.220.146.63) has quit (Client Quit)
2014-11-27 22:03:07	collincd	wow thats a useful trick
2014-11-27 22:03:29	CalimeroTeknik	ah, thanks
2014-11-27 22:03:46	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 22:04:38	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-27 22:05:13	<--	a_le_ (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-27 22:05:31	--	Dslegends is now known as Dslgends[Away]
2014-11-27 22:07:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 22:08:08	-->	gurwinder_ (~khalsa@117.220.146.63) has joined ##c++
2014-11-27 22:08:32	<--	gurwinder_ (~khalsa@117.220.146.63) has left ##c++
2014-11-27 22:09:52	<--	sohail (~user@cmr-208-124-149-214.cr.net.cable.rogers.com) has quit (Ping timeout: 244 seconds)
2014-11-27 22:10:57	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 22:12:58	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-27 22:13:43	-->	DarkArcher (~darkarche@2601:d:ae00:529:406e:f8e5:3a93:5bcc) has joined ##c++
2014-11-27 22:15:28	<--	[DarkArcher] (~darkarche@2601:d:ae00:529:754f:d3e8:58f:c7e3) has quit (Ping timeout: 258 seconds)
2014-11-27 22:16:14	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 258 seconds)
2014-11-27 22:16:32	<--	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-27 22:16:46	<--	arescorpio (~arescorpi@217-57-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-27 22:18:14	-->	ldionne (~ldionne@QUBCPQ1531W-LP140-03-1178054018.dsl.bell.ca) has joined ##c++
2014-11-27 22:18:14	<--	ldionne (~ldionne@QUBCPQ1531W-LP140-03-1178054018.dsl.bell.ca) has quit (Client Quit)
2014-11-27 22:20:18	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-27 22:20:20	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 22:23:51	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 22:24:24	<--	Backinside (~Thunderbi@37.191.41.161) has quit (Quit: Backinside)
2014-11-27 22:26:04	<--	dagnachew (~dagnachew@bas1-montreal30-1177585851.dsl.bell.ca) has quit (Quit: WeeChat 1.0.1)
2014-11-27 22:26:32	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-27 22:27:10	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-27 22:27:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 22:28:21	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-27 22:29:40	<--	nefarious (~Nef@unaffiliated/nefarious) has quit (Ping timeout: 250 seconds)
2014-11-27 22:33:43	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 22:34:13	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 22:34:49	-->	`Nef (~Nef@host81-129-203-73.range81-129.btcentralplus.com) has joined ##c++
2014-11-27 22:35:02	--	`Nef is now known as Guest41767
2014-11-27 22:35:09	-->	fdd (~fdd@unaffiliated/fdd) has joined ##c++
2014-11-27 22:35:26	<--	TheAncientGoat (~quassel@175.136.59.214) has quit (Remote host closed the connection)
2014-11-27 22:36:11	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-27 22:38:02	-->	bb010g (uid21050@gateway/web/irccloud.com/x-nesihorsrgpjwwkx) has joined ##c++
2014-11-27 22:38:26	frege	what's the best way of batch writing to disk from IPC?
2014-11-27 22:38:29	-->	kapil__ (uid36151@gateway/web/irccloud.com/x-gktyevdpkxgbspnb) has joined ##c++
2014-11-27 22:39:10	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 250 seconds)
2014-11-27 22:40:40	<--	Trondby (Trondby@unaffiliated/trondby) has quit (Ping timeout: 256 seconds)
2014-11-27 22:40:57	graphitemaster	frege, mmap
2014-11-27 22:41:07	graphitemaster	or MapViewOfFile
2014-11-27 22:41:11	graphitemaster	which ever Os you use
2014-11-27 22:41:26	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 245 seconds)
2014-11-27 22:41:38	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-11-27 22:44:56	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 22:46:08	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-27 22:46:34	-->	Josef_K (~jeremy@203.87.3.106) has joined ##c++
2014-11-27 22:46:35	<--	TzilTzal (~yh@203.126.56.18) has quit (Quit: Leaving.)
2014-11-27 22:46:49	-->	TzilTzal (~yh@203.126.56.18) has joined ##c++
2014-11-27 22:48:18	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 22:49:31	frege	graphitemaster: have you worked with rsyslog before?
2014-11-27 22:50:09	frege	I'm having a serious performance issue with rsyslog, I'm using imuxsock
2014-11-27 22:50:17	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-27 22:50:41	-->	koderok (~koderok@223.227.84.8) has joined ##c++
2014-11-27 22:50:41	<--	koderok (~koderok@223.227.84.8) has quit (Client Quit)
2014-11-27 22:50:43	frege	the call to syslog() in c++ code takes about 11usec but if I hit syslog with 10 processes simultaneously it goes up to 100usec per call
2014-11-27 22:51:14	frege	compare to using sendmsg of ipc.h which stays a constant
2014-11-27 22:51:22	frege	why is that happening?
2014-11-27 22:51:27	<--	Garner (uid38417@gateway/web/irccloud.com/x-ntpydklrjvtunxoh) has quit (Quit: Connection closed for inactivity)
2014-11-27 22:51:32	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-27 22:52:07	-->	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has joined ##c++
2014-11-27 22:52:40	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-27 22:52:42	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-27 22:52:57	-->	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-27 22:55:14	<--	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-11-27 22:55:19	-->	Kulrak (kulrak@C-59-101-14-47.hay.connect.net.au) has joined ##c++
2014-11-27 22:55:19	<--	Kulrak (kulrak@C-59-101-14-47.hay.connect.net.au) has quit (Changing host)
2014-11-27 22:55:20	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-27 22:55:25	-->	basic6 (~basic6@p3E9EE119.dip0.t-ipconnect.de) has joined ##c++
2014-11-27 22:55:37	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Max SendQ exceeded)
2014-11-27 22:56:30	<--	immibis (~ChatZill1@222-153-244-45.jetstream.xtra.co.nz) has quit (Ping timeout: 256 seconds)
2014-11-27 22:56:47	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 244 seconds)
2014-11-27 22:57:57	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-27 22:58:54	<--	basic6_ (~basic6@p3E9EEFB5.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-27 22:59:00	-->	agarwalvivek (~agarwalvi@2401:fa00:a:0:c912:1870:a6cc:7152) has joined ##c++
2014-11-27 22:59:40	<--	Kn|t3 (~agarwalvi@2401:fa00:a:0:29e0:aad6:fe2a:c8e2) has quit (Disconnected by services)
2014-11-27 22:59:49	--	agarwalvivek is now known as Kn|t3
2014-11-27 23:00:07	-->	agarwalvivek_ (~agarwalvi@2401:fa00:a:0:c912:1870:a6cc:7152) has joined ##c++
2014-11-27 23:00:11	graphitemaster	maybe syslog blocks
2014-11-27 23:00:26	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 265 seconds)
2014-11-27 23:00:57	graphitemaster	use liblogfaf
2014-11-27 23:01:15	<--	aat (~alec@58-84-194-42.e-wire.net.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-27 23:01:32	frege	graphitemaster: yeah that's my guess that syslog is blocking. does liblogfaf work with rsyslog?
2014-11-27 23:02:26	-->	JacobMason (~jacobmaso@adsl-98-95-89-78.jan.bellsouth.net) has joined ##c++
2014-11-27 23:03:01	<--	JacobMason (~jacobmaso@adsl-98-95-89-78.jan.bellsouth.net) has left ##c++
2014-11-27 23:03:18	frege	"liblogfaf (faf stands for fire-and-forget) is a dynamic library that is designed to be LD_PRELOAD-ed while starting a process that uses openlog() & syslog() functions to send syslog messages. It overrides logging functions to make log messages sent as UDP datagrams instead of getting written to /dev/log (which can block). "
2014-11-27 23:03:24	frege	so yeah syslog() does block
2014-11-27 23:03:38	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-27 23:04:24	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-27 23:04:41	<--	Syzygy (~Syzygy@91-115-173-88.adsl.highway.telekom.at) has quit (Read error: Connection reset by peer)
2014-11-27 23:07:02	--	dts|feasting is now known as dts
2014-11-27 23:07:03	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-27 23:07:40	<--	davidstone (~david@174-29-187-245.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-11-27 23:08:32	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-27 23:08:46	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 23:08:57	-->	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-27 23:09:56	-->	endomancer (~endomance@2001:8003:2e3b:e301:1057:42ff:63aa:8109) has joined ##c++
2014-11-27 23:12:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 23:13:24	-->	hbutcher (~hbutcher@c-24-15-16-105.hsd1.il.comcast.net) has joined ##c++
2014-11-27 23:13:27	<--	Josef_K (~jeremy@203.87.3.106) has quit (Ping timeout: 265 seconds)
2014-11-27 23:14:35	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-27 23:15:52	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 23:15:57	-->	[DarkArcher] (~darkarche@137.63.72.50) has joined ##c++
2014-11-27 23:16:29	dts	ive got this code: https://gist.github.com/DTSCode/4350d08efa47af7339d1 with these errors: http://paste.ubuntu.com/9278186/ i get that its because im comparing two invalid types, but im not sure how to fix it. can anyone help?
2014-11-27 23:17:48	collincd	dts: at first glance it looks like you need to overload the appropriate operators for node
2014-11-27 23:18:10	dts	what operators would those be? ==?
2014-11-27 23:18:26	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-27 23:18:32	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 23:18:57	<--	DarkArcher (~darkarche@2601:d:ae00:529:406e:f8e5:3a93:5bcc) has quit (Ping timeout: 258 seconds)
2014-11-27 23:19:07	kadoban	dts: An iterator is a generalization of a pointer. You're comparing an iterator to a non-iterator. It's essentially like you're comparing   int *    and an int   . If it was that case, what would you do?
2014-11-27 23:19:15	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-27 23:19:21	dts	oh...
2014-11-27 23:19:29	dts	derefernce
2014-11-27 23:19:39	kadoban	Seems likely, yeah.
2014-11-27 23:19:50	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Client Quit)
2014-11-27 23:19:53	dts	ty
2014-11-27 23:20:19	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-27 23:20:35	-->	anao69 (~Android@187.56.133.63) has joined ##c++
2014-11-27 23:21:05	<--	anao69 (~Android@187.56.133.63) has quit (Client Quit)
2014-11-27 23:23:35	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-27 23:25:16	<--	jagob (~jacob@nobelnet.dk) has quit (Remote host closed the connection)
2014-11-27 23:25:20	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 256 seconds)
2014-11-27 23:27:01	<--	regreg (~regreg@77.81.151.155) has quit (Quit: Konversation terminated!)
2014-11-27 23:29:10	-->	immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has joined ##c++
2014-11-27 23:30:14	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-27 23:30:18	-->	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2014-11-27 23:31:38	<--	Rafaelfsilva (~Rafaelfsi@177.184.100.34) has quit (Ping timeout: 264 seconds)
2014-11-27 23:35:00	-->	davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-27 23:35:48	<--	vokimon (~quassel@75.Red-95-120-180.dynamicIP.rima-tde.net) has quit (Ping timeout: 272 seconds)
2014-11-27 23:35:54	-->	vokimon_ (~quassel@75.Red-95-120-180.dynamicIP.rima-tde.net) has joined ##c++
2014-11-27 23:36:35	-->	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-165-230.revip2.asianet.co.th) has joined ##c++
2014-11-27 23:38:52	<--	suppahasrv (~mopmop@95.238.200.80) has quit (Read error: Connection reset by peer)
2014-11-27 23:39:11	-->	suppahsrv (~mopmop@95.238.200.80) has joined ##c++
2014-11-27 23:42:24	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 23:43:25	-->	JacobMason (~jacobmaso@adsl-98-95-89-78.jan.bellsouth.net) has joined ##c++
2014-11-27 23:44:15	-->	DarkArcher (~darkarche@2601:d:ae00:529:406e:f8e5:3a93:5bcc) has joined ##c++
2014-11-27 23:44:17	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 255 seconds)
2014-11-27 23:45:34	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 23:46:01	<--	[DarkArcher] (~darkarche@137.63.72.50) has quit (Ping timeout: 240 seconds)
2014-11-27 23:48:35	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-27 23:48:41	<--	yeticry (~yeticry@60.168.85.103) has quit (Ping timeout: 255 seconds)
2014-11-27 23:49:54	-->	yeticry (~yeticry@60.168.85.103) has joined ##c++
2014-11-27 23:49:58	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-11-27 23:50:30	<--	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-11-27 23:54:05	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-27 23:54:37	<--	Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has quit (Quit: What doesn't kill you makes you stronger.)
2014-11-27 23:57:09	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-27 23:59:52	<--	zacg (~zacg@unaffiliated/zacg) has quit (Ping timeout: 258 seconds)
2014-11-28 00:00:43	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-28 00:01:12	-->	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has joined ##c++
2014-11-28 00:02:37	<--	jzk (~jzk@ec2-54-219-250-249.us-west-1.compute.amazonaws.com) has quit (Quit: brb)
2014-11-28 00:02:39	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-28 00:02:44	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Quit: ???????)
2014-11-28 00:02:55	<--	yeticry (~yeticry@60.168.85.103) has quit (Ping timeout: 240 seconds)
2014-11-28 00:04:12	-->	yeticry (~yeticry@60.168.85.103) has joined ##c++
2014-11-28 00:04:53	<--	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has quit (Quit: Leaving.)
2014-11-28 00:05:08	-->	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2014-11-28 00:05:17	<--	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has quit (Max SendQ exceeded)
2014-11-28 00:07:00	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:07:08	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:07:50	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:07:56	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:08:09	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 264 seconds)
2014-11-28 00:08:15	<--	wakd (~wakd@unaffiliated/wakd) has quit (Quit: Leaving)
2014-11-28 00:08:20	-->	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has joined ##c++
2014-11-28 00:08:49	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:08:56	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:09:08	-->	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-11-28 00:10:57	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:11:04	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:11:24	-->	Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-28 00:12:07	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:12:14	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:12:15	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-11-28 00:13:45	-->	snyp (~Snyp@150.129.132.54) has joined ##c++
2014-11-28 00:13:57	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:14:04	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:14:14	<--	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has quit (Quit: Going offline, see ya! (www.adiirc.com)
2014-11-28 00:15:53	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:15:56	<--	JacobMason (~jacobmaso@adsl-98-95-89-78.jan.bellsouth.net) has quit (Quit: jacobmason.noip.me)
2014-11-28 00:16:00	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:16:40	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 244 seconds)
2014-11-28 00:17:10	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:17:17	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:18:23	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-28 00:18:25	-->	jzk (~jzk@ec2-54-219-250-249.us-west-1.compute.amazonaws.com) has joined ##c++
2014-11-28 00:18:36	-->	TekhnoLife (~Dmitry@85.174.63.230) has joined ##c++
2014-11-28 00:19:02	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:19:09	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:19:22	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-28 00:20:36	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:20:44	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:21:01	<--	nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 255 seconds)
2014-11-28 00:21:19	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-28 00:21:57	-->	davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-28 00:22:50	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:22:57	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:24:20	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:24:27	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:25:25	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:25:32	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:27:15	<--	mangekyo (~mangekyo@1.136.159.21) has quit (Ping timeout: 250 seconds)
2014-11-28 00:27:31	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:27:38	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:27:50	<--	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-28 00:29:06	<--	Kevin-_- (~kevinmelk@24-171-86-219.dhcp.vinc.in.charter.com) has quit (Ping timeout: 264 seconds)
2014-11-28 00:29:11	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:29:18	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:29:40	-->	TheAncientGoat (~quassel@175.143.242.172) has joined ##c++
2014-11-28 00:29:55	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:30:02	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:30:45	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:30:53	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:31:35	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:31:42	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:33:03	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:33:10	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:33:47	-->	ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has joined ##c++
2014-11-28 00:33:54	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:34:02	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:35:08	-->	ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has joined ##c++
2014-11-28 00:35:14	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:35:22	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:35:39	-->	egoldsten (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has joined ##c++
2014-11-28 00:35:57	<--	bladerunner (znc@2001:470:1f11:201::dead:c0de) has quit (Ping timeout: 265 seconds)
2014-11-28 00:36:03	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:36:11	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:36:42	<--	egoldsten (~chatzilla@jem75-2-82-233-234-235.fbx.proxad.net) has left ##c++
2014-11-28 00:37:41	-->	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has joined ##c++
2014-11-28 00:37:49	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:37:56	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:38:58	<--	rayston (~rayston@ip68-106-242-42.ph.ph.cox.net) has quit (Ping timeout: 255 seconds)
2014-11-28 00:39:57	-->	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2014-11-28 00:40:05	<--	Nechradile (~austin@104-52-102-78.lightspeed.rcsntx.sbcglobal.net) has quit (Max SendQ exceeded)
2014-11-28 00:40:12	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-28 00:40:54	<--	hbutcher (~hbutcher@c-24-15-16-105.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2014-11-28 00:41:02	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-28 00:41:21	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:41:28	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:42:08	-->	BlaXpirit (~blaxpirit@236-20-132-95.pool.ukrtel.net) has joined ##c++
2014-11-28 00:42:11	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:42:19	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:42:41	-->	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has joined ##c++
2014-11-28 00:43:08	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-28 00:43:40	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:43:47	-->	BeachedWhale (~Beached@216-26-212-231.dynamic.tbaytel.net) has joined ##c++
2014-11-28 00:43:47	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:43:50	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-28 00:44:39	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 264 seconds)
2014-11-28 00:45:03	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:45:11	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:45:43	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-28 00:45:48	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:45:56	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:46:42	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:46:50	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:47:04	BeachedWhale	I am trying to wrap my head around this.  I have a class that stores callbacks through type erasure(boost::any).  I have two methods that add the to the list one with a c-style function pointer and the other a std::function using variadic template arguments.  Fine, works for std::function and function callbacks as long as the cast on the way out matches.  Lambda's however will try to convert...
2014-11-28 00:47:06	BeachedWhale	...to the function * implicitly when I would like them to be the std::function.  Any way around this?  I can cast it and it works.  These are captureless lambda's
2014-11-28 00:47:09	<--	lllshamanlll (~lllshaman@146.66.164.249) has quit (Remote host closed the connection)
2014-11-28 00:47:44	BeachedWhale	Sorry, not methods, Constructors
2014-11-28 00:48:14	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2014-11-28 00:48:25	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-28 00:48:26	<--	srjek (~srjek@46dhcp63.ece.uic.edu) has quit (Read error: Connection reset by peer)
2014-11-28 00:48:55	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-28 00:49:01	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:49:08	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:49:15	-->	srjek (~srjek@46dhcp63.ece.uic.edu) has joined ##c++
2014-11-28 00:49:58	<--	neunon (znc@unaffiliated/neunon) has quit (Quit: ZNC - http://znc.in)
2014-11-28 00:50:43	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:50:52	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:51:03	-->	neunon (znc@unaffiliated/neunon) has joined ##c++
2014-11-28 00:51:17	<--	snyp (~Snyp@150.129.132.54) has quit (Quit: WeeChat 1.0.1)
2014-11-28 00:51:46	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:51:54	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:52:12	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-28 00:52:27	moonchild	my experience is that std::function makes knowing what is inside of it nearly impossible when you start storing mixes of fuctors, lambdas and real functions
2014-11-28 00:53:12	moonchild	like you really need something analogous dynamic_cast to get the callable out, but that isn't provided
2014-11-28 00:53:32	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:53:34	jeaye	Knowing what's inside shouldn't matter.
2014-11-28 00:53:41	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:53:42	jeaye	If you need to know don't use type erasure.
2014-11-28 00:53:54	jeaye	Use a variant or the exact callable you want.
2014-11-28 00:53:55	moonchild	pretty much
2014-11-28 00:54:09	-->	shintah (bebble@h-154-10.a353.priv.bahnhof.se) has joined ##c++
2014-11-28 00:54:40	_unreal_	what would be better to learn for programming arduino's? c or c++
2014-11-28 00:54:43	moonchild	i ran into a situation last year where i was trying to store functors & real functions in a vector<function>
2014-11-28 00:54:49	--	Mode ##c++ [+o Adrinael] by ChanServ
2014-11-28 00:54:53	BeachedWhale	I would like something that just implicitly did the std::function<a,b,..> ( []( a, b,... ) { } ); conversion
2014-11-28 00:54:58	--	Mode ##c++ [+b *!*@~a:Nechradile] by Adrinael
2014-11-28 00:55:06	@Adrinael	Er
2014-11-28 00:55:08	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:55:14	--	Mode ##c++ [-b *!*@~a:Nechradile] by Adrinael
2014-11-28 00:55:15	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:55:25	 *	moonchild looks at Adrinael funny
2014-11-28 00:55:26	--	Mode ##c++ [+b $a:Nechradile] by Adrinael
2014-11-28 00:55:30	@Adrinael	There we go
2014-11-28 00:55:32	--	Mode ##c++ [-o Adrinael] by Adrinael
2014-11-28 00:55:39	jeaye	cheers
2014-11-28 00:56:08	moonchild	just b/c they were bouncing?
2014-11-28 00:56:13	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-28 00:56:18	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:56:25	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Max SendQ exceeded)
2014-11-28 00:56:58	moonchild	anyway, back to the vector
2014-11-28 00:56:58	-->	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has joined ##c++
2014-11-28 00:56:59	<--	Nechradile (~austin@2602:306:8346:64e0:5dbb:ced4:639b:481d) has quit (Client Quit)
2014-11-28 00:57:03	Adrinael	Oh bugger, it doesn't work
2014-11-28 00:57:17	Stryyker	nope, $a applies to account names and the user isn't identified to an account
2014-11-28 00:57:34	--	Mode ##c++ [+o Adrinael] by ChanServ
2014-11-28 00:57:41	moonchild	... at some point, i needed to identify the stuff i was calling out of the vector
2014-11-28 00:57:44	--	Mode ##c++ [-b $a:Nechradile] by Adrinael
2014-11-28 00:57:52	--	Mode ##c++ [+b Nechradile*!*@*] by Adrinael
2014-11-28 00:57:53	moonchild	and that was next to impossible with function
2014-11-28 00:57:59	--	Mode ##c++ [-o Adrinael] by Adrinael
2014-11-28 00:58:15	<--	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Quit:  Hexchat -  A REAL handcrafted IRC client.)
2014-11-28 00:58:28	Adrinael	moonchild, precisely because of the join/quit spam. I sent a memo to poke me when he's done with that.
2014-11-28 00:58:31	-->	k_sze[work] (~kvirc@unaffiliated/kira) has joined ##c++
2014-11-28 00:58:37	k_sze[work]	Hello.
2014-11-28 00:58:44	 *	moonchild nods
2014-11-28 00:59:05	k_sze[work]	What's wrong with declaring a variable to be of abstract type?
2014-11-28 00:59:27	jeaye	You can't instantiate an object of an abstract type, since it's incomplete.
2014-11-28 00:59:32	Adrinael	Such objects can only exist as subobjects of another object.
2014-11-28 00:59:52	moonchild	*parent/base
2014-11-28 01:01:33	BeachedWhale	moonchild: you where saying about vector<function>
2014-11-28 01:02:21	moonchild	yeah, what i had was a bunch of functors that had other data in them as well
2014-11-28 01:02:32	-->	SiGe__ (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 01:02:35	moonchild	i couldn't have any way of getting at that other data
2014-11-28 01:02:43	<--	neunon (znc@unaffiliated/neunon) has quit (Quit: ZNC - http://znc.in)
2014-11-28 01:02:55	BeachedWhale	I know the arguements that will be passed and return value on the way out.  I am tagging it with either funcptr or stdfunction and then just using a variadic template to pass the arguements to the appropriate cast
2014-11-28 01:03:13	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Ping timeout: 264 seconds)
2014-11-28 01:03:31	k_sze[work]	I forget again, does declaring a non-pointer variable automatically instantiates an object in C++?
2014-11-28 01:03:42	BeachedWhale	yes
2014-11-28 01:03:43	jeaye	Yes.
2014-11-28 01:03:44	-->	neunon (znc@unaffiliated/neunon) has joined ##c++
2014-11-28 01:03:49	jeaye	Unless it's extern.
2014-11-28 01:04:17	moonchild	or reference or constexpr or somehow elided
2014-11-28 01:04:27	jeaye	Or within a class/struct definition.
2014-11-28 01:04:31	<--	Atque (~Atque@unaffiliated/atque) has quit (Quit: ...)
2014-11-28 01:04:38	jeaye	Otherwise, yes.
2014-11-28 01:04:56	BeachedWhale	moonchild: My issue is the signature is capturing too much on the constructor.  With lambda's not having a named type I need to to convert to a std::function.  I guess manual or a free function but I was hoping to have some magic
2014-11-28 01:04:59	moonchild	doesn't "struct S { } mystruct" auto-instantiate?
2014-11-28 01:05:22	BeachedWhale	moonchild: the lambda's are matching the function pointer better than the std::function
2014-11-28 01:05:40	moonchild	that's annoying
2014-11-28 01:05:41	jeaye	moonchild: The declaration of any members inside that struct will not be definitions.
2014-11-28 01:06:16	<--	Unscrupulous (~unscrupt@2607:fb90:2c1b:c43b:0:c:97bd:4e01) has quit (Ping timeout: 265 seconds)
2014-11-28 01:06:19	jeaye	BeachedWhale: Use a trait to rule out the lambdas?
2014-11-28 01:06:28	jeaye	Allowing only actual function pointers in.
2014-11-28 01:07:21	BeachedWhale	I tried the other way with enable_if is_function but lambda implicitly convert to function pointers, catureless ones I mean
2014-11-28 01:07:26	-->	snyp (~Snyp@150.129.132.54) has joined ##c++
2014-11-28 01:08:22	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 264 seconds)
2014-11-28 01:09:55	<--	pnbeast (~pnbeast@70.15.185.27.res-cmts.pnt.ptd.net) has quit (Ping timeout: 256 seconds)
2014-11-28 01:10:05	-->	pnbeast (~pnbeast@70.15.185.27.res-cmts.pnt.ptd.net) has joined ##c++
2014-11-28 01:10:47	moonchild	hmm
2014-11-28 01:11:12	jeaye	{ foo([]{ cout << "bad"; }); } template <typename T> enable_if_t<is_function<remove_pointer_t<T>>::value> foo(T f){ f(); } void bar(){ cout << "good"; }
2014-11-28 01:11:13	geordi	error: no matching function for call to 'foo(main(int, char**)::<lambda()>)'
2014-11-28 01:11:21	moonchild	can you wrap the lambdas in a type?
2014-11-28 01:11:22	jeaye	{ foo(&bar); } template <typename T> enable_if_t<is_function<remove_pointer_t<T>>::value> foo(T f){ f(); } void bar(){ cout << "good"; }
2014-11-28 01:11:23	geordi	good
2014-11-28 01:11:31	jeaye	BeachedWhale: That works just fine ^
2014-11-28 01:11:54	<--	goolia (~goolia@192.210.214.197) has quit (Remote host closed the connection)
2014-11-28 01:12:17	-->	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-11-28 01:12:38	<--	collincd (~collincd@unaffiliated/collincd) has quit (Ping timeout: 250 seconds)
2014-11-28 01:14:02	<--	pnbeast (~pnbeast@70.15.185.27.res-cmts.pnt.ptd.net) has quit (Client Quit)
2014-11-28 01:14:44	-->	himikov (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has joined ##c++
2014-11-28 01:14:49	-->	lampinen (~lampinen@192.210.214.197) has joined ##c++
2014-11-28 01:15:09	<--	CobaltHex (CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-11-28 01:16:33	moonchild	{ char32_t x = 'a'; }
2014-11-28 01:16:34	geordi	warning: unused variable 'x'
2014-11-28 01:16:55	moonchild	{ char32_t x = 'a'; cout << (int)x; }
2014-11-28 01:16:55	geordi	97
2014-11-28 01:17:24	moonchild	should that conversion be allowed?
2014-11-28 01:17:31	<--	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has quit (Ping timeout: 272 seconds)
2014-11-28 01:17:42	<--	ftsf (~ftsf@2407:7800:400:107f:3db5:daca:8457:e66a) has quit (Remote host closed the connection)
2014-11-28 01:18:00	jeaye	char -> char32_t or char32_t -> int?
2014-11-28 01:18:05	<--	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-28 01:18:11	moonchild	char->char32_t
2014-11-28 01:18:25	jeaye	integer promotion!
2014-11-28 01:18:27	BeachedWhale	char is smaller
2014-11-28 01:18:41	 *	moonchild nods
2014-11-28 01:18:48	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-28 01:18:57	moonchild	I'm just surprised that it doesn't kick out an error
2014-11-28 01:19:12	BeachedWhale	turn up errors, I think clang -Weverything might
2014-11-28 01:19:16	<--	SiGe__ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-28 01:19:24	<--	oleo__ (~oleo@xdsl-78-35-164-209.netcologne.de) has quit (Quit: Verlassend)
2014-11-28 01:19:28	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-28 01:19:31	moonchild	{ cout << f('a'); } int f(char32_t c) { return c; }
2014-11-28 01:19:31	geordi	97
2014-11-28 01:19:36	jeaye	{ char32_t x{ 'a' }; (void)x; }
2014-11-28 01:19:37	geordi	<no output>
2014-11-28 01:19:59	jeaye	If {} doesn't warn, nowhere else is likely to.
2014-11-28 01:20:13	moonchild	{ cout << f('a'); } int f(char c) { return c + 1; } int f(char32_t c) { return c; }
2014-11-28 01:20:13	geordi	98
2014-11-28 01:20:59	<--	snyp (~Snyp@150.129.132.54) has quit (Quit: WeeChat 1.0.1)
2014-11-28 01:21:01	-->	Unscrupulous (~unscrupt@2607:fb90:2c1b:c43b:0:c:97bd:4e01) has joined ##c++
2014-11-28 01:21:06	moonchild	that overload is kinda the evil
2014-11-28 01:23:25	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-11-28 01:26:18	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-28 01:26:20	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-28 01:26:38	<--	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-28 01:28:22	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-28 01:28:41	-->	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has joined ##c++
2014-11-28 01:29:22	BeachedWhale	it does not warn
2014-11-28 01:29:28	<--	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-11-28 01:29:37	BeachedWhale	even on an explicit constructor
2014-11-28 01:31:22	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-28 01:32:50	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 255 seconds)
2014-11-28 01:32:55	BeachedWhale	jeaye: funny I get multiple definitions.
2014-11-28 01:33:58	jeaye	huh?
2014-11-28 01:34:55	-->	kyoshero (~kyoshero@112.198.90.143) has joined ##c++
2014-11-28 01:35:20	<--	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-28 01:36:41	BeachedWhale	tried using is_function
2014-11-28 01:37:07	jeaye	!testcase
2014-11-28 01:37:08	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-28 01:37:21	jeaye	I gave you a snippet which worked perfectly.
2014-11-28 01:39:47	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 01:39:47	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 01:41:26	-->	PSvils (~Owner@81.198.225.19) has joined ##c++
2014-11-28 01:41:43	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2014-11-28 01:41:51	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-28 01:42:51	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-28 01:43:11	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 01:45:01	-->	ircnick123 (~eman@89.204.153.1) has joined ##c++
2014-11-28 01:46:12	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-28 01:49:27	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 01:50:24	<--	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Quit: ChatZilla 0.9.91-rdmsoft [XULRunner 32.0.3/20140923175406])
2014-11-28 01:51:39	-->	Kulrak (kulrak@C-59-101-147-28.mel.connect.net.au) has joined ##c++
2014-11-28 01:51:40	<--	Kulrak (kulrak@C-59-101-147-28.mel.connect.net.au) has quit (Changing host)
2014-11-28 01:51:40	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-28 01:52:37	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 01:53:39	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-28 01:53:51	-->	Kostenko (~Kostenko@bl13-134-12.dsl.telepac.pt) has joined ##c++
2014-11-28 01:54:26	BZEU	hey I made a app that sends keystrokes. It works good when I open notepad for example but when I open up a client for something, it wont work. What can the problem be?
2014-11-28 01:54:32	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-28 01:56:38	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 01:56:50	<--	Kostenko_ (~Kostenko@bl13-151-239.dsl.telepac.pt) has quit (Ping timeout: 256 seconds)
2014-11-28 01:57:12	moonchild	is there any way to force a a function with a templated variadic arg list to take all args to be the same type?
2014-11-28 01:57:55	<--	ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has quit (Quit: ARCADIVS)
2014-11-28 01:58:17	cbreak	moonchild: no easy way
2014-11-28 01:58:29	moonchild	didn't think so *sigh*
2014-11-28 01:58:31	cbreak	you could use enable_if
2014-11-28 01:58:37	cbreak	moonchild: why not do it properly?
2014-11-28 01:59:06	moonchild	with a container of values or initializer list?
2014-11-28 01:59:18	BeachedWhale	I have a tempalte for that
2014-11-28 01:59:19	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-28 01:59:53	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 02:01:34	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 255 seconds)
2014-11-28 02:01:47	-->	Unscrup82 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has joined ##c++
2014-11-28 02:01:51	<--	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-28 02:01:53	-->	Errorical (~Errorical@213.128.190.150) has joined ##c++
2014-11-28 02:02:16	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-28 02:02:20	cbreak	moonchild: initializer list I'd say
2014-11-28 02:02:42	-->	re1 (~reiser@110.77.234.204) has joined ##c++
2014-11-28 02:02:53	BeachedWhale	moonchild: http://ideone.com/0WBT3j
2014-11-28 02:02:56	moonchild	not if you're trying to pass a list of class-hierarchy objects
2014-11-28 02:02:57	cbreak	that'll work for sizes that aren't known at compile time too
2014-11-28 02:03:10	cbreak	moonchild: it'll work for anything that's copyable
2014-11-28 02:03:39	 *	moonchild nods
2014-11-28 02:04:03	moonchild	working through some interface design stuff, not sure what i'm trying to do yet :)
2014-11-28 02:04:09	<--	Unscrupulous (~unscrupt@2607:fb90:2c1b:c43b:0:c:97bd:4e01) has quit (Ping timeout: 258 seconds)
2014-11-28 02:05:52	BeachedWhale	oh I see, sorry.  that just tests if they are.
2014-11-28 02:06:19	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-28 02:07:02	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-28 02:08:09	-->	kushal3 (~kushal3@80.176.207.74.srtnet.com) has joined ##c++
2014-11-28 02:10:33	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 02:10:36	-->	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-11-28 02:11:32	<--	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has quit (Ping timeout: 255 seconds)
2014-11-28 02:12:20	<--	jupiterant (~fireant@host-239.180-235-182.cable.dynamic.kbtelecom.net) has quit
2014-11-28 02:12:27	-->	Josef_K (~jeremy@203.87.3.106) has joined ##c++
2014-11-28 02:13:42	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 02:13:55	-->	timj1 (~timj@p5DDB28AA.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 02:14:49	<--	kurahaupo (~kurahaupo@118.148.185.186) has quit (Ping timeout: 264 seconds)
2014-11-28 02:15:09	-->	komarov (~komarov@46.227.191.145) has joined ##c++
2014-11-28 02:16:00	<--	kushal3 (~kushal3@80.176.207.74.srtnet.com) has quit (Ping timeout: 240 seconds)
2014-11-28 02:16:19	-->	Gvidon (~gvidon@unaffiliated/gvidon) has joined ##c++
2014-11-28 02:16:28	-->	Garner (uid38417@gateway/web/irccloud.com/x-kjcskwlbpfhnxqbq) has joined ##c++
2014-11-28 02:16:30	-->	kushal3 (~kushal3@80.176.207.74.srtnet.com) has joined ##c++
2014-11-28 02:16:39	<--	BlaXpirit (~blaxpirit@236-20-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-28 02:16:55	<--	timj (~timj@p5DDB166C.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-28 02:16:57	-->	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has joined ##c++
2014-11-28 02:17:06	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2014-11-28 02:17:21	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-28 02:17:25	pi-	Can anyone help me understand the comment on this line: https://gist.github.com/p-i-/b6f822bb30ff9027a8e3#file-gistfile1-cpp-L623 ? "TMM: added this Proxy ctor for use with STL algorithms"
2014-11-28 02:17:41	pi-	(sorry in advance for the code, it is a mess)
2014-11-28 02:17:49	<--	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-165-230.revip2.asianet.co.th) has quit (Ping timeout: 264 seconds)
2014-11-28 02:18:50	-->	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has joined ##c++
2014-11-28 02:19:13	--	Anoniem4l is now known as Anoniem4l`afk
2014-11-28 02:19:40	pi-	This must relate to the 'using size_type=..., value_type=..., reference = Proxy, pointer = Proxy*, ...; on line 695.
2014-11-28 02:19:46	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 02:19:47	moonchild	maybe if overly long lines were displayed by github correctly
2014-11-28 02:20:03	moonchild	or the wanker that wrote it didn't use long lines
2014-11-28 02:20:50	pi-	meh that is a paste fail
2014-11-28 02:20:52	<--	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-11-28 02:21:35	<--	introom (~introom@unaffiliated/introom) has quit (Ping timeout: 240 seconds)
2014-11-28 02:22:22	-->	kez (~quassel@inet2.evalesco.com) has joined ##c++
2014-11-28 02:22:30	-->	introom (~introom@unaffiliated/introom) has joined ##c++
2014-11-28 02:22:48	pi-	I'm perfectly happy with using wide lines for code in general though. Dealing with large files it helps to present a lot of information per screen, as it means I have to remember less (because I can see more).
2014-11-28 02:23:24	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-28 02:23:55	-->	saint-ron (~rons@23.229.100.175) has joined ##c++
2014-11-28 02:24:00	<--	Guest41767 (~Nef@host81-129-203-73.range81-129.btcentralplus.com) has left ##c++
2014-11-28 02:24:17	-->	nefarious (~Nef@unaffiliated/nefarious) has joined ##c++
2014-11-28 02:24:22	<--	BeachedWhale (~Beached@216-26-212-231.dynamic.tbaytel.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1.1/20141113143407])
2014-11-28 02:24:23	<--	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has quit (Ping timeout: 265 seconds)
2014-11-28 02:24:38	<--	N1cXP8ChUBFe3 (~95E6Y24ak@S01067cb21b32bee4.ed.shawcable.net) has quit (Quit: Leaving)
2014-11-28 02:24:48	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-28 02:25:01	moonchild	i prefer to keep lines in my code < 80 columns, but any consistent limit to me is acceptable
2014-11-28 02:25:34	moonchild	...as long as it can fit resonably into a fraction of my monitor width
2014-11-28 02:25:39	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 240 seconds)
2014-11-28 02:26:04	moonchild	anyway....
2014-11-28 02:27:12	moonchild	the comment, i believe is that stl containers require a copy (or move) ctor for their elements, i believe the comment just says 'this needs to be there for stashing a Proxy inside an stl container'
2014-11-28 02:27:58	<--	feuGene (~Gene@99.197.244.200) has left ##c++
2014-11-28 02:27:58	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-28 02:28:25	<--	newbie07 (~Areks@rs.gridnine.com) has quit (Read error: Connection reset by peer)
2014-11-28 02:28:47	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2014-11-28 02:29:11	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-28 02:29:33	pi-	So I need to provide a certain minimum of machinery in order to kit out this class as a stdlib container... Where is a good resource to learn what I need to provide?
2014-11-28 02:29:44	-->	jagob (~jacob@h145.natout.aau.dk) has joined ##c++
2014-11-28 02:30:08	moonchild	you actually don't need much
2014-11-28 02:30:13	-->	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has joined ##c++
2014-11-28 02:30:23	<--	TheAncientGoat (~quassel@175.143.242.172) has quit (Ping timeout: 255 seconds)
2014-11-28 02:30:40	moonchild	really just an iterator that inherits from std::iterator and probably some typedefs
2014-11-28 02:30:50	moonchild	e.g. value_type, etc
2014-11-28 02:31:11	pi-	Right, I've got those: https://gist.github.com/p-i-/b6f822bb30ff9027a8e3#file-gistfile1-cpp-L695-L700
2014-11-28 02:31:27	pi-	And an iterator + const_iterator
2014-11-28 02:31:59	 *	moonchild shrugs
2014-11-28 02:32:14	moonchild	i'm not going to try to understand what that code is doing
2014-11-28 02:34:11	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-28 02:35:36	-->	HerzogDeXtEr (~flex@i59F6AF96.versanet.de) has joined ##c++
2014-11-28 02:37:05	pi-	moonchild: yer nvm about that, you answered my question so thanks!
2014-11-28 02:37:56	pi-	(the code is actually bending C++ syntax to encapsulate a Python List primitive, so within C++ you can do 'myList[5].someproperty = foo;' the same as you would in Python, and it manipulates the underlying Python object accordingly.)
2014-11-28 02:38:00	-->	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-28 02:38:18	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-28 02:38:48	moonchild	pi-: for a good example of how to 'fake' an iterator: https://github.com/jschmerge/xos/blob/master/src/filesystem/directory_iterator.h
2014-11-28 02:39:20	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 265 seconds)
2014-11-28 02:40:04	-->	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-28 02:40:21	 *	pi- digging through Stroustrup for section on containers/iterators
2014-11-28 02:40:58	-->	newbie (~Areks@rs.gridnine.com) has joined ##c++
2014-11-28 02:41:22	--	newbie is now known as Guest65413
2014-11-28 02:42:18	<--	endomancer (~endomance@2001:8003:2e3b:e301:1057:42ff:63aa:8109) has quit (Quit: endomancer)
2014-11-28 02:42:40	-->	logann2019 (~logann201@47.61.242.241) has joined ##c++
2014-11-28 02:43:00	-->	endomancer (~endomance@2001:8003:2e3b:e301:bc60:e79e:8bce:a35f) has joined ##c++
2014-11-28 02:45:15	-->	Lowl3v3l (~Lowl3v3l@95.91.248.179) has joined ##c++
2014-11-28 02:46:34	-->	joy (caa43575@gateway/web/freenode/ip.202.164.53.117) has joined ##c++
2014-11-28 02:47:32	-->	avvs (~avvs@gateway/tor-sasl/avvs) has joined ##c++
2014-11-28 02:47:49	<--	joy (caa43575@gateway/web/freenode/ip.202.164.53.117) has quit (Client Quit)
2014-11-28 02:50:03	pi-	Found it, "The details of the element requirements are scattered over the standard and quite hard to read (?iso.23.2.3, ?iso.23.2.1, ?iso.17.6.3.2), but basically a container can hold elements of a type that has conventional copy or move operations."
2014-11-28 02:50:15	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-28 02:51:21	moonchild	kind of what i said :)
2014-11-28 02:51:28	pi-	yup :)
2014-11-28 02:52:00	moonchild	there's some other requirements placed on things that you put in associative containers too
2014-11-28 02:52:29	moonchild	i.e. set<T> needs std::less<T> to work
2014-11-28 02:52:57	moonchild	and the unordered ones require std::hash and operator ==
2014-11-28 02:53:24	<--	m477_ (~quassel@adsi202.neoplus.adsl.tpnet.pl) has quit (Remote host closed the connection)
2014-11-28 02:54:20	-->	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-11-28 02:54:24	pi-	This is reminding me a little of group theory: "(G,~) is a group iff (1) identity element exists, (2) a~b ~ c == a ~ b~c etc, ...
2014-11-28 02:54:28	-->	pappa (~pappa@77.119.133.112.wireless.dyn.drei.com) has joined ##c++
2014-11-28 02:54:29	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-28 02:54:42	-->	rendar (~I@host182-179-dynamic.10-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 02:54:46	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-28 02:55:03	moonchild	yeah, there's a bit of closure algebra going on with the STL in general
2014-11-28 02:56:06	-->	blut (~blut@ersc147.goemobile.de) has joined ##c++
2014-11-28 02:56:09	-->	zwer_b (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-28 02:57:17	<--	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-28 02:57:29	<--	Unscrup82 (~unscrupt@c-50-137-43-11.hsd1.or.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-28 02:57:30	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2014-11-28 03:00:23	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 03:00:39	-->	seishun (~Kakera@46.109.232.46) has joined ##c++
2014-11-28 03:03:21	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 03:03:32	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 03:03:50	-->	V-ille (~ville@59ec6584.symbio.com) has joined ##c++
2014-11-28 03:04:11	<--	pfo_ (~pfo@tworkow.imba.oeaw.ac.at) has quit (Ping timeout: 244 seconds)
2014-11-28 03:05:22	<--	endomancer (~endomance@2001:8003:2e3b:e301:bc60:e79e:8bce:a35f) has quit (Ping timeout: 265 seconds)
2014-11-28 03:05:57	-->	pzsh (~pzsh@dhcp-94-210.wlan1.uni-oldenburg.de) has joined ##c++
2014-11-28 03:06:24	-->	Sceorem (~Sceorem@ks3370847.kimsufi.com) has joined ##c++
2014-11-28 03:07:20	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-28 03:07:38	<--	pzsh (~pzsh@dhcp-94-210.wlan1.uni-oldenburg.de) has quit (Remote host closed the connection)
2014-11-28 03:07:43	-->	hypebeas1 (pi@g231038035.adsl.alicedsl.de) has joined ##c++
2014-11-28 03:09:09	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-28 03:09:17	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 03:09:43	<--	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has quit (Quit: Leaving)
2014-11-28 03:09:44	-->	swatti (~mail@business-89-132-60-56.business.broadband.hu) has joined ##c++
2014-11-28 03:09:50	<--	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-28 03:10:29	-->	toogy (~toogy@2001:41d0:8:796e::1) has joined ##c++
2014-11-28 03:11:15	<--	hypebeast (pi@g231047172.adsl.alicedsl.de) has quit (Ping timeout: 272 seconds)
2014-11-28 03:11:23	toogy	tricky: how would you write a less than 64 characters program that throws a more than 100 000 characters long error message at compile time?
2014-11-28 03:11:37	<--	lampinen (~lampinen@192.210.214.197) has quit (Remote host closed the connection)
2014-11-28 03:11:37	-->	pzsh (~pzsh@dhcp-94-210.wlan1.uni-oldenburg.de) has joined ##c++
2014-11-28 03:11:44	-->	pfo_ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-28 03:11:44	<--	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-11-28 03:12:24	TinoDidriksen	You'd have to target a very specific compiler and flags.
2014-11-28 03:13:04	-->	tdc (~tdc@195.Red-95-127-91.staticIP.rima-tde.net) has joined ##c++
2014-11-28 03:13:17	-->	proteusguy (~proteusgu@49.230.146.26) has joined ##c++
2014-11-28 03:13:40	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-28 03:13:46	<--	Jinxit (~Jinxit@c83-191-74-158.cust.tele2.se) has quit (Ping timeout: 272 seconds)
2014-11-28 03:14:31	-->	pangan (~pangan@192.210.214.197) has joined ##c++
2014-11-28 03:14:53	lh_mouse	toogy, #include __FILE__
2014-11-28 03:16:28	<--	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-28 03:16:52	-->	[DarkArcher] (~darkarche@137.63.72.50) has joined ##c++
2014-11-28 03:17:00	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-28 03:17:40	<--	pzsh (~pzsh@dhcp-94-210.wlan1.uni-oldenburg.de) has quit
2014-11-28 03:17:52	-->	endomancer (~endomance@2001:8003:2c16:b301:bc60:e79e:8bce:a35f) has joined ##c++
2014-11-28 03:17:54	jeaye	lh_mouse: 6656
2014-11-28 03:18:06	jeaye	Far off from 100K
2014-11-28 03:18:33	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-28 03:19:57	<--	proteusguy (~proteusgu@49.230.146.26) has quit (Quit: Leaving)
2014-11-28 03:20:12	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-28 03:20:15	<--	DarkArcher (~darkarche@2601:d:ae00:529:406e:f8e5:3a93:5bcc) has quit (Ping timeout: 258 seconds)
2014-11-28 03:20:21	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 03:21:29	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 255 seconds)
2014-11-28 03:22:28	<--	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has quit
2014-11-28 03:22:30	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2014-11-28 03:22:37	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-11-28 03:23:17	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-28 03:23:42	moonchild	there's a contest to see who can come up with the craziest
2014-11-28 03:24:05	dts	craziest what?
2014-11-28 03:24:28	jeaye	child
2014-11-28 03:24:36	jeaye	start young
2014-11-28 03:24:58	moonchild	longest error message
2014-11-28 03:25:08	dts	oh thats easy
2014-11-28 03:25:13	<--	[DarkArcher] (~darkarche@137.63.72.50) has quit (Quit: Leaving)
2014-11-28 03:25:13	jeaye	Using only 64 chars of C++
2014-11-28 03:25:19	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-28 03:25:21	dts	hmm
2014-11-28 03:25:34	jeaye	moonchild: Single error message?
2014-11-28 03:25:36	jeaye	Or total?
2014-11-28 03:25:57	moonchild	dunno the specifics
2014-11-28 03:26:06	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-11-28 03:26:07	dts	if total, i think i can do it in 64 chars
2014-11-28 03:26:26	moonchild	http://tgceec.tumblr.com/
2014-11-28 03:26:53	dts	i once got like three pages of errors because of forgetting one typename
2014-11-28 03:27:02	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-11-28 03:27:08	-->	Alina-malina (~Alina-mal@37.157.216.155) has joined ##c++
2014-11-28 03:27:08	<--	Alina-malina (~Alina-mal@37.157.216.155) has quit (Changing host)
2014-11-28 03:27:08	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-28 03:27:19	jeaye	Have fun writing templates in 64 chars.
2014-11-28 03:27:25	dts	idk how long the program was
2014-11-28 03:27:44	dts	jeaye, no templates. i didnt mean to say typename
2014-11-28 03:27:56	jeaye	o.O
2014-11-28 03:28:10	jeaye	No templates.
2014-11-28 03:28:15	jeaye	I didn't mean to say anything.
2014-11-28 03:28:30	dts	i meant in the program i was writing
2014-11-28 03:28:36	dts	it was like bool some_value;
2014-11-28 03:28:40	-->	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-11-28 03:29:28	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-28 03:30:12	moonchild	geordi: struct x struct z<x(x(x(x(x(x(x(x(x(x(x(x(x(x(x(x(x(y,x(y><y*,x(y*w>v<y*,w,x{}
2014-11-28 03:30:12	geordi	error: Unexpected end of request. Expected ')' or balanced code.
2014-11-28 03:30:33	dts	wtf did i just see
2014-11-28 03:31:58	dts	geordi: static 42;
2014-11-28 03:31:59	geordi	error: expected unqualified-id before numeric constant
2014-11-28 03:32:06	dts	geordi: static 42[];
2014-11-28 03:32:06	geordi	Same error.
2014-11-28 03:32:11	dts	geordi: static []42;
2014-11-28 03:32:11	geordi	error: expected unqualified-id before '[' token
2014-11-28 03:32:15	dts	geordi: static []()42;
2014-11-28 03:32:15	geordi	Same error.
2014-11-28 03:32:20	jeaye	!give dts geordi
2014-11-28 03:32:22	nolyc	dts: geordi is a bot (http://eel.is/geordi/) that compiles and executes c++ code. Snippets not related to the ongoing discussion are to be tested in #geordi (or /msg geordi <code>) NOT in ##c++.
2014-11-28 03:32:35	dts	this is for the longest error thing
2014-11-28 03:32:41	dts	but sorry ill stop
2014-11-28 03:33:02	ville	that'll work well since geordi rapes the error messages...
2014-11-28 03:33:34	dts	im aware
2014-11-28 03:34:38	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 256 seconds)
2014-11-28 03:34:50	moonchild	i wonder if you could use integer_sequence to  really blow it up
2014-11-28 03:35:19	moonchild	i think i've done some craziness with recursive constexpr too
2014-11-28 03:36:49	-->	Rafaelfsilva (~Rafaelfsi@177.184.124.138) has joined ##c++
2014-11-28 03:37:20	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Remote host closed the connection)
2014-11-28 03:38:54	-->	Yepoleb_ (~quassel@178-190-225-27.adsl.highway.telekom.at) has joined ##c++
2014-11-28 03:38:54	--	Yepoleb is now known as Guest94764
2014-11-28 03:38:54	<--	Guest94764 (~quassel@194-166-6-196.adsl.highway.telekom.at) has quit (Killed (weber.freenode.net (Nickname regained by services)))
2014-11-28 03:38:54	--	Yepoleb_ is now known as Yepoleb
2014-11-28 03:40:40	zap0	geordi --version
2014-11-28 03:40:40	geordi	g++ (GCC) 5.0.0 20141119 (experimental)
2014-11-28 03:40:41	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 03:41:34	zap0	it's `5 0`  that's cwazy!!
2014-11-28 03:43:06	<--	komarov (~komarov@46.227.191.145) has quit (Read error: Connection reset by peer)
2014-11-28 03:43:53	-->	komarov (~komarov@46.227.191.132) has joined ##c++
2014-11-28 03:44:00	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 255 seconds)
2014-11-28 03:46:25	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: rthrthrth)
2014-11-28 03:46:57	lh_mouse	geordi, template<typename> struct foo { static_assert(noexcept(((foo *)1)->~foo()), ""); }; template class foo<int>;
2014-11-28 03:46:59	geordi	internal compiler error: Segmentation fault
2014-11-28 03:47:29	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-28 03:48:15	<--	sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-28 03:48:52	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-28 03:48:57	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Read error: Connection reset by peer)
2014-11-28 03:50:39	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-28 03:52:04	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Read error: Connection reset by peer)
2014-11-28 03:53:07	-->	ravior (~ravior@89.121.200.106) has joined ##c++
2014-11-28 03:53:08	-->	ravior_ (~ravior@89.121.200.106) has joined ##c++
2014-11-28 03:53:12	<--	PSvils (~Owner@81.198.225.19) has quit (Quit: Leaving.)
2014-11-28 03:53:17	<--	ravior (~ravior@89.121.200.106) has quit (Read error: Connection reset by peer)
2014-11-28 03:53:39	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-28 03:53:42	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-28 03:54:41	-->	C0MPAQ (~l0rd@aftr-109-91-32-166.unity-media.net) has joined ##c++
2014-11-28 03:55:32	-->	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has joined ##c++
2014-11-28 03:55:42	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Remote host closed the connection)
2014-11-28 03:56:48	V-ille	clang: template<typename> struct foo { static_assert(noexcept(((foo *)1)->~foo()), ""); }; template class foo<int>;
2014-11-28 03:56:50	clang	error: member access into incomplete type 'foo<int>'
2014-11-28 03:57:04	-->	Kulrak (kulrak@C-59-101-14-213.hay.connect.net.au) has joined ##c++
2014-11-28 03:57:04	<--	Kulrak (kulrak@C-59-101-14-213.hay.connect.net.au) has quit (Changing host)
2014-11-28 03:57:04	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-28 03:58:04	-->	rriemann_ (~rriemann@110.26.90.92.rev.sfr.net) has joined ##c++
2014-11-28 03:58:05	-->	condy (~condy@unaffiliated/condy) has joined ##c++
2014-11-28 03:58:41	-->	sinanislekdemir (~sinanisle@212.57.9.204) has joined ##c++
2014-11-28 04:00:55	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-28 04:01:46	<--	re1 (~reiser@110.77.234.204) has quit (Quit: Leaving)
2014-11-28 04:01:46	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Read error: Connection reset by peer)
2014-11-28 04:02:24	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2014-11-28 04:02:51	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-28 04:02:52	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-28 04:03:45	-->	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has joined ##c++
2014-11-28 04:04:10	-->	Bigpet4 (~bigpet@i5E86A45E.versanet.de) has joined ##c++
2014-11-28 04:04:20	<--	Rafaelfsilva (~Rafaelfsi@177.184.124.138) has quit (Ping timeout: 240 seconds)
2014-11-28 04:04:22	-->	p|q (~plq@95.14.103.137) has joined ##c++
2014-11-28 04:04:37	V-ille	lh_mouse: did you plan to report that?
2014-11-28 04:05:19	-->	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has joined ##c++
2014-11-28 04:05:29	V-ille	Gvidon: regarding the operator<< bug we discussed, a variant of it has already been reported ages ago, see http://llvm.org/bugs/show_bug.cgi?id=13869
2014-11-28 04:05:48	V-ille	Gvidon: I decided to add the operator<< example to that one, since it's the same thing
2014-11-28 04:06:03	Gvidon	V-ille: Ok, thanks
2014-11-28 04:06:22	-->	night-owl (nightowl@2604:180::b0a8:78a4) has joined ##c++
2014-11-28 04:06:28	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Read error: Connection reset by peer)
2014-11-28 04:07:16	<--	Josef_K (~jeremy@203.87.3.106) has quit (Ping timeout: 255 seconds)
2014-11-28 04:07:49	V-ille	I also tried to add a cc: for a guy who's likely to fix the bug
2014-11-28 04:08:19	night-owl	Is there a better cpp JSON library than jsoncpp? I don't have a problem with it.  I'm just wondering if there are more preferred libs out at this point.
2014-11-28 04:08:27	V-ille	!give night-owl general
2014-11-28 04:08:29	nolyc	night-owl: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-28 04:08:34	night-owl	oops sorry
2014-11-28 04:08:46	night-owl	V-ille: ty
2014-11-28 04:10:07	-->	Burga (~andrewm@124-150-76-171.dyn.iinet.net.au) has joined ##c++
2014-11-28 04:12:39	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 04:13:39	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 256 seconds)
2014-11-28 04:15:37	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-28 04:15:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 04:16:36	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Remote host closed the connection)
2014-11-28 04:16:55	-->	svkurowski (~svkurowsk@nyx.svkurowski.com) has joined ##c++
2014-11-28 04:17:18	<--	seishun (~Kakera@46.109.232.46) has quit (Ping timeout: 245 seconds)
2014-11-28 04:17:22	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Client Quit)
2014-11-28 04:17:37	--	murrekatt_ is now known as murrekatt
2014-11-28 04:17:42	-->	chatsiri_ (~chatsiri_@58-97-42-122.static.asianet.co.th) has joined ##c++
2014-11-28 04:18:12	-->	BlaXpirit (~blaxpirit@236-20-132-95.pool.ukrtel.net) has joined ##c++
2014-11-28 04:18:51	-->	jack-zhang (~user@2001:da8:a000:554:9c3b:146d:6a03:bb57) has joined ##c++
2014-11-28 04:19:46	blut	hello. I'm having issues with shared and weak ptrs. I have a class A with a shared ptr onto an object of class B which has a weak ptr onto the holding object of class A. Somehow this leads to a double free or corruption. According to valgrind this occurs during a destructor call of class A. Is there a special check I need to perform or anything i might have missed?
2014-11-28 04:19:52	<--	nardev (~nardev@77.238.221.157) has quit (Remote host closed the connection)
2014-11-28 04:20:58	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 04:21:12	ville	!give blut testcase
2014-11-28 04:21:13	nolyc	blut: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-28 04:21:36	<--	huseyinkozan (~huseyinko@unaffiliated/huseyinkozan) has quit (Quit: Leaving)
2014-11-28 04:22:40	-->	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-11-28 04:22:51	<--	Carbonflux (~BOB@174-21-22-185.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2014-11-28 04:23:03	<--	jack-zhang (~user@2001:da8:a000:554:9c3b:146d:6a03:bb57) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-28 04:23:27	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 04:24:38	<--	r3m1 (~remi@92.103.19.16) has left ##c++
2014-11-28 04:25:09	<--	Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-28 04:26:08	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-28 04:26:12	-->	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has joined ##c++
2014-11-28 04:26:30	-->	mgaunard (~mgaunard@193.55.35.2) has joined ##c++
2014-11-28 04:26:34	<--	rriemann_ (~rriemann@110.26.90.92.rev.sfr.net) has quit (Remote host closed the connection)
2014-11-28 04:26:35	-->	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-11-28 04:26:52	-->	rriemann_ (~rriemann@110.26.90.92.rev.sfr.net) has joined ##c++
2014-11-28 04:27:40	-->	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-28 04:27:42	-->	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has joined ##c++
2014-11-28 04:29:28	<--	saint-ron (~rons@23.229.100.175) has quit (Ping timeout: 258 seconds)
2014-11-28 04:29:31	pi-	Wouldn't it be rather nice to use () and ~() for constructor/destructor, so: class Foo{ (){ cout<<"constructor"; } ~(){ cout<<"destructor"; } }; ?
2014-11-28 04:29:38	-->	g1_james1 (~jiwanrai@ip5b405e06.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-28 04:30:03	-->	MissDee (~dee@jane.earlsoft.co.uk) has joined ##c++
2014-11-28 04:30:08	TinoDidriksen	How would you define those outside the body?
2014-11-28 04:30:32	pi-	It seems unnecessary to have to stipulate the name of the class each time. Also it would make them clearly visible at a glance.
2014-11-28 04:30:35	-->	Jeffreims (~jeffr3ims@095-097-219-244.static.chello.nl) has joined ##c++
2014-11-28 04:30:37	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-28 04:30:41	<--	pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 240 seconds)
2014-11-28 04:30:44	<--	MissDee (~dee@jane.earlsoft.co.uk) has left ##c++
2014-11-28 04:30:51	dts	why not just ctor and dtor?
2014-11-28 04:30:53	pi-	Foo::(){ ... } ?
2014-11-28 04:30:54	-->	Anoia (~dee@jane.earlsoft.co.uk) has joined ##c++
2014-11-28 04:31:01	-->	Malsasa (~Malsasa@36.82.80.34) has joined ##c++
2014-11-28 04:31:10	<--	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 256 seconds)
2014-11-28 04:31:10	<--	Iloiny (~Iloiny@unaffiliated/iloiny) has quit (Ping timeout: 256 seconds)
2014-11-28 04:31:19	-->	nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-28 04:31:24	--	murrekatt is now known as murrekatt_
2014-11-28 04:31:43	dts	idk but couldnt that at some point be confused by the compiler as a lambda?
2014-11-28 04:31:49	Anoia	hi all
2014-11-28 04:32:17	<--	Malsasa (~Malsasa@36.82.80.34) has quit (Excess Flood)
2014-11-28 04:32:32	--	Dslgends[Away] is now known as Dslegends
2014-11-28 04:32:36	-->	Malsasa (~Malsasa@36.82.80.34) has joined ##c++
2014-11-28 04:33:03	-->	Iloiny (~Iloiny@unaffiliated/iloiny) has joined ##c++
2014-11-28 04:33:49	blut	The error I described in a test case: http://ideone.com/sPSljm
2014-11-28 04:34:16	<--	Lowl3v3l (~Lowl3v3l@95.91.248.179) has quit (Quit: Leaving)
2014-11-28 04:34:28	Anoia	I'm using #pragma once in a header file which has a macro protected by a define
2014-11-28 04:34:53	pi-	dts: I'm interested whether there is any potential problem. I can't see one...
2014-11-28 04:34:55	<--	Malsasa (~Malsasa@36.82.80.34) has quit (Excess Flood)
2014-11-28 04:34:59	<--	dumdedum (~dumdedum@212.97.160.189.static.user.ono.com) has quit (Quit: foo)
2014-11-28 04:35:02	Anoia	if that define is set in just one of the cpp files, is there a chance that the macro will NOT be defined?
2014-11-28 04:35:17	-->	Malsasa (~Malsasa@36.82.80.34) has joined ##c++
2014-11-28 04:35:33	-->	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-28 04:35:35	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:24e6:fbe5:93c1:fc6c) has joined ##c++
2014-11-28 04:35:45	dts	idk... i dont see much reason to make it just () and ~()
2014-11-28 04:35:50	Anoia	assuming another cpp file causes it to be processed before it gets to that file
2014-11-28 04:36:34	TinoDidriksen	Anoia, each .cpp file is processed in a vacuum.
2014-11-28 04:36:40	ville	blut: you need enabel_shared_from_this for A
2014-11-28 04:36:43	ville	enable
2014-11-28 04:37:12	lh_mouse	V-ille, it has been there long ago and iirc someone(erdico...? I forgot his nick) promised to report it so I didn't.
2014-11-28 04:37:16	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:24e6:fbe5:93c1:fc6c) has quit (Read error: Connection reset by peer)
2014-11-28 04:37:49	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:24e6:fbe5:93c1:fc6c) has joined ##c++
2014-11-28 04:38:08	Anoia	TinoDidriksen: ok, thanks, back to square 1... :)
2014-11-28 04:38:26	ville	!std::enable_shared_from_this
2014-11-28 04:38:29	pi-	dts: it is the same logic as creating a 'for (auto& t : T){...} syntax. Why type things that can be unambiguously inferred? I believe that that even that syntax is soon-to-be improved to 'for(t:T){...}'
2014-11-28 04:38:41	ville	!std::enable_shared_from_this is <reply> http://en.cppreference.com/w/cpp/memory/enable_shared_from_this
2014-11-28 04:38:42	nolyc	By your command.
2014-11-28 04:39:24	<--	Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 265 seconds)
2014-11-28 04:40:04	-->	corecode (~2@0x2c.org) has joined ##c++
2014-11-28 04:40:47	blut	ville: thanks
2014-11-28 04:41:27	corecode	hi
2014-11-28 04:41:28	-->	Plasmastar (Plasma@unaffiliated/plasmastar) has joined ##c++
2014-11-28 04:41:35	dts	idk, just seems like two completely different things to me ville
2014-11-28 04:41:40	dts	sorry, pi-
2014-11-28 04:41:40	corecode	what was the code paste site that shows disassembly?
2014-11-28 04:41:41	Anoia	TinoDidriksen: it appears MS disagree with you :|
2014-11-28 04:41:47	dts	not ville, pi-
2014-11-28 04:42:15	TinoDidriksen	Anoia, no they don't. In a project, each .cpp file is processed individually, unless you did something crazy like #include a .cpp file.
2014-11-28 04:42:46	-->	snakenerd (~Thunderbi@177.43.5.128) has joined ##c++
2014-11-28 04:42:52	Anoia	TinoDidriksen: that's what I was hoping, but #pragma message gets processed only one, despite every file #including stdafx.h
2014-11-28 04:43:25	Anoia	or it precompiles it...
2014-11-28 04:44:03	TinoDidriksen	stdafx.h is a precompiled header trigger, so if you have PCH enabled then yes that could cause it.
2014-11-28 04:44:31	Anoia	so it's stdafx.h rather than #pragma once that's triggering it..
2014-11-28 04:44:35	Anoia	PITA, thanks :)
2014-11-28 04:44:45	<--	komarov (~komarov@46.227.191.132) has quit (Ping timeout: 240 seconds)
2014-11-28 04:44:51	<--	Malsasa (~Malsasa@36.82.80.34) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 04:44:52	Adrinael	Precompiled headers often are
2014-11-28 04:45:07	-->	Malsasa (~Malsasa@36.82.80.34) has joined ##c++
2014-11-28 04:45:11	-->	komarov (~komarov@46.227.191.166) has joined ##c++
2014-11-28 04:46:19	-->	saint-ron (~rons@192.161.173.39) has joined ##c++
2014-11-28 04:47:18	<--	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-28 04:48:05	-->	starship (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-11-28 04:48:33	-->	sipka (~sipka@sedatmnat.inf.u-szeged.hu) has joined ##c++
2014-11-28 04:49:01	<--	snakenerd (~Thunderbi@177.43.5.128) has quit (Quit: snakenerd)
2014-11-28 04:49:49	<--	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Ping timeout: 272 seconds)
2014-11-28 04:50:04	-->	bookmark (IceChat77@65.35.217.85) has joined ##c++
2014-11-28 04:50:18	bookmark	sup
2014-11-28 04:50:55	-->	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has joined ##c++
2014-11-28 04:50:58	<--	greenbagels_ (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-28 04:51:26	<--	Jeffreims (~jeffr3ims@095-097-219-244.static.chello.nl) has left ##c++
2014-11-28 04:51:31	<--	kkh (~duracrisi@unaffiliated/duracrisis) has quit (Ping timeout: 256 seconds)
2014-11-28 04:52:35	bookmark	http://youtu.be/1Wk7NM2GJtM
2014-11-28 04:52:41	bookmark	check out what i did :)
2014-11-28 04:52:52	-->	Havacci (~Havacci@unaffiliated/havacci) has joined ##c++
2014-11-28 04:52:54	-->	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has joined ##c++
2014-11-28 04:54:02	bookmark	animated neon :)
2014-11-28 04:54:31	-->	Jinxit (~Jinxit@c83-191-74-158.cust.tele2.se) has joined ##c++
2014-11-28 04:54:31	<--	Malsasa (~Malsasa@36.82.80.34) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 04:54:37	dts	*cough* ##c++-social *cough*
2014-11-28 04:54:55	bookmark	whoops i thought i joined opengl whole problem here
2014-11-28 04:55:00	bookmark	sorry l8r
2014-11-28 04:55:03	<--	bookmark (IceChat77@65.35.217.85) has left ##c++
2014-11-28 04:55:12	-->	Malsasa_ (~Malsasa@36.82.80.34) has joined ##c++
2014-11-28 04:56:45	<--	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has quit (Ping timeout: 265 seconds)
2014-11-28 04:57:04	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-28 04:58:16	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 04:58:39	blut	ville: Fyi: even with enable_shared_from_this, shared_from_this can not be used until the constructor has finished, as prior to construction, the object is not owned by any shared ptrs.
2014-11-28 04:59:54	ville	ok. had a nagging suspicion that there was a gotcha to it
2014-11-28 05:00:38	-->	quaz0r (~quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-11-28 05:01:09	Adrinael	Use the named constructor idiom to construct the objects and attach them to each other
2014-11-28 05:01:23	BZEU	How do you use SendInput for DirectX applications/games?
2014-11-28 05:01:28	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 05:01:31	Adrinael	!give BZEU windows
2014-11-28 05:01:32	nolyc	BZEU: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-11-28 05:02:59	-->	King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-11-28 05:03:07	ville	lot of the time it isn't a problem in "real life" where you read some data stream and construct instances based on that and then go fix whatever interdependency they had. you never create the instances "directly" in code after initial prototype stages once you've wired in the reading part
2014-11-28 05:04:43	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-28 05:05:30	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-28 05:06:31	<--	saint-ron (~rons@192.161.173.39) has quit (Ping timeout: 250 seconds)
2014-11-28 05:07:44	-->	tarruda (~tarruda@200.17.134.134) has joined ##c++
2014-11-28 05:08:15	-->	saLOUt (~rriemann@168.20.90.92.rev.sfr.net) has joined ##c++
2014-11-28 05:08:41	<--	Sceorem (~Sceorem@ks3370847.kimsufi.com) has quit (Ping timeout: 240 seconds)
2014-11-28 05:09:00	<--	rriemann_ (~rriemann@110.26.90.92.rev.sfr.net) has quit (Ping timeout: 264 seconds)
2014-11-28 05:09:53	<--	k_sze[work] (~kvirc@unaffiliated/kira) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-11-28 05:10:15	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 265 seconds)
2014-11-28 05:11:24	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 264 seconds)
2014-11-28 05:11:44	<--	Malsasa_ (~Malsasa@36.82.80.34) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 05:13:01	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-28 05:13:28	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-28 05:13:48	<--	sinanislekdemir (~sinanisle@212.57.9.204) has quit (Remote host closed the connection)
2014-11-28 05:14:28	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Quit: Leaving)
2014-11-28 05:15:06	<--	p|q (~plq@95.14.103.137) has quit (Ping timeout: 244 seconds)
2014-11-28 05:18:12	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 05:18:45	-->	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-28 05:19:07	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-28 05:19:54	<--	BZEU (~nycto@c-3ca471d5.123-3-64736c10.cust.bredbandsbolaget.se) has quit
2014-11-28 05:21:22	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 05:21:37	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 05:21:48	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 244 seconds)
2014-11-28 05:22:01	<--	zwer_b (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-11-28 05:22:42	-->	zwer_b (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-28 05:23:40	-->	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has joined ##c++
2014-11-28 05:25:38	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 05:25:46	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-28 05:25:48	-->	kaffeetrauma (~Thunderbi@5.147.4.15) has joined ##c++
2014-11-28 05:25:51	-->	immibis__ (~ChatZill1@203-97-111-43.cable.telstraclear.net) has joined ##c++
2014-11-28 05:26:24	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2014-11-28 05:27:43	<--	immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has quit (Ping timeout: 272 seconds)
2014-11-28 05:27:43	-->	ShishKabab (~vincent@46.255.84.17) has joined ##c++
2014-11-28 05:27:58	--	immibis__ is now known as immibis
2014-11-28 05:28:44	-->	jupiterant (~fireant@host-239.180-235-182.cable.dynamic.kbtelecom.net) has joined ##c++
2014-11-28 05:31:46	-->	p|q (~plq@78.179.94.26) has joined ##c++
2014-11-28 05:32:09	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-11-28 05:33:26	-->	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has joined ##c++
2014-11-28 05:33:26	-->	PSvils (~programme@87.110.179.226) has joined ##c++
2014-11-28 05:33:26	<--	LongCatTH (~LongCatTH@61-21-208-16.rev.home.ne.jp) has quit (Changing host)
2014-11-28 05:33:26	-->	LongCatTH (~LongCatTH@unaffiliated/longcatth) has joined ##c++
2014-11-28 05:33:41	PSvils	anyone here have experience with delay loaded DLLs?
2014-11-28 05:34:00	PSvils	I was wondering what happens if you explicitly unload it, and then call a function from it again. does it get reloaded back?
2014-11-28 05:34:02	 *	dts is intrigued
2014-11-28 05:34:10	 *	dts is intriqued
2014-11-28 05:34:19	<--	TzilTzal (~yh@203.126.56.18) has quit (Quit: Leaving.)
2014-11-28 05:34:21	dts	PSvils, probably a linker error is my best guess
2014-11-28 05:34:48	PSvils	hmmm...so once you unload it, there's no going back? or just manually loading it back in?
2014-11-28 05:35:04	PSvils	at which point I don't even need delay loaded, I can just do it purely dynamically.
2014-11-28 05:35:06	dts	thats beyond my scope
2014-11-28 05:35:13	PSvils	roger that! :)
2014-11-28 05:35:19	--	Dslegends is now known as Dslgends[Away]
2014-11-28 05:35:29	dts	im purely guessing, because i dont use DLLs, and have never heard of delay loaded DLL's
2014-11-28 05:35:32	ville	ointer to pointing something invalid? UB
2014-11-28 05:35:38	ville	pointer even
2014-11-28 05:35:49	ville	dts: dlopen and the ilk
2014-11-28 05:35:53	ville	also -general
2014-11-28 05:35:54	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 05:35:55	-->	Malsasa_ (~Malsasa@36.81.105.219) has joined ##c++
2014-11-28 05:35:58	dts	ointers are really what made c++ great imo
2014-11-28 05:36:05	dts	ville, ah that makes more sense
2014-11-28 05:36:08	Adrinael	Anointers are really what made mummies great
2014-11-28 05:36:33	PSvils	ville: delay loaded dlls are now a feature in VS, where you can link with a .lib file, and include the headers, everything goes on as normal, just somehow it does some magic, and loads the dll only the first time you call a function from it.
2014-11-28 05:36:53	dts	ah see, windows. this is all really beyond my scope now
2014-11-28 05:36:57	PSvils	(instead of on startup)
2014-11-28 05:37:11	ville	PSvils: still -general
2014-11-28 05:37:39	PSvils	oh btw - so is this channel discussing c++ language development, and -general is for developing with c++?
2014-11-28 05:37:48	dts	no
2014-11-28 05:37:51	PSvils	or rather, is this dll question not c++ specific :)
2014-11-28 05:37:51	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Ping timeout: 240 seconds)
2014-11-28 05:37:57	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-28 05:38:09	dts	##c++ is about standard c++ (or anything defined in the standard)
2014-11-28 05:38:10	ville	PSvils: anything you find an answer in the c++ standard is on-topic here.
2014-11-28 05:38:18	<--	Dslgends[Away] (~Dslegends@blk-222-83-8.eastlink.ca) has quit (Quit: My Mac has gone to sleep. ZZZzzz?)
2014-11-28 05:38:23	dts	!give PSvils general
2014-11-28 05:38:24	nolyc	PSvils: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-28 05:38:39	PSvils	ahaa, gotcha! :)
2014-11-28 05:38:49	<--	ikrima (~ikrima@cpe-142-129-13-183.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-28 05:39:13	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-28 05:39:14	dts	!next
2014-11-28 05:39:15	nolyc	Another satisfied customer, next!
2014-11-28 05:39:18	<--	ptx (~ptx@0133500856.0.fullrate.dk) has quit (Quit: ZNC - http://znc.in)
2014-11-28 05:39:22	<--	saLOUt (~rriemann@168.20.90.92.rev.sfr.net) has quit (Ping timeout: 250 seconds)
2014-11-28 05:39:23	<--	davek (~tracekill@unaffiliated/tracekill) has quit (Ping timeout: 255 seconds)
2014-11-28 05:39:29	ville	c++ doesn't really know dlls and sos. maybe with modules there will be some sort of change
2014-11-28 05:39:47	dts	i forgot what c++ modules are :/
2014-11-28 05:39:55	dts	but ill figure that out in the morning
2014-11-28 05:39:57	dts	night
2014-11-28 05:40:02	--	dts is now known as dts|Zzzz
2014-11-28 05:40:05	-->	yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-28 05:40:09	ville	!give "dts|Zzzz"  away
2014-11-28 05:40:10	nolyc	dts|Zzzz: We really do not care whether you are at your computer or not. That means you shall not switch nicks or indicate your status in any other way or form in the channel.
2014-11-28 05:40:21	<--	ircnick123 (~eman@89.204.153.1) has quit (Ping timeout: 272 seconds)
2014-11-28 05:42:16	-->	saLOUt (~rriemann@171.20.90.92.rev.sfr.net) has joined ##c++
2014-11-28 05:45:32	-->	nostoi (~nostoi@33.Red-213-98-223.dynamicIP.rima-tde.net) has joined ##c++
2014-11-28 05:45:32	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 05:47:05	-->	ptx (~ptx@0133500856.0.fullrate.dk) has joined ##c++
2014-11-28 05:47:15	<--	saLOUt (~rriemann@171.20.90.92.rev.sfr.net) has quit (Read error: Connection reset by peer)
2014-11-28 05:47:57	-->	byteoverfl0w (~byteoverf@unaffiliated/byteoverfl0w) has joined ##c++
2014-11-28 05:48:44	-->	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has joined ##c++
2014-11-28 05:48:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 05:49:23	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 05:52:46	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 05:55:04	<--	dts|Zzzz (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 240 seconds)
2014-11-28 05:55:26	<--	ShishKabab (~vincent@46.255.84.17) has quit (Read error: No route to host)
2014-11-28 05:56:04	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 05:56:11	-->	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-28 05:56:43	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-28 05:59:59	-->	Fogger (~Fogger@host86-151-24-167.range86-151.btcentralplus.com) has joined ##c++
2014-11-28 05:59:59	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 06:00:39	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-28 06:00:53	<--	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has quit (Ping timeout: 265 seconds)
2014-11-28 06:02:38	-->	p0a (93349758@gateway/web/freenode/ip.147.52.151.88) has joined ##c++
2014-11-28 06:03:19	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 06:03:35	p0a	Hello I want to allocate a matrix in C++. Can I do it like this? T *p = new T[n*m]; q = (T*[m])p;?
2014-11-28 06:03:47	PlasmaHH	!sillymatrix
2014-11-28 06:03:48	nolyc	template<typename T> struct matrix { matrix(unsigned m, unsigned n) : m(m), n(n), vs(m*n) {} T& operator ()(unsigned i, unsigned j) { return vs[i + m * j]; } private: unsigned m; unsigned n; std::vector<T> vs; }; /* column-major/opengl: vs[i + m * j], row-major/c++: vs[n * i + j] */
2014-11-28 06:03:50	<--	sipka (~sipka@sedatmnat.inf.u-szeged.hu) has quit (Read error: Connection reset by peer)
2014-11-28 06:03:57	TinoDidriksen	Aw, beat me to it.
2014-11-28 06:04:36	p0a	okay I could do that as well.
2014-11-28 06:04:37	p0a	thanks
2014-11-28 06:05:03	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-28 06:05:09	-->	sipka (~sipka@sedatmnat.inf.u-szeged.hu) has joined ##c++
2014-11-28 06:05:16	TinoDidriksen	Or use Boost.Multi_array
2014-11-28 06:05:29	p0a	overkill :P
2014-11-28 06:05:37	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-28 06:06:41	<--	Nnavd (~Nnavd@ip-192-68-68-10.ptr.bcit.ca) has quit (Ping timeout: 255 seconds)
2014-11-28 06:08:04	-->	Malsasa__ (~Malsasa@36.82.76.8) has joined ##c++
2014-11-28 06:08:17	<--	Malsasa_ (~Malsasa@36.81.105.219) has quit (Ping timeout: 245 seconds)
2014-11-28 06:08:32	<--	Malsasa__ (~Malsasa@36.82.76.8) has quit (Read error: Connection reset by peer)
2014-11-28 06:11:27	-->	tk` (~tk@89-73-166-72.dynamic.chello.pl) has joined ##c++
2014-11-28 06:12:16	<--	komarov (~komarov@46.227.191.166) has quit (Read error: Connection reset by peer)
2014-11-28 06:13:25	<--	Burga (~andrewm@124-150-76-171.dyn.iinet.net.au) has quit (Ping timeout: 265 seconds)
2014-11-28 06:14:51	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-28 06:16:35	-->	Vlx (~tomal@180.234.246.201) has joined ##c++
2014-11-28 06:17:33	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 06:20:28	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 06:20:31	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-28 06:20:35	-->	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 06:20:36	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 255 seconds)
2014-11-28 06:21:02	-->	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has joined ##c++
2014-11-28 06:22:13	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 06:23:02	<--	p0a (93349758@gateway/web/freenode/ip.147.52.151.88) has quit (Quit: bye)
2014-11-28 06:25:10	<--	Errorical (~Errorical@213.128.190.150) has quit (Remote host closed the connection)
2014-11-28 06:27:02	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-28 06:27:18	-->	CobaltHex (CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has joined ##c++
2014-11-28 06:28:50	-->	komarov (~komarov@46.227.191.247) has joined ##c++
2014-11-28 06:32:16	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 06:32:23	-->	Sceorem (~Sceorem@ks3370847.kimsufi.com) has joined ##c++
2014-11-28 06:34:16	<--	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Ping timeout: 250 seconds)
2014-11-28 06:35:22	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 06:36:21	-->	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has joined ##c++
2014-11-28 06:36:37	<--	CobaltHex (CobaltHex@pool-71-101-253-55.tampfl.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2014-11-28 06:37:56	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Read error: Connection reset by peer)
2014-11-28 06:41:42	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 06:43:27	<--	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has quit (Read error: Connection reset by peer)
2014-11-28 06:43:34	-->	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has joined ##c++
2014-11-28 06:44:40	-->	Gama11 (~quassel@p5796716F.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 06:44:45	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 06:46:14	<--	nostoi (~nostoi@33.Red-213-98-223.dynamicIP.rima-tde.net) has quit (Quit: Verlassend)
2014-11-28 06:46:51	<--	OpusMioda (~freeman@c-24-22-94-84.hsd1.or.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-28 06:47:32	<--	pappa (~pappa@77.119.133.112.wireless.dyn.drei.com) has quit (Ping timeout: 255 seconds)
2014-11-28 06:47:35	<--	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 06:47:46	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 06:48:17	-->	OpusMioda (~freeman@c-24-22-94-84.hsd1.or.comcast.net) has joined ##c++
2014-11-28 06:48:28	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-28 06:48:37	<--	longbow (~androirc@2001:648:2800:102:dab3:77ff:fe36:1ae4) has quit (Ping timeout: 265 seconds)
2014-11-28 06:49:16	-->	leeN (~leeN@e181217153.adsl.alicedsl.de) has joined ##c++
2014-11-28 06:49:46	-->	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-11-28 06:49:47	<--	kaffeetrauma (~Thunderbi@5.147.4.15) has quit (Quit: kaffeetrauma)
2014-11-28 06:50:29	<--	Adrinael (~adrinael@barrel.rolli.org) has quit (Ping timeout: 272 seconds)
2014-11-28 06:50:35	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:24e6:fbe5:93c1:fc6c) has quit (Ping timeout: 258 seconds)
2014-11-28 06:51:02	<--	SiN_Bizkit (~SiN_Bizki@user-78-139-236-122.tomtelnet.ru) has quit (Quit: SiN_Bizkit)
2014-11-28 06:51:41	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-28 06:51:46	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has joined ##c++
2014-11-28 06:54:43	-->	tsimpson_ (b903a4c7@ubuntu/member/stdin) has joined ##c++
2014-11-28 06:55:46	<--	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has quit (Remote host closed the connection)
2014-11-28 06:56:24	-->	pappa (~pappa@77.119.133.112.wireless.dyn.drei.com) has joined ##c++
2014-11-28 06:59:07	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-28 07:00:03	-->	dehos (~dehos@narges.univ-littoral.fr) has joined ##c++
2014-11-28 07:00:09	-->	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has joined ##c++
2014-11-28 07:00:41	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-28 07:01:01	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-28 07:02:56	<--	Sceorem (~Sceorem@ks3370847.kimsufi.com) has quit (Quit: Quitte)
2014-11-28 07:02:57	-->	PSG_Luna (uid48908@gateway/web/irccloud.com/x-odkhezaunylwysss) has joined ##c++
2014-11-28 07:02:57	<--	dehos (~dehos@narges.univ-littoral.fr) has left ##c++
2014-11-28 07:03:03	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-28 07:03:20	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 07:03:34	<--	chatsiri_ (~chatsiri_@58-97-42-122.static.asianet.co.th) has quit (Ping timeout: 245 seconds)
2014-11-28 07:03:39	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 240 seconds)
2014-11-28 07:03:40	--	shintahW2 is now known as shintahW
2014-11-28 07:04:31	-->	K-ballo (~sonoio@181.228.126.42) has joined ##c++
2014-11-28 07:04:50	-->	beaky (~nkb@bba67142.alshamil.net.ae) has joined ##c++
2014-11-28 07:04:51	beaky	hello
2014-11-28 07:04:54	<--	badone (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 240 seconds)
2014-11-28 07:05:15	beaky	how do i use range-based for on multiple collections
2014-11-28 07:05:30	V-ille	you don't
2014-11-28 07:05:34	<--	Ysgard (~Ysgard@69.196.72.54) has quit (Ping timeout: 255 seconds)
2014-11-28 07:05:53	beaky	:( i was hoping there is a std::zip() or something :(
2014-11-28 07:07:47	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-11-28 07:08:04	V-ille	not yet, see http://cplusplus.github.io/EWG/ewg-active.html#43
2014-11-28 07:08:15	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-28 07:09:32	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-11-28 07:10:28	<--	sipka (~sipka@sedatmnat.inf.u-szeged.hu) has quit (Remote host closed the connection)
2014-11-28 07:11:53	<--	NoNMaDDeN (~NoNMaDDeN@ppp-124-122-153-226.revip2.asianet.co.th) has quit (Remote host closed the connection)
2014-11-28 07:12:06	-->	regreg (~regreg@77.81.151.155) has joined ##c++
2014-11-28 07:13:25	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 07:15:49	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 07:16:38	-->	thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-11-28 07:18:02	<--	tarruda (~tarruda@200.17.134.134) has quit (Ping timeout: 265 seconds)
2014-11-28 07:18:59	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 07:19:37	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined ##c++
2014-11-28 07:20:00	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 07:21:31	RlyDontKnow	V-ille: new grammar that can be solver via helpers (namely zip)?
2014-11-28 07:21:38	RlyDontKnow	*for something that can be solved
2014-11-28 07:21:39	-->	longbow (~androirc@ppp089210050193.access.hol.gr) has joined ##c++
2014-11-28 07:22:51	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 07:22:53	-->	Imek (~imek@mailgate.team17.com) has joined ##c++
2014-11-28 07:23:00	Oxyd	Hah, the code snippet in that uses an alternative token. I must remember that for when someone claims that nobody ever uses them, so I can retort with "Committee members do!"
2014-11-28 07:24:06	-->	kerberosio (~hello@firewall.reference.be) has joined ##c++
2014-11-28 07:24:29	<--	prime (~prime@unaffiliated/primex) has quit (Ping timeout: 244 seconds)
2014-11-28 07:26:01	<--	longbow (~androirc@ppp089210050193.access.hol.gr) has quit (Ping timeout: 244 seconds)
2014-11-28 07:27:33	<--	komarov (~komarov@46.227.191.247) has quit (Ping timeout: 256 seconds)
2014-11-28 07:27:33	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-28 07:27:52	<--	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2014-11-28 07:28:22	-->	plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-28 07:31:34	-->	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-28 07:31:34	<--	g1_james1 (~jiwanrai@ip5b405e06.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2014-11-28 07:32:02	b_jonas	Oxyd: yeah, 'not' gets used a lot
2014-11-28 07:32:07	b_jonas	for some reason
2014-11-28 07:32:27	LBV_User	`for (auto& x : v; auto& y : w) a = combine(v, w, a);`; I understood this wrong or it is combining the whole colections again for each item?
2014-11-28 07:33:21	pi-	Does there exist some repository of stock unit tests for various stdlib containers? For example, if I am trying to make my class conform to a particular container (say a List)...
2014-11-28 07:33:32	V-ille	LBV_User: what do you mean "again"?
2014-11-28 07:33:38	-->	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-11-28 07:34:04	cbreak	<< not true
2014-11-28 07:34:04	geordi	false
2014-11-28 07:34:15	LBV_User	V-ille: it is feeding the collections to combine, instead of the items... those two snippets won't do the same thing...
2014-11-28 07:34:17	V-ille	<< not true or false
2014-11-28 07:34:18	geordi	false
2014-11-28 07:34:38	V-ille	LBV_User: that's probably just a bug in the example
2014-11-28 07:34:47	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-28 07:34:48	LBV_User	:)
2014-11-28 07:35:03	V-ille	see, not having this direct facility leads to problems :)
2014-11-28 07:35:18	LBV_User	lol
2014-11-28 07:35:19	-->	Leftas (~leftas@91.228.84.180) has joined ##c++
2014-11-28 07:35:21	V-ille	RlyDontKnow: the issue submitter argues that the facility is fundamental
2014-11-28 07:35:58	RlyDontKnow	LBV_User: I read it wrong first, too
2014-11-28 07:35:59	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 07:36:02	<--	schleppel (~quassel@141.39.226.237) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 07:36:06	-->	lllshamanlll_ (~lllshaman@146.66.164.249) has joined ##c++
2014-11-28 07:36:11	<--	TekhnoLife (~Dmitry@85.174.63.230) has quit (Remote host closed the connection)
2014-11-28 07:36:38	<--	lllshamanlll (~lllshaman@146.66.164.249) has quit (Read error: Connection reset by peer)
2014-11-28 07:36:40	LBV_User	anyway, that std::zip solution beaky proposed wouldn't make it a more functional sintax?
2014-11-28 07:37:01	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 07:37:02	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-28 07:37:30	Oxyd	You can't really do it nicely without multiple return values either -- your decltype(std::zip(...))::operator * would have to return a tuple or something similar, and you'd then have to unpack the elements out of it yourself. With multiple return values, we could possibly have for (x, y, z : zip(a, b, c)) ...
2014-11-28 07:37:31	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-28 07:37:48	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-28 07:38:22	RlyDontKnow	V-ille: compared to for(p : zip(v,w)) it seems easier to confuse for(x : v; y : w) with for(x : v) for(y : w) I think
2014-11-28 07:38:29	LBV_User	for(tie(x, y, z): zip(a, b, c))...
2014-11-28 07:38:46	Oxyd	But then you have to have T x; U y; V z; before that loop.
2014-11-28 07:38:59	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-28 07:39:17	LBV_User	:\ sure, that changes the scope of them....
2014-11-28 07:39:27	Oxyd	It also means they must be default-constructible.
2014-11-28 07:39:58	-->	aggn (~irc@2001:4ca0:0:f262:f801:83bf:d51d:8612) has joined ##c++
2014-11-28 07:40:05	-->	mIGu (mig21@87.248.86.218) has joined ##c++
2014-11-28 07:40:09	V-ille	well, let's see if an actual proposal materializes
2014-11-28 07:40:29	Oxyd	So, really -- for a proper solution, we need to add *something* to the core language -- either the extended for loop itself or, preferrably, multiple return values.
2014-11-28 07:41:09	LBV_User	RlyDontKnow: I didn't find it ambiguous with nested loops...
2014-11-28 07:41:35	RlyDontKnow	well, the nested loops aren't ambigious, but for(x : v; y : w) kinda looks like a nested loop
2014-11-28 07:41:56	-->	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-28 07:43:37	<--	lllshamanlll_ (~lllshaman@146.66.164.249) has quit (Remote host closed the connection)
2014-11-28 07:44:06	V-ille	how so?
2014-11-28 07:44:22	-->	lllshamanlll (~lllshaman@146.66.164.249) has joined ##c++
2014-11-28 07:44:29	RlyDontKnow	also you could possibly want different behaviours - e.g. repeat the shorter list if they aren't equally long - which you can't really have with that fixed grammar solutions, but could have with better support for adaptors
2014-11-28 07:44:47	<--	jupiterant (~fireant@host-239.180-235-182.cable.dynamic.kbtelecom.net) has quit
2014-11-28 07:44:53	<--	kadoban (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Client Quit)
2014-11-28 07:45:05	V-ille	then you can write such different behaviours with your adapters
2014-11-28 07:45:47	RlyDontKnow	which leads you back to additional boilerplate
2014-11-28 07:46:45	V-ille	there's always boilerplate involved with a DWIM solution
2014-11-28 07:48:25	<--	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2014-11-28 07:48:46	<--	re1 (~reiser@cm-171-100-171-91.revip10.asianet.co.th) has quit (Quit: Leaving)
2014-11-28 07:49:25	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-28 07:49:50	RlyDontKnow	Oxyd: multipler return values would be nice, but that's another box of pandora, isn't it?
2014-11-28 07:50:36	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 07:50:51	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 07:51:27	<--	Bigpet4 (~bigpet@i5E86A45E.versanet.de) has quit (Ping timeout: 264 seconds)
2014-11-28 07:51:59	mitch0	there's much FUD around multiple return values. I don't think they're really well founded though.
2014-11-28 07:52:50	mitch0	but c++ used up most of the nice syntax that we could use for handling mrv assignment / initialization
2014-11-28 07:53:20	PlasmaHH	just polish up tuples and everything is fine
2014-11-28 07:53:30	cbreak	just return composite types
2014-11-28 07:54:01	Oxyd	RlyDontKnow: Yep.
2014-11-28 07:54:11	mitch0	PlasmaHH: returning stuff as tuples is OK, but it'd be nice if we could 'decompose' that on the spot
2014-11-28 07:54:28	PlasmaHH	like std::tie(a,b,c) = foo(); ?
2014-11-28 07:54:28	Oxyd	RlyDontKnow: Which is why proposing a new syntax just for the zipping for loop might make sense -- the suggested syntax seems (to me anyway) mostly problem-free.
2014-11-28 07:54:29	cbreak	mitch0: we can
2014-11-28 07:54:37	cbreak	foo().second
2014-11-28 07:55:00	beaky	17:15 < mitch0> there's much FUD around multiple return values. I don't think they're really well founded though.
2014-11-28 07:55:03	beaky	oops tpyo
2014-11-28 07:55:05	mitch0	cbreak: I'd prefer something like (int foo, float bar) = baz();
2014-11-28 07:55:13	RlyDontKnow	cbreak: that's not really nice for readability, though
2014-11-28 07:55:14	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-28 07:55:21	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Quit: Leaving)
2014-11-28 07:55:30	cbreak	RlyDontKnow: depends
2014-11-28 07:55:31	<--	fstd (~fstd@unaffiliated/fisted) has quit (Read error: Connection reset by peer)
2014-11-28 07:55:32	beaky	btw are MRVs really worth it
2014-11-28 07:55:36	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-28 07:55:40	cbreak	winners().second
2014-11-28 07:55:45	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-28 07:55:51	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 07:56:07	--	fstd_ is now known as fstd
2014-11-28 07:56:23	mitch0	beaky: they're quite handy in lua, for example. I feel they'd be handy in c++, too
2014-11-28 07:56:42	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 07:56:46	cbreak	C++ has out parameters
2014-11-28 07:56:55	cbreak	so it's not required
2014-11-28 07:56:56	LBV_User	mitch0: Python also have mrv, but I don't see it getting used that much, despite being handy...
2014-11-28 07:57:00	cbreak	it'd just be different syntax
2014-11-28 07:57:00	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 07:57:06	mitch0	cbreak: not required, but would be handy
2014-11-28 07:57:11	mitch0	also, out params suck
2014-11-28 07:57:23	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 07:57:31	-->	HerzogDeXtEr1 (~flex@i59F6AF96.versanet.de) has joined ##c++
2014-11-28 07:57:33	RlyDontKnow	cbreak: but out parameters need you have to something you can pass in
2014-11-28 07:57:37	cbreak	on the scale of things that suck, out parameters are far from the worst
2014-11-28 07:57:51	mitch0	sure, there are more pressing issues
2014-11-28 07:57:53	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 07:58:02	mitch0	but I still feal MRV would be "easy" to add
2014-11-28 07:58:07	mitch0	and wouldn't hurt
2014-11-28 07:58:18	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 07:58:36	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 07:58:39	<--	HerzogDeXtEr (~flex@i59F6AF96.versanet.de) has quit (Ping timeout: 258 seconds)
2014-11-28 07:58:42	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-28 07:58:47	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 07:58:59	-->	kkh (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-11-28 07:59:15	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 07:59:36	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Client Quit)
2014-11-28 07:59:44	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 07:59:53	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 08:00:09	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-28 08:00:15	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 08:00:15	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 08:00:36	-->	snyp (~Snyp@150.129.132.54) has joined ##c++
2014-11-28 08:00:42	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Remote host closed the connection)
2014-11-28 08:00:46	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 08:00:51	<--	pappa (~pappa@77.119.133.112.wireless.dyn.drei.com) has quit (Quit: Leaving.)
2014-11-28 08:01:00	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 08:01:17	-->	aviraldg (~aviraldg@unaffiliated/aviraldg) has joined ##c++
2014-11-28 08:01:20	<--	starship (~duracrisi@unaffiliated/duracrisis) has quit (Ping timeout: 258 seconds)
2014-11-28 08:01:46	<--	aviraldg (~aviraldg@unaffiliated/aviraldg) has quit (Max SendQ exceeded)
2014-11-28 08:02:02	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 256 seconds)
2014-11-28 08:03:33	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Client Quit)
2014-11-28 08:03:52	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 08:04:10	<--	prime (~prime@unaffiliated/primex) has quit (Ping timeout: 244 seconds)
2014-11-28 08:04:14	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Remote host closed the connection)
2014-11-28 08:04:16	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-28 08:04:43	<--	negerns (negerns@49.144.150.177) has quit (Remote host closed the connection)
2014-11-28 08:04:54	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-28 08:05:17	<--	tigger0jk (~tigger0jk@192.77.237.103) has quit
2014-11-28 08:05:36	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 08:05:45	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 08:06:01	--	HeTo_ is now known as HeTo
2014-11-28 08:06:07	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Client Quit)
2014-11-28 08:06:25	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 08:07:04	<--	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Remote host closed the connection)
2014-11-28 08:07:56	-->	Adrinael (~adrinael@barrel.rolli.org) has joined ##c++
2014-11-28 08:08:20	<--	AFKGeek (~AFKGeek@unaffiliated/afkgeek) has quit (Quit: Fades into the shadows)
2014-11-28 08:08:34	PlasmaHH	easy for totally warped meanings of easy
2014-11-28 08:08:50	cbreak	returning tuples is easy
2014-11-28 08:09:09	cbreak	unpacking them with tie is easy
2014-11-28 08:10:25	PlasmaHH	changing the language to make this efficient and adding the mentioned things of convenience is not
2014-11-28 08:12:09	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 240 seconds)
2014-11-28 08:12:48	-->	sedeki (~sedeki@unaffiliated/sedeki) has joined ##c++
2014-11-28 08:12:50	--	Zarthuss is now known as Zarthus
2014-11-28 08:14:22	-->	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 08:14:46	pi-	I find the latter part of Stroustrup's book (i.e. the section on stdlib) impenetrable :/
2014-11-28 08:14:57	-->	daN-R-G (~danny@e181231161.adsl.alicedsl.de) has joined ##c++
2014-11-28 08:15:08	V-ille	which revision of his book?
2014-11-28 08:15:14	pi-	It seems as if it is written for someone that is already familiar with the constructs
2014-11-28 08:15:27	-->	zwer_b_f (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-11-28 08:15:31	pi-	I can't find any angle to get a grip
2014-11-28 08:15:37	pi-	The latest one, C++11
2014-11-28 08:16:30	V-ille	you could try the Josuttis book for something more penetrable when it comes to the standard library
2014-11-28 08:16:39	<--	zwer_b (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 250 seconds)
2014-11-28 08:17:12	<--	Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-28 08:17:41	-->	prime (~prime@unaffiliated/primex) has joined ##c++
2014-11-28 08:17:50	pi-	aha! http://it-ebooks.info/book/1255/
2014-11-28 08:17:51	pi-	Thanks
2014-11-28 08:17:59	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-28 08:18:01	<--	sedeki (~sedeki@unaffiliated/sedeki) has quit (Quit: Leaving)
2014-11-28 08:18:27	<--	daNRG (~danny@e181230062.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2014-11-28 08:18:41	-->	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-28 08:21:08	-->	negerns (negerns@49.144.150.177) has joined ##c++
2014-11-28 08:21:08	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 08:22:33	<--	blut (~blut@ersc147.goemobile.de) has quit (Quit: leaving)
2014-11-28 08:23:29	-->	lenarhoyt (~lenarhoyt@p5B05D07B.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 08:23:51	<--	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz?)
2014-11-28 08:24:24	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 08:25:22	-->	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-28 08:25:27	<--	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has quit (Max SendQ exceeded)
2014-11-28 08:25:28	-->	fjellfras (~fjellfras@117.244.33.198) has joined ##c++
2014-11-28 08:26:02	-->	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has joined ##c++
2014-11-28 08:28:30	<--	blipped (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-28 08:28:30	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 08:29:20	-->	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-28 08:30:13	-->	davidstone (~david@174-29-187-245.hlrn.qwest.net) has joined ##c++
2014-11-28 08:30:57	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 264 seconds)
2014-11-28 08:31:13	-->	dvaidcsi (581185ab@gateway/web/freenode/ip.88.17.133.171) has joined ##c++
2014-11-28 08:31:26	snyp	lol.
2014-11-28 08:31:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 08:32:51	<--	immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has quit (Ping timeout: 272 seconds)
2014-11-28 08:33:36	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-28 08:34:58	<--	snyp (~Snyp@150.129.132.54) has quit (Quit: WeeChat 1.0.1)
2014-11-28 08:35:14	beaky	is it good design to pass function objects by value
2014-11-28 08:35:22	-->	dusted (~dusted@152.115.62.134) has joined ##c++
2014-11-28 08:35:32	jeaye	beaky: std::function?
2014-11-28 08:36:05	jeaye	They can be expensive to copy.
2014-11-28 08:36:10	-->	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-28 08:36:40	beaky	so this is bad? template<typename F> void foo(F f)
2014-11-28 08:36:51	beaky	should i use const F& instead
2014-11-28 08:36:56	jeaye	That should be F &&
2014-11-28 08:37:02	jeaye	Or F const &
2014-11-28 08:37:32	beaky	ah
2014-11-28 08:37:51	jeaye	The former allows for better forwarding.
2014-11-28 08:37:57	beaky	btw why are std::functions expensive to copy
2014-11-28 08:38:45	jeaye	std::function uses tricksy type erasure to be generic.
2014-11-28 08:39:02	jeaye	This generally comes at a cost of dynamic allocations.
2014-11-28 08:39:04	beaky	type erasure sounds like magick :D
2014-11-28 08:40:11	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-28 08:40:50	-->	shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-28 08:41:01	--	murrekatt_ is now known as murrekatt
2014-11-28 08:41:48	-->	nilsi (~nilsi@183.101.241.130) has joined ##c++
2014-11-28 08:41:58	beaky	btw what type does f get in something like "auto f = [](){};"
2014-11-28 08:42:00	--	murrekatt is now known as murrekatt_
2014-11-28 08:42:47	-->	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-28 08:42:47	K-ballo	beaky: one only the compiler nows
2014-11-28 08:43:05	K-ballo	the compiler generates a new type for each lambda
2014-11-28 08:43:08	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 08:43:26	jeaye	beaky: lambda types are implementation defined.
2014-11-28 08:43:33	K-ballo	*knows
2014-11-28 08:43:38	beaky	ah
2014-11-28 08:43:40	jeaye	beaky: All you know is that it's a callable with the given signature.
2014-11-28 08:43:58	beaky	so whats the best way to design a function to accept lambadas
2014-11-28 08:44:06	jeaye	beaky: std::function
2014-11-28 08:44:10	beaky	oh
2014-11-28 08:44:13	K-ballo	a templated function
2014-11-28 08:44:22	<--	fjellfras (~fjellfras@117.244.33.198) has quit (Quit: Leaving)
2014-11-28 08:44:28	beaky	why not template<typename F> void foo(F&& f)
2014-11-28 08:44:29	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 264 seconds)
2014-11-28 08:44:29	--	shintahW2 is now known as shintahW
2014-11-28 08:44:30	jeaye	K-ballo: function template
2014-11-28 08:44:32	<--	woozly (~woozly@unaffiliated/woozly) has quit (Read error: Connection reset by peer)
2014-11-28 08:44:32	--	murrekatt_ is now known as murrekatt
2014-11-28 08:44:39	b_jonas	I have a question about overloading. In this code, the constructor call Rd(r) is ambiguous => http://rextester.com/VFX60912
2014-11-28 08:44:51	K-ballo	beaky: yes, exactly
2014-11-28 08:44:53	beaky	then maybe F can be a concept :D
2014-11-28 08:45:17	-->	oleo (~oleo@xdsl-78-35-164-209.netcologne.de) has joined ##c++
2014-11-28 08:45:22	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Read error: Connection reset by peer)
2014-11-28 08:45:46	jeaye	beaky: std::function also allows things like parameter binding, etc. You can just allow and F, sure, but it'll become very difficult to validate, for example, the callable's signature.
2014-11-28 08:45:46	b_jonas	I'd like to use the Ri::operator Rd() conversion operator to convert r to Rd directly, but the compiler says it's ambiguous because it tries to convert through Cr instead.
2014-11-28 08:45:59	jeaye	beaky: With std::function, you have that information available to you.
2014-11-28 08:46:08	b_jonas	However, apparently if I try to convert implicitly like Rd s = r; then it's no longer ambiguous
2014-11-28 08:46:26	K-ballo	beaky: but don't pay for std::function if you don't need it
2014-11-28 08:46:33	b_jonas	Is there a nice way to convert in an expression (no separate variable) such that it's not ambiguous?
2014-11-28 08:46:46	TinoDidriksen	You can cast r
2014-11-28 08:47:01	b_jonas	TinoDidriksen: cast how? static_cast<Rd>(r) has the same ambiguity
2014-11-28 08:47:01	jeaye	beaky: Imagine trying to calculate the number of params the F callable expects, for example. You'd need to trait to handle function pointers, std::function, and other callables.
2014-11-28 08:47:18	beaky	ah
2014-11-28 08:47:41	b_jonas	for context, Cr, Rd, Ri are reduced testcase versions of real classes from a library that I didn't write, so I would prefer not to modify those classes
2014-11-28 08:47:43	jeaye	With std::function, that information is available in the type.
2014-11-28 08:47:45	b_jonas	but I can change my main
2014-11-28 08:48:01	TinoDidriksen	b_jonas, maybe mark Rd(const Cr& r) explicit?
2014-11-28 08:48:01	b_jonas	(the actual classes are more complicated, but I hope this models the problem enough)
2014-11-28 08:48:20	-->	Khoyo (~Khoyo@dan75-3-82-226-19-191.fbx.proxad.net) has joined ##c++
2014-11-28 08:48:21	--	Khoyo is now known as Guest9824
2014-11-28 08:48:21	jeaye	beaky: template <typename R, typename... Args> void foo(std::function<R (Args...)> const &f){ }
2014-11-28 08:48:35	<--	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has quit
2014-11-28 08:48:43	b_jonas	TinoDidriksen: even if I changed Rd, which I don't really want, I think that could break some existing code.
2014-11-28 08:48:52	-->	tdc_ (~tdc@42.Red-2-140-9.dynamicIP.rima-tde.net) has joined ##c++
2014-11-28 08:48:53	<--	tdc_ (~tdc@42.Red-2-140-9.dynamicIP.rima-tde.net) has quit (Max SendQ exceeded)
2014-11-28 08:48:54	<--	p|q (~plq@78.179.94.26) has quit (Ping timeout: 264 seconds)
2014-11-28 08:49:00	K-ballo	geordi: { foo([](int){}); } template <typename R, typename ...Args> void foo(std::function<R(Args...)> const&){} // what??
2014-11-28 08:49:00	geordi	error: no matching function for call to 'foo(main(int, char**)::<lambda(int)>)'
2014-11-28 08:49:04	b_jonas	that constructor wants to be an implicit conversion
2014-11-28 08:49:13	<--	BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Quit: Leaving)
2014-11-28 08:49:35	--	Guest9824 is now known as Khoyo
2014-11-28 08:49:44	<--	Khoyo (~Khoyo@dan75-3-82-226-19-191.fbx.proxad.net) has quit (Changing host)
2014-11-28 08:49:44	-->	Khoyo (~Khoyo@fsf/member/khoyo) has joined ##c++
2014-11-28 08:49:52	<--	nilsi (~nilsi@183.101.241.130) has quit (Ping timeout: 264 seconds)
2014-11-28 08:50:20	jeaye	{ foo([](int){}); } template <typename F> void foo(std::function<F> const &f){ }
2014-11-28 08:50:20	geordi	Same error.
2014-11-28 08:50:48	K-ballo	you either have deduced types or implicit conversions, not both
2014-11-28 08:50:49	-->	urbanizator (8fa9c4c0@gateway/web/cgi-irc/kiwiirc.com/ip.143.169.196.192) has joined ##c++
2014-11-28 08:51:09	jeaye	My mistake.
2014-11-28 08:51:31	<--	tdc (~tdc@195.Red-95-127-91.staticIP.rima-tde.net) has quit (Ping timeout: 260 seconds)
2014-11-28 08:51:56	-->	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-28 08:52:03	jeaye	beaky: In this case, you'll need F&& and you should write whatever traits you can to ensure people use your interfaces without much trouble.
2014-11-28 08:52:08	jeaye	K-ballo: Thanks.
2014-11-28 08:52:33	K-ballo	if you need to ensure an interface, then void foo(function<int(float, double)>) will do the trick, for a cost
2014-11-28 08:52:35	-->	hypebeast (pi@g231040184.adsl.alicedsl.de) has joined ##c++
2014-11-28 08:53:02	K-ballo	my recommendation would be if you are going to need that function<whatever> along the way, then take it early.. otherwise, don't pay for it
2014-11-28 08:53:41	-->	tdc (~tdc@42.Red-2-140-9.dynamicIP.rima-tde.net) has joined ##c++
2014-11-28 08:53:48	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-28 08:54:19	-->	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has joined ##c++
2014-11-28 08:55:14	--	murrekatt is now known as murrekatt_
2014-11-28 08:55:29	<--	hypebeas1 (pi@g231038035.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-11-28 08:55:56	<--	jagob (~jacob@h145.natout.aau.dk) has quit (Ping timeout: 255 seconds)
2014-11-28 08:57:14	-->	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 08:57:26	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 08:57:27	-->	stakewinner00 (~stakewinn@41.104.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-28 08:57:44	-->	hypebeas1 (pi@g229020040.adsl.alicedsl.de) has joined ##c++
2014-11-28 08:58:20	<--	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 08:58:33	davidstone	jeaye: What K-ballo means by saying "don't pay for it" is that putting your callable object into std::function has a performance penalty. If it would work just as fine to say template<typename Function>, then just do that
2014-11-28 08:58:39	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 08:58:45	<--	hypebeast (pi@g231040184.adsl.alicedsl.de) has quit (Ping timeout: 272 seconds)
2014-11-28 08:59:15	<--	byteoverfl0w (~byteoverf@unaffiliated/byteoverfl0w) has quit (Remote host closed the connection)
2014-11-28 08:59:54	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Client Quit)
2014-11-28 09:00:57	-->	g4r37h (~g4r37h@host86-186-31-44.range86-186.btcentralplus.com) has joined ##c++
2014-11-28 09:01:54	<--	qwertzui11 (~Thunderbi@chello080109079053.13.15.vie.surfer.at) has quit (Ping timeout: 272 seconds)
2014-11-28 09:02:18	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 09:03:52	jeaye	davidstone: Why're you telling me this?
2014-11-28 09:04:09	<--	urbanizator (8fa9c4c0@gateway/web/cgi-irc/kiwiirc.com/ip.143.169.196.192) has left ##c++
2014-11-28 09:04:25	-->	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has joined ##c++
2014-11-28 09:04:29	jeaye	I was explaining that penalty before K-ballo came into the conversation.
2014-11-28 09:04:47	<--	hypebeas1 (pi@g229020040.adsl.alicedsl.de) has quit (Ping timeout: 256 seconds)
2014-11-28 09:04:52	jeaye	davidstone: Perhaps you meant to highlight beaky.
2014-11-28 09:05:22	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 09:07:00	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-11-28 09:07:27	davidstone	Yes, sorry
2014-11-28 09:07:32	-->	byteoverfl0w (~byteoverf@unaffiliated/byteoverfl0w) has joined ##c++
2014-11-28 09:07:42	-->	wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-28 09:07:42	davidstone	I just didn't scroll back far enough
2014-11-28 09:07:56	-->	hypebeast (pi@g231035152.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:08:18	davidstone	Please ignore me
2014-11-28 09:08:55	-->	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has joined ##c++
2014-11-28 09:08:55	<--	zacg (~zacg@dhcp-0-25-9c-41-1e-3f.cpe.wightman.ca) has quit (Changing host)
2014-11-28 09:08:55	-->	zacg (~zacg@unaffiliated/zacg) has joined ##c++
2014-11-28 09:09:07	<--	yeticry (~yeticry@60.168.85.103) has quit (Ping timeout: 244 seconds)
2014-11-28 09:09:47	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-28 09:09:51	-->	jagob (~jacob@h145.natout.aau.dk) has joined ##c++
2014-11-28 09:10:26	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-28 09:11:29	<--	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-28 09:11:30	-->	yeticry (~yeticry@223.240.106.46) has joined ##c++
2014-11-28 09:11:34	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-28 09:12:04	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-28 09:12:10	<--	condy (~condy@unaffiliated/condy) has quit (Quit: leaving)
2014-11-28 09:13:02	-->	hypebeas1 (pi@g231038075.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:13:20	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 09:13:25	-->	seishun (~Kakera@46.109.96.47) has joined ##c++
2014-11-28 09:13:30	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-28 09:13:41	<--	hypebeast (pi@g231035152.adsl.alicedsl.de) has quit (Ping timeout: 245 seconds)
2014-11-28 09:14:14	b_jonas	um, any other suggestion then?
2014-11-28 09:14:41	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Read error: Connection reset by peer)
2014-11-28 09:14:59	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 09:16:20	-->	Backinside (~Thunderbi@37.191.41.161) has joined ##c++
2014-11-28 09:16:54	-->	ctrsl (c0b0ed05@gateway/web/freenode/ip.192.176.237.5) has joined ##c++
2014-11-28 09:16:56	-->	akiva-thinkpad (~akiva-thi@38.108.79.102) has joined ##c++
2014-11-28 09:17:13	akiva-thinkpad	what is the name of the << and >> operators?
2014-11-28 09:17:34	TinoDidriksen	left-shift and right-shift
2014-11-28 09:17:41	akiva-thinkpad	TinoDidriksen, thanks
2014-11-28 09:17:48	-->	safinaskar (~user@188.234.28.9) has joined ##c++
2014-11-28 09:18:31	b_jonas	it appears that casting with ret_cast instead of static_cast works without ambiguity after the definition template <typename To, typename From> inline To ret_cast(From &&x) { return std::forward<From>(x); }
2014-11-28 09:20:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 09:20:54	-->	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has joined ##c++
2014-11-28 09:21:10	kafor7	Hello, Can I disable atomicity with lock function if I don't use threads ?
2014-11-28 09:22:00	ville	kafor7: what lock function?
2014-11-28 09:22:02	PlasmaHH	dont use atomic types then?
2014-11-28 09:22:20	kafor7	from weak_ptr, sorry I didn't say that
2014-11-28 09:22:32	-->	Hatraz (~Hatraz@99-60-73-69.lightspeed.frokca.sbcglobal.net) has joined ##c++
2014-11-28 09:22:38	PlasmaHH	is it a performance bottlneck for you?
2014-11-28 09:22:49	ville	not that i know off. perhaps some implementation can do it for you but nothing in the standard.
2014-11-28 09:23:03	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-28 09:23:03	kafor7	not yet, but I use it intensively
2014-11-28 09:23:09	<--	swatti (~mail@business-89-132-60-56.business.broadband.hu) has quit (Remote host closed the connection)
2014-11-28 09:23:29	PlasmaHH	!rule 1
2014-11-28 09:23:30	nolyc	Make things work. Profile. Make things fast. In this order.
2014-11-28 09:23:50	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 09:24:46	-->	hypebeast (pi@g230222185.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:25:07	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 09:25:12	kafor7	I decided to use weak_ptr in order to avoid cycles since I can have quite complex relationships and there is only a class Scene that holds all my shared pointers
2014-11-28 09:25:23	b_jonas	kafor7: those locks and atomic counters are all optimized in such a way that if only one thread uses them then they're fast
2014-11-28 09:25:42	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Quit: Leaving)
2014-11-28 09:25:43	b_jonas	they can be slow only if multiple threads try to access the objects close to the same time
2014-11-28 09:25:46	b_jonas	so don't worry about them
2014-11-28 09:25:50	kafor7	ok, so I don't touch it right know, since it's not a big problem
2014-11-28 09:25:55	<--	dusted (~dusted@152.115.62.134) has quit (Ping timeout: 272 seconds)
2014-11-28 09:27:29	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 09:27:58	<--	hypebeas1 (pi@g231038075.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-11-28 09:29:18	-->	yarl_ (~yarl_@ANantes-656-1-37-24.w2-0.abo.wanadoo.fr) has joined ##c++
2014-11-28 09:29:57	-->	hypebeas1 (pi@g230222241.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:30:13	<--	timj1 (~timj@p5DDB28AA.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-28 09:30:58	<--	hypebeast (pi@g230222185.adsl.alicedsl.de) has quit (Ping timeout: 272 seconds)
2014-11-28 09:31:02	<--	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2014-11-28 09:31:42	-->	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has joined ##c++
2014-11-28 09:31:58	<--	SiGe_ (~SiGe@38.98.52.199) has quit (Ping timeout: 258 seconds)
2014-11-28 09:32:44	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-28 09:33:42	<--	byteoverfl0w (~byteoverf@unaffiliated/byteoverfl0w) has quit (Quit: Leaving... have a good one...)
2014-11-28 09:34:44	-->	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-28 09:34:55	-->	hypebeast (pi@g231039229.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:34:56	-->	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-11-28 09:35:19	-->	aslant (~aslant@94.197.121.81.threembb.co.uk) has joined ##c++
2014-11-28 09:35:35	-->	Anuj_ (~anuj@202.3.77.231) has joined ##c++
2014-11-28 09:35:53	<--	Anuj_ (~anuj@202.3.77.231) has left ##c++
2014-11-28 09:35:58	<--	hypebeas1 (pi@g230222241.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-11-28 09:36:16	<--	Khoyo (~Khoyo@fsf/member/khoyo) has quit (Ping timeout: 250 seconds)
2014-11-28 09:36:29	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has quit (Read error: Connection reset by peer)
2014-11-28 09:37:07	-->	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has joined ##c++
2014-11-28 09:37:29	<--	leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-11-28 09:37:30	<--	Vlx (~tomal@180.234.246.201) has quit (Quit: Konversation terminated!)
2014-11-28 09:38:20	-->	dusted (~dusted@152.115.62.134) has joined ##c++
2014-11-28 09:38:53	<--	Gravitron (Gravity@2600:3c03::f03c:91ff:fe50:2f4a) has quit (Changing host)
2014-11-28 09:38:53	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-28 09:39:16	-->	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has joined ##c++
2014-11-28 09:39:54	-->	hypebeas1 (pi@g231034057.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:40:41	-->	hexagoxel (~hexagoxel@195.244.237.55) has joined ##c++
2014-11-28 09:40:45	<--	hypebeast (pi@g231039229.adsl.alicedsl.de) has quit (Ping timeout: 258 seconds)
2014-11-28 09:40:58	--	Sadale is now known as Sadale2
2014-11-28 09:41:08	--	Sadale2 is now known as Sadale
2014-11-28 09:41:27	-->	p|q (~plq@78.189.180.67) has joined ##c++
2014-11-28 09:41:31	PlasmaHH	kafor7: your real problem lies elsewhere
2014-11-28 09:43:21	b_jonas	here's an extended version of the same: http://rextester.com/FFTJ67626
2014-11-28 09:44:51	<--	hypebeas1 (pi@g231034057.adsl.alicedsl.de) has quit (Ping timeout: 245 seconds)
2014-11-28 09:45:00	PlasmaHH	or objects close in memory to each other
2014-11-28 09:45:19	-->	hypebeast (pi@g231034233.adsl.alicedsl.de) has joined ##c++
2014-11-28 09:45:33	-->	timj (~timj@195.82.63.198) has joined ##c++
2014-11-28 09:45:46	<--	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-28 09:46:03	<--	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has quit (Remote host closed the connection)
2014-11-28 09:47:02	-->	tuxdev_ (~tim@pool-98-108-202-191.snloca.dsl-w.verizon.net) has joined ##c++
2014-11-28 09:47:02	<--	tuxdev_ (~tim@pool-98-108-202-191.snloca.dsl-w.verizon.net) has quit (Changing host)
2014-11-28 09:47:02	-->	tuxdev_ (~tim@unaffiliated/tuxdev) has joined ##c++
2014-11-28 09:47:02	b_jonas	is there a proper name for what I cann ret_cast by the way?
2014-11-28 09:47:08	b_jonas	s/cann/call/
2014-11-28 09:47:11	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-28 09:47:48	davidstone	implicit_cast
2014-11-28 09:48:01	davidstone	seems about correct
2014-11-28 09:48:27	davidstone	Or "convert"
2014-11-28 09:48:29	<--	jagob (~jacob@h145.natout.aau.dk) has quit (Ping timeout: 265 seconds)
2014-11-28 09:49:02	davidstone	Your function will only work if std::is_convertible<From, To &&>::value
2014-11-28 09:49:08	b_jonas	davidstone: basically yes
2014-11-28 09:49:14	<--	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 250 seconds)
2014-11-28 09:49:15	davidstone	Sorry, From &&, To
2014-11-28 09:49:43	-->	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has joined ##c++
2014-11-28 09:49:52	b_jonas	it's sort of the opposite of the cast_damnit_cast
2014-11-28 09:50:11	<--	thecha (~cha@unaffiliated/thecha) has quit (Quit: Ex-Chat)
2014-11-28 09:50:13	<--	PSvils (~programme@87.110.179.226) has left ##c++
2014-11-28 09:50:23	b_jonas	I originally wanted this because it won't cast a superclass to a subclass silently like a static_cast does, but it seems handy here too
2014-11-28 09:50:28	-->	ehiggs (~ehiggs@gast044c.ugent.be) has joined ##c++
2014-11-28 09:51:41	-->	Ysgard (~Ysgard@69.196.72.54) has joined ##c++
2014-11-28 09:52:03	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Quit: This computer has gone to sleep)
2014-11-28 09:53:02	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-28 09:53:09	ehiggs	hi all. quick one. I have 2 vectors. one is a vector of strings used as a look up table for another vector. When I find a word in vec1 (vocabulary) I would like to increment the corresponding entry in vec2 (count). binary_search returns an iterator; not an index. Does anyone know an easy way to get from iterator -> index?
2014-11-28 09:53:48	davidstone	it - v.begin() solves your immediate problem
2014-11-28 09:53:54	-->	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has joined ##c++
2014-11-28 09:54:07	davidstone	But can you just store all of the values into your original vector?
2014-11-28 09:54:20	davidstone	Is there a reason you have to maintain two separate but paired vectors?
2014-11-28 09:54:37	ehiggs	i have one vocabulary and basically a matrix of values.
2014-11-28 09:55:03	<--	saedelaere (~quassel@unaffiliated/saedelaere) has quit (Remote host closed the connection)
2014-11-28 09:55:58	ehiggs	so it wouldn't make sense to use a struct here, i think. i would like to also pass my data to a cblas impl. (maybe vector can't be used that way, which is fine, i'll convert to double* or unique_ptr<double>
2014-11-28 09:56:04	LBV_User	ehiggs: have you thought on using a std::map?
2014-11-28 09:56:34	davidstone	A sorted std::vector has much better look-up performance than std::map
2014-11-28 09:56:36	-->	zima (zima@173.182.129.48) has joined ##c++
2014-11-28 09:56:49	ehiggs	LBV_User: yeah, that's probably what I'll do if there's no easy way to jump between vector iterators and indices. I thought vector might be nicer for cache locality purposes.
2014-11-28 09:56:58	PlasmaHH	yeah, one is logN, the other is logN
2014-11-28 09:57:04	davidstone	I talk about these types of issues in my C++ talk: http://www.youtube.com/watch?v=mMpBw7S2cqw
2014-11-28 09:57:11	davidstone	Complexity is just an estimate
2014-11-28 09:57:17	davidstone	The constants matter for the real world
2014-11-28 09:57:32	PlasmaHH	if they matter so much, dont use code you dont have control over
2014-11-28 09:57:41	ehiggs	tbh if i want better performance i should really use std::hash<std::string>
2014-11-28 09:58:00	davidstone	Yes, that might get you better performance
2014-11-28 09:58:15	ehiggs	then i might have to deal with collisons. :(
2014-11-28 09:58:17	davidstone	Depending on the size of your inputs
2014-11-28 09:58:20	-->	hyperboreean (~none@unaffiliated/hyperboreean) has joined ##c++
2014-11-28 09:58:22	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-28 09:58:23	davidstone	It almost certain will do better than std::map
2014-11-28 09:58:42	<--	ctrsl (c0b0ed05@gateway/web/freenode/ip.192.176.237.5) has quit (Quit: Page closed)
2014-11-28 09:58:45	ehiggs	anyway, I'll try the it - v.begin() expression first. thanks
2014-11-28 09:59:23	<--	HerzogDeXtEr1 (~flex@i59F6AF96.versanet.de) has quit (Quit: Leaving.)
2014-11-28 09:59:49	-->	japro (~japro@52-239.197-178.cust.bluewin.ch) has joined ##c++
2014-11-28 10:00:24	-->	tcsc (~tcsc@c-76-127-240-20.hsd1.ct.comcast.net) has joined ##c++
2014-11-28 10:00:27	LBV_User	just wondering, v.end()-it will get the distance from the actual end of the vector?
2014-11-28 10:00:55	davidstone	Yes
2014-11-28 10:00:56	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-28 10:01:18	-->	jagob (~jacob@h145.natout.aau.dk) has joined ##c++
2014-11-28 10:01:41	<--	WormDr1nk (~CustosLim@unaffiliated/cust0slim3n) has quit (Ping timeout: 244 seconds)
2014-11-28 10:01:46	davidstone	Consider a vector with elements { 0, 1, 2 }. If it is an iterator to v[1] ( == 1), it - begin() is 1, and end() - it is 2
2014-11-28 10:01:54	b_jonas	(though I'll have to modify this definition of ret_cast because it doesn't allow casting to void)
2014-11-28 10:02:04	<--	saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-11-28 10:02:06	davidstone	There is one element before your pointed-to element, and there are two elements (including the pointed-to element) left in the vector
2014-11-28 10:02:34	-->	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-28 10:02:48	<--	Gvidon (~gvidon@unaffiliated/gvidon) has quit (Quit: Leaving.)
2014-11-28 10:04:36	<--	safinaskar (~user@188.234.28.9) has quit (Read error: Connection reset by peer)
2014-11-28 10:04:56	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-28 10:05:10	<--	ColloquyUser (~Tolken_@modemcable146.17-83-70.mc.videotron.ca) has quit (Client Quit)
2014-11-28 10:05:13	-->	Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-11-28 10:07:50	<--	Rutix (~rutix@april-fools/2013/runnerup/Rutix) has quit (Ping timeout: 255 seconds)
2014-11-28 10:08:02	-->	feher (c140911d@gateway/web/freenode/ip.193.64.145.29) has joined ##c++
2014-11-28 10:08:42	-->	Rutix (~rutix@77-175-88-246.FTTH.ispfabriek.nl) has joined ##c++
2014-11-28 10:08:42	<--	Rutix (~rutix@77-175-88-246.FTTH.ispfabriek.nl) has quit (Changing host)
2014-11-28 10:08:42	-->	Rutix (~rutix@april-fools/2013/runnerup/Rutix) has joined ##c++
2014-11-28 10:08:50	-->	Adriaan (~adriaan@unaffiliated/adriaan) has joined ##c++
2014-11-28 10:08:51	-->	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 10:09:39	<--	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-28 10:09:44	Adriaan	Hi, i'd like to keep a "list" with two indices (I want to retrieve an element from the list using either index 1 or index 2), in which kind of class/lib should I look? I prefer boost.
2014-11-28 10:09:48	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 10:09:57	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-11-28 10:10:25	<--	aslant (~aslant@94.197.121.81.threembb.co.uk) has quit (Ping timeout: 250 seconds)
2014-11-28 10:10:43	-->	Spec-Chum (~Spec-Chum@94.2.107.192) has joined ##c++
2014-11-28 10:11:55	ehiggs	the subtraction appears to work well. thanks davidstone. also listening to your talk
2014-11-28 10:13:11	b_jonas	oh argh!
2014-11-28 10:13:12	ehiggs	knock on question; in looking this stuff up i see the new for (auto blah : blahs) { ...} ; this doesn't give me an iterator but uses a reference to the actual value. is this about the same performance wise as iterating using the verbose old for(blah::const_iterator b_it = blahs.begin()... /* 7 years later */ )  {
2014-11-28 10:13:35	b_jonas	even with a helper class, I don't know how to modify this so it works for casting to void
2014-11-28 10:13:41	b_jonas	is there even a way in c++11?
2014-11-28 10:13:53	b_jonas	presumably in future c++ I could just use function specializations
2014-11-28 10:14:49	b_jonas	how do I write a template function that may return an object or void? I'm not allowed to have a return statement in the body if it returns void
2014-11-28 10:14:53	ehiggs	Adriaan: you have two indices? IndexType[2]
2014-11-28 10:15:10	<--	batmoz (~quassel@foo.kassala.de) has quit (Ping timeout: 258 seconds)
2014-11-28 10:15:26	-->	dogukan (~dogukan@unaffiliated/dogukan) has joined ##c++
2014-11-28 10:15:34	dogukan	hi
2014-11-28 10:16:18	-->	batmoz (~quassel@foo.kassala.de) has joined ##c++
2014-11-28 10:16:20	b_jonas	maybe I have to make two overloads, and make the second one templated too, but restrict it with an enable_if ?
2014-11-28 10:16:23	b_jonas	let me try that
2014-11-28 10:17:22	-->	doev (~doev@p4FE117EB.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 10:17:31	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-28 10:19:19	-->	oleo__ (~oleo@xdsl-84-44-177-214.netcologne.de) has joined ##c++
2014-11-28 10:19:36	dogukan	i am trying to save an object into binary file and after i restarted the program, i am trying to read that object again (object doesn't contain a pointer but it contains a vector object), i am trying to write it with out.write((char *)&manufacturer, sizeof(manufacturer)); (manifacturer is my object) and read it with in.read((char *)&manufacturer, sizeof(manufacturer));
2014-11-28 10:19:36	--	oleo is now known as Guest89591
2014-11-28 10:19:37	Adriaan	ehiggs: (I'm not able to find anything about IndexType on google) I have a list of objects, and I want to retrieve an object by a property
2014-11-28 10:19:49	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 10:19:59	Adriaan	ehiggs: and, two of the properties are unique integers
2014-11-28 10:20:20	b_jonas	yes, two template overloads seem to work:
2014-11-28 10:20:28	b_jonas	http://rextester.com/CAN40714
2014-11-28 10:20:45	<--	Guest89591 (~oleo@xdsl-78-35-164-209.netcologne.de) has quit (Ping timeout: 244 seconds)
2014-11-28 10:20:49	dogukan	but i think reading fails, program crashes after i restart it and use object again
2014-11-28 10:22:29	<--	kerberosio (~hello@firewall.reference.be) has quit
2014-11-28 10:22:47	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-28 10:23:04	dogukan	what do i missing with binary files?
2014-11-28 10:23:34	ehiggs	Adriaan: I mean't just an array of whatever your index type is.
2014-11-28 10:23:59	ehiggs	so for you I guess size_t[2].
2014-11-28 10:24:17	<--	tk` (~tk@89-73-166-72.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2014-11-28 10:24:24	b_jonas	though this has the drawback that it gives ugly error messages when it fails
2014-11-28 10:24:25	-->	safinaskar (~user@188.234.28.9) has joined ##c++
2014-11-28 10:24:26	<--	japro (~japro@52-239.197-178.cust.bluewin.ch) has quit (Ping timeout: 240 seconds)
2014-11-28 10:24:39	-->	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has joined ##c++
2014-11-28 10:24:42	b_jonas	let me try to improve that by putting the sfinae in a default parameter or something
2014-11-28 10:25:14	Adriaan	ehiggs: good idea,  thanks
2014-11-28 10:28:24	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 10:28:39	-->	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-28 10:29:37	-->	revil (~janis@guest-106.mpi-inf.mpg.de) has joined ##c++
2014-11-28 10:30:18	b_jonas	ok, now it also gives a better error message when it can't convert => http://rextester.com/FQWZ2256
2014-11-28 10:30:32	<--	dogukan (~dogukan@unaffiliated/dogukan) has quit (Quit: Konversation terminated!)
2014-11-28 10:30:57	<--	LBV_User (~leonardo@177.2.128.75) has quit (Quit: done with this Instant Ramen Cup)
2014-11-28 10:31:01	b_jonas	is it bad style to put sfinae tricks in a dummy extra argument with a default value like that?
2014-11-28 10:31:13	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-28 10:31:14	Adriaan	ehiggs: sorry, can you help me a little? Say my class looks like { index1, index2, someinfo }, how would I build this array?
2014-11-28 10:31:29	<--	feher (c140911d@gateway/web/freenode/ip.193.64.145.29) has quit (Quit: Page closed)
2014-11-28 10:31:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 10:32:15	revil	Hi guys! Is this construct always valid in C++? In specific to typedef the base class. Or should I do what is mentioned in PortableCodeIterator? (c.f.:  http://ideone.com/le91jf  )
2014-11-28 10:32:20	-->	Lowl3v3l_ (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has joined ##c++
2014-11-28 10:32:55	<--	roxlu (~roxlu@5469B62A.cm-12-2c.dynamic.ziggo.nl) has quit (Quit: roxlu)
2014-11-28 10:33:20	b_jonas	revil: why do you even want to add a value_type member?
2014-11-28 10:33:36	revil	b_jonas, otherwise I vcan't use it in the function body
2014-11-28 10:33:37	b_jonas	revil: why not just use the inherited value_type?
2014-11-28 10:33:40	<--	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has quit (Remote host closed the connection)
2014-11-28 10:33:47	b_jonas	hmm
2014-11-28 10:33:59	ehiggs	struct A { size_t[2] index; someinfo ...} ;
2014-11-28 10:34:08	Oxyd	revil: http://ideone.com/sd6GVX -- why not just this?
2014-11-28 10:34:10	ehiggs	size_t index[2] pardon
2014-11-28 10:35:15	-->	Nuk0rg (~user@sla34-3-78-232-85-60.fbx.proxad.net) has joined ##c++
2014-11-28 10:35:26	<--	Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has quit (Ping timeout: 258 seconds)
2014-11-28 10:36:13	<--	dusted (~dusted@152.115.62.134) has quit (Ping timeout: 244 seconds)
2014-11-28 10:36:19	<--	Nuk0rg (~user@sla34-3-78-232-85-60.fbx.proxad.net) has left ##c++
2014-11-28 10:36:24	<--	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 245 seconds)
2014-11-28 10:36:39	revil	http://ideone.com/le91jf
2014-11-28 10:37:06	revil	sorry guys, b_jonas and Oxyd , I simplified the testcase too much. The correct testcase should look like: http://ideone.com/le91jf
2014-11-28 10:37:46	Oxyd	Oh, a dependent base. Well, sure, you can do line 11 if you want.
2014-11-28 10:37:54	<--	kapil__ (uid36151@gateway/web/irccloud.com/x-gktyevdpkxgbspnb) has quit (Quit: Connection closed for inactivity)
2014-11-28 10:38:22	<--	safinaskar (~user@188.234.28.9) has quit (Read error: Connection reset by peer)
2014-11-28 10:38:35	revil	Oxyd, is it portable enough? Do you have any references about it
2014-11-28 10:38:35	revil	?
2014-11-28 10:38:56	b_jonas	revil: oh, ok. in that case, I don't know the ansewr.
2014-11-28 10:39:04	<--	oleo__ (~oleo@xdsl-84-44-177-214.netcologne.de) has quit (Quit: Verlassend)
2014-11-28 10:39:18	<--	Havacci (~Havacci@unaffiliated/havacci) has quit (Quit: Leaving)
2014-11-28 10:39:56	ville	since you can do: void f() { auto g = []() {}; } why didn't they just allow void f() { void g() {} };?
2014-11-28 10:40:30	b_jonas	ville: how would you pre-declare such a nested function?
2014-11-28 10:40:42	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-28 10:40:48	Oxyd	revil: References?
2014-11-28 10:40:59	ville	b_jonas: how would you pre-declare such nested lambda?
2014-11-28 10:41:23	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Quit: Leaving.)
2014-11-28 10:41:30	-->	snyp (~Snyp@150.129.132.54) has joined ##c++
2014-11-28 10:42:05	b_jonas	ville: hmm... no idea, I'd probably have to expand them to a real class (nested or global) instead of lambda
2014-11-28 10:42:12	Adriaan	thnks ehiggs, it worked
2014-11-28 10:42:19	b_jonas	ville: and would such a nested function bind anything?
2014-11-28 10:42:24	revil	Oxyd, references on the c++11 standard
2014-11-28 10:42:25	ville	they are real classes. they just are some implementation specific thing.
2014-11-28 10:42:55	ville	anyway that's slightly besides the point i would argue.
2014-11-28 10:43:03	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 10:43:32	b_jonas	ville: they might be classes, but I can't name them, so I can't declare eg. a variable holding a reference to such a lambda before I write the actual lambda
2014-11-28 10:43:49	b_jonas	whereas I can declare a named class, refer to it by name, and define it later.
2014-11-28 10:44:07	<--	kez (~quassel@inet2.evalesco.com) has quit (Remote host closed the connection)
2014-11-28 10:45:09	Oxyd	revil: What kind of reference are you looking for? The typedef keyword?
2014-11-28 10:45:25	ville	the latter could have been just syntactic sugar for the first
2014-11-28 10:45:30	revil	Oxyd, I remember something about teplate typedef pulling, yes..
2014-11-28 10:45:38	revil	actually a keyword I can lookup
2014-11-28 10:45:52	-->	chatsiri_ (~chatsiri_@49.230.179.212) has joined ##c++
2014-11-28 10:45:53	--	alamar is now known as julian
2014-11-28 10:45:56	revil	but never mind, I will go for the safest "portable" way.. :)
2014-11-28 10:46:00	-->	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has joined ##c++
2014-11-28 10:46:00	--	julian is now known as alamar
2014-11-28 10:47:06	ville	it just all seems rather arbitrary that local "function" has to use drasticly different syntax. the scope where it's defined would have already told it's a local
2014-11-28 10:47:47	<--	SiGe (~SiGe@38.98.52.199) has quit (Ping timeout: 264 seconds)
2014-11-28 10:47:50	<--	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-11-28 10:48:07	<--	hs366 (~Ace@h-208-99.a163.corp.bahnhof.se) has quit (Quit: Leaving)
2014-11-28 10:48:40	b_jonas	ville: so would such a function bind any values?
2014-11-28 10:49:06	ville	probably not.
2014-11-28 10:49:34	<--	ehiggs (~ehiggs@gast044c.ugent.be) has quit (Quit: leaving)
2014-11-28 10:49:54	ville	or perhaps the compiler would have to be smart enough and see whether they are used in the body or not
2014-11-28 10:50:02	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-11-28 10:50:16	b_jonas	ville: anyway, as you probably know, some people wanted a simpler syntax for named lambdas, something like []foo(){}; being an abbreviation of auto foo = [](){}; and this would work in global scope,
2014-11-28 10:50:18	-->	oleo (~oleo@xdsl-84-44-177-214.netcologne.de) has joined ##c++
2014-11-28 10:50:44	ville	yeah well that's also boinkers. even more strange syntax when already existing syntax would do.
2014-11-28 10:50:49	ville	well "existing"
2014-11-28 10:50:51	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-28 10:50:52	b_jonas	and as you definitely know, even without captures, lambdas sometimes have a different meaning from ordinary functions, especially if overloading is involved.
2014-11-28 10:51:17	<--	revil (~janis@guest-106.mpi-inf.mpg.de) has quit (Quit: Leaving)
2014-11-28 10:51:40	b_jonas	like, I can add additional overloads to functions easily, even with templates involved, but I can't just add more overloads to a lambda.
2014-11-28 10:52:04	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-28 10:52:11	-->	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has joined ##c++
2014-11-28 10:52:19	--	Anoniem4l`afk is now known as Anoniem4l
2014-11-28 10:52:30	nido	I guess it may have to do with function declarations not fitting well within other functions. Imagine a extern function declared within another function, or just a definition. From first glance, one would need to specify restrictions to functions inside functions anyhow. The lambda makes sense since that saves a regular object into the variable which can be handled as such without needing special treatment
2014-11-28 10:52:31	ville	!give Anoniem4l away
2014-11-28 10:52:32	nolyc	Anoniem4l: We really do not care whether you are at your computer or not. That means you shall not switch nicks or indicate your status in any other way or form in the channel.
2014-11-28 10:52:53	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 240 seconds)
2014-11-28 10:53:05	b_jonas	so anyway, maybe nested functions could make sense, but you'd have to figure out what exactly they mean.
2014-11-28 10:53:36	Anoniem4l	ville you might don't care but you are not alone in this network.
2014-11-28 10:53:45	Anoniem4l	Learn to respect people.
2014-11-28 10:53:59	ville	Anoniem4l: upto you. disable it or don't be on this channel.
2014-11-28 10:54:05	lh_mouse	Anoniem4l, the same to you.
2014-11-28 10:54:22	<--	saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has quit (Ping timeout: 264 seconds)
2014-11-28 10:54:41	Anoniem4l	Wow, that complex.
2014-11-28 10:54:52	<--	dusted (~dusted@190-162-191-90.dyn.estpak.ee) has quit (Client Quit)
2014-11-28 10:54:56	<--	tsimpson_ (b903a4c7@ubuntu/member/stdin) has quit
2014-11-28 10:55:05	b_jonas	so does my definition of ret_cast at http://rextester.com/FQWZ2256 make sense? or is there a better way to write it?
2014-11-28 10:56:04	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-28 10:56:07	-->	a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-28 10:57:43	-->	ferdna (~ferdna@cpe-69-23-141-88.elp.res.rr.com) has joined ##c++
2014-11-28 10:58:34	-->	Rafaelfsilva (~Rafaelfsi@201.162.68.184) has joined ##c++
2014-11-28 10:58:44	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-28 10:59:34	-->	Munnu (~timo@91-158-128-16.elisa-laajakaista.fi) has joined ##c++
2014-11-28 11:00:16	-->	Bigpet4 (~bigpet@i5E86A45E.versanet.de) has joined ##c++
2014-11-28 11:01:35	<--	ikaros (~ikaros@dslb-178-002-158-150.178.002.pools.vodafone-ip.de) has quit (Quit: Ex-Chat)
2014-11-28 11:02:12	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-28 11:02:26	<--	seishun (~Kakera@46.109.96.47) has quit (Read error: Connection reset by peer)
2014-11-28 11:02:29	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-28 11:02:56	<--	p|q (~plq@78.189.180.67) has quit (Ping timeout: 256 seconds)
2014-11-28 11:03:45	-->	seishun (~Kakera@46.109.96.47) has joined ##c++
2014-11-28 11:04:42	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 11:05:04	<--	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has quit (Client Quit)
2014-11-28 11:06:05	PlasmaHH	what is it for?
2014-11-28 11:06:29	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-28 11:07:43	b_jonas	PlasmaHH: basically, I would like a cast that's similar to static_cast, except that it's safer in that it doesn't silently let me cast from superclass pointer to a subclass pointer.
2014-11-28 11:08:09	b_jonas	PlasmaHH: so basically this would almost work: template <typename To, typename From> inline To ret_cast(From &&x) { return std::forward<From>(x); }
2014-11-28 11:08:09	PlasmaHH	mhk
2014-11-28 11:08:36	b_jonas	it came up today that there's one more advantage of this over static_cast,
2014-11-28 11:08:49	PlasmaHH	so (for pointers to class types) you want it to behave like assignment to such pointer types only?
2014-11-28 11:09:22	b_jonas	namely http://rextester.com/OKJJ2907 shows a case when ret_cast does the right thing and calls a user-defined conversion operator, but static_cast doesn't work
2014-11-28 11:09:29	<--	kafor7 (594dd6f9@gateway/web/cgi-irc/kiwiirc.com/ip.89.77.214.249) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-11-28 11:09:31	b_jonas	PlasmaHH: yes
2014-11-28 11:10:03	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-28 11:10:07	b_jonas	then I started to wonder how I could modify this so it can cast to void (just like static_cast can),
2014-11-28 11:10:26	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Client Quit)
2014-11-28 11:10:41	b_jonas	but it turns out that even if I put the main work in a helper class I can specialize for void, it's not so easy to define a template function that returns either void or non-void
2014-11-28 11:10:45	-->	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has joined ##c++
2014-11-28 11:11:01	<--	xnavor (~xnavor@S010600131090f65c.ok.shawcable.net) has quit (Remote host closed the connection)
2014-11-28 11:11:23	b_jonas	eg. I can't just write template <typename To, typename From> inline To ret_cast(From &&x) { return ret_cast_helper::do_the_ret_cast(std::forward<From>(x)); }
2014-11-28 11:11:28	-->	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-28 11:11:29	spb	is it just me, or is this sounding as though you want a cast operator that has the same rules as implicit pointer conversions
2014-11-28 11:11:33	b_jonas	and then write ret_cast_helper and a specialized ret_cast_helper for void
2014-11-28 11:11:53	-->	EClaesson (~eclaesson@host-95-195-142-45.mobileonline.telia.com) has joined ##c++
2014-11-28 11:11:59	b_jonas	spb: the same rules as implicit conversions, but not only pointer conversions, I also want implicit numerical conversions
2014-11-28 11:12:11	b_jonas	eg. conversion from int to long, from long to int, from double to int, from int to double etc
2014-11-28 11:12:12	-->	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-11-28 11:12:32	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Remote host closed the connection)
2014-11-28 11:12:46	<--	doev (~doev@p4FE117EB.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-11-28 11:12:51	<--	Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 255 seconds)
2014-11-28 11:15:35	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 11:15:43	-->	scai (~scai@pD9EA68F9.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 11:17:18	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 11:20:29	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 11:20:43	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-28 11:22:04	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-28 11:22:29	<--	Burgundy (~burgundy@5-12-201-222.residential.rdsnet.ro) has quit (Ping timeout: 258 seconds)
2014-11-28 11:22:53	<--	EClaesson (~eclaesson@host-95-195-142-45.mobileonline.telia.com) has quit (Read error: Connection reset by peer)
2014-11-28 11:23:13	-->	EClaesson (~eclaesson@host-95-195-142-45.mobileonline.telia.com) has joined ##c++
2014-11-28 11:23:36	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 11:23:58	<--	lucasjones (~quassel@46.166.186.199) has quit (Remote host closed the connection)
2014-11-28 11:24:07	-->	lucasjones (~quassel@109.201.154.232) has joined ##c++
2014-11-28 11:24:44	-->	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has joined ##c++
2014-11-28 11:25:19	-->	Kulrak (kulrak@C-59-101-24-29.hay.connect.net.au) has joined ##c++
2014-11-28 11:25:19	<--	Kulrak (kulrak@C-59-101-24-29.hay.connect.net.au) has quit (Changing host)
2014-11-28 11:25:19	-->	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-28 11:25:33	<--	luke_penn (~luke_penn@147.162.183.190) has quit (Quit: Leaving)
2014-11-28 11:25:39	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-28 11:25:43	<--	Adriaan (~adriaan@unaffiliated/adriaan) has quit (Remote host closed the connection)
2014-11-28 11:26:40	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-28 11:27:11	<--	BellinganRoy (~Bellingan@host85-217-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Konversation terminated!)
2014-11-28 11:27:11	<--	Betal (~Beta@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2014-11-28 11:27:26	-->	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-28 11:28:50	-->	brennz (~brennz@pool-71-163-77-132.washdc.east.verizon.net) has joined ##c++
2014-11-28 11:29:07	<--	snyp (~Snyp@150.129.132.54) has quit (Quit: WeeChat 1.0.1)
2014-11-28 11:29:25	Ploppz	https://bpaste.net/show/2773a636d8ac in this example, is s_nValue accessible outside of the function?
2014-11-28 11:29:27	<--	avvs (~avvs@gateway/tor-sasl/avvs) has quit (Ping timeout: 250 seconds)
2014-11-28 11:29:56	Ploppz	Oh the comment says so but..
2014-11-28 11:29:56	Oxyd	No.
2014-11-28 11:30:48	Ploppz	But every time the function is run again, it doesn't initialize the value again?
2014-11-28 11:31:05	Oxyd	Of course not. It's already been initialised.
2014-11-28 11:31:20	-->	_war10ck_ (~w4|k3r@103.227.96.140) has joined ##c++
2014-11-28 11:32:20	-->	w4|k3r (~w4|k3r@1.39.62.246) has joined ##c++
2014-11-28 11:32:55	<--	_war10ck_ (~w4|k3r@103.227.96.140) has quit (Read error: Connection reset by peer)
2014-11-28 11:32:59	-->	AndChat-18324 (~w4|k3r@103.227.96.140) has joined ##c++
2014-11-28 11:33:10	-->	TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has joined ##c++
2014-11-28 11:33:45	<--	AndChat-18324 (~w4|k3r@103.227.96.140) has quit (Client Quit)
2014-11-28 11:34:02	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-28 11:34:48	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-11-28 11:36:08	-->	evangeline__ (~evangelin@93-103-107-74.dynamic.t-2.net) has joined ##c++
2014-11-28 11:36:58	<--	w4|k3r (~w4|k3r@1.39.62.246) has quit (Ping timeout: 265 seconds)
2014-11-28 11:37:19	<--	evangeline_ (~evangelin@93-103-107-74.dynamic.t-2.net) has quit (Ping timeout: 250 seconds)
2014-11-28 11:38:58	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-11-28 11:39:16	-->	huhze (~quassel@dslb-088-075-184-088.088.075.pools.vodafone-ip.de) has joined ##c++
2014-11-28 11:39:26	-->	Scraggy (~chatzilla@host-89-243-241-138.as13285.net) has joined ##c++
2014-11-28 11:40:15	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-28 11:40:54	-->	_war10ck_ (~sayantan@103.227.96.140) has joined ##c++
2014-11-28 11:42:21	<--	shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Quit: Hejd?!)
2014-11-28 11:43:05	<--	timj (~timj@195.82.63.198) has quit (Ping timeout: 264 seconds)
2014-11-28 11:43:46	ville	anyone who wondered why observer_ptr might not be a shoein: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4251.html search for "motion 24"
2014-11-28 11:43:46	Scraggy	I am trying to set up an array of pmf's, so I have tried "using Solver = Status (MyClass::*)() noexcept;".  When I create the array, I get "error: cannot convert 'MyClass::fail' from type MyClass::Status (MyClass::)()noexcept (true)' to type 'Solver {aka MyClass::Status (MyClass::*)()}'"  What am I doing wrong?
2014-11-28 11:45:13	Oxyd	Forgetting a &?
2014-11-28 11:45:13	<--	Ysgard (~Ysgard@69.196.72.54) has quit
2014-11-28 11:45:27	<--	huhze (~quassel@dslb-088-075-184-088.088.075.pools.vodafone-ip.de) has quit (Read error: Connection reset by peer)
2014-11-28 11:47:27	Scraggy	Tried inserting an '&', only to get:  ISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say ?&MyClass::fail? [-fpermissive]
2014-11-28 11:47:59	Scraggy	np. Solved
2014-11-28 11:48:02	Oxyd	Read the error message.
2014-11-28 11:48:03	Oxyd	Yup.
2014-11-28 11:48:04	<--	Scraggy (~chatzilla@host-89-243-241-138.as13285.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-28 11:48:43	CalimeroTeknik	could I iterate directly on the output of std::set_intersection instead of creating a temporary collection?
2014-11-28 11:48:47	-->	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-11-28 11:49:08	Oxyd	No.
2014-11-28 11:49:14	-->	Scraggy (~chatzilla@host-89-243-241-138.as13285.net) has joined ##c++
2014-11-28 11:49:31	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-28 11:49:36	Oxyd	You could give it an output iterator that directly processes the result.
2014-11-28 11:49:43	Oxyd	But other than that, no.
2014-11-28 11:49:44	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-28 11:49:45	-->	komarov (~komarov@46.227.191.197) has joined ##c++
2014-11-28 11:49:54	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-11-28 11:50:01	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Ping timeout: 258 seconds)
2014-11-28 11:50:20	CalimeroTeknik	that's a wonderful idea actually
2014-11-28 11:50:35	Scraggy	Just having problems calling the pmf now: error: 'solver_ptr' cannot be used as a function' (I tried 'while ((status = this->*solver_ptr()) == ...)')
2014-11-28 11:50:37	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-28 11:50:48	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-28 11:51:38	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Max SendQ exceeded)
2014-11-28 11:51:54	Oxyd	Try (this->*solver_ptr)()
2014-11-28 11:51:56	-->	Burgundy (~burgundy@5-12-201-222.residential.rdsnet.ro) has joined ##c++
2014-11-28 11:52:06	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-28 11:53:37	<--	Gravitron (Gravity@unaffiliated/gravitron) has quit (Max SendQ exceeded)
2014-11-28 11:53:38	Scraggy	Ah... solver_ptr is of type MyClass::MyClass (MyClass::**)()... too many indirections :(
2014-11-28 11:54:08	-->	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-11-28 11:54:14	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-28 11:54:36	-->	Gravitron (Gravity@unaffiliated/gravitron) has joined ##c++
2014-11-28 11:55:12	-->	rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-28 11:55:18	Scraggy	Thanky Oxyd.  I know pmfs are rather esoteric, but they just fill the bill for what I need.
2014-11-28 11:55:35	Scraggy	r/Thanky/Thanks/
2014-11-28 11:55:54	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 250 seconds)
2014-11-28 11:57:07	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-28 11:57:46	<--	Scraggy (~chatzilla@host-89-243-241-138.as13285.net) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-28 11:57:46	ville	they are esoteric since when?
2014-11-28 11:57:48	-->	pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-28 11:58:14	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-28 11:58:18	Oxyd	Probably someone lost their tarot cards so they started using function pointers instead.
2014-11-28 11:58:58	<--	leeter (~leeter@unaffiliated/leeter) has quit (Read error: Connection reset by peer)
2014-11-28 11:59:03	micom	every time i see a raw pointer to function/member function I feel like C
2014-11-28 11:59:58	Oxyd	Well, there needs to be someone who'll suffer for our sins.
2014-11-28 12:00:13	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-28 12:00:26	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-28 12:01:56	-->	gh0st (~gh0st@46.218.36.250) has joined ##c++
2014-11-28 12:02:19	<--	drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-28 12:02:27	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 245 seconds)
2014-11-28 12:02:27	<--	leeter (~leeter@unaffiliated/leeter) has quit (Read error: Connection reset by peer)
2014-11-28 12:02:32	-->	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-28 12:02:45	-->	DogsAndCats (~DogsAndCa@2601:d:ad00:3f4:a134:ec40:80c5:b6d5) has joined ##c++
2014-11-28 12:03:10	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Quit: Leaving)
2014-11-28 12:04:14	CalimeroTeknik	depending on the compiler it's happy or not when I do this: catch(const std::out_of_range&)
2014-11-28 12:04:29	CalimeroTeknik	GCC 4.7.3 doesn't seem to like it
2014-11-28 12:04:39	CalimeroTeknik	is it okay, still?
2014-11-28 12:05:03	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 12:05:41	<--	akiva-thinkpad (~akiva-thi@38.108.79.102) has quit (Ping timeout: 258 seconds)
2014-11-28 12:05:46	Oxyd	Yes, tat is okay.
2014-11-28 12:05:49	b_jonas	Oxyd: wait till they start to need the extern "C" typedef int (*)(void *); stuff in it
2014-11-28 12:08:04	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 12:09:22	-->	MrFlibble (LunarJetma@2.124.188.136) has joined ##c++
2014-11-28 12:09:24	Oxyd	geordi: struct T; extern "C" typedef int (*i_suffer_for_your_sins)(void *(T::* const&)());
2014-11-28 12:09:24	--	MrFlibble is now known as LunarJetman
2014-11-28 12:09:24	--	LunarJetman is now known as MrFlibble
2014-11-28 12:09:25	geordi	Success
2014-11-28 12:10:07	-->	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 12:10:10	doug64k	lol
2014-11-28 12:10:30	<--	Imek (~imek@mailgate.team17.com) has quit (Quit: Leaving)
2014-11-28 12:10:41	<--	chatsiri_ (~chatsiri_@49.230.179.212) has quit (Ping timeout: 240 seconds)
2014-11-28 12:11:13	-->	l2esonance (~l2esonanc@c-50-136-185-21.hsd1.ca.comcast.net) has joined ##c++
2014-11-28 12:11:14	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 12:11:34	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-28 12:11:34	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-28 12:12:05	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-11-28 12:12:10	<--	Jinxit (~Jinxit@c83-191-74-158.cust.tele2.se) has quit (Ping timeout: 265 seconds)
2014-11-28 12:12:12	<--	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has quit (Remote host closed the connection)
2014-11-28 12:12:27	<--	Defaultti (defaultti@lakka.kapsi.fi) has quit (Quit: Quitting.)
2014-11-28 12:12:32	-->	psayian (2f117a3b@gateway/web/freenode/ip.47.17.122.59) has joined ##c++
2014-11-28 12:12:36	-->	Trondby (Trondby@unaffiliated/trondby) has joined ##c++
2014-11-28 12:13:17	psayian	http://pastebin.com/eU4Y1iFy  . http://pastebin.com/dcHeb84b
2014-11-28 12:13:34	psayian	Can someone hlep me figure out why I am getting this undefined reference to my class.
2014-11-28 12:13:44	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-28 12:14:18	-->	BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-11-28 12:14:31	psayian	It is apparently calling the  constructor function wrong and I don't see why . I've also tried the constructor function with a parameter as 100 such as queueType que(100);
2014-11-28 12:14:42	psayian	It still gives the same error though.
2014-11-28 12:15:01	-->	`Ile` (~ile@109-92-16-153.dynamic.isp.telekom.rs) has joined ##c++
2014-11-28 12:15:05	<--	nefarious (~Nef@unaffiliated/nefarious) has quit (Quit: ZNC - http://znc.in)
2014-11-28 12:15:20	doug64k	psayian: the error message would help
2014-11-28 12:16:01	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-28 12:16:11	psayian	Source2.cpp|| undefined reference to `queueType::queueType(queueType const&)'|
2014-11-28 12:16:29	-->	`Nef (~Nef@host81-129-203-73.range81-129.btcentralplus.com) has joined ##c++
2014-11-28 12:16:43	--	`Nef is now known as Guest3773
2014-11-28 12:16:54	<--	leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-11-28 12:17:02	`Ile`	wsup
2014-11-28 12:17:51	psayian	doug64k: Source2.cpp|| undefined reference to `queueType::queueType(queueType const&)'| is the error message
2014-11-28 12:17:57	kalven	psayian: you haven't defined it
2014-11-28 12:17:59	-->	Defaultti (defaultti@lakka.kapsi.fi) has joined ##c++
2014-11-28 12:18:04	<--	Guest3773 (~Nef@host81-129-203-73.range81-129.btcentralplus.com) has quit (Changing host)
2014-11-28 12:18:04	-->	Guest3773 (~Nef@unaffiliated/nefarious) has joined ##c++
2014-11-28 12:18:06	--	Guest3773 is now known as nefarious
2014-11-28 12:18:17	doug64k	I suggest explicit on that constructor, it will implicitly convert integers the way it is
2014-11-28 12:18:59	b_jonas	here's a psayian's code moved to rextester, you can see the error message: http://rextester.com/CFLSN17061
2014-11-28 12:19:09	micom	psayian, make a simple check if you move definition of this constructor to header file and it will start to work then you are not linking it properly
2014-11-28 12:19:28	b_jonas	the fun part is, the only error message is linker errors
2014-11-28 12:19:56	-->	DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-28 12:20:04	kalven	because the copy-ctor has been declared, but not defined.
2014-11-28 12:20:26	micom	^+1
2014-11-28 12:20:35	<--	ravior_ (~ravior@89.121.200.106) has quit (Remote host closed the connection)
2014-11-28 12:20:55	<--	tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-11-28 12:21:12	b_jonas	right, also you declare int countque(queueType que); but then define a different overload int countque(queueType& que)
2014-11-28 12:22:37	<--	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Ping timeout: 250 seconds)
2014-11-28 12:22:54	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Excess Flood)
2014-11-28 12:23:14	doug64k	psayian: http://rextester.com/CFLSN17061
2014-11-28 12:23:20	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-28 12:23:27	doug64k	I didnt properly implement the copy constructor though - just put an empty one there
2014-11-28 12:23:37	doug64k	and fixed missing & in prototype of countque
2014-11-28 12:24:46	-->	Shammah_ (~Shammah@ip565b8f0f.direct-adsl.nl) has joined ##c++
2014-11-28 12:24:54	b_jonas	doug64k: um, you gave the same url. you have to press "Fork it" and then give the new url it prints at the bottom if you want to upload a code example
2014-11-28 12:25:38	-->	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-28 12:26:05	doug64k	I did fork it
2014-11-28 12:26:25	-->	PJBoy (~PJBoy@eduroam-wireless-pat6.nomadic.bris.ac.uk) has joined ##c++
2014-11-28 12:26:28	psayian	I am listening to what you guys are saying and I am making changes.
2014-11-28 12:26:32	<--	PJBoy (~PJBoy@eduroam-wireless-pat6.nomadic.bris.ac.uk) has quit (Changing host)
2014-11-28 12:26:32	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-11-28 12:26:37	b_jonas	doug64k: maybe, but didn't give the new url
2014-11-28 12:26:45	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-28 12:26:46	b_jonas	doug64k: you gave the same url I gave you
2014-11-28 12:26:48	psayian	My computer is lagging right now If I am being delayed.
2014-11-28 12:26:51	-->	Jinxit (~Jinxit@c83-191-74-158.cust.tele2.se) has joined ##c++
2014-11-28 12:26:53	doug64k	use coliru plz
2014-11-28 12:26:57	<--	BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 250 seconds)
2014-11-28 12:27:06	b_jonas	"coliru"? what's that?
2014-11-28 12:27:11	-->	lmn (~lmn@unaffiliated/pentagrass) has joined ##c++
2014-11-28 12:27:21	<--	hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-28 12:27:21	doug64k	http://coliru.stacked-crooked.com/
2014-11-28 12:27:40	doug64k	you have complete control over the command line. you can make it compile to assembly and cat that to output if you want
2014-11-28 12:27:55	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-28 12:28:33	doug64k	you can do multi-file stuff if you are dedicated :)
2014-11-28 12:28:39	<--	lmn (~lmn@unaffiliated/pentagrass) has quit (Client Quit)
2014-11-28 12:28:43	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-28 12:28:51	b_jonas	doug64k: in that case, can you copy your modified code there and show it?
2014-11-28 12:29:36	doug64k	very simple changes: add missing & in int countque(queueType que);   should be int countque(queueType& que);
2014-11-28 12:29:44	<--	Munnu (~timo@91-158-128-16.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-11-28 12:29:44	`Ile`	banes
2014-11-28 12:29:56	<--	`Ile` (~ile@109-92-16-153.dynamic.isp.telekom.rs) has quit (Quit: leaving)
2014-11-28 12:29:57	doug64k	write constructor queueType::queueType(queueType const& rhs) {}
2014-11-28 12:30:11	doug64k	that makes it compile. you need to properly implement the copy
2014-11-28 12:30:15	psayian	micom:  I applied the fix you suggested of moving the constructor and it works.
2014-11-28 12:30:25	psayian	I'll try that doug64k
2014-11-28 12:30:32	psayian	the lag has stopped on my end.
2014-11-28 12:30:59	-->	BearishMushroom (~BearishMu@90-231-174-194-no159.tbcn.telia.com) has joined ##c++
2014-11-28 12:31:00	doug64k	it still times out. infinite loop or something?
2014-11-28 12:31:18	b_jonas	doug64k: sure, here it is: http://rextester.com/BYIAK37266
2014-11-28 12:31:29	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 12:31:29	b_jonas	likely
2014-11-28 12:31:30	<--	LBV_User (~leonardo@177.2.128.75) has quit (Read error: No route to host)
2014-11-28 12:31:41	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-28 12:32:40	-->	BoredHamster (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-28 12:33:05	-->	hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has joined ##c++
2014-11-28 12:33:24	<--	stakewinner00 (~stakewinn@41.104.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-28 12:33:40	-->	stakewinner00 (~stakewinn@41.104.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-28 12:34:07	-->	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-28 12:34:20	<--	hexagoxel (~hexagoxel@195.244.237.55) has quit (Ping timeout: 264 seconds)
2014-11-28 12:34:32	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 12:35:06	<--	yarl_ (~yarl_@ANantes-656-1-37-24.w2-0.abo.wanadoo.fr) has quit (Quit: Quitte)
2014-11-28 12:35:17	psayian	I commented out the copy constructor and it runs. I have already implemented the copy in the cpp
2014-11-28 12:35:20	psayian	thanks guys for the help
2014-11-28 12:35:51	<--	SiGe (~SiGe@38.98.52.199) has quit (Ping timeout: 240 seconds)
2014-11-28 12:36:16	<--	PSG_Luna (uid48908@gateway/web/irccloud.com/x-odkhezaunylwysss) has quit (Quit: Connection closed for inactivity)
2014-11-28 12:38:05	<--	LBV_User (~leonardo@177.2.128.75) has quit (Read error: Connection reset by peer)
2014-11-28 12:38:12	-->	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-11-28 12:38:12	-->	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-28 12:39:10	dvaidcsi	hello guys, I'm stuck with something. I have an include file which is on the same path as my cpp. I include it after other includes and then try to use its class. But I'm always getting "indefined reference"
2014-11-28 12:39:16	<--	Garner (uid38417@gateway/web/irccloud.com/x-kjcskwlbpfhnxqbq) has quit
2014-11-28 12:39:31	-->	Garner (uid38417@gateway/web/irccloud.com/x-glvwdeqywhydteyr) has joined ##c++
2014-11-28 12:39:47	micom	dvaidcsi, link it?
2014-11-28 12:40:35	dvaidcsi	while linking, yes
2014-11-28 12:40:57	<--	elsewho (~elsewho@139.20.16.239) has quit (Ping timeout: 244 seconds)
2014-11-28 12:41:49	<--	regreg (~regreg@77.81.151.155) has quit (Quit: Konversation terminated!)
2014-11-28 12:42:14	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-28 12:42:17	-->	elsewho (~elsewho@139.20.16.239) has joined ##c++
2014-11-28 12:42:24	dvaidcsi	micom: http://pastebin.com/rtdbTLJH
2014-11-28 12:43:05	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-28 12:43:06	-->	basic6_ (~basic6@p4FCB520C.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 12:43:21	-->	timj (~timj@p5DDB28AA.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 12:43:45	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-28 12:43:45	-->	aslant (~aslant@37.157.33.76) has joined ##c++
2014-11-28 12:44:36	<--	basic6 (~basic6@p3E9EE119.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-11-28 12:46:41	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 12:47:45	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-28 12:48:08	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-28 12:48:09	<--	DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-28 12:48:25	-->	DexxeD (~DexxeD@67.162.134.162) has joined ##c++
2014-11-28 12:50:01	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 12:50:24	-->	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-11-28 12:51:38	-->	KeepItPG (KeepItPG@cpe-75-82-122-205.socal.res.rr.com) has joined ##c++
2014-11-28 12:51:41	-->	varibull (~varibull@pool-173-49-145-145.phlapa.fios.verizon.net) has joined ##c++
2014-11-28 12:53:42	-->	varibull_ (~varibull@107-0-202-55-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-28 12:54:06	<--	srjek (~srjek@46dhcp63.ece.uic.edu) has quit (Ping timeout: 240 seconds)
2014-11-28 12:54:07	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 265 seconds)
2014-11-28 12:56:33	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 12:57:15	-->	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has joined ##c++
2014-11-28 12:57:42	<--	varibull (~varibull@pool-173-49-145-145.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-28 12:58:10	-->	gelignite (~gelignite@i5387A826.versanet.de) has joined ##c++
2014-11-28 12:58:29	<--	DogsAndCats (~DogsAndCa@2601:d:ad00:3f4:a134:ec40:80c5:b6d5) has quit (Quit: Leaving)
2014-11-28 12:59:30	<--	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-28 12:59:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 13:00:32	-->	g4r37h_ (~g4r37h@199.66.92.124) has joined ##c++
2014-11-28 13:00:45	<--	_war10ck_ (~sayantan@103.227.96.140) has quit (Ping timeout: 250 seconds)
2014-11-28 13:01:14	<--	g4r37h (~g4r37h@host86-186-31-44.range86-186.btcentralplus.com) has quit (Read error: No route to host)
2014-11-28 13:01:47	-->	g4r37h (~g4r37h@host86-186-31-44.range86-186.btcentralplus.com) has joined ##c++
2014-11-28 13:02:27	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-28 13:02:36	-->	_war10ck_ (~sayantan@106.51.139.111) has joined ##c++
2014-11-28 13:02:39	<--	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has quit (Quit: Sto andando via)
2014-11-28 13:03:33	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 13:03:38	<--	ppf (~pfaffe@i41mpc144.ipd.uni-karlsruhe.de) has quit (Remote host closed the connection)
2014-11-28 13:03:50	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 33.1/20141106120505])
2014-11-28 13:05:06	<--	g4r37h_ (~g4r37h@199.66.92.124) has quit (Ping timeout: 264 seconds)
2014-11-28 13:05:44	<--	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has quit (Remote host closed the connection)
2014-11-28 13:06:25	<--	komarov (~komarov@46.227.191.197) has quit (Ping timeout: 272 seconds)
2014-11-28 13:06:42	-->	hexagoxel (~hexagoxel@kiel-4d06610f.pool.mediaWays.net) has joined ##c++
2014-11-28 13:06:50	-->	komarov (~komarov@46.227.191.169) has joined ##c++
2014-11-28 13:10:28	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 13:10:46	<--	KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-28 13:11:01	-->	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-28 13:11:45	-->	taplaptap (~lol@unaffiliated/tapout) has joined ##c++
2014-11-28 13:13:31	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 13:14:01	-->	houj_n2 (~houj_n@h194.124.232.68.dynamic.ip.windstream.net) has joined ##c++
2014-11-28 13:16:10	-->	PigFlu (~herp@19.80-202-25.nextgentel.com) has joined ##c++
2014-11-28 13:16:25	<--	PigFlu (~herp@19.80-202-25.nextgentel.com) has quit (Changing host)
2014-11-28 13:16:25	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-28 13:16:45	<--	drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 255 seconds)
2014-11-28 13:17:31	<--	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-28 13:18:10	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (Quit: ZNC - http://znc.in)
2014-11-28 13:18:46	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-28 13:18:48	<--	varibull_ (~varibull@107-0-202-55-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-11-28 13:19:05	-->	varibull_ (~varibull@107-0-202-55-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-28 13:19:27	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Client Quit)
2014-11-28 13:19:27	-->	Zawisza008 (~AndChat48@178.180.54.129.nat.umts.dynamic.t-mobile.pl) has joined ##c++
2014-11-28 13:20:16	-->	AmR|EiSa (~AmREiSa@41.42.222.240) has joined ##c++
2014-11-28 13:20:26	<--	gelignite (~gelignite@i5387A826.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-28 13:21:26	<--	Flannel (~flannel@ubuntu/member/flannel) has quit (Ping timeout: 256 seconds)
2014-11-28 13:22:02	-->	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has joined ##c++
2014-11-28 13:22:08	-->	Flannel (~flannel@ubuntu/member/flannel) has joined ##c++
2014-11-28 13:22:41	AmR|EiSa	I want know did C++11 or C++14 have plugin part ?
2014-11-28 13:23:12	<--	Shammah_ (~Shammah@ip565b8f0f.direct-adsl.nl) has quit (Quit: leaving)
2014-11-28 13:24:25	--	RazielZ is now known as Raziel
2014-11-28 13:24:37	<--	Trieste (~Trieste@unaffiliated/trieste) has quit (Quit: ZNC - http://znc.in)
2014-11-28 13:26:38	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 13:27:59	AmR|EiSa	QSqlQuery *dataQuery;
2014-11-28 13:28:26	AmR|EiSa	sorry for that :(
2014-11-28 13:28:30	<--	josh (~josh@98.202.106.133) has quit (Ping timeout: 245 seconds)
2014-11-28 13:28:33	-->	tcsc_ (~tcsc@c-76-127-240-20.hsd1.ct.comcast.net) has joined ##c++
2014-11-28 13:29:58	<--	tcsc (~tcsc@c-76-127-240-20.hsd1.ct.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-28 13:30:02	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 13:30:20	--	night-owl is now known as zz_night-owl
2014-11-28 13:31:41	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-11-28 13:32:08	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 13:33:29	-->	Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-11-28 13:33:35	cbreak	AmR|EiSa: that's right, BE SORRY! Uninitialized variables, especially raw pointers are something you absolutely should appologize
2014-11-28 13:33:47	o]	:)
2014-11-28 13:34:06	-->	KTB (~KTB@cpe-74-79-123-138.twcny.res.rr.com) has joined ##c++
2014-11-28 13:34:26	 *	o] has the creeps to see that line of code
2014-11-28 13:34:46	Slereah	Does "appologize" mean "turn into an apple"
2014-11-28 13:35:48	o]	it is turn into a proper app
2014-11-28 13:36:00	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 245 seconds)
2014-11-28 13:36:00	o]	something that does not use low level things and shitty frameworks
2014-11-28 13:36:02	-->	minas114 (~minas@83-53-200.netrun.cytanet.com.cy) has joined ##c++
2014-11-28 13:36:08	-->	akiva-thinkpad (~akiva-thi@184.69.147.190) has joined ##c++
2014-11-28 13:36:37	-->	davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-28 13:36:42	<--	SiGe (~SiGe@38.98.52.199) has quit (Ping timeout: 258 seconds)
2014-11-28 13:36:48	AmR|EiSa	What about plugin part ?
2014-11-28 13:37:40	<--	timj (~timj@p5DDB28AA.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-11-28 13:37:43	o]	your question is funny
2014-11-28 13:37:57	AmR|EiSa	:)
2014-11-28 13:38:02	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-28 13:38:04	<--	varibull_ (~varibull@107-0-202-55-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-11-28 13:38:40	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2014-11-28 13:40:38	<--	Leftas (~leftas@91.228.84.180) has quit (Ping timeout: 255 seconds)
2014-11-28 13:41:14	<--	houj_n2 (~houj_n@h194.124.232.68.dynamic.ip.windstream.net) has quit (Quit: Leaving)
2014-11-28 13:41:49	-->	mag] (~kvirc@ip174-75-116-83.br.br.cox.net) has joined ##c++
2014-11-28 13:42:54	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Quit: Busying myself...)
2014-11-28 13:45:29	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 13:46:25	<--	mgaunard (~mgaunard@193.55.35.2) has quit (Ping timeout: 244 seconds)
2014-11-28 13:46:44	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-28 13:46:57	-->	sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-28 13:48:39	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 13:49:41	-->	imastupidguest (~emailstub@dynamic-69-5-107-180.molalla.net) has joined ##c++
2014-11-28 13:50:07	-->	josh (~josh@98.202.106.133) has joined ##c++
2014-11-28 13:50:15	-->	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has joined ##c++
2014-11-28 13:51:13	<--	imastupidguest (~emailstub@dynamic-69-5-107-180.molalla.net) has left ##c++
2014-11-28 13:51:26	-->	pringlescan (~Adium@c-76-98-177-92.hsd1.pa.comcast.net) has joined ##c++
2014-11-28 13:51:28	-->	Khoyo (~Khoyo@les77-2-78-215-160-45.fbx.proxad.net) has joined ##c++
2014-11-28 13:51:51	--	Khoyo is now known as Guest86008
2014-11-28 13:53:07	<--	Ploppz (~ploppz@2001:700:303:b:f3ce:ca7c:3834:8e44) has quit (Quit: WeeChat 1.0.1)
2014-11-28 13:53:49	-->	ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-11-28 13:53:54	-->	timemage (~timemage@unaffiliated/timemage) has joined ##c++
2014-11-28 13:54:18	-->	grok0 (~o~o@unaffiliated/o-/x-1234567) has joined ##c++
2014-11-28 13:54:30	<--	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Quit: leaving)
2014-11-28 13:54:54	-->	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-11-28 13:56:46	AmR|EiSa	o], http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2006/n2015.pdf
2014-11-28 13:56:52	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-28 13:57:42	-->	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-11-28 13:57:55	<--	endomancer (~endomance@2001:8003:2c16:b301:bc60:e79e:8bce:a35f) has quit (Quit: Ohhhh, so that's what the big red button does)
2014-11-28 13:58:07	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 258 seconds)
2014-11-28 13:58:11	<--	taplaptap (~lol@unaffiliated/tapout) has quit
2014-11-28 13:58:11	<--	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Remote host closed the connection)
2014-11-28 13:58:14	<--	komarov (~komarov@46.227.191.169) has quit (Ping timeout: 272 seconds)
2014-11-28 13:58:30	<--	d3Vito (d3Vito@urbany.org) has quit (Ping timeout: 255 seconds)
2014-11-28 13:58:51	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 13:59:13	-->	ldionne (~ldionne@modemcable057.202-23-96.mc.videotron.ca) has joined ##c++
2014-11-28 13:59:20	<--	Guest86008 (~Khoyo@les77-2-78-215-160-45.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2014-11-28 13:59:39	<--	xico (~xico@cpe-66-75-25-244.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-11-28 13:59:39	-->	endomancer (~endomance@2001:8003:2c16:b301:8cab:4a5d:298a:6265) has joined ##c++
2014-11-28 14:00:29	-->	kurahaupo (~kurahaupo@118.148.230.198) has joined ##c++
2014-11-28 14:01:51	<--	endomancer (~endomance@2001:8003:2c16:b301:8cab:4a5d:298a:6265) has quit (Client Quit)
2014-11-28 14:03:17	-->	d3Vito (d3Vito@urbany.org) has joined ##c++
2014-11-28 14:03:26	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Ping timeout: 250 seconds)
2014-11-28 14:04:12	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 14:04:58	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Ping timeout: 244 seconds)
2014-11-28 14:06:00	-->	tarruda (~tarruda@200.17.134.134) has joined ##c++
2014-11-28 14:07:23	-->	FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 14:08:49	-->	APerson_ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-28 14:09:27	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 14:09:54	-->	endomancer (~endomance@2001:8003:2c16:b301:c2d:120f:7002:513f) has joined ##c++
2014-11-28 14:10:02	<--	pangan (~pangan@192.210.214.197) has quit (Remote host closed the connection)
2014-11-28 14:10:13	-->	AmR|EiSa_ (~AmREiSa@41.42.222.240) has joined ##c++
2014-11-28 14:11:04	<--	AmR|EiSa (~AmREiSa@41.42.222.240) has quit (Ping timeout: 255 seconds)
2014-11-28 14:12:00	-->	JacobMason (~jacobmaso@mobile-166-172-059-025.mycingular.net) has joined ##c++
2014-11-28 14:12:14	<--	sohail (~user@108.161.118.233) has quit (Ping timeout: 265 seconds)
2014-11-28 14:12:33	<--	JacobMason (~jacobmaso@mobile-166-172-059-025.mycingular.net) has left ##c++
2014-11-28 14:13:02	-->	iffert (~iffert@192.210.214.197) has joined ##c++
2014-11-28 14:13:58	-->	APerson__ (~quassel@wikipedia/APerson) has joined ##c++
2014-11-28 14:14:26	<--	Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2014-11-28 14:14:34	-->	japro (~japro@77-59-183-11.dclient.hispeed.ch) has joined ##c++
2014-11-28 14:15:21	<--	Hannibal_Smith (~Hannibal_@host240-41-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-28 14:15:39	-->	mangekyo (~tsukoyomi@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-28 14:16:49	<--	APerson_ (~quassel@wikipedia/APerson) has quit (Ping timeout: 244 seconds)
2014-11-28 14:19:36	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-28 14:19:36	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 14:22:16	-->	astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-28 14:22:43	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 14:23:39	<--	d3Vito (d3Vito@urbany.org) has quit (Ping timeout: 255 seconds)
2014-11-28 14:23:49	-->	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has joined ##c++
2014-11-28 14:25:18	NinjaPenguin	!books
2014-11-28 14:25:20	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-28 14:25:48	<--	LBV_User (~leonardo@177.2.128.75) has quit (Read error: Connection reset by peer)
2014-11-28 14:26:41	minas114	I am using boost::asio to implement a TCP server. I have a threadpool of 10 threads that handle requests (one of them handles new connections). When a connection is established I call a function (read) that does an async_read. When I receive the data, I make the current thread sleep for 10 seconds, just for testing. But if a single client send two requests within 10 seconds, I get a segmentation fault at thread::sleep. I don't understand why
2014-11-28 14:26:49	minas114	here is the source of read() http://pastebin.com/6rbwL8yz
2014-11-28 14:27:04	-->	adrian17 (~adrian17@89-72-118-160.dynamic.chello.pl) has joined ##c++
2014-11-28 14:27:35	-->	d3Vito (d3Vito@urbany.org) has joined ##c++
2014-11-28 14:27:54	-->	Mannn (~Mannn____@cpe-70-113-106-32.austin.res.rr.com) has joined ##c++
2014-11-28 14:27:59	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 14:28:28	<--	bmf1 (~bmf1@216.252.94.230) has quit (Ping timeout: 244 seconds)
2014-11-28 14:29:19	-->	FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 14:29:56	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-11-28 14:32:26	-->	sam__ (~sam@p2003004F2D189810D5EB415E54769D6A.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 14:34:41	<--	APerson__ (~quassel@wikipedia/APerson) has quit (Remote host closed the connection)
2014-11-28 14:36:56	<--	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 240 seconds)
2014-11-28 14:38:45	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-28 14:38:56	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 14:39:26	-->	sohail (~user@108.161.118.233) has joined ##c++
2014-11-28 14:39:32	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-28 14:39:48	<--	negerns (negerns@49.144.150.177) has quit (Ping timeout: 258 seconds)
2014-11-28 14:40:13	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-28 14:40:35	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 256 seconds)
2014-11-28 14:40:53	NinjaPenguin	!give minas114 general
2014-11-28 14:40:55	nolyc	minas114: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-11-28 14:41:37	minas114	thanks
2014-11-28 14:41:43	minas114	but I found the problem :)
2014-11-28 14:42:06	minas114	I should have called read() that the end to prevent multiple threads from operating on the same socket
2014-11-28 14:42:11	minas114	*at
2014-11-28 14:42:35	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Ping timeout: 255 seconds)
2014-11-28 14:43:24	<--	hagabaka (hagabaka@unaffiliated/hagabaka) has quit (Ping timeout: 255 seconds)
2014-11-28 14:43:24	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2014-11-28 14:43:29	<--	FreezingAlt (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-11-28 14:43:58	-->	FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 14:44:25	--	zz_night-owl is now known as night-owl
2014-11-28 14:44:39	<--	Zawisza008 (~AndChat48@178.180.54.129.nat.umts.dynamic.t-mobile.pl) has quit (Quit: Bye)
2014-11-28 14:45:29	-->	hagabaka (hagabaka@unaffiliated/hagabaka) has joined ##c++
2014-11-28 14:45:49	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 14:47:39	-->	mimer (~Mimer@unaffiliated/mimer) has joined ##c++
2014-11-28 14:47:43	-->	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 14:49:13	-->	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has joined ##c++
2014-11-28 14:49:50	<--	unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: Computer has gone to sleep.)
2014-11-28 14:50:19	-->	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-11-28 14:50:51	<--	micom (~micom@unaffiliated/micom) has quit (Ping timeout: 244 seconds)
2014-11-28 14:51:18	<--	prosper_ (~prosper@user3-85-8.wireless.utoronto.ca) has quit (Remote host closed the connection)
2014-11-28 14:52:26	<--	vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-11-28 14:52:31	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2014-11-28 14:53:04	-->	DarkArcher (~darkarche@2601:d:ae00:529:c5dd:58a4:e435:3aae) has joined ##c++
2014-11-28 14:53:22	-->	mkultras (~mkultras@S010684c9b250bc1c.cg.shawcable.net) has joined ##c++
2014-11-28 14:54:26	--	Renderwahn is now known as RenderVAT
2014-11-28 14:54:31	<--	NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-11-28 14:55:31	-->	katcher (~tomask@ip-94-113-220-175.net.upcbroadband.cz) has joined ##c++
2014-11-28 14:56:00	--	night-owl is now known as zz_night-owl
2014-11-28 14:56:22	<--	rendar (~I@host182-179-dynamic.10-87-r.retail.telecomitalia.it) has quit (Ping timeout: 272 seconds)
2014-11-28 14:58:30	-->	PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-11-28 15:01:18	-->	[DarkArcher] (~darkarche@108.61.101.160) has joined ##c++
2014-11-28 15:02:01	-->	rendar (~I@host182-179-dynamic.10-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 15:02:38	<--	minas114 (~minas@83-53-200.netrun.cytanet.com.cy) has left ##c++ ("Leaving")
2014-11-28 15:04:17	<--	DarkArcher (~darkarche@2601:d:ae00:529:c5dd:58a4:e435:3aae) has quit (Ping timeout: 258 seconds)
2014-11-28 15:05:25	--	FreezingAlt is now known as FreezingCold
2014-11-28 15:05:25	<--	aggn (~irc@2001:4ca0:0:f262:f801:83bf:d51d:8612) has quit (Quit: aggn)
2014-11-28 15:07:12	<--	mkultras (~mkultras@S010684c9b250bc1c.cg.shawcable.net) has quit (Read error: Connection reset by peer)
2014-11-28 15:07:26	-->	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2014-11-28 15:08:14	-->	nejni-marji (62fde99d@gateway/web/freenode/ip.98.253.233.157) has joined ##c++
2014-11-28 15:09:27	-->	kronikarz (~kronikarz@zabka096.fucio.net) has joined ##c++
2014-11-28 15:09:33	<--	g4r37h (~g4r37h@host86-186-31-44.range86-186.btcentralplus.com) has quit
2014-11-28 15:10:29	<--	oleo (~oleo@xdsl-84-44-177-214.netcologne.de) has quit (Remote host closed the connection)
2014-11-28 15:10:51	<--	grok0 (~o~o@unaffiliated/o-/x-1234567) has quit (Quit: Leaving)
2014-11-28 15:11:07	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 15:13:08	<--	K-ballo (~sonoio@181.228.126.42) has quit (Read error: Connection reset by peer)
2014-11-28 15:13:19	-->	safinaskar (~user@188.234.32.54) has joined ##c++
2014-11-28 15:13:25	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (Ping timeout: 272 seconds)
2014-11-28 15:13:50	-->	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has joined ##c++
2014-11-28 15:13:58	-->	wawb (~wawb@pool-71-191-85-130.washdc.fios.verizon.net) has joined ##c++
2014-11-28 15:14:15	-->	Bobz (81d98184@gateway/web/freenode/ip.129.217.129.132) has joined ##c++
2014-11-28 15:14:31	-->	oleo (~oleo@xdsl-84-44-177-214.netcologne.de) has joined ##c++
2014-11-28 15:15:08	--	zz_night-owl is now known as night-owl
2014-11-28 15:15:35	<--	_war10ck_ (~sayantan@106.51.139.111) has quit (Ping timeout: 244 seconds)
2014-11-28 15:16:27	<--	tdc (~tdc@42.Red-2-140-9.dynamicIP.rima-tde.net) has quit (Quit: Leaving)
2014-11-28 15:16:27	-->	_war10ck_ (~sayantan@106.51.139.111) has joined ##c++
2014-11-28 15:16:45	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-28 15:17:20	-->	gelignite (~gelignite@i5387A826.versanet.de) has joined ##c++
2014-11-28 15:17:31	-->	bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-28 15:17:41	-->	minas114 (~minas@83-53-200.netrun.cytanet.com.cy) has joined ##c++
2014-11-28 15:18:06	-->	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-11-28 15:18:25	-->	jimvideo (~jimvideo@184-12-227-157.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-11-28 15:18:59	minas114	I am capturing a variable (an std::shared_ptr) in a lambda and then passing it to foo(std::shared_ptr). I get a compile error cant convert from const std::shared_ptr to shared_ptr. Why does the lambda capture it as const?
2014-11-28 15:19:41	minas114	sorry, foo is foo(std::shared_ptr &)
2014-11-28 15:19:46	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2014-11-28 15:20:13	<--	Rafaelfsilva (~Rafaelfsi@201.162.68.184) has quit (Ping timeout: 255 seconds)
2014-11-28 15:20:37	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 15:20:49	<--	kyoshero (~kyoshero@112.198.90.143) has quit (Read error: Connection reset by peer)
2014-11-28 15:20:56	<--	Bobz (81d98184@gateway/web/freenode/ip.129.217.129.132) has left ##c++
2014-11-28 15:21:00	o11c	minas114: you can't make a reference to a temporary
2014-11-28 15:21:07	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-28 15:21:43	-->	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has joined ##c++
2014-11-28 15:21:44	minas114	o11c, but it's captured by value... Why can't it pass that copy by reference?
2014-11-28 15:22:40	minas114	o11c, http://pastebin.com/5ptnSc71
2014-11-28 15:23:56	-->	gnatt (~gnatt@71.45.43.125) has joined ##c++
2014-11-28 15:25:09	<--	SiGe (~SiGe@38.98.52.199) has quit (Ping timeout: 255 seconds)
2014-11-28 15:26:01	minas114	I can pass the shared_ptr by value.. but this means I am incrementing the internal counter and then decrementing it for no reason
2014-11-28 15:26:28	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 258 seconds)
2014-11-28 15:26:57	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2014-11-28 15:27:25	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-11-28 15:28:31	<--	katcher (~tomask@ip-94-113-220-175.net.upcbroadband.cz) has quit (Ping timeout: 264 seconds)
2014-11-28 15:28:47	<--	kronikarz (~kronikarz@zabka096.fucio.net) has left ##c++ ("Leaving")
2014-11-28 15:29:04	<--	Garner (uid38417@gateway/web/irccloud.com/x-glvwdeqywhydteyr) has quit (Quit: Connection closed for inactivity)
2014-11-28 15:29:10	-->	Nnavd (~Nnavd@ip-192-68-68-10.ptr.bcit.ca) has joined ##c++
2014-11-28 15:30:06	<--	schleppel (~quassel@141.39.226.237) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 15:31:18	<--	_war10ck_ (~sayantan@106.51.139.111) has quit (Ping timeout: 265 seconds)
2014-11-28 15:31:26	RedMercury	use std::bind with std::move for packet
2014-11-28 15:31:31	<--	[DarkArcher] (~darkarche@108.61.101.160) has quit (Ping timeout: 255 seconds)
2014-11-28 15:31:33	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-28 15:31:47	-->	_war10ck_ (~sayantan@106.51.139.111) has joined ##c++
2014-11-28 15:31:50	RedMercury	iirc c++14 will let you use rvalue references in the lambda capture
2014-11-28 15:31:55	-->	[DarkArcher] (~darkarche@2601:d:ae00:529:c5dd:58a4:e435:3aae) has joined ##c++
2014-11-28 15:32:13	RedMercury	until then you have to use bind to capture the rvalue reference and pass it into the lambda as a parameter (which can be a reference)
2014-11-28 15:32:44	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 15:33:41	ville	!give night-owl away
2014-11-28 15:33:42	nolyc	night-owl: We really do not care whether you are at your computer or not. That means you shall not switch nicks or indicate your status in any other way or form in the channel.
2014-11-28 15:34:24	night-owl	erm. sorry, its not me manually doing it.  i have a relay set up that logs chat history while im gone
2014-11-28 15:34:30	night-owl	and i get a roll back of it
2014-11-28 15:34:44	PlasmaHH	I am sure it can be configured
2014-11-28 15:34:52	<--	Logan54 (~logan@84.237.53.101) has quit (Ping timeout: 245 seconds)
2014-11-28 15:35:07	<--	gnatt (~gnatt@71.45.43.125) has left ##c++ ("Leaving")
2014-11-28 15:35:47	<--	AmR|EiSa_ (~AmREiSa@41.42.222.240) has left ##c++
2014-11-28 15:35:56	night-owl	no worries
2014-11-28 15:35:57	<--	night-owl (nightowl@2604:180::b0a8:78a4) has left ##c++ ("Textual IRC Client: www.textualapp.com")
2014-11-28 15:38:37	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 15:38:39	-->	AmR|EiSa (~AmREiSa@41.42.222.240) has joined ##c++
2014-11-28 15:39:03	<--	nilg (~user@AAubervilliers-653-1-156-53.w86-218.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-28 15:40:46	-->	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has joined ##c++
2014-11-28 15:41:08	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Remote host closed the connection)
2014-11-28 15:41:24	-->	Garner (uid38417@gateway/web/irccloud.com/x-smxjrcpicfmdnida) has joined ##c++
2014-11-28 15:41:48	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 15:43:22	pi-	I don't really get that away-message thing. How is it a problem for anyone? I just set my client to not display nick-changes.
2014-11-28 15:44:41	-->	malcolmx (~malcolm@74-210-224-97.ri.cgocable.ca) has joined ##c++
2014-11-28 15:45:12	pi-	Also, it's perfectly reasonable IRC policy to indicate status. Sometimes you want to talk to someone but you see they are AFK. It can be useful. But it is a server-wide setting.
2014-11-28 15:48:03	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 15:49:25	PlasmaHH	pi-: look at the amount of people in this channel. imagine all of them doing it; you wouldnt see anything useful anymore
2014-11-28 15:49:55	pi-	PlasmaHH: does your client display join/part-s?
2014-11-28 15:50:02	-->	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-28 15:50:03	PlasmaHH	pi-: it displays everything
2014-11-28 15:50:09	pi-	Those outnumber nick-changes by about 100 to 1
2014-11-28 15:50:18	pi-	The fact is it is very rarely done anyway.
2014-11-28 15:50:33	pi-	Join 10 random channels for a day and you'll see.
2014-11-28 15:50:41	PlasmaHH	so you say because its rarely done, we should allow it, which surely will not lead to people doing it?
2014-11-28 15:50:44	pi-	It is overzealous botwork
2014-11-28 15:50:49	cbreak	by the way people
2014-11-28 15:50:53	pi-	It is solving a problem that was not a problem in the first place
2014-11-28 15:50:57	cbreak	I'll be gone playing WoW
2014-11-28 15:51:00	PlasmaHH	pi-: its totally annoying
2014-11-28 15:51:02	PlasmaHH	!gr cbreak
2014-11-28 15:51:03	nolyc	By your command.
2014-11-28 15:51:07	PlasmaHH	famous last words
2014-11-28 15:51:16	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 15:51:42	pi-	PlasmaHH: then why not configure your client to not show nick changes?
2014-11-28 15:51:45	<--	tarruda (~tarruda@200.17.134.134) has quit (Quit: WeeChat 0.4.2)
2014-11-28 15:51:47	<--	a-l-e (~quassel@222-49.192-178.cust.bluewin.ch) has quit (Ping timeout: 240 seconds)
2014-11-28 15:51:54	PlasmaHH	pi-: because I need to follow them to monitor misuse
2014-11-28 15:51:59	-->	aggn (~irc@host199-2.natpool.mwn.de) has joined ##c++
2014-11-28 15:52:13	-->	dk0r (~dk0r@unaffiliated/dk0r) has joined ##c++
2014-11-28 15:52:15	<--	dk0r (~dk0r@unaffiliated/dk0r) has quit (Client Quit)
2014-11-28 15:52:29	-->	Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-28 15:53:04	pi-	PlasmaHH: so for every 500 join/parts, one occasional nick-change bothers you? I would say that is probably a fairly accurate approximation...
2014-11-28 15:53:26	PlasmaHH	pi-: nick changes are more prominently displayed than join/parts in my client
2014-11-28 15:53:31	-->	Jesin (~Jesin@pool-96-241-156-242.washdc.fios.verizon.net) has joined ##c++
2014-11-28 15:54:09	pi-	Wise Man(TM) say "the ground is hard. We would like to cover it in leather. But instead we cover our feet in leather."
2014-11-28 15:54:23	-->	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-11-28 15:54:56	PlasmaHH	pi-: you are looking at this from a totally different perspective. try seeing it from ours
2014-11-28 15:55:28	-->	himikof (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has joined ##c++
2014-11-28 15:55:45	<--	himikov (~quassel@2a02:578:5002:80f1:96de:80ff:fea1:8486) has quit (Ping timeout: 272 seconds)
2014-11-28 15:55:46	PlasmaHH	I cant even maintain a ignore list like you do
2014-11-28 15:55:50	pi-	Who are you speaking for though? Does it annoy anyone else? I've been on dozens of channels over the last 10 years, and I've never seen it discussed even as an issue, let alone policy.
2014-11-28 15:56:10	PlasmaHH	your short term memory is bad. run memcheck
2014-11-28 15:56:51	-->	Cirus_ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-28 15:56:53	-->	AmR|EiSa_ (~AmREiSa@41.42.99.222) has joined ##c++
2014-11-28 15:57:03	-->	FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 15:57:29	<--	AmR|EiSa (~AmREiSa@41.42.222.240) has quit (Ping timeout: 264 seconds)
2014-11-28 15:58:22	<--	Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-28 15:58:31	pi-	PlasmaHH: my perspective is somewhere in the middle. I'm not an administrator. And I'm not changing my nick. It just seems rather silly to me.
2014-11-28 15:59:29	PlasmaHH	well, in your position you can put all kinds of things on ignore
2014-11-28 15:59:30	-->	zagabar (~zagabar@c-31-208-3-244.cust.bredband2.com) has joined ##c++
2014-11-28 15:59:30	<--	zagabar (~zagabar@c-31-208-3-244.cust.bredband2.com) has quit (Changing host)
2014-11-28 15:59:30	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2014-11-28 15:59:39	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-11-28 15:59:47	<--	zeitue (~z@67.221.139.166) has quit (Quit: Leaving)
2014-11-28 16:00:03	-->	serses (~Se@94.52.74.185) has joined ##c++
2014-11-28 16:00:05	pi-	The thing is it pushes people to change their FreeNode policy, on account of one channel complaining. And I think it is a reasonable policy in the first place. It serves a purpose.
2014-11-28 16:00:10	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 272 seconds)
2014-11-28 16:00:13	<--	schleppel (~quassel@141.39.226.237) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-28 16:00:16	pi-	Can't you find a client lets you configure such things?
2014-11-28 16:00:24	-->	fOrceez (~f0rceez@d220-237-38-250.mas801.nsw.optusnet.com.au) has joined ##c++
2014-11-28 16:00:56	PlasmaHH	configure what?
2014-11-28 16:01:09	pi-	(I'm still looking for a decent client that lets me script fine-grained control... Like only showing join/parts for active contributors, and ordering channel members by recent contributions rather than alphabetically)
2014-11-28 16:01:41	-->	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-28 16:01:59	pi-	Configure it so that it presents nick-changes (so you can monitor for abuse) but in such way that it doesn't annoy you any more than a join/part.
2014-11-28 16:02:02	<--	Cirus_ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Ping timeout: 258 seconds)
2014-11-28 16:02:02	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-28 16:02:10	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 16:03:33	PlasmaHH	I could make them less visible, but that would mean to overlook them mostly, which would almost be equivalent to not displaying them
2014-11-28 16:04:07	pi-	And as regards short-term memory, my memory for "topics discussed in the past" is good. I've never encountered this topic on any other channel (and I have been involved in a large number of channels)
2014-11-28 16:05:42	PlasmaHH	pi-: you asked if it annoys anyone else. scroll up. your reaction by someone else
2014-11-28 16:06:10	pi-	I said I have never seen it to be an issue on any other channel.
2014-11-28 16:06:29	pi-	Maybe people flag it here because the bot has a command for it, and people like pressing buttons.
2014-11-28 16:06:30	<--	FreezingAlt (~FreezingC@135.0.41.14) has quit (Ping timeout: 272 seconds)
2014-11-28 16:06:53	pi-	But let's ask.
2014-11-28 16:06:58	pi-	Anyone?
2014-11-28 16:07:59	Mannn	What exactly is C++ comparing if I do "==" on two classes?
2014-11-28 16:08:08	<--	scai (~scai@pD9EA68F9.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-28 16:08:22	pi-	<crickets>
2014-11-28 16:08:33	PlasmaHH	Mannn: c++ does not allow comparison of classes...
2014-11-28 16:08:42	RlyDontKnow	Mannn: throwing a compiler error unless you overloaded operator==
2014-11-28 16:09:53	<--	mimer (~Mimer@unaffiliated/mimer) has quit (Remote host closed the connection)
2014-11-28 16:09:57	PlasmaHH	RlyDontKnow: please make this compile: { A == B; } class A{}; class B{}; // by creating an op==
2014-11-28 16:10:24	<--	mag] (~kvirc@ip174-75-116-83.br.br.cox.net) has quit
2014-11-28 16:11:14	pi-	Mannn: you could compare their TYPES
2014-11-28 16:11:19	RlyDontKnow	*instances of classes - for mr. nitpicker
2014-11-28 16:12:07	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-28 16:12:57	-->	Cirus (~Cirus@2601:9:80:101c:d19a:dae0:c671:7bfe) has joined ##c++
2014-11-28 16:13:44	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-28 16:13:48	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-28 16:14:17	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-28 16:17:32	-->	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-11-28 16:17:32	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 16:18:35	-->	FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 16:19:17	<--	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-11-28 16:19:28	<--	RenderVAT (~render@176.126.244.88) has quit (Ping timeout: 255 seconds)
2014-11-28 16:19:36	-->	Logan54 (~logan@84.237.53.101) has joined ##c++
2014-11-28 16:19:44	-->	RenderVAT (~render@176.126.244.88) has joined ##c++
2014-11-28 16:20:10	<--	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Client Quit)
2014-11-28 16:20:47	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 16:22:11	<--	KTB (~KTB@cpe-74-79-123-138.twcny.res.rr.com) has quit (Quit: gtg)
2014-11-28 16:22:17	<--	dts (~DTSCode@unaffiliated/dtscode) has quit (Quit: Leaving)
2014-11-28 16:22:36	-->	dts (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-28 16:23:25	Mannn	thanks
2014-11-28 16:25:04	<--	sohail (~user@108.161.118.233) has quit (Read error: Connection reset by peer)
2014-11-28 16:25:31	-->	sohail` (~user@108.161.118.233) has joined ##c++
2014-11-28 16:25:38	<--	FreezingAlt (~FreezingC@135.0.41.14) has quit (Ping timeout: 240 seconds)
2014-11-28 16:25:45	<--	AmR|EiSa_ (~AmREiSa@41.42.99.222) has quit
2014-11-28 16:27:42	<--	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-28 16:28:23	-->	plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-28 16:28:41	-->	bmf1 (~bmf1@216.252.94.230) has joined ##c++
2014-11-28 16:29:59	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: Leaving)
2014-11-28 16:30:10	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 264 seconds)
2014-11-28 16:30:20	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-28 16:30:31	-->	kyoshero (~kyoshero@112.198.90.7) has joined ##c++
2014-11-28 16:30:32	-->	pullphinger (~Pullxinge@73.44.212.38) has joined ##c++
2014-11-28 16:31:13	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-28 16:31:41	PlasmaHH	why are most c programs just written in such a way that you want to scream and wish you had the time to rewrite them?
2014-11-28 16:31:48	<--	doug64k (~doug@ERMLON6511W-LP140-02-3096582224.dsl.bell.ca) has quit (Remote host closed the connection)
2014-11-28 16:31:55	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-28 16:32:02	<--	kyoshero (~kyoshero@112.198.90.7) has quit (Max SendQ exceeded)
2014-11-28 16:32:06	wawb	More fun that way?
2014-11-28 16:32:08	Oxyd	{ A == B; } class A{}; class B{}; void operator == (A, B) { } A A; B B;   // Admittedly, I did more than just creating an op ==. :P
2014-11-28 16:32:11	geordi	<no output>
2014-11-28 16:32:21	-->	kyoshero (~kyoshero@112.198.90.7) has joined ##c++
2014-11-28 16:32:41	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 16:32:56	PlasmaHH	INT_MAX-1 points for that
2014-11-28 16:33:05	<--	safinaskar (~user@188.234.32.54) has quit (Read error: Connection reset by peer)
2014-11-28 16:35:03	<--	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-28 16:35:14	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-11-28 16:35:46	-->	surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-28 16:37:03	minas114	is there a reason why using namespace inside a class is not allowed?
2014-11-28 16:38:02	<--	sphenxes (~sphenxes@91-119-100-134.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-11-28 16:38:05	-->	timj (~timj@p5DDB28AA.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 16:38:11	<--	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-11-28 16:38:22	<--	f0ster_ (~f0ster@c-71-193-133-40.hsd1.or.comcast.net) has left ##c++
2014-11-28 16:38:22	dts	scope i presume
2014-11-28 16:38:32	Oxyd	using namespace brings all identifiers from one namespace into another, but a class is not a namespace. You could have it mean that it brings those identifiers into the enclosing namespace, but that would be pointless.
2014-11-28 16:39:19	-->	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-28 16:39:36	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2014-11-28 16:39:44	minas114	Oxyd, no, because I wouldn't have to type boost::asio::ip::tcp all the time
2014-11-28 16:40:11	PlasmaHH	wawb: I have to wonder what masochistic definitions of fun people have
2014-11-28 16:40:12	Oxyd	You can create a typedef inside your class.
2014-11-28 16:40:39	minas114	yeah.. but it's not the same
2014-11-28 16:40:40	Oxyd	class foo { using tcp = boost::asio::ip::tcp; tcp x; tcp y; public: void bar(tcp z) { } };
2014-11-28 16:40:53	minas114	i can do this?
2014-11-28 16:41:01	Oxyd	I just told you that.
2014-11-28 16:41:17	minas114	i thought you meant typedef
2014-11-28 16:41:22	Oxyd	Yes.
2014-11-28 16:41:33	serses	what is life expectation of a c++ programmer?
2014-11-28 16:41:41	Oxyd	serses: Sorrow and misery.
2014-11-28 16:41:45	wawb	PlasmaHH: More like sadistic. The moans and eye-rollings of other developers keep me warm in my cold cold office
2014-11-28 16:41:59	PlasmaHH	wawb: ah so you primarily write perl code
2014-11-28 16:42:00	wawb	serses: Scope
2014-11-28 16:42:09	wawb	PlasmaHH: As a matter of fact... :)
2014-11-28 16:42:46	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 16:43:39	-->	JCDenton (~jcd@heim-034-211.raab-heim.uni-linz.ac.at) has joined ##c++
2014-11-28 16:44:58	-->	tigger0jk (~tigger0jk@192.77.237.103) has joined ##c++
2014-11-28 16:46:05	<--	minas114 (~minas@83-53-200.netrun.cytanet.com.cy) has quit (Quit: Leaving)
2014-11-28 16:46:17	-->	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-11-28 16:46:48	-->	sohail`` (~user@108.161.118.233) has joined ##c++
2014-11-28 16:47:18	<--	sohail` (~user@108.161.118.233) has quit (Ping timeout: 255 seconds)
2014-11-28 16:49:33	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 16:50:23	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 265 seconds)
2014-11-28 16:51:05	-->	bollullera1 (~ana@95.63.152.106) has joined ##c++
2014-11-28 16:51:18	<--	serses (~Se@94.52.74.185) has left ##c++ ("Leaving")
2014-11-28 16:51:21	<--	malcolmx (~malcolm@74-210-224-97.ri.cgocable.ca) has quit (Ping timeout: 272 seconds)
2014-11-28 16:51:24	<--	bollullera1 (~ana@95.63.152.106) has quit (Max SendQ exceeded)
2014-11-28 16:52:38	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 16:53:02	-->	FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-11-28 16:53:16	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 16:53:29	-->	Tolken (~Tolken@modemcable146.17-83-70.mc.videotron.ca) has joined ##c++
2014-11-28 16:53:42	--	FreezingAlt is now known as FreezingCold
2014-11-28 16:54:00	<--	bollullera (~ana@95.63.152.106) has quit (Ping timeout: 240 seconds)
2014-11-28 16:55:47	<--	Areks (~Areks@95-24-242-145.broadband.corbina.ru) has quit (Ping timeout: 272 seconds)
2014-11-28 16:57:34	<--	Tolken (~Tolken@modemcable146.17-83-70.mc.videotron.ca) has quit (Remote host closed the connection)
2014-11-28 16:58:20	-->	KAHR-Alpha (~Alpha@AReims-652-1-86-14.w86-192.abo.wanadoo.fr) has joined ##c++
2014-11-28 16:58:54	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 264 seconds)
2014-11-28 16:59:03	<--	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Quit: Konversation terminated!)
2014-11-28 16:59:55	<--	Anodl (~Anodl@p5B355D75.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-28 17:00:15	-->	illerucis (~illerucis@ool-182d909a.dyn.optonline.net) has joined ##c++
2014-11-28 17:00:21	-->	contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-11-28 17:00:27	<--	illerucis (~illerucis@ool-182d909a.dyn.optonline.net) has quit (Remote host closed the connection)
2014-11-28 17:01:01	-->	illerucis (~illerucis@69.63.185.56) has joined ##c++
2014-11-28 17:02:01	-->	vinleod (~vinleod@c-76-105-158-189.hsd1.or.comcast.net) has joined ##c++
2014-11-28 17:02:02	<--	pullphinger (~Pullxinge@73.44.212.38) has quit
2014-11-28 17:04:06	<--	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has quit (Remote host closed the connection)
2014-11-28 17:04:48	-->	immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has joined ##c++
2014-11-28 17:05:25	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 17:05:56	-->	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has joined ##c++
2014-11-28 17:06:38	-->	webshinra (~shinra@2a01:e35:8baf:4740:76d4:35ff:fe04:8a1d) has joined ##c++
2014-11-28 17:07:13	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Remote host closed the connection)
2014-11-28 17:08:29	<--	Cecen (~Collin@cpe-108-184-172-106.socal.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-11-28 17:08:59	-->	Cecen (~Collin@cpe-108-184-172-106.socal.res.rr.com) has joined ##c++
2014-11-28 17:09:05	-->	SiGe (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 17:09:15	<--	nejni-marji (62fde99d@gateway/web/freenode/ip.98.253.233.157) has left ##c++
2014-11-28 17:10:38	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-28 17:10:56	<--	sam__ (~sam@p2003004F2D189810D5EB415E54769D6A.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-11-28 17:11:38	<--	gnfz (~gnfz@c-69-253-157-247.hsd1.de.comcast.net) has quit (Quit: Leaving)
2014-11-28 17:12:33	<--	rendar (~I@host182-179-dynamic.10-87-r.retail.telecomitalia.it) has quit
2014-11-28 17:13:59	--	dts is now known as Sargon_
2014-11-28 17:14:06	<--	SiGe (~SiGe@38.98.52.199) has quit (Ping timeout: 264 seconds)
2014-11-28 17:14:21	--	Sargon_ is now known as dts
2014-11-28 17:14:48	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-28 17:15:34	-->	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-11-28 17:15:44	-->	malcolmx (~malcolm@74-210-224-97.ri.cgocable.ca) has joined ##c++
2014-11-28 17:15:56	<--	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-28 17:16:42	-->	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has joined ##c++
2014-11-28 17:16:56	<--	contempt (contempt@unaffiliated/contempt) has quit (Ping timeout: 255 seconds)
2014-11-28 17:18:51	-->	sam__ (~sam@p579E5551.dip0.t-ipconnect.de) has joined ##c++
2014-11-28 17:20:01	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 17:20:25	<--	[DarkArcher] (~darkarche@2601:d:ae00:529:c5dd:58a4:e435:3aae) has quit (Ping timeout: 258 seconds)
2014-11-28 17:21:34	<--	atod (~atod@cpe-74-68-120-133.nyc.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-11-28 17:23:40	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 17:26:58	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 17:27:05	-->	Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-28 17:28:32	-->	tango_ (~tex_vim@151.54.80.77) has joined ##c++
2014-11-28 17:29:26	<--	Balzy (~Balzy@host220-149-dynamic.15-87-r.retail.telecomitalia.it) has quit (Ping timeout: 264 seconds)
2014-11-28 17:29:26	tango_	so, I was toying around with the named param idiom to see if it was worth using it in our codebase, and I got to something like this: http://sprunge.us/AYZI
2014-11-28 17:30:07	<--	natas_ (~chatzilla@cpe-107-184-80-116.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-28 17:30:09	-->	realloc1 (~realloc1@185.17.207.57) has joined ##c++
2014-11-28 17:30:11	-->	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has joined ##c++
2014-11-28 17:30:18	<--	paul424 (~chatzilla@91.207.69.217) has quit (Quit: GG)
2014-11-28 17:30:27	tango_	which IMO shows that it might be rather useful. there's however one thing in which I find the idiom inferior, and it's in the 'new' case. With the options stuff, I can do Cube *cp1 = new Cube(options), no problem. However, if I want to use the named param idiom, I _cannot_ do:
2014-11-28 17:31:20	tango_	Cube *cp2 = new MakeCube().named().named() etc, I'd have to use a separate syntax (e.g. add a new() method to MakeCube() and do Cube *cp2 = MakeCube().named().named().new();
2014-11-28 17:32:04	tango_	which I don't like honestly. my google-fu is failing me in finding ways to use new and the named idioms, am I missing something?
2014-11-28 17:34:03	<--	BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has quit (Quit: Leaving)
2014-11-28 17:34:14	<--	japro (~japro@77-59-183-11.dclient.hispeed.ch) has quit (Ping timeout: 244 seconds)
2014-11-28 17:34:59	<--	EvilPenguin (~EvilPengu@c-50-185-162-165.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-28 17:35:39	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-11-28 17:35:41	<--	Bigpet4 (~bigpet@i5E86A45E.versanet.de) has quit (Ping timeout: 250 seconds)
2014-11-28 17:35:55	<--	l_r (~no@adsl-ull-188-92.42-151.net24.it) has quit (Remote host closed the connection)
2014-11-28 17:36:23	-->	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has joined ##c++
2014-11-28 17:36:59	-->	adrian17_ (~adrian17@89-72-118-160.dynamic.chello.pl) has joined ##c++
2014-11-28 17:37:03	<--	illerucis (~illerucis@69.63.185.56) has quit (Ping timeout: 245 seconds)
2014-11-28 17:37:37	-->	l_r (~no@adsl-ull-188-92.42-151.net24.it) has joined ##c++
2014-11-28 17:38:28	-->	yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-11-28 17:38:44	<--	malcolmx (~malcolm@74-210-224-97.ri.cgocable.ca) has quit (Ping timeout: 272 seconds)
2014-11-28 17:38:53	yates	can class structs be virtual? i.e., be defined in a base class but overridable in derived classes?
2014-11-28 17:40:01	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 0.3.8)
2014-11-28 17:40:15	M-ou-se	yates: i'm not sure what you mean. can you illustrate with an example or so?
2014-11-28 17:40:16	<--	adrian17 (~adrian17@89-72-118-160.dynamic.chello.pl) has quit (Ping timeout: 255 seconds)
2014-11-28 17:40:20	yates	or is "virtual" only for functions?
2014-11-28 17:40:26	M-ou-se	it is only for functions, yes.
2014-11-28 17:40:47	M-ou-se	not sure what you'd want to achieve if you want it on something else than member functions
2014-11-28 17:41:34	yates	M-ou-se: i'm trying to see how much duplicate code i can move from several similar classes into a base class.
2014-11-28 17:42:38	M-ou-se	maybe you can use CRTP
2014-11-28 17:42:48	yates	one of the things all the current classes do is define a structure and a vector of those structures. For 3 out of 4 classes, those structs are identical, for one it has a variation.
2014-11-28 17:42:53	-->	malcolmx (~malcolm@74-210-224-97.ri.cgocable.ca) has joined ##c++
2014-11-28 17:43:13	M-ou-se	maybe you can make it a class template
2014-11-28 17:43:29	<--	MrFlibble (LunarJetma@2.124.188.136) has left ##c++
2014-11-28 17:44:37	<--	Gama11 (~quassel@p5796716F.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-11-28 17:44:51	yates	never heard of CRTP - reading now. thanks.
2014-11-28 17:45:05	<--	Kabal619 (Kabal619@ip72-199-16-199.sd.sd.cox.net) has quit (Remote host closed the connection)
2014-11-28 17:45:05	yates	how would a class template help in this way?
2014-11-28 17:45:18	<--	FLHerne (~flh@dsl-217-155-24-22.zen.co.uk) has quit (Quit: There's a real world out here!)
2014-11-28 17:47:57	-->	Walkerdine (~Walkerdin@2601:4:4000:159a:7826:ec76:7481:7e5b) has joined ##c++
2014-11-28 17:48:28	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-czvxlgpgsrmfedds) has quit (Quit: Connection closed for inactivity)
2014-11-28 17:48:28	-->	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-28 17:49:24	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 256 seconds)
2014-11-28 17:50:08	<--	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2014-11-28 17:50:33	-->	blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-28 17:50:37	<--	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-28 17:51:29	<--	_war10ck_ (~sayantan@106.51.139.111) has quit (Quit: leaving)
2014-11-28 17:52:01	<--	RedMercury (~RedMercur@c-71-231-41-200.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-28 17:53:33	<--	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has quit (Ping timeout: 265 seconds)
2014-11-28 17:53:45	-->	snyp (~Snyp@14.99.236.205) has joined ##c++
2014-11-28 17:55:59	<--	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-28 17:56:36	<--	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 264 seconds)
2014-11-28 17:56:58	<--	samuel02 (~samuel02@c-46-162-87-169.cust.bredband2.com) has quit (Remote host closed the connection)
2014-11-28 17:57:44	<--	ferdna (~ferdna@cpe-69-23-141-88.elp.res.rr.com) has quit (Quit: Leaving)
2014-11-28 17:57:57	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 244 seconds)
2014-11-28 17:57:57	-->	herocoder (~herocoder@c-68-83-210-114.hsd1.md.comcast.net) has joined ##c++
2014-11-28 17:58:32	<--	Match (~Giovanni@dynamic-adsl-78-14-229-79.clienti.tiscali.it) has quit (Quit: Sto andando via)
2014-11-28 17:58:55	Legiion	yates: you could make those repeated members protected members of the base class
2014-11-28 17:59:09	-->	zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-28 17:59:12	-->	illerucis (~illerucis@69.63.185.56) has joined ##c++
2014-11-28 17:59:29	-->	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-28 17:59:35	<--	beaky (~nkb@bba67142.alshamil.net.ae) has quit (Quit: leaving)
2014-11-28 18:00:13	-->	xnavor (~xnavor@kelowna-gw.proceranetworks.com) has joined ##c++
2014-11-28 18:01:16	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-28 18:03:01	-->	taplaptap (~lol@unaffiliated/tapout) has joined ##c++
2014-11-28 18:03:20	-->	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has joined ##c++
2014-11-28 18:04:05	<--	FabTG (~ftg@142.ip-37-59-108.eu) has quit (Ping timeout: 256 seconds)
2014-11-28 18:04:51	-->	r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-28 18:05:47	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 256 seconds)
2014-11-28 18:06:21	<--	aggn (~irc@host199-2.natpool.mwn.de) has quit (Remote host closed the connection)
2014-11-28 18:07:43	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-28 18:07:51	<--	adrian17_ (~adrian17@89-72-118-160.dynamic.chello.pl) has left ##c++
2014-11-28 18:07:56	-->	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-11-28 18:08:13	robert_	so, I'm trying to store a unicode character (\U00002593C) in a structure to use for later.. only g++/c++ is telling me "warning: character constant too long for its type"
2014-11-28 18:09:26	-->	Ecoste (~Ecoste@109.255.170.73) has joined ##c++
2014-11-28 18:09:30	-->	FabTG (~ftg@142.ip-37-59-108.eu) has joined ##c++
2014-11-28 18:09:33	<--	Ecoste (~Ecoste@109.255.170.73) has left ##c++
2014-11-28 18:09:42	-->	SiGe_ (~SiGe@38.98.52.199) has joined ##c++
2014-11-28 18:09:55	-->	Ecoste (~Ecoste@109.255.170.73) has joined ##c++
2014-11-28 18:10:07	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-exrilupdtyzsbgfb) has joined ##c++
2014-11-28 18:10:15	Ecoste	Can this channel be used as a help channel?
2014-11-28 18:10:57	quaz0r	if you are prepared to get flamed by geniuses and autists, yes
2014-11-28 18:11:37	<--	Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-11-28 18:11:39	-->	micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-28 18:11:44	Ecoste	I nourish on the rage of autists and geniuses
2014-11-28 18:11:45	robert_	quaz0r: heh. :p
2014-11-28 18:12:06	robert_	Ecoste: You must be a sucker for pain, then. :p
2014-11-28 18:12:19	<--	cleamoon (~cleamoon@c213-89-98-137.bredband.comhem.se) has quit (Ping timeout: 240 seconds)
2014-11-28 18:12:28	-->	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-28 18:12:36	Oxyd	A little-known trick to avoid pain in this channel is creating a proper test-case.
2014-11-28 18:12:50	<--	pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-28 18:12:54	Ecoste	Prety noob question, but anyway. I understand that the first line gets 8 bits from the offset of memblock[80], but how is the variable x declared?
2014-11-28 18:12:56	Ecoste	http://pastebin.com/4ZtHM4BY
2014-11-28 18:13:57	Oxyd	What do you mean "how"?
2014-11-28 18:14:09	<--	Lowl3v3l_ (~Lowl3v3l@2a02:810a:8380:92c:4936:71f7:c59b:80dc) has quit (Read error: Connection reset by peer)
2014-11-28 18:14:11	<--	newguise1234 (~tc@unaffiliated/newguise1234) has left ##c++ ("WeeChat 0.4.1")
