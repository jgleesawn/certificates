2014-11-29 21:57:34	fleshtheworld	newguise1234, so if i feel that unity is limiting me in some way because of some design that it has chosen for specific features, and doesnt seem to allow me to change it, and so that makes me want to make my own game engine, both for learning, fun, and stronger control of how i develop my game, would it be better to use OGRE or just start from c++ and OpenGL, etc. I gues my concern is maybe 
2014-11-29 21:57:34	fleshtheworld	OGRE has its own limitations, but if it does then it would only be in its rendering engine, so i  gues its not too much of a problem for someone picky
2014-11-29 21:59:30	newguise1234	I'm not one to give advice, I've not actually gotten anything out
2014-11-29 21:59:49	newguise1234	but I have spent the past couple months putzing around with opengl and just recently adding bullet physics as a physics engine
2014-11-29 22:01:26	newguise1234	I guess I'm not sure in which way to respond because I don't want to point you in the wrong direction haha.
2014-11-29 22:02:17	newguise1234	for example, the rendering my program is doing is essentially the most basic model-view rotation and movement
2014-11-29 22:02:25	newguise1234	but I am glad I learned about it/how to do it
2014-11-29 22:02:38	fleshtheworld	unity seems to restrict me more and more. it has a new animation system / process that i dont like. ETC. I just want the most basic of each feature, so i can build on it for a specific game. unity was designed for that purpose, but it has a lot of predefined methods for such features and doesnt allow you to do it any other way. thats is why i am thinking of just using ogre, or maybe even make 
2014-11-29 22:02:38	fleshtheworld	my own game engine. 
2014-11-29 22:04:26	fleshtheworld	would you recoment ogre to aviod writting my own graphics engine, because graphics wise i dont care how it works
2014-11-29 22:04:32	newguise1234	what do you want to do that you're having an issue with in unity?
2014-11-29 22:04:32	fleshtheworld	recomend*
2014-11-29 22:05:36	fleshtheworld	i dont like the new animation tool. they used to have an older animation system that was almost the most basic at its bare bones where you just script it.
2014-11-29 22:05:45	fleshtheworld	i guess i just want better control
2014-11-29 22:08:08	fleshtheworld	ogre is open source if i recall corect, plus you can add any feature to it since it just a graphics engine. it seems like the best optimal choice
2014-11-29 22:08:34	newguise1234	right, I just don't know how to recommend, because there are many open source engines
2014-11-29 22:08:48	newguise1234	and I have been swayed by horde3d, mainly because of how clean its website is
2014-11-29 22:08:51	newguise1234	but I've never used it
2014-11-29 22:09:03	fleshtheworld	one thing i can say is
2014-11-29 22:09:08	newguise1234	ogre3d does have a larger community that would probably be able to help you out if you get in a bind
2014-11-29 22:09:19	newguise1234	maybe not in irc(I'm not sure) but at least the forums seem active
2014-11-29 22:11:40	fleshtheworld	ogre is just an rendering engine, but likely it has many fancy rendering technuiqes, methods that i might not find useful, and might even cause extra confusion / mess to me. so i was thinking, maybe i should just make my own graphics engine, the most basic for m i can with as few fancy feats in it.
2014-11-29 22:12:12	fleshtheworld	so it looks like ill have to just make my own if im worrying so much
2014-11-29 22:13:18	newguise1234	are you on linux?
2014-11-29 22:14:06	newguise1234	in terms of rolling your own animation
2014-11-29 22:14:11	fleshtheworld	i wish i was, but i cant leave windows for the usual reason everyone has :)
2014-11-29 22:14:39	newguise1234	lol k, I would link you my project, which should be cross platform, but I've not cmake files set up for anything outside of linux
2014-11-29 22:14:53	newguise1234	in terms of animation and rolling your own engine
2014-11-29 22:15:16	newguise1234	from what I've gathered, the two ways to implement animation are to bake in multiple models for an animation sequence
2014-11-29 22:15:37	newguise1234	or to implement joint-based rotations
2014-11-29 22:15:55	newguise1234	I haven't actually implemented anything to do with that though, so I'm not sure how difficult it would be
2014-11-29 22:16:03	newguise1234	just some more matrix multiplications
2014-11-29 22:16:46	newguise1234	along with that, you have joint-based vertex weighting, I'm assuming it would be similar to blender's armature or skeletal paint
2014-11-29 22:16:50	newguise1234	I don't remember what its called
2014-11-29 22:16:58	fleshtheworld	multiple models, you mean as in vertex animation / morhping?
2014-11-29 22:17:16	newguise1234	probably
2014-11-29 22:17:26	newguise1234	just store multiple models in your memory and step from one to the other
2014-11-29 22:17:40	newguise1234	or semi-step with a morph
2014-11-29 22:17:42	fleshtheworld	yeah  those the 2 method, vertex animation, and bone (joint) animation
2014-11-29 22:18:52	fleshtheworld	it must be fun, but a lot of hard work
2014-11-29 22:19:05	fleshtheworld	how are you enjoying making your engine
2014-11-29 22:19:07	newguise1234	I have found it interesting, but it has most definitely been slow
2014-11-29 22:19:50	newguise1234	about a week ago I started trying to implement my own physics engine, and after writing a BoundingVolumeHierarchy class, I decided to go with bullet physics
2014-11-29 22:20:32	fleshtheworld	is bullet open source? if it was i would study it and try to make my own, because i am picky and just want to learn
2014-11-29 22:20:35	newguise1234	it is
2014-11-29 22:20:42	newguise1234	zlib I believe
2014-11-29 22:21:11	fleshtheworld	you have a website or blog so i can follow
2014-11-29 22:21:25	newguise1234	github.com/jgleesawn
2014-11-29 22:21:25	fleshtheworld	i am soon to be headed that way of making my own engine
2014-11-29 22:21:35	newguise1234	I pretty much just have commits
2014-11-29 22:21:41	newguise1234	github.com/jgleesawn
2014-11-29 22:21:47	newguise1234	github.com/jgleesawn/voxelengine
2014-11-29 22:21:48	newguise1234	sorry
2014-11-29 22:21:51	newguise1234	pasted wrong
2014-11-29 22:21:58	newguise1234	its not really a voxel engine though TT___TT
2014-11-29 22:22:06	fleshtheworld	:)
2014-11-29 22:22:12	fleshtheworld	well you try voxel though
2014-11-29 22:22:12	newguise1234	I've forked my project multiple times along the way when its changed direction
2014-11-29 22:22:28	newguise1234	well, the underlying thought is that the terrain is based on a density functiona
2014-11-29 22:22:33	newguise1234	and I thought I would be doing voxels
2014-11-29 22:22:42	newguise1234	but I think I can still have non-voxel deformable terrain
2014-11-29 22:22:57	newguise1234	just have a modified terrain density overlay that's stored
2014-11-29 22:23:12	newguise1234	and pass that in when I load my terrain and now I've got my previously modified terrain
2014-11-29 22:23:32	fleshtheworld	you are using hieghtmap right
2014-11-29 22:23:34	newguise1234	that probably doesn't make much sense, it wasn't worded well
2014-11-29 22:23:47	newguise1234	I would assume that does describe what I'm using
2014-11-29 22:24:02	newguise1234	I'm using the marching boxes algorithm from nvidia gpugems3
2014-11-29 22:24:17	newguise1234	http://http.developer.nvidia.com/GPUGems3/gpugems3_ch01.html
2014-11-29 22:25:58	fleshtheworld	iv heard of it but never studied it, i kind of assume its pretty much like voxel
2014-11-29 22:26:07	newguise1234	all of my rendering stuff is in voxelengine/game/src/glmanager
2014-11-29 22:26:59	newguise1234	the gist of the algorithm is:
2014-11-29 22:27:23	newguise1234	you have a density function, the surface of your terrain is wherever the density function gives you a 0
2014-11-29 22:28:37	newguise1234	so on the corners of the boxes you've separated your volume into, if the density goes from positive to negative(or vice versa) there is a surface in that box
2014-11-29 22:28:49	newguise1234	specifically, between those two vertices
2014-11-29 22:29:29	newguise1234	you can then use the intensity of the density at each vertex to determine how close the surface is to one vertex or the other
2014-11-29 22:29:31	newguise1234	(the weight)
2014-11-29 22:32:07	newguise1234	if you are going to get into learning about opengl, I would recommend arcsynthesis.org/gltut
2014-11-29 22:32:24	fleshtheworld	so is the terrain model generated from the cubes
2014-11-29 22:32:46	newguise1234	the cubes just split up the space into a certain resolution
2014-11-29 22:33:06	newguise1234	you then have the density of your entire volume, with accuracy to that resolution
2014-11-29 22:33:22	newguise1234	using those points you have stored, you can create triangles that lie upon the surface
2014-11-29 22:33:30	newguise1234	err, using that knowledge
2014-11-29 22:34:04	newguise1234	it does utilizes two large arrays that they briefly mention
2014-11-29 22:35:14	newguise1234	I have those stored in voxelengine/game/src/sparseworld/polygons.h
2014-11-29 22:37:11	fleshtheworld	definitly will study up on marching cubes
2014-11-29 22:37:27	newguise1234	a forewarning, rolling your own graphics engine has hidden things you have to deal with
2014-11-29 22:37:33	newguise1234	for example model loading
2014-11-29 22:37:47	newguise1234	(getting the model from the file format to triangle vertices)
2014-11-29 22:37:52	newguise1234	model management
2014-11-29 22:38:18	fleshtheworld	yeap im somewhat aware of those things
2014-11-29 22:38:26	newguise1234	(after you've loaded it you don't want to pass it around that much, so its easiest to stick it in a map or a vector and reference it by id)
2014-11-29 22:39:10	newguise1234	the model manager will actually probably just vertex buffer object information and index buffer object information
2014-11-29 22:39:40	newguise1234	so pretty much just the info your opengl driver needs to find where it stored the data in gfx memory
2014-11-29 22:40:30	fleshtheworld	right jst store it in memeory, but what do you mean 'passing it around'?
2014-11-29 22:40:59	fleshtheworld	reloading it here and there?
2014-11-29 22:41:13	newguise1234	for example, I'm using instancing, so I am able to have many objects use the same model
2014-11-29 22:41:35	newguise1234	instead of copying the vertices and storing them multiple times(once for each object)
2014-11-29 22:42:08	newguise1234	I have an id that I can store in each object
2014-11-29 22:42:15	newguise1234	yes, that is what I meant though
2014-11-29 22:42:48	newguise1234	I apologize for not being very clear, I'm essentially just trying to pull together my experiences from the past month or so
2014-11-29 22:43:04	newguise1234	so I'm sorry if I send you down some wrong paths or explain poorly
2014-11-29 22:43:52	fleshtheworld	its great for me as a learning, i know a bit of it from my own expereince, etc. but it helps to have it explained in a different way
2014-11-29 22:44:09	newguise1234	so essentially, each object has an int gfxObjID;
2014-11-29 22:44:35	newguise1234	then my renderer has access to my glObjectManager, in some way or another
2014-11-29 22:44:56	newguise1234	https://github.com/jgleesawn/voxelengine/blob/master/game/src/glmanager/instrenderer.cpp
2014-11-29 22:45:06	newguise1234	that is the guts of my renderer class I use
2014-11-29 22:45:34	newguise1234	if you go to the function RenderInst
2014-11-29 22:46:14	newguise1234	I'm essentially copying all of my instancing data
2014-11-29 22:46:23	newguise1234	line 66: glBufferSubData
2014-11-29 22:46:34	newguise1234	line 70: glBindVertexArray(va);
2014-11-29 22:46:40	newguise1234	binds a vertex array object
2014-11-29 22:47:27	newguise1234	specifically the one at inst.VAO
2014-11-29 22:48:18	newguise1234	https://github.com/jgleesawn/voxelengine/blob/master/game/src/game.cpp
2014-11-29 22:48:29	newguise1234	line 153: ren->RenderInst
2014-11-29 22:48:39	newguise1234	glm.gfxInst[it->first]
2014-11-29 22:49:01	newguise1234	that is passing opengl's pointer to where my vertex buffer object is into my renderer
2014-11-29 22:50:03	fleshtheworld	does this instancing work for animating meshes
2014-11-29 22:50:55	newguise1234	if it is skeletal animation, you could pass in different joint rotations per instance
2014-11-29 22:51:59	newguise1234	if you have not too many frames(there may be a better way to do it) but you could just render each group that is at a specific frame
2014-11-29 22:52:14	newguise1234	ie. group all objects at frame 1 of your animation together and render using instancing
2014-11-29 22:52:22	newguise1234	then do the same for frame 2, 3, 4
2014-11-29 22:55:32	fleshtheworld	is GLEW a part of opengl or is seperate
2014-11-29 22:55:45	newguise1234	glew is a library that deals with loading opengl extensions
2014-11-29 22:56:01	newguise1234	it is very handy to have
2014-11-29 22:56:19	newguise1234	for example, I am using an intel graphics card that only supports up to opengl 2.1
2014-11-29 22:57:34	newguise1234	but I do have instancing and explicit_attrib_location
2014-11-29 22:57:40	newguise1234	which were not added til later
2014-11-29 22:58:18	newguise1234	despite that, I do not have explicit_uniform_location
2014-11-29 22:58:35	newguise1234	which would have been nice, but I'll take what I can get lol
2014-11-29 22:59:21	newguise1234	I am using sdl2, which is a migration from an earlier project, but you may want to use glfw
2014-11-29 22:59:25	newguise1234	it depends on what you need
2014-11-29 23:02:13	fleshtheworld	i wrote this note to myself about a year ago about how to get myself started and what i need / or prefer, but I have been too busy to get actually working on it :/
2014-11-29 23:02:18	fleshtheworld	http://justpaste.it/i7u6
2014-11-29 23:02:36	fleshtheworld	i have to really start working on it
2014-11-29 23:02:54	newguise1234	cool
2014-11-29 23:04:45	newguise1234	are you comfortable in c++?
2014-11-29 23:06:00	fleshtheworld	hmm, somwhat. i was learning it a few years ago, but got to pointers and took a break, havent gotten back to it unfortuntatly
2014-11-29 23:06:37	fleshtheworld	i understand pointers and how they can be used, but i guess i just needed a break after getting into it
2014-11-29 23:06:46	newguise1234	thats cool
2014-11-29 23:07:45	fleshtheworld	my problem is i love learning too many thing and almosy anything
2014-11-29 23:07:46	newguise1234	I have to tell you, getting my renderer to work was at times, just staring at opengl documentation and trying to figure out what simple part I messed up
2014-11-29 23:08:39	newguise1234	what do you have experience in leading up to what you want to do?
2014-11-29 23:08:50	newguise1234	have you dealt with vectors and matrices?
2014-11-29 23:09:31	fleshtheworld	i did a demo on vectors and matrix a while back
2014-11-29 23:09:39	fleshtheworld	demo/study
2014-11-29 23:09:41	newguise1234	cool
2014-11-29 23:10:35	newguise1234	do you want any help/pointers starting out/getting the ball rolling?
2014-11-29 23:11:02	newguise1234	I'm not really sure where/if to give advice at this point unless you have any more questions
2014-11-29 23:13:20	fleshtheworld	its more likely just me needing to just comit and start doing it :) I have a general understanding of most what i want and need to di to make a game engine / graphics engine, but off course no deep expereince just some light testing. right now im planning on just looking through open source graphics engines, etc. and getting a feel how they are setuped and made.
2014-11-29 23:13:58	fleshtheworld	being inspired i guess
2014-11-29 23:14:15	fleshtheworld	youve helped quit a bit
2014-11-29 23:14:40	newguise1234	cool
2014-11-29 23:14:41	newguise1234	thanks
2014-11-29 23:14:52	newguise1234	also I want to say, don't be afraid to extend someone else's engine
2014-11-29 23:14:56	newguise1234	especially if its open source
2014-11-29 23:15:07	fleshtheworld	on that note
2014-11-29 23:16:43	fleshtheworld	the thing is, if the engine / code is big, and extending upon just because i know a bit of it and can utilize it, i feel that not having full knowledge of the engine might cause me problemds in the future
2014-11-29 23:16:57	fleshtheworld	but offcourse i could just try to loo kthrough it as much as i can
2014-11-29 23:17:24	fleshtheworld	its a option though
2014-11-29 23:17:29	newguise1234	it usually does involve a bit of code digging
2014-11-29 23:18:53	fleshtheworld	what can your engine do as of now
2014-11-29 23:19:20	newguise1234	not game engine related but: I made a class derived from vector<int>, I gave it a pointer to a vector<T>.  I then wrote a bool operator() (int, int) function that returned less than of the pointed to vector
2014-11-29 23:19:35	newguise1234	I can now toss that class and function into std::sort
2014-11-29 23:19:47	newguise1234	and have an array of sorted indices where the underlying data is not changed
2014-11-29 23:20:15	newguise1234	my engine is pretty simple, it can generate terrain based on a density function
2014-11-29 23:20:35	newguise1234	I just added libnoise so I can use their smooth/coherently random functions
2014-11-29 23:21:24	newguise1234	the render engine pretty much just renders according to object rotation, object position, camera position, camera rotation
2014-11-29 23:22:08	newguise1234	my shader files are in voxelengine/renderers
2014-11-29 23:22:32	newguise1234	voxel.v.shader just does the basic vertex transforms
2014-11-29 23:22:53	newguise1234	voxel.f.shader just colors by which ever color I passed in
2014-11-29 23:23:14	newguise1234	I have one variable, intensity, being passed from the vertex shader to the fragment shader
2014-11-29 23:23:49	newguise1234	this is determined by the distance of the vertex from the camera which is easy because I've already performed the vertex transforms
2014-11-29 23:24:02	newguise1234	so I can just get the length of the final vertex position
2014-11-29 23:24:17	newguise1234	and then I cap it at a minimum of .5
2014-11-29 23:24:27	newguise1234	multiply the color in the fragment shader by that
2014-11-29 23:24:38	newguise1234	and now things that are farther away are slightly darker
2014-11-29 23:24:56	newguise1234	so its really, really basic haha
2014-11-29 23:25:01	newguise1234	but I have depth perception
2014-11-29 23:25:33	newguise1234	and the past couple days I've been integrating bullet physics for collision detection between objects and my generated terrain
2014-11-29 23:26:49	fleshtheworld	Cool. I cant wait until i have generated 3d space and 3d objects occupying it, and spawning/creating them in the scene by mouse click though not nessesary(), that alone would make me so happy.
2014-11-29 23:27:16	newguise1234	I do not have that haha, I have been lamenting having to recompile every time I change something lol
2014-11-29 23:28:26	newguise1234	well I've got to say good luck man, I'll try to answer some questions/give some pointers if I'm around
2014-11-29 23:28:36	newguise1234	#opengl is also good if you're flummoxed by something
2014-11-29 23:28:52	fleshtheworld	alright i appricieat the help
2014-11-29 23:29:09	newguise1234	:)
2014-11-29 23:29:20	fleshtheworld	good luck and take it slowly, enjoy the moment :)
2014-11-29 23:29:32	fleshtheworld	the learning process i mean
2014-11-29 23:29:59	newguise1234	haha aye, if you haven't heard of them yet, you may want to look into octrees and or bounding volume hierarchies
2014-11-29 23:30:18	newguise1234	I think cube2 uses octrees for everything
2014-11-29 23:31:05	newguise1234	and bounding volume hierarchies cant be updated easily, but they are more efficient for searching against
2014-11-29 23:31:21	newguise1234	hence better for static objects and the ilk
2014-11-29 23:32:00	fleshtheworld	i think iv haard of it, but will check it out
2014-11-29 23:32:38	fleshtheworld	oh indeed, i looked through that engine a while back thats right
2014-11-29 23:33:07	fleshtheworld	alright man ill check up your poject once and a while
2014-11-29 23:33:31	newguise1234	sounds good haha, I'll try to get it to a presentable state then lol
2014-11-29 23:33:41	newguise1234	good luck and be easy
2014-11-30 09:48:04	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:b167:bb15:59d3:882c) has quit (Read error: Connection reset by peer)
2014-11-30 20:32:34	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:f4fb:43cf:ee84:9de6) is back on server
2014-12-01 01:07:54	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:f4fb:43cf:ee84:9de6) has quit (Read error: Connection reset by peer)
2014-12-01 13:57:39	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:8c0f:c28c:c3da:da8) is back on server
2014-12-01 14:19:48	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:8c0f:c28c:c3da:da8) has quit (Read error: Connection reset by peer)
2014-12-01 14:21:05	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:3ce8:7b93:a43f:a02f) is back on server
2014-12-01 16:56:19	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:3ce8:7b93:a43f:a02f) has quit (Read error: Network is unreachable)
2014-12-01 16:57:28	-->	fleshtheworld (~fleshthew@108-240-244-218.lightspeed.frsnca.sbcglobal.net) is back on server
2014-12-02 00:22:49	<--	fleshtheworld (~fleshthew@108-240-244-218.lightspeed.frsnca.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2014-12-02 19:15:56	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:389a:5e73:3d67:8d93) is back on server
2014-12-03 00:02:05	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:389a:5e73:3d67:8d93) has quit (Read error: Connection reset by peer)
2014-12-03 00:13:03	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:a1ab:6851:db57:3de0) is back on server
2014-12-03 07:30:29	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:a1ab:6851:db57:3de0) has quit (Read error: Network is unreachable)
2014-12-03 07:31:39	-->	fleshtheworld (~fleshthew@108-240-244-218.lightspeed.frsnca.sbcglobal.net) is back on server
2014-12-03 07:57:14	<--	fleshtheworld (~fleshthew@108-240-244-218.lightspeed.frsnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-12-03 15:53:54	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:5150:8483:65e5:f4a2) is back on server
2014-12-04 02:51:06	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:5150:8483:65e5:f4a2) has quit (Read error: Connection reset by peer)
2014-12-04 03:00:09	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:214e:19e2:7814:ad7c) is back on server
2014-12-04 08:41:13	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:214e:19e2:7814:ad7c) has quit (Read error: Connection reset by peer)
2014-12-04 18:26:44	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:d053:2848:90d6:1716) is back on server
2014-12-05 03:20:36	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:d053:2848:90d6:1716) has quit (Read error: Connection reset by peer)
2014-12-05 12:19:32	-->	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:241f:5d51:cb61:ef83) is back on server
2014-12-05 18:51:48	<--	fleshtheworld (~fleshthew@2602:306:cf0f:4da0:241f:5d51:cb61:ef83) has quit (Read error: Connection reset by peer)
